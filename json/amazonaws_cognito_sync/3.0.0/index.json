{
  "id": "amazonaws_cognito_sync",
  "title": "Amazon Cognito Sync",
  "description": "<fullname>Amazon Cognito Sync</fullname> <p>Amazon Cognito Sync provides an AWS service and client library that enable cross-device syncing of application-related user data. High-level client libraries are available for both iOS and Android. You can use these libraries to persist data locally so that it's available even if the device is offline. Developer credentials don't need to be stored on the mobile device to access the service. You can use Amazon Cognito to obtain a normalized user ID and credentials. User data is persisted in a dataset that can store up to 1 MB of key-value pairs, and you can have up to 20 datasets per user identity.</p> <p>With Amazon Cognito Sync, the data stored for each identity is accessible only to credentials assigned to that identity. In order to use the Cognito Sync service, you need to make API calls using credentials retrieved with <a href=\"http://docs.aws.amazon.com/cognitoidentity/latest/APIReference/Welcome.html\">Amazon Cognito Identity service</a>.</p> <p>If you want to use Cognito Sync in an Android or iOS application, you will probably want to make API calls via the AWS Mobile SDK. To learn more, see the <a href=\"http://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-sync.html\">Developer Guide for Android</a> and the <a href=\"http://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-sync.html\">Developer Guide for iOS</a>.</p>",
  "security": {
    "amazonaws_cognito_sync": {
      "integration": "amazonaws_cognito_sync",
      "accessKeyId": "",
      "secretAccessKey": "",
      "region": "AWS region (if applicable)"
    }
  },
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_cognito_sync.jpg"
  },
  "tags": [
    "cloud",
    "aws"
  ],
  "definitions": {
    "AlreadyStreamedException": {
      "description": "An exception thrown when a bulk publish operation is requested less than 24 hours after a previous bulk publish operation completed successfully.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The message associated with the AlreadyStreamedException exception."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "ApplicationArn": {
      "pattern": "arn:aws:sns:[-0-9a-z]+:\\d+:app/[A-Z_]+/[a-zA-Z0-9_.-]+",
      "type": "string"
    },
    "ApplicationArnList": {
      "items": {
        "$ref": "#/definitions/ApplicationArn"
      },
      "type": "array"
    },
    "AssumeRoleArn": {
      "maxLength": 2048,
      "minLength": 20,
      "pattern": "arn:aws:iam::\\d+:role/.*",
      "type": "string"
    },
    "Boolean": {
      "type": "boolean"
    },
    "BulkPublishRequest": {
      "description": "The input for the BulkPublish operation.",
      "properties": {},
      "type": "object"
    },
    "BulkPublishResponse": {
      "description": "The output for the BulkPublish operation.",
      "properties": {
        "IdentityPoolId": {
          "$ref": "#/definitions/IdentityPoolId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region."
        }
      },
      "type": "object"
    },
    "BulkPublishStatus": {
      "enum": [
        "NOT_STARTED",
        "IN_PROGRESS",
        "FAILED",
        "SUCCEEDED"
      ],
      "type": "string"
    },
    "ClientContext": {
      "type": "string"
    },
    "CognitoEventType": {
      "type": "string"
    },
    "CognitoStreams": {
      "description": "Configuration options for configure Cognito streams.",
      "properties": {
        "RoleArn": {
          "$ref": "#/definitions/AssumeRoleArn",
          "description": "The ARN of the role Amazon Cognito can assume in order to publish to the stream. This role must grant access to Amazon Cognito (cognito-sync) to invoke PutRecord on your Cognito stream."
        },
        "StreamName": {
          "$ref": "#/definitions/StreamName",
          "description": "The name of the Cognito stream to receive updates. This stream must be in the developers account and in the same region as the identity pool."
        },
        "StreamingStatus": {
          "$ref": "#/definitions/StreamingStatus",
          "description": "Status of the Cognito streams. Valid values are: <p>ENABLED - Streaming of updates to identity pool is enabled.</p> <p>DISABLED - Streaming of updates to identity pool is disabled. Bulk publish will also fail if StreamingStatus is DISABLED.</p>"
        }
      },
      "type": "object"
    },
    "ConcurrentModificationException": {
      "description": "Thrown if there are parallel requests to modify a resource.",
      "properties": {
        "message": {
          "$ref": "#/definitions/String",
          "description": "The message returned by a ConcurrentModicationException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "Dataset": {
      "description": "A collection of data for an identity pool. An identity pool can have multiple datasets. A dataset is per identity and can be general or associated with a particular entity in an application (like a saved game). Datasets are automatically created if they don't exist. Data is synced by dataset, and a dataset can hold up to 1MB of key-value pairs.",
      "properties": {
        "CreationDate": {
          "$ref": "#/definitions/Date",
          "description": "Date on which the dataset was created."
        },
        "DataStorage": {
          "$ref": "#/definitions/Long",
          "description": "Total size in bytes of the records in this dataset."
        },
        "DatasetName": {
          "$ref": "#/definitions/DatasetName",
          "description": "A string of up to 128 characters. Allowed characters are a-z, A-Z, 0-9, '_' (underscore), '-' (dash), and '.' (dot)."
        },
        "IdentityId": {
          "$ref": "#/definitions/IdentityId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region."
        },
        "LastModifiedBy": {
          "$ref": "#/definitions/String",
          "description": "The device that made the last change to this dataset."
        },
        "LastModifiedDate": {
          "$ref": "#/definitions/Date",
          "description": "Date when the dataset was last modified."
        },
        "NumRecords": {
          "$ref": "#/definitions/Long",
          "description": "Number of records in this dataset."
        }
      },
      "type": "object"
    },
    "DatasetList": {
      "items": {
        "$ref": "#/definitions/Dataset"
      },
      "type": "array"
    },
    "DatasetName": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9_.:-]+",
      "type": "string"
    },
    "Date": {
      "format": "date-time",
      "type": "string"
    },
    "DeleteDatasetRequest": {
      "description": "A request to delete the specific dataset.",
      "properties": {},
      "type": "object"
    },
    "DeleteDatasetResponse": {
      "description": "Response to a successful DeleteDataset request.",
      "properties": {
        "Dataset": {
          "$ref": "#/definitions/Dataset",
          "description": "A collection of data for an identity pool. An identity pool can have multiple datasets. A dataset is per identity and can be general or associated with a particular entity in an application (like a saved game). Datasets are automatically created if they don't exist. Data is synced by dataset, and a dataset can hold up to 1MB of key-value pairs."
        }
      },
      "type": "object"
    },
    "DescribeDatasetRequest": {
      "description": "A request for meta data about a dataset (creation date, number of records, size) by owner and dataset name.",
      "properties": {},
      "type": "object"
    },
    "DescribeDatasetResponse": {
      "description": "Response to a successful DescribeDataset request.",
      "properties": {
        "Dataset": {
          "$ref": "#/definitions/Dataset",
          "description": "Meta data for a collection of data for an identity. An identity can have multiple datasets. A dataset can be general or associated with a particular entity in an application (like a saved game). Datasets are automatically created if they don't exist. Data is synced by dataset, and a dataset can hold up to 1MB of key-value pairs."
        }
      },
      "type": "object"
    },
    "DescribeIdentityPoolUsageRequest": {
      "description": "A request for usage information about the identity pool.",
      "properties": {},
      "type": "object"
    },
    "DescribeIdentityPoolUsageResponse": {
      "description": "Response to a successful DescribeIdentityPoolUsage request.",
      "properties": {
        "IdentityPoolUsage": {
          "$ref": "#/definitions/IdentityPoolUsage",
          "description": "Information about the usage of the identity pool."
        }
      },
      "type": "object"
    },
    "DescribeIdentityUsageRequest": {
      "description": "A request for information about the usage of an identity pool.",
      "properties": {},
      "type": "object"
    },
    "DescribeIdentityUsageResponse": {
      "description": "The response to a successful DescribeIdentityUsage request.",
      "properties": {
        "IdentityUsage": {
          "$ref": "#/definitions/IdentityUsage",
          "description": "Usage information for the identity."
        }
      },
      "type": "object"
    },
    "DeviceId": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string"
    },
    "DuplicateRequestException": {
      "description": "An exception thrown when there is an IN_PROGRESS bulk publish operation for the given identity pool.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The message associated with the DuplicateRequestException exception."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "Events": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/CognitoEventType"
          },
          "value": {
            "$ref": "#/definitions/LambdaFunctionArn"
          }
        },
        "type": "object"
      },
      "maxItems": 1,
      "type": "array"
    },
    "ExceptionMessage": {
      "type": "string"
    },
    "GetBulkPublishDetailsRequest": {
      "description": "The input for the GetBulkPublishDetails operation.",
      "properties": {},
      "type": "object"
    },
    "GetBulkPublishDetailsResponse": {
      "description": "The output for the GetBulkPublishDetails operation.",
      "properties": {
        "BulkPublishCompleteTime": {
          "$ref": "#/definitions/Date",
          "description": "If BulkPublishStatus is SUCCEEDED, the time the last bulk publish operation completed."
        },
        "BulkPublishStartTime": {
          "$ref": "#/definitions/Date",
          "description": "The date/time at which the last bulk publish was initiated."
        },
        "BulkPublishStatus": {
          "$ref": "#/definitions/BulkPublishStatus",
          "description": "Status of the last bulk publish operation, valid values are: <p>NOT_STARTED - No bulk publish has been requested for this identity pool</p> <p>IN_PROGRESS - Data is being published to the configured stream</p> <p>SUCCEEDED - All data for the identity pool has been published to the configured stream</p> <p>FAILED - Some portion of the data has failed to publish, check FailureMessage for the cause.</p>"
        },
        "FailureMessage": {
          "$ref": "#/definitions/String",
          "description": "If BulkPublishStatus is FAILED this field will contain the error message that caused the bulk publish to fail."
        },
        "IdentityPoolId": {
          "$ref": "#/definitions/IdentityPoolId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region."
        }
      },
      "type": "object"
    },
    "GetCognitoEventsRequest": {
      "description": "A request for a list of the configured Cognito Events",
      "properties": {},
      "type": "object"
    },
    "GetCognitoEventsResponse": {
      "description": "The response from the GetCognitoEvents request",
      "properties": {
        "Events": {
          "$ref": "#/definitions/Events",
          "description": "The Cognito Events returned from the GetCognitoEvents request"
        }
      },
      "type": "object"
    },
    "GetIdentityPoolConfigurationRequest": {
      "description": "The input for the GetIdentityPoolConfiguration operation.",
      "properties": {},
      "type": "object"
    },
    "GetIdentityPoolConfigurationResponse": {
      "description": "The output for the GetIdentityPoolConfiguration operation.",
      "properties": {
        "CognitoStreams": {
          "$ref": "#/definitions/CognitoStreams",
          "description": "Options to apply to this identity pool for Amazon Cognito streams."
        },
        "IdentityPoolId": {
          "$ref": "#/definitions/IdentityPoolId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito."
        },
        "PushSync": {
          "$ref": "#/definitions/PushSync",
          "description": "Options to apply to this identity pool for push synchronization."
        }
      },
      "type": "object"
    },
    "IdentityId": {
      "maxLength": 55,
      "minLength": 1,
      "pattern": "[\\w-]+:[0-9a-f-]+",
      "type": "string"
    },
    "IdentityPoolId": {
      "maxLength": 55,
      "minLength": 1,
      "pattern": "[\\w-]+:[0-9a-f-]+",
      "type": "string"
    },
    "IdentityPoolUsage": {
      "description": "Usage information for the identity pool.",
      "properties": {
        "DataStorage": {
          "$ref": "#/definitions/Long",
          "description": "Data storage information for the identity pool."
        },
        "IdentityPoolId": {
          "$ref": "#/definitions/IdentityPoolId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region."
        },
        "LastModifiedDate": {
          "$ref": "#/definitions/Date",
          "description": "Date on which the identity pool was last modified."
        },
        "SyncSessionsCount": {
          "$ref": "#/definitions/Long",
          "description": "Number of sync sessions for the identity pool."
        }
      },
      "type": "object"
    },
    "IdentityPoolUsageList": {
      "items": {
        "$ref": "#/definitions/IdentityPoolUsage"
      },
      "type": "array"
    },
    "IdentityUsage": {
      "description": "Usage information for the identity.",
      "properties": {
        "DataStorage": {
          "$ref": "#/definitions/Long",
          "description": "Total data storage for this identity."
        },
        "DatasetCount": {
          "$ref": "#/definitions/Integer",
          "description": "Number of datasets for the identity."
        },
        "IdentityId": {
          "$ref": "#/definitions/IdentityId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region."
        },
        "IdentityPoolId": {
          "$ref": "#/definitions/IdentityPoolId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito. GUID generation is unique within a region."
        },
        "LastModifiedDate": {
          "$ref": "#/definitions/Date",
          "description": "Date on which the identity was last modified."
        }
      },
      "type": "object"
    },
    "Integer": {
      "type": "integer"
    },
    "IntegerString": {
      "type": "integer"
    },
    "InternalErrorException": {
      "description": "Indicates an internal service error.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "Message returned by InternalErrorException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "InvalidConfigurationException": {
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "Message returned by InvalidConfigurationException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "InvalidLambdaFunctionOutputException": {
      "description": "The AWS Lambda function returned invalid output or an exception.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "A message returned when an InvalidLambdaFunctionOutputException occurs"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "InvalidParameterException": {
      "description": "Thrown when a request parameter does not comply with the associated constraints.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "Message returned by InvalidParameterException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "LambdaFunctionArn": {
      "type": "string"
    },
    "LambdaThrottledException": {
      "description": "AWS Lambda throttled your account, please contact AWS Support",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "A message returned when an LambdaThrottledException is thrown"
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "LimitExceededException": {
      "description": "Thrown when the limit on the number of objects or operations has been exceeded.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "Message returned by LimitExceededException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "ListDatasetsRequest": {
      "description": "Request for a list of datasets for an identity.",
      "properties": {},
      "type": "object"
    },
    "ListDatasetsResponse": {
      "description": "Returned for a successful ListDatasets request.",
      "properties": {
        "Count": {
          "$ref": "#/definitions/Integer",
          "description": "Number of datasets returned."
        },
        "Datasets": {
          "$ref": "#/definitions/DatasetList",
          "description": "A set of datasets."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A pagination token for obtaining the next page of results."
        }
      },
      "type": "object"
    },
    "ListIdentityPoolUsageRequest": {
      "description": "A request for usage information on an identity pool.",
      "properties": {},
      "type": "object"
    },
    "ListIdentityPoolUsageResponse": {
      "description": "Returned for a successful ListIdentityPoolUsage request.",
      "properties": {
        "Count": {
          "$ref": "#/definitions/Integer",
          "description": "Total number of identities for the identity pool."
        },
        "IdentityPoolUsages": {
          "$ref": "#/definitions/IdentityPoolUsageList",
          "description": "Usage information for the identity pools."
        },
        "MaxResults": {
          "$ref": "#/definitions/Integer",
          "description": "The maximum number of results to be returned."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A pagination token for obtaining the next page of results."
        }
      },
      "type": "object"
    },
    "ListRecordsRequest": {
      "description": "A request for a list of records.",
      "properties": {},
      "type": "object"
    },
    "ListRecordsResponse": {
      "description": "Returned for a successful ListRecordsRequest.",
      "properties": {
        "Count": {
          "$ref": "#/definitions/Integer",
          "description": "Total number of records."
        },
        "DatasetDeletedAfterRequestedSyncCount": {
          "$ref": "#/definitions/Boolean",
          "description": "A boolean value specifying whether to delete the dataset locally."
        },
        "DatasetExists": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the dataset exists."
        },
        "DatasetSyncCount": {
          "$ref": "#/definitions/Long",
          "description": "Server sync count for this dataset."
        },
        "LastModifiedBy": {
          "$ref": "#/definitions/String",
          "description": "The user/device that made the last change to this record."
        },
        "MergedDatasetNames": {
          "$ref": "#/definitions/MergedDatasetNameList",
          "description": "Names of merged datasets."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "A pagination token for obtaining the next page of results."
        },
        "Records": {
          "$ref": "#/definitions/RecordList",
          "description": "A list of all records."
        },
        "SyncSessionToken": {
          "$ref": "#/definitions/String",
          "description": "A token containing a session ID, identity ID, and expiration."
        }
      },
      "type": "object"
    },
    "Long": {
      "type": "integer"
    },
    "MergedDatasetNameList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array"
    },
    "NotAuthorizedException": {
      "description": "Thrown when a user is not authorized to access the requested resource.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The message returned by a NotAuthorizedException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "Operation": {
      "enum": [
        "replace",
        "remove"
      ],
      "type": "string"
    },
    "Platform": {
      "enum": [
        "APNS",
        "APNS_SANDBOX",
        "GCM",
        "ADM"
      ],
      "type": "string"
    },
    "PushSync": {
      "description": "Configuration options to be applied to the identity pool.",
      "properties": {
        "ApplicationArns": {
          "$ref": "#/definitions/ApplicationArnList",
          "description": "List of SNS platform application ARNs that could be used by clients."
        },
        "RoleArn": {
          "$ref": "#/definitions/AssumeRoleArn",
          "description": "A role configured to allow Cognito to call SNS on behalf of the developer."
        }
      },
      "type": "object"
    },
    "PushToken": {
      "type": "string"
    },
    "Record": {
      "description": "The basic data structure of a dataset.",
      "properties": {
        "DeviceLastModifiedDate": {
          "$ref": "#/definitions/Date",
          "description": "The last modified date of the client device."
        },
        "Key": {
          "$ref": "#/definitions/RecordKey",
          "description": "The key for the record."
        },
        "LastModifiedBy": {
          "$ref": "#/definitions/String",
          "description": "The user/device that made the last change to this record."
        },
        "LastModifiedDate": {
          "$ref": "#/definitions/Date",
          "description": "The date on which the record was last modified."
        },
        "SyncCount": {
          "$ref": "#/definitions/Long",
          "description": "The server sync count for this record."
        },
        "Value": {
          "$ref": "#/definitions/RecordValue",
          "description": "The value for the record."
        }
      },
      "type": "object"
    },
    "RecordKey": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string"
    },
    "RecordList": {
      "items": {
        "$ref": "#/definitions/Record"
      },
      "type": "array"
    },
    "RecordPatch": {
      "description": "An update operation for a record.",
      "properties": {
        "DeviceLastModifiedDate": {
          "$ref": "#/definitions/Date",
          "description": "The last modified date of the client device."
        },
        "Key": {
          "$ref": "#/definitions/RecordKey",
          "description": "The key associated with the record patch."
        },
        "Op": {
          "$ref": "#/definitions/Operation",
          "description": "An operation, either replace or remove."
        },
        "SyncCount": {
          "$ref": "#/definitions/Long",
          "description": "Last known server sync count for this record. Set to 0 if unknown."
        },
        "Value": {
          "$ref": "#/definitions/RecordValue",
          "description": "The value associated with the record patch."
        }
      },
      "required": [
        "Op",
        "Key",
        "SyncCount"
      ],
      "type": "object"
    },
    "RecordPatchList": {
      "items": {
        "$ref": "#/definitions/RecordPatch"
      },
      "type": "array"
    },
    "RecordValue": {
      "maxLength": 1048575,
      "type": "string"
    },
    "RegisterDeviceRequest": {
      "description": "A request to RegisterDevice.",
      "properties": {
        "Platform": {
          "$ref": "#/definitions/Platform",
          "description": "The SNS platform type (e.g. GCM, SDM, APNS, APNS_SANDBOX)."
        },
        "Token": {
          "$ref": "#/definitions/PushToken",
          "description": "The push token."
        }
      },
      "required": [
        "Platform",
        "Token"
      ],
      "type": "object"
    },
    "RegisterDeviceResponse": {
      "description": "Response to a RegisterDevice request.",
      "properties": {
        "DeviceId": {
          "$ref": "#/definitions/DeviceId",
          "description": "The unique ID generated for this device by Cognito."
        }
      },
      "type": "object"
    },
    "ResourceConflictException": {
      "description": "Thrown if an update can't be applied because the resource was changed by another call and this would result in a conflict.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The message returned by a ResourceConflictException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "ResourceNotFoundException": {
      "description": "Thrown if the resource doesn't exist.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "Message returned by a ResourceNotFoundException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "SetCognitoEventsRequest": {
      "description": "<p>A request to configure Cognito Events\"</p>\"",
      "properties": {
        "Events": {
          "$ref": "#/definitions/Events",
          "description": "The events to configure"
        }
      },
      "required": [
        "Events"
      ],
      "type": "object"
    },
    "SetIdentityPoolConfigurationRequest": {
      "description": "The input for the SetIdentityPoolConfiguration operation.",
      "properties": {
        "CognitoStreams": {
          "$ref": "#/definitions/CognitoStreams",
          "description": "Options to apply to this identity pool for Amazon Cognito streams."
        },
        "PushSync": {
          "$ref": "#/definitions/PushSync",
          "description": "Options to apply to this identity pool for push synchronization."
        }
      },
      "type": "object"
    },
    "SetIdentityPoolConfigurationResponse": {
      "description": "The output for the SetIdentityPoolConfiguration operation",
      "properties": {
        "CognitoStreams": {
          "$ref": "#/definitions/CognitoStreams",
          "description": "Options to apply to this identity pool for Amazon Cognito streams."
        },
        "IdentityPoolId": {
          "$ref": "#/definitions/IdentityPoolId",
          "description": "A name-spaced GUID (for example, us-east-1:23EC4050-6AEA-7089-A2DD-08002EXAMPLE) created by Amazon Cognito."
        },
        "PushSync": {
          "$ref": "#/definitions/PushSync",
          "description": "Options to apply to this identity pool for push synchronization."
        }
      },
      "type": "object"
    },
    "StreamName": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string"
    },
    "StreamingStatus": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string"
    },
    "String": {
      "type": "string"
    },
    "SubscribeToDatasetRequest": {
      "description": "A request to SubscribeToDatasetRequest.",
      "properties": {},
      "type": "object"
    },
    "SubscribeToDatasetResponse": {
      "description": "Response to a SubscribeToDataset request.",
      "properties": {},
      "type": "object"
    },
    "SyncSessionToken": {
      "type": "string"
    },
    "TooManyRequestsException": {
      "description": "Thrown if the request is throttled.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "Message returned by a TooManyRequestsException."
        }
      },
      "required": [
        "message"
      ],
      "type": "object"
    },
    "UnsubscribeFromDatasetRequest": {
      "description": "A request to UnsubscribeFromDataset.",
      "properties": {},
      "type": "object"
    },
    "UnsubscribeFromDatasetResponse": {
      "description": "Response to an UnsubscribeFromDataset request.",
      "properties": {},
      "type": "object"
    },
    "UpdateRecordsRequest": {
      "description": "A request to post updates to records or add and delete records for a dataset and user.",
      "properties": {
        "DeviceId": {
          "$ref": "#/definitions/DeviceId",
          "description": "The unique ID generated for this device by Cognito."
        },
        "RecordPatches": {
          "$ref": "#/definitions/RecordPatchList",
          "description": "A list of patch operations."
        },
        "SyncSessionToken": {
          "$ref": "#/definitions/SyncSessionToken",
          "description": "The SyncSessionToken returned by a previous call to ListRecords for this dataset and identity."
        }
      },
      "required": [
        "SyncSessionToken"
      ],
      "type": "object"
    },
    "UpdateRecordsResponse": {
      "description": "Returned for a successful UpdateRecordsRequest.",
      "properties": {
        "Records": {
          "$ref": "#/definitions/RecordList",
          "description": "A list of records that have been updated."
        }
      },
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "ListIdentityPoolUsage",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListIdentityPoolUsageRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListIdentityPoolUsageResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "DescribeIdentityPoolUsage",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeIdentityPoolUsageRequest"
          }
        ],
        "required": [
          "IdentityPoolId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeIdentityPoolUsageResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "BulkPublish",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/BulkPublishRequest"
          }
        ],
        "required": [
          "IdentityPoolId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/BulkPublishResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "SetIdentityPoolConfiguration",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/SetIdentityPoolConfigurationRequest"
          }
        ],
        "required": [
          "IdentityPoolId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/SetIdentityPoolConfigurationResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "SetCognitoEvents",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/SetCognitoEventsRequest"
          }
        ],
        "required": [
          "IdentityPoolId"
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "GetBulkPublishDetails",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/GetBulkPublishDetailsRequest"
          }
        ],
        "required": [
          "IdentityPoolId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetBulkPublishDetailsResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "DescribeIdentityUsage",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          },
          "IdentityId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeIdentityUsageRequest"
          }
        ],
        "required": [
          "IdentityPoolId",
          "IdentityId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeIdentityUsageResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "ListDatasets",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          },
          "IdentityId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListDatasetsRequest"
          }
        ],
        "required": [
          "IdentityPoolId",
          "IdentityId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListDatasetsResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "UpdateRecords",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          },
          "IdentityId": {
            "type": "string"
          },
          "DatasetName": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/UpdateRecordsRequest"
          }
        ],
        "required": [
          "IdentityPoolId",
          "IdentityId",
          "DatasetName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateRecordsResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "ListRecords",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          },
          "IdentityId": {
            "type": "string"
          },
          "DatasetName": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListRecordsRequest"
          }
        ],
        "required": [
          "IdentityPoolId",
          "IdentityId",
          "DatasetName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListRecordsResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "UnsubscribeFromDataset",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          },
          "IdentityId": {
            "type": "string"
          },
          "DatasetName": {
            "type": "string"
          },
          "DeviceId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/UnsubscribeFromDatasetRequest"
          }
        ],
        "required": [
          "IdentityPoolId",
          "IdentityId",
          "DatasetName",
          "DeviceId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UnsubscribeFromDatasetResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    },
    {
      "id": "RegisterDevice",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "IdentityPoolId": {
            "type": "string"
          },
          "IdentityId": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/RegisterDeviceRequest"
          }
        ],
        "required": [
          "IdentityPoolId",
          "IdentityId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RegisterDeviceResponse"
      },
      "security": {
        "amazonaws_cognito_sync": {
          "integration": "amazonaws_cognito_sync"
        }
      }
    }
  ]
}