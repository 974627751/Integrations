{
  "id": "google_container",
  "title": "Google Container Engine",
  "description": "The Google Container Engine API is used for building and managing container based applications, powered by the open source Kubernetes technology.",
  "security": {
    "google_container": {
      "integration": "google_container",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 accessCode authentication",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services"
        },
        "tokenUrl": "https://accounts.google.com/o/oauth2/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/google_container.png"
  },
  "actionCount": 32,
  "definitions": {
    "AcceleratorConfig": {
      "description": "AcceleratorConfig represents a Hardware Accelerator request.",
      "properties": {
        "acceleratorCount": {
          "description": "The number of the accelerator cards exposed to an instance.",
          "format": "int64",
          "type": "string"
        },
        "acceleratorType": {
          "description": "The accelerator type resource name. List of supported accelerators\n[here](/compute/docs/gpus/#Introduction)",
          "type": "string"
        }
      },
      "type": "object",
      "title": "AcceleratorConfig"
    },
    "AddonsConfig": {
      "description": "Configuration for the addons that can be automatically spun up in the\ncluster, enabling additional functionality.",
      "properties": {
        "horizontalPodAutoscaling": {
          "$ref": "#/definitions/HorizontalPodAutoscaling",
          "description": "Configuration for the horizontal pod autoscaling feature, which\nincreases or decreases the number of replica pods a replication controller\nhas based on the resource usage of the existing pods."
        },
        "httpLoadBalancing": {
          "$ref": "#/definitions/HttpLoadBalancing",
          "description": "Configuration for the HTTP (L7) load balancing controller addon, which\nmakes it easy to set up HTTP load balancers for services in a cluster."
        },
        "kubernetesDashboard": {
          "$ref": "#/definitions/KubernetesDashboard",
          "description": "Configuration for the Kubernetes Dashboard."
        },
        "networkPolicyConfig": {
          "$ref": "#/definitions/NetworkPolicyConfig",
          "description": "Configuration for NetworkPolicy. This only tracks whether the addon\nis enabled or not on the Master, it does not track whether network policy\nis enabled for the nodes."
        }
      },
      "type": "object",
      "title": "AddonsConfig"
    },
    "AutoUpgradeOptions": {
      "description": "AutoUpgradeOptions defines the set of options for the user to control how\nthe Auto Upgrades will proceed.",
      "properties": {
        "autoUpgradeStartTime": {
          "description": "[Output only] This field is set when upgrades are about to commence\nwith the approximate start time for the upgrades, in\n[RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "description": {
          "description": "[Output only] This field is set when upgrades are about to commence\nwith the description of the upgrade.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "AutoUpgradeOptions"
    },
    "CancelOperationRequest": {
      "description": "CancelOperationRequest cancels a single operation.",
      "properties": {},
      "type": "object",
      "title": "CancelOperationRequest"
    },
    "CidrBlock": {
      "description": "CidrBlock contains an optional name and one CIDR block.",
      "properties": {
        "cidrBlock": {
          "description": "cidr_block must be specified in CIDR notation.",
          "type": "string"
        },
        "displayName": {
          "description": "display_name is an optional field for users to identify CIDR blocks.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "CidrBlock"
    },
    "ClientCertificateConfig": {
      "description": "Configuration for client certificates on the cluster.",
      "properties": {
        "issueClientCertificate": {
          "description": "Issue a client certificate.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "ClientCertificateConfig"
    },
    "Cluster": {
      "description": "A Google Container Engine cluster.",
      "properties": {
        "addonsConfig": {
          "$ref": "#/definitions/AddonsConfig",
          "description": "Configurations for the various addons available to run in the cluster."
        },
        "clusterIpv4Cidr": {
          "description": "The IP address range of the container pods in this cluster, in\n[CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\nnotation (e.g. `10.96.0.0/14`). Leave blank to have\none automatically chosen or specify a `/14` block in `10.0.0.0/8`.",
          "type": "string"
        },
        "createTime": {
          "description": "[Output only] The time the cluster was created, in\n[RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "currentMasterVersion": {
          "description": "[Output only] The current software version of the master endpoint.",
          "type": "string"
        },
        "currentNodeCount": {
          "description": "[Output only] The number of nodes currently in the cluster.",
          "format": "int32",
          "type": "integer"
        },
        "currentNodeVersion": {
          "description": "[Output only] The current version of the node software components.\nIf they are currently at multiple versions because they're in the process\nof being upgraded, this reflects the minimum version of all nodes.",
          "type": "string"
        },
        "description": {
          "description": "An optional description of this cluster.",
          "type": "string"
        },
        "enableKubernetesAlpha": {
          "description": "Kubernetes alpha features are enabled on this cluster. This includes alpha\nAPI groups (e.g. v1alpha1) and features that may not be production ready in\nthe kubernetes version of the master and nodes.\nThe cluster has no SLA for uptime and master/node upgrades are disabled.\nAlpha enabled clusters are automatically deleted thirty days after\ncreation.",
          "type": "boolean"
        },
        "endpoint": {
          "description": "[Output only] The IP address of this cluster's master endpoint.\nThe endpoint can be accessed from the internet at\n`https://username:password@endpoint/`.\n\nSee the `masterAuth` property of this resource for username and\npassword information.",
          "type": "string"
        },
        "expireTime": {
          "description": "[Output only] The time the cluster will be automatically\ndeleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "initialClusterVersion": {
          "description": "The initial Kubernetes version for this cluster.  Valid versions are those\nfound in validMasterVersions returned by getServerConfig.  The version can\nbe upgraded over time; such upgrades are reflected in\ncurrentMasterVersion and currentNodeVersion.",
          "type": "string"
        },
        "initialNodeCount": {
          "description": "The number of nodes to create in this cluster. You must ensure that your\nCompute Engine <a href=\"/compute/docs/resource-quotas\">resource quota</a>\nis sufficient for this number of instances. You must also have available\nfirewall and routes quota.\nFor requests, this field should only be used in lieu of a\n\"node_pool\" object, since this configuration (along with the\n\"node_config\") will be used to create a \"NodePool\" object with an\nauto-generated name. Do not use this and a node_pool at the same time.",
          "format": "int32",
          "type": "integer"
        },
        "instanceGroupUrls": {
          "description": "[Output only] The resource URLs of [instance\ngroups](/compute/docs/instance-groups/) associated with this\ncluster.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ipAllocationPolicy": {
          "$ref": "#/definitions/IPAllocationPolicy",
          "description": "Configuration for cluster IP allocation."
        },
        "labelFingerprint": {
          "description": "The fingerprint of the set of labels for this cluster.",
          "type": "string"
        },
        "legacyAbac": {
          "$ref": "#/definitions/LegacyAbac",
          "description": "Configuration for the legacy ABAC authorization mode."
        },
        "locations": {
          "description": "The list of Google Compute Engine\n[locations](/compute/docs/zones#available) in which the cluster's nodes\nshould be located.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "loggingService": {
          "description": "The logging service the cluster should use to write logs.\nCurrently available options:\n\n* `logging.googleapis.com` - the Google Cloud Logging service.\n* `none` - no logs will be exported from the cluster.\n* if left as an empty string,`logging.googleapis.com` will be used.",
          "type": "string"
        },
        "maintenancePolicy": {
          "$ref": "#/definitions/MaintenancePolicy",
          "description": "Configure the maintenance policy for this cluster."
        },
        "masterAuth": {
          "$ref": "#/definitions/MasterAuth",
          "description": "The authentication information for accessing the master endpoint."
        },
        "masterAuthorizedNetworksConfig": {
          "$ref": "#/definitions/MasterAuthorizedNetworksConfig",
          "description": "Master authorized networks is a Beta feature.\nThe configuration options for master authorized networks feature."
        },
        "monitoringService": {
          "description": "The monitoring service the cluster should use to write metrics.\nCurrently available options:\n\n* `monitoring.googleapis.com` - the Google Cloud Monitoring service.\n* `none` - no metrics will be exported from the cluster.\n* if left as an empty string, `monitoring.googleapis.com` will be used.",
          "type": "string"
        },
        "name": {
          "description": "The name of this cluster. The name must be unique within this project\nand zone, and can be up to 40 characters with the following restrictions:\n\n* Lowercase letters, numbers, and hyphens only.\n* Must start with a letter.\n* Must end with a number or a letter.",
          "type": "string"
        },
        "network": {
          "description": "The name of the Google Compute Engine\n[network](/compute/docs/networks-and-firewalls#networks) to which the\ncluster is connected. If left unspecified, the `default` network\nwill be used.",
          "type": "string"
        },
        "networkPolicy": {
          "$ref": "#/definitions/NetworkPolicy",
          "description": "Configuration options for the NetworkPolicy feature."
        },
        "nodeConfig": {
          "$ref": "#/definitions/NodeConfig",
          "description": "Parameters used in creating the cluster's nodes.\nSee `nodeConfig` for the description of its properties.\nFor requests, this field should only be used in lieu of a\n\"node_pool\" object, since this configuration (along with the\n\"initial_node_count\") will be used to create a \"NodePool\" object with an\nauto-generated name. Do not use this and a node_pool at the same time.\nFor responses, this field will be populated with the node configuration of\nthe first node pool.\n\nIf unspecified, the defaults are used."
        },
        "nodeIpv4CidrSize": {
          "description": "[Output only] The size of the address space on each node for hosting\ncontainers. This is provisioned from within the `container_ipv4_cidr`\nrange.",
          "format": "int32",
          "type": "integer"
        },
        "nodePools": {
          "description": "The node pools associated with this cluster.\nThis field should not be set if \"node_config\" or \"initial_node_count\" are\nspecified.",
          "items": {
            "$ref": "#/definitions/NodePool"
          },
          "type": "array"
        },
        "resourceLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource labels for the cluster to use to annotate any related\nGoogle Compute Engine resources.",
          "type": "object"
        },
        "selfLink": {
          "description": "[Output only] Server-defined URL for the resource.",
          "type": "string"
        },
        "servicesIpv4Cidr": {
          "description": "[Output only] The IP address range of the Kubernetes services in\nthis cluster, in\n[CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\nnotation (e.g. `1.2.3.4/29`). Service addresses are\ntypically put in the last `/16` from the container CIDR.",
          "type": "string"
        },
        "status": {
          "description": "[Output only] The current status of this cluster.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RECONCILING",
            "STOPPING",
            "ERROR"
          ],
          "type": "string"
        },
        "statusMessage": {
          "description": "[Output only] Additional information about the current status of this\ncluster, if available.",
          "type": "string"
        },
        "subnetwork": {
          "description": "The name of the Google Compute Engine\n[subnetwork](/compute/docs/subnetworks) to which the\ncluster is connected.",
          "type": "string"
        },
        "zone": {
          "description": "[Output only] The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Cluster"
    },
    "ClusterUpdate": {
      "description": "ClusterUpdate describes an update to the cluster. Exactly one update can\nbe applied to a cluster with each request, so at most one field can be\nprovided.",
      "properties": {
        "desiredAddonsConfig": {
          "$ref": "#/definitions/AddonsConfig",
          "description": "Configurations for the various addons available to run in the cluster."
        },
        "desiredImageType": {
          "description": "The desired image type for the node pool.\nNOTE: Set the \"desired_node_pool\" field as well.",
          "type": "string"
        },
        "desiredLocations": {
          "description": "The desired list of Google Compute Engine\n[locations](/compute/docs/zones#available) in which the cluster's nodes\nshould be located. Changing the locations a cluster is in will result\nin nodes being either created or removed from the cluster, depending on\nwhether locations are being added or removed.\n\nThis list must always include the cluster's primary zone.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "desiredMasterAuthorizedNetworksConfig": {
          "$ref": "#/definitions/MasterAuthorizedNetworksConfig",
          "description": "Master authorized networks is a Beta feature.\nThe desired configuration options for master authorized networks feature."
        },
        "desiredMasterVersion": {
          "description": "The Kubernetes version to change the master to. The only valid value is the\nlatest supported version. Use \"-\" to have the server automatically select\nthe latest version.",
          "type": "string"
        },
        "desiredMonitoringService": {
          "description": "The monitoring service the cluster should use to write metrics.\nCurrently available options:\n\n* \"monitoring.googleapis.com\" - the Google Cloud Monitoring service\n* \"none\" - no metrics will be exported from the cluster",
          "type": "string"
        },
        "desiredNodePoolAutoscaling": {
          "$ref": "#/definitions/NodePoolAutoscaling",
          "description": "Autoscaler configuration for the node pool specified in\ndesired_node_pool_id. If there is only one pool in the\ncluster and desired_node_pool_id is not provided then\nthe change applies to that single node pool."
        },
        "desiredNodePoolId": {
          "description": "The node pool to be upgraded. This field is mandatory if\n\"desired_node_version\", \"desired_image_family\" or\n\"desired_node_pool_autoscaling\" is specified and there is more than one\nnode pool on the cluster.",
          "type": "string"
        },
        "desiredNodeVersion": {
          "description": "The Kubernetes version to change the nodes to (typically an\nupgrade). Use `-` to upgrade to the latest version supported by\nthe server.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ClusterUpdate"
    },
    "CompleteIPRotationRequest": {
      "description": "CompleteIPRotationRequest moves the cluster master back into single-IP mode.",
      "properties": {},
      "type": "object",
      "title": "CompleteIPRotationRequest"
    },
    "CreateClusterRequest": {
      "description": "CreateClusterRequest creates a cluster.",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/Cluster",
          "description": "A [cluster\nresource](/container-engine/reference/rest/v1/projects.zones.clusters)"
        }
      },
      "type": "object",
      "title": "CreateClusterRequest"
    },
    "CreateNodePoolRequest": {
      "description": "CreateNodePoolRequest creates a node pool for a cluster.",
      "properties": {
        "nodePool": {
          "$ref": "#/definitions/NodePool",
          "description": "The node pool to create."
        }
      },
      "type": "object",
      "title": "CreateNodePoolRequest"
    },
    "DailyMaintenanceWindow": {
      "description": "Time window specified for daily maintenance operations.",
      "properties": {
        "duration": {
          "description": "[Output only] Duration of the time window, automatically chosen to be\nsmallest possible in the given scenario.\nDuration will be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)\nformat \"PTnHnMnS\".",
          "type": "string"
        },
        "startTime": {
          "description": "Time within the maintenance window to start the maintenance operations.\nTime format should be in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)\nformat \"HH:MM”, where HH : [00-23] and MM : [00-59] GMT.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DailyMaintenanceWindow"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "title": "Empty"
    },
    "HorizontalPodAutoscaling": {
      "description": "Configuration options for the horizontal pod autoscaling feature, which\nincreases or decreases the number of replica pods a replication controller\nhas based on the resource usage of the existing pods.",
      "properties": {
        "disabled": {
          "description": "Whether the Horizontal Pod Autoscaling feature is enabled in the cluster.\nWhen enabled, it ensures that a Heapster pod is running in the cluster,\nwhich is also used by the Cloud Monitoring service.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "HorizontalPodAutoscaling"
    },
    "HttpLoadBalancing": {
      "description": "Configuration options for the HTTP (L7) load balancing controller addon,\nwhich makes it easy to set up HTTP load balancers for services in a cluster.",
      "properties": {
        "disabled": {
          "description": "Whether the HTTP Load Balancing controller is enabled in the cluster.\nWhen enabled, it runs a small pod in the cluster that manages the load\nbalancers.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "HttpLoadBalancing"
    },
    "IPAllocationPolicy": {
      "description": "Configuration for controlling how IPs are allocated in the cluster.",
      "properties": {
        "clusterIpv4Cidr": {
          "description": "This field is deprecated, use cluster_ipv4_cidr_block.",
          "type": "string"
        },
        "clusterIpv4CidrBlock": {
          "description": "The IP address range for the cluster pod IPs. If this field is set, then\n`cluster.cluster_ipv4_cidr` must be left blank.\n\nThis field is only applicable when `use_ip_aliases` is true.\n\nSet to blank to have a range chosen with the default size.\n\nSet to /netmask (e.g. `/14`) to have a range chosen with a specific\nnetmask.\n\nSet to a\n[CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\nnotation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.\n`10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range\nto use.",
          "type": "string"
        },
        "clusterSecondaryRangeName": {
          "description": "The name of the secondary range to be used for the cluster CIDR\nblock.  The secondary range will be used for pod IP\naddresses. This must be an existing secondary range associated\nwith the cluster subnetwork.\n\nThis field is only applicable with use_ip_aliases is true and\ncreate_subnetwork is false.",
          "type": "string"
        },
        "createSubnetwork": {
          "description": "Whether a new subnetwork will be created automatically for the cluster.\n\nThis field is only applicable when `use_ip_aliases` is true.",
          "type": "boolean"
        },
        "nodeIpv4Cidr": {
          "description": "This field is deprecated, use node_ipv4_cidr_block.",
          "type": "string"
        },
        "nodeIpv4CidrBlock": {
          "description": "The IP address range of the instance IPs in this cluster.\n\nThis is applicable only if `create_subnetwork` is true.\n\nSet to blank to have a range chosen with the default size.\n\nSet to /netmask (e.g. `/14`) to have a range chosen with a specific\nnetmask.\n\nSet to a\n[CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\nnotation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.\n`10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range\nto use.",
          "type": "string"
        },
        "servicesIpv4Cidr": {
          "description": "This field is deprecated, use services_ipv4_cidr_block.",
          "type": "string"
        },
        "servicesIpv4CidrBlock": {
          "description": "The IP address range of the services IPs in this cluster. If blank, a range\nwill be automatically chosen with the default size.\n\nThis field is only applicable when `use_ip_aliases` is true.\n\nSet to blank to have a range chosen with the default size.\n\nSet to /netmask (e.g. `/14`) to have a range chosen with a specific\nnetmask.\n\nSet to a\n[CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\nnotation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.\n`10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range\nto use.",
          "type": "string"
        },
        "servicesSecondaryRangeName": {
          "description": "The name of the secondary range to be used as for the services\nCIDR block.  The secondary range will be used for service\nClusterIPs. This must be an existing secondary range associated\nwith the cluster subnetwork.\n\nThis field is only applicable with use_ip_aliases is true and\ncreate_subnetwork is false.",
          "type": "string"
        },
        "subnetworkName": {
          "description": "A custom subnetwork name to be used if `create_subnetwork` is true.  If\nthis field is empty, then an automatic name will be chosen for the new\nsubnetwork.",
          "type": "string"
        },
        "useIpAliases": {
          "description": "Whether alias IPs will be used for pod IPs in the cluster.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "IPAllocationPolicy"
    },
    "KubernetesDashboard": {
      "description": "Configuration for the Kubernetes Dashboard.",
      "properties": {
        "disabled": {
          "description": "Whether the Kubernetes Dashboard is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "KubernetesDashboard"
    },
    "LegacyAbac": {
      "description": "Configuration for the legacy Attribute Based Access Control authorization\nmode.",
      "properties": {
        "enabled": {
          "description": "Whether the ABAC authorizer is enabled for this cluster. When enabled,\nidentities in the system, including service accounts, nodes, and\ncontrollers, will have statically granted permissions beyond those\nprovided by the RBAC configuration or IAM.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "LegacyAbac"
    },
    "ListClustersResponse": {
      "description": "ListClustersResponse is the result of ListClustersRequest.",
      "properties": {
        "clusters": {
          "description": "A list of clusters in the project in the specified zone, or\nacross all ones.",
          "items": {
            "$ref": "#/definitions/Cluster"
          },
          "type": "array"
        },
        "missingZones": {
          "description": "If any zones are listed here, the list of clusters returned\nmay be missing those zones.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ListClustersResponse"
    },
    "ListNodePoolsResponse": {
      "description": "ListNodePoolsResponse is the result of ListNodePoolsRequest.",
      "properties": {
        "nodePools": {
          "description": "A list of node pools for a cluster.",
          "items": {
            "$ref": "#/definitions/NodePool"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ListNodePoolsResponse"
    },
    "ListOperationsResponse": {
      "description": "ListOperationsResponse is the result of ListOperationsRequest.",
      "properties": {
        "missingZones": {
          "description": "If any zones are listed here, the list of operations returned\nmay be missing the operations from those zones.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "operations": {
          "description": "A list of operations in the project in the specified zone.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ListOperationsResponse"
    },
    "MaintenancePolicy": {
      "description": "MaintenancePolicy defines the maintenance policy to be used for the cluster.",
      "properties": {
        "window": {
          "$ref": "#/definitions/MaintenanceWindow",
          "description": "Specifies the maintenance window in which maintenance may be performed."
        }
      },
      "type": "object",
      "title": "MaintenancePolicy"
    },
    "MaintenanceWindow": {
      "description": "MaintenanceWindow defines the maintenance window to be used for the cluster.",
      "properties": {
        "dailyMaintenanceWindow": {
          "$ref": "#/definitions/DailyMaintenanceWindow",
          "description": "DailyMaintenanceWindow specifies a daily maintenance operation window."
        }
      },
      "type": "object",
      "title": "MaintenanceWindow"
    },
    "MasterAuth": {
      "description": "The authentication information for accessing the master endpoint.\nAuthentication can be done using HTTP basic auth or using client\ncertificates.",
      "properties": {
        "clientCertificate": {
          "description": "[Output only] Base64-encoded public certificate used by clients to\nauthenticate to the cluster endpoint.",
          "type": "string"
        },
        "clientCertificateConfig": {
          "$ref": "#/definitions/ClientCertificateConfig",
          "description": "Configuration for client certificate authentication on the cluster.  If no\nconfiguration is specified, a client certificate is issued."
        },
        "clientKey": {
          "description": "[Output only] Base64-encoded private key used by clients to authenticate\nto the cluster endpoint.",
          "type": "string"
        },
        "clusterCaCertificate": {
          "description": "[Output only] Base64-encoded public certificate that is the root of\ntrust for the cluster.",
          "type": "string"
        },
        "password": {
          "description": "The password to use for HTTP basic authentication to the master endpoint.\nBecause the master endpoint is open to the Internet, you should create a\nstrong password.  If a password is provided for cluster creation, username\nmust be non-empty.",
          "type": "string"
        },
        "username": {
          "description": "The username to use for HTTP basic authentication to the master endpoint.\nFor clusters v1.6.0 and later, you can disable basic authentication by\nproviding an empty username.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "MasterAuth"
    },
    "MasterAuthorizedNetworksConfig": {
      "description": "Master authorized networks is a Beta feature.\nConfiguration options for the master authorized networks feature. Enabled\nmaster authorized networks will disallow all external traffic to access\nKubernetes master through HTTPS except traffic from the given CIDR blocks,\nGoogle Compute Engine Public IPs and Google Prod IPs.",
      "properties": {
        "cidrBlocks": {
          "description": "cidr_blocks define up to 10 external networks that could access\nKubernetes master through HTTPS.",
          "items": {
            "$ref": "#/definitions/CidrBlock"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Whether or not master authorized networks is enabled.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "MasterAuthorizedNetworksConfig"
    },
    "NetworkPolicy": {
      "description": "Configuration options for the NetworkPolicy feature.\nhttps://kubernetes.io/docs/concepts/services-networking/networkpolicies/",
      "properties": {
        "enabled": {
          "description": "Whether network policy is enabled on the cluster.",
          "type": "boolean"
        },
        "provider": {
          "description": "The selected network policy provider.",
          "enum": [
            "PROVIDER_UNSPECIFIED",
            "CALICO"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "title": "NetworkPolicy"
    },
    "NetworkPolicyConfig": {
      "description": "Configuration for NetworkPolicy. This only tracks whether the addon\nis enabled or not on the Master, it does not track whether network policy\nis enabled for the nodes.",
      "properties": {
        "disabled": {
          "description": "Whether NetworkPolicy is enabled for this cluster.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "NetworkPolicyConfig"
    },
    "NodeConfig": {
      "description": "Parameters that describe the nodes in a cluster.",
      "properties": {
        "accelerators": {
          "description": "A list of hardware accelerators to be attached to each node.\nSee https://cloud.google.com/compute/docs/gpus for more information about\nsupport for GPUs.",
          "items": {
            "$ref": "#/definitions/AcceleratorConfig"
          },
          "type": "array"
        },
        "diskSizeGb": {
          "description": "Size of the disk attached to each node, specified in GB.\nThe smallest allowed disk size is 10GB.\n\nIf unspecified, the default disk size is 100GB.",
          "format": "int32",
          "type": "integer"
        },
        "imageType": {
          "description": "The image type to use for this node. Note that for a given image type,\nthe latest version of it will be used.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The map of Kubernetes labels (key/value pairs) to be applied to each node.\nThese will added in addition to any default label(s) that\nKubernetes may apply to the node.\nIn case of conflict in label keys, the applied set may differ depending on\nthe Kubernetes version -- it's best to assume the behavior is undefined\nand conflicts should be avoided.\nFor more information, including usage and the valid values, see:\nhttps://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
          "type": "object"
        },
        "localSsdCount": {
          "description": "The number of local SSD disks to be attached to the node.\n\nThe limit for this value is dependant upon the maximum number of\ndisks available on a machine per zone. See:\nhttps://cloud.google.com/compute/docs/disks/local-ssd#local_ssd_limits\nfor more information.",
          "format": "int32",
          "type": "integer"
        },
        "machineType": {
          "description": "The name of a Google Compute Engine [machine\ntype](/compute/docs/machine-types) (e.g.\n`n1-standard-1`).\n\nIf unspecified, the default machine type is\n`n1-standard-1`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The metadata key/value pairs assigned to instances in the cluster.\n\nKeys must conform to the regexp [a-zA-Z0-9-_]+ and be less than 128 bytes\nin length. These are reflected as part of a URL in the metadata server.\nAdditionally, to avoid ambiguity, keys must not conflict with any other\nmetadata keys for the project or be one of the four reserved keys:\n\"instance-template\", \"kube-env\", \"startup-script\", and \"user-data\"\n\nValues are free-form strings, and only have meaning as interpreted by\nthe image running in the instance. The only restriction placed on them is\nthat each value's size must be less than or equal to 32 KB.\n\nThe total size of all keys and values must be less than 512 KB.",
          "type": "object"
        },
        "minCpuPlatform": {
          "description": "Minimum CPU platform to be used by this instance. The instance may be\nscheduled on the specified or newer CPU platform. Applicable values are the\nfriendly names of CPU platforms, such as\n<code>minCpuPlatform: &quot;Intel Haswell&quot;</code> or\n<code>minCpuPlatform: &quot;Intel Sandy Bridge&quot;</code>. For more\ninformation, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)",
          "type": "string"
        },
        "oauthScopes": {
          "description": "The set of Google API scopes to be made available on all of the\nnode VMs under the \"default\" service account.\n\nThe following scopes are recommended, but not required, and by default are\nnot included:\n\n* `https://www.googleapis.com/auth/compute` is required for mounting\npersistent storage on your nodes.\n* `https://www.googleapis.com/auth/devstorage.read_only` is required for\ncommunicating with **gcr.io**\n(the [Google Container Registry](/container-registry/)).\n\nIf unspecified, no scopes are added, unless Cloud Logging or Cloud\nMonitoring are enabled, in which case their required scopes will be added.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "preemptible": {
          "description": "Whether the nodes are created as preemptible VM instances. See:\nhttps://cloud.google.com/compute/docs/instances/preemptible for more\ninformation about preemptible VM instances.",
          "type": "boolean"
        },
        "serviceAccount": {
          "description": "The Google Cloud Platform Service Account to be used by the node VMs. If\nno Service Account is specified, the \"default\" service account is used.",
          "type": "string"
        },
        "tags": {
          "description": "The list of instance tags applied to all nodes. Tags are used to identify\nvalid sources or targets for network firewalls and are specified by\nthe client during cluster or node pool creation. Each tag within the list\nmust comply with RFC1035.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "NodeConfig"
    },
    "NodeManagement": {
      "description": "NodeManagement defines the set of node management services turned on for the\nnode pool.",
      "properties": {
        "autoRepair": {
          "description": "A flag that specifies whether the node auto-repair is enabled for the node\npool. If enabled, the nodes in this node pool will be monitored and, if\nthey fail health checks too many times, an automatic repair action will be\ntriggered.",
          "type": "boolean"
        },
        "autoUpgrade": {
          "description": "A flag that specifies whether node auto-upgrade is enabled for the node\npool. If enabled, node auto-upgrade helps keep the nodes in your node pool\nup to date with the latest release version of Kubernetes.",
          "type": "boolean"
        },
        "upgradeOptions": {
          "$ref": "#/definitions/AutoUpgradeOptions",
          "description": "Specifies the Auto Upgrade knobs for the node pool."
        }
      },
      "type": "object",
      "title": "NodeManagement"
    },
    "NodePool": {
      "description": "NodePool contains the name and configuration for a cluster's node pool.\nNode pools are a set of nodes (i.e. VM's), with a common configuration and\nspecification, under the control of the cluster master. They may have a set\nof Kubernetes labels applied to them, which may be used to reference them\nduring pod scheduling. They may also be resized up or down, to accommodate\nthe workload.",
      "properties": {
        "autoscaling": {
          "$ref": "#/definitions/NodePoolAutoscaling",
          "description": "Autoscaler configuration for this NodePool. Autoscaler is enabled\nonly if a valid configuration is present."
        },
        "config": {
          "$ref": "#/definitions/NodeConfig",
          "description": "The node configuration of the pool."
        },
        "initialNodeCount": {
          "description": "The initial node count for the pool. You must ensure that your\nCompute Engine <a href=\"/compute/docs/resource-quotas\">resource quota</a>\nis sufficient for this number of instances. You must also have available\nfirewall and routes quota.",
          "format": "int32",
          "type": "integer"
        },
        "instanceGroupUrls": {
          "description": "[Output only] The resource URLs of [instance\ngroups](/compute/docs/instance-groups/) associated with this\nnode pool.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "management": {
          "$ref": "#/definitions/NodeManagement",
          "description": "NodeManagement configuration for this NodePool."
        },
        "name": {
          "description": "The name of the node pool.",
          "type": "string"
        },
        "selfLink": {
          "description": "[Output only] Server-defined URL for the resource.",
          "type": "string"
        },
        "status": {
          "description": "[Output only] The status of the nodes in this pool instance.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "PROVISIONING",
            "RUNNING",
            "RUNNING_WITH_ERROR",
            "RECONCILING",
            "STOPPING",
            "ERROR"
          ],
          "type": "string"
        },
        "statusMessage": {
          "description": "[Output only] Additional information about the current status of this\nnode pool instance, if available.",
          "type": "string"
        },
        "version": {
          "description": "[Output only] The version of the Kubernetes of this node.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NodePool"
    },
    "NodePoolAutoscaling": {
      "description": "NodePoolAutoscaling contains information required by cluster autoscaler to\nadjust the size of the node pool to the current cluster usage.",
      "properties": {
        "enabled": {
          "description": "Is autoscaling enabled for this node pool.",
          "type": "boolean"
        },
        "maxNodeCount": {
          "description": "Maximum number of nodes in the NodePool. Must be >= min_node_count. There\nhas to enough quota to scale up the cluster.",
          "format": "int32",
          "type": "integer"
        },
        "minNodeCount": {
          "description": "Minimum number of nodes in the NodePool. Must be >= 1 and <=\nmax_node_count.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "NodePoolAutoscaling"
    },
    "Operation": {
      "description": "This operation resource represents operations that may have happened or are\nhappening on the cluster. All fields are output only.",
      "properties": {
        "detail": {
          "description": "Detailed operation progress, if available.",
          "type": "string"
        },
        "endTime": {
          "description": "[Output only] The time the operation completed, in\n[RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "name": {
          "description": "The server-assigned ID for the operation.",
          "type": "string"
        },
        "operationType": {
          "description": "The operation type.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "CREATE_CLUSTER",
            "DELETE_CLUSTER",
            "UPGRADE_MASTER",
            "UPGRADE_NODES",
            "REPAIR_CLUSTER",
            "UPDATE_CLUSTER",
            "CREATE_NODE_POOL",
            "DELETE_NODE_POOL",
            "SET_NODE_POOL_MANAGEMENT",
            "AUTO_REPAIR_NODES",
            "AUTO_UPGRADE_NODES",
            "SET_LABELS",
            "SET_MASTER_AUTH",
            "SET_NODE_POOL_SIZE",
            "SET_NETWORK_POLICY",
            "SET_MAINTENANCE_POLICY"
          ],
          "type": "string"
        },
        "selfLink": {
          "description": "Server-defined URL for the resource.",
          "type": "string"
        },
        "startTime": {
          "description": "[Output only] The time the operation started, in\n[RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the operation.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE",
            "ABORTING"
          ],
          "type": "string"
        },
        "statusMessage": {
          "description": "If an error has occurred, a textual description of the error.",
          "type": "string"
        },
        "targetLink": {
          "description": "Server-defined URL for the target of the operation.",
          "type": "string"
        },
        "zone": {
          "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the operation\nis taking place.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Operation"
    },
    "RollbackNodePoolUpgradeRequest": {
      "description": "RollbackNodePoolUpgradeRequest rollbacks the previously Aborted or Failed\nNodePool upgrade. This will be an no-op if the last upgrade successfully\ncompleted.",
      "properties": {},
      "type": "object",
      "title": "RollbackNodePoolUpgradeRequest"
    },
    "ServerConfig": {
      "description": "Container Engine service configuration.",
      "properties": {
        "defaultClusterVersion": {
          "description": "Version of Kubernetes the service deploys by default.",
          "type": "string"
        },
        "defaultImageType": {
          "description": "Default image type.",
          "type": "string"
        },
        "validImageTypes": {
          "description": "List of valid image types.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "validMasterVersions": {
          "description": "List of valid master versions.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "validNodeVersions": {
          "description": "List of valid node upgrade target versions.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ServerConfig"
    },
    "SetAddonsConfigRequest": {
      "description": "SetAddonsConfigRequest sets the addons associated with the cluster.",
      "properties": {
        "addonsConfig": {
          "$ref": "#/definitions/AddonsConfig",
          "description": "The desired configurations for the various addons available to run in the\ncluster."
        }
      },
      "type": "object",
      "title": "SetAddonsConfigRequest"
    },
    "SetLabelsRequest": {
      "description": "SetLabelsRequest sets the Google Cloud Platform labels on a Google Container\nEngine cluster, which will in turn set them for Google Compute Engine\nresources used by that cluster",
      "properties": {
        "labelFingerprint": {
          "description": "The fingerprint of the previous set of labels for this resource,\nused to detect conflicts. The fingerprint is initially generated by\nContainer Engine and changes after every request to modify or update\nlabels. You must always provide an up-to-date fingerprint hash when\nupdating or changing labels. Make a <code>get()</code> request to the\nresource to get the latest fingerprint.",
          "type": "string"
        },
        "resourceLabels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels to set for that cluster.",
          "type": "object"
        }
      },
      "type": "object",
      "title": "SetLabelsRequest"
    },
    "SetLegacyAbacRequest": {
      "description": "SetLegacyAbacRequest enables or disables the ABAC authorization mechanism for\na cluster.",
      "properties": {
        "enabled": {
          "description": "Whether ABAC authorization will be enabled in the cluster.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "SetLegacyAbacRequest"
    },
    "SetLocationsRequest": {
      "description": "SetLocationsRequest sets the locations of the cluster.",
      "properties": {
        "locations": {
          "description": "The desired list of Google Compute Engine\n[locations](/compute/docs/zones#available) in which the cluster's nodes\nshould be located. Changing the locations a cluster is in will result\nin nodes being either created or removed from the cluster, depending on\nwhether locations are being added or removed.\n\nThis list must always include the cluster's primary zone.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "SetLocationsRequest"
    },
    "SetLoggingServiceRequest": {
      "description": "SetLoggingServiceRequest sets the logging service of a cluster.",
      "properties": {
        "loggingService": {
          "description": "The logging service the cluster should use to write metrics.\nCurrently available options:\n\n* \"logging.googleapis.com\" - the Google Cloud Logging service\n* \"none\" - no metrics will be exported from the cluster",
          "type": "string"
        }
      },
      "type": "object",
      "title": "SetLoggingServiceRequest"
    },
    "SetMaintenancePolicyRequest": {
      "description": "SetMaintenancePolicyRequest sets the maintenance policy for a cluster.",
      "properties": {
        "maintenancePolicy": {
          "$ref": "#/definitions/MaintenancePolicy",
          "description": "The maintenance policy to be set for the cluster. An empty field\nclears the existing maintenance policy."
        }
      },
      "type": "object",
      "title": "SetMaintenancePolicyRequest"
    },
    "SetMasterAuthRequest": {
      "description": "SetMasterAuthRequest updates the admin password of a cluster.",
      "properties": {
        "action": {
          "description": "The exact form of action to be taken on the master auth.",
          "enum": [
            "UNKNOWN",
            "SET_PASSWORD",
            "GENERATE_PASSWORD",
            "SET_USERNAME"
          ],
          "type": "string"
        },
        "update": {
          "$ref": "#/definitions/MasterAuth",
          "description": "A description of the update."
        }
      },
      "type": "object",
      "title": "SetMasterAuthRequest"
    },
    "SetMonitoringServiceRequest": {
      "description": "SetMonitoringServiceRequest sets the monitoring service of a cluster.",
      "properties": {
        "monitoringService": {
          "description": "The monitoring service the cluster should use to write metrics.\nCurrently available options:\n\n* \"monitoring.googleapis.com\" - the Google Cloud Monitoring service\n* \"none\" - no metrics will be exported from the cluster",
          "type": "string"
        }
      },
      "type": "object",
      "title": "SetMonitoringServiceRequest"
    },
    "SetNetworkPolicyRequest": {
      "description": "SetNetworkPolicyRequest enables/disables network policy for a cluster.",
      "properties": {
        "networkPolicy": {
          "$ref": "#/definitions/NetworkPolicy",
          "description": "Configuration options for the NetworkPolicy feature."
        }
      },
      "type": "object",
      "title": "SetNetworkPolicyRequest"
    },
    "SetNodePoolAutoscalingRequest": {
      "description": "SetNodePoolAutoscalingRequest sets the autoscaler settings of a node pool.",
      "properties": {
        "autoscaling": {
          "$ref": "#/definitions/NodePoolAutoscaling",
          "description": "Autoscaling configuration for the node pool."
        }
      },
      "type": "object",
      "title": "SetNodePoolAutoscalingRequest"
    },
    "SetNodePoolManagementRequest": {
      "description": "SetNodePoolManagementRequest sets the node management properties of a node\npool.",
      "properties": {
        "management": {
          "$ref": "#/definitions/NodeManagement",
          "description": "NodeManagement configuration for the node pool."
        }
      },
      "type": "object",
      "title": "SetNodePoolManagementRequest"
    },
    "SetNodePoolSizeRequest": {
      "description": "SetNodePoolSizeRequest sets the size a node\npool.",
      "properties": {
        "nodeCount": {
          "description": "The desired node count for the pool.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "SetNodePoolSizeRequest"
    },
    "StartIPRotationRequest": {
      "description": "StartIPRotationRequest creates a new IP for the cluster and then performs\na node upgrade on each node pool to point to the new IP.",
      "properties": {},
      "type": "object",
      "title": "StartIPRotationRequest"
    },
    "UpdateClusterRequest": {
      "description": "UpdateClusterRequest updates the settings of a cluster.",
      "properties": {
        "update": {
          "$ref": "#/definitions/ClusterUpdate",
          "description": "A description of the update."
        }
      },
      "type": "object",
      "title": "UpdateClusterRequest"
    },
    "UpdateMasterRequest": {
      "description": "UpdateMasterRequest updates the master of the cluster.",
      "properties": {
        "masterVersion": {
          "description": "The Kubernetes version to change the master to. The only valid value is the\nlatest supported version. Use \"-\" to have the server automatically select\nthe latest version.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UpdateMasterRequest"
    },
    "UpdateNodePoolRequest": {
      "description": "UpdateNodePoolRequests update a node pool's image and/or version.",
      "properties": {
        "imageType": {
          "description": "The desired image type for the node pool.",
          "type": "string"
        },
        "nodeVersion": {
          "description": "The Kubernetes version to change the nodes to (typically an\nupgrade). Use `-` to upgrade to the latest version supported by\nthe server.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UpdateNodePoolRequest"
    }
  },
  "actions": [
    {
      "id": "oauthCallback",
      "title": "",
      "description": "Exchange the code passed to your redirect URI for an access_token",
      "inputSchema": {
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "oauthRefresh",
      "title": "",
      "description": "Exchange a refresh_token for an access_token",
      "inputSchema": {},
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.list",
      "title": "projects.zones.clusters.list",
      "description": "Lists all clusters owned by a project in either the specified zone or all\nzones.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides, or \"-\" for all zones."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListClustersResponse"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.create",
      "title": "projects.zones.clusters.create",
      "description": "Creates a cluster, consisting of the specified number and type of Google\nCompute Engine instances.\n\nBy default, the cluster is created in the project's\n[default network](/compute/docs/networks-and-firewalls#networks).\n\nOne firewall is added for the cluster. After cluster creation,\nthe cluster creates routes for each node to allow the containers\non that node to communicate with all other instances in the\ncluster.\n\nFinally, an entry is added to the project's global metadata indicating\nwhich CIDR range is being used by the cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateClusterRequest"
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.delete",
      "title": "projects.zones.clusters.delete",
      "description": "Deletes the cluster, including the Kubernetes endpoint and all worker\nnodes.\n\nFirewalls and routes that were configured during cluster creation\nare also deleted.\n\nOther Google Compute Engine resources that might be in use by the cluster\n(e.g. load balancer resources) will not be deleted if they weren't present\nat the initial create time.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to delete."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.get",
      "title": "projects.zones.clusters.get",
      "description": "Gets the details of a specific cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to retrieve."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Cluster"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.update",
      "title": "projects.zones.clusters.update",
      "description": "Updates the settings of a specific cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateClusterRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.addons",
      "title": "projects.zones.clusters.addons",
      "description": "Sets the addons of a specific cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetAddonsConfigRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.legacyAbac",
      "title": "projects.zones.clusters.legacyAbac",
      "description": "Enables or disables the ABAC authorization mechanism on a cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetLegacyAbacRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to update."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.locations",
      "title": "projects.zones.clusters.locations",
      "description": "Sets the locations of a specific cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetLocationsRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.logging",
      "title": "projects.zones.clusters.logging",
      "description": "Sets the logging service of a specific cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetLoggingServiceRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.master",
      "title": "projects.zones.clusters.master",
      "description": "Updates the master of a specific cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateMasterRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.monitoring",
      "title": "projects.zones.clusters.monitoring",
      "description": "Sets the monitoring service of a specific cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetMonitoringServiceRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.list",
      "title": "projects.zones.clusters.nodePools.list",
      "description": "Lists the node pools for a cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListNodePoolsResponse"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.create",
      "title": "projects.zones.clusters.nodePools.create",
      "description": "Creates a node pool for a cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateNodePoolRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.delete",
      "title": "projects.zones.clusters.nodePools.delete",
      "description": "Deletes a node pool from a cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "nodePoolId": {
            "type": "string",
            "description": "The name of the node pool to delete."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "nodePoolId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.get",
      "title": "projects.zones.clusters.nodePools.get",
      "description": "Retrieves the node pool requested.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "nodePoolId": {
            "type": "string",
            "description": "The name of the node pool."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "nodePoolId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NodePool"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.autoscaling",
      "title": "projects.zones.clusters.nodePools.autoscaling",
      "description": "Sets the autoscaling settings of a specific node pool.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetNodePoolAutoscalingRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "nodePoolId": {
            "type": "string",
            "description": "The name of the node pool to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "nodePoolId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.setManagement",
      "title": "projects.zones.clusters.nodePools.setManagement",
      "description": "Sets the NodeManagement options for a node pool.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetNodePoolManagementRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to update."
          },
          "nodePoolId": {
            "type": "string",
            "description": "The name of the node pool to update."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "nodePoolId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.setSize",
      "title": "projects.zones.clusters.nodePools.setSize",
      "description": "Sets the size of a specific node pool.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetNodePoolSizeRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to update."
          },
          "nodePoolId": {
            "type": "string",
            "description": "The name of the node pool to update."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "nodePoolId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.update",
      "title": "projects.zones.clusters.nodePools.update",
      "description": "Updates the version and/or image type of a specific node pool.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateNodePoolRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "nodePoolId": {
            "type": "string",
            "description": "The name of the node pool to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "nodePoolId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.nodePools.rollback",
      "title": "projects.zones.clusters.nodePools.rollback",
      "description": "Roll back the previously Aborted or Failed NodePool upgrade.\nThis will be an no-op if the last upgrade successfully completed.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/RollbackNodePoolUpgradeRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to rollback."
          },
          "nodePoolId": {
            "type": "string",
            "description": "The name of the node pool to rollback."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "nodePoolId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.resourceLabels",
      "title": "projects.zones.clusters.resourceLabels",
      "description": "Sets labels on a cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetLabelsRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.completeIpRotation",
      "title": "projects.zones.clusters.completeIpRotation",
      "description": "Completes master IP rotation.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CompleteIPRotationRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.setMaintenancePolicy",
      "title": "projects.zones.clusters.setMaintenancePolicy",
      "description": "Sets the maintenance policy for a cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetMaintenancePolicyRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to update."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.setMasterAuth",
      "title": "projects.zones.clusters.setMasterAuth",
      "description": "Used to set master auth materials. Currently supports :-\nChanging the admin password of a specific cluster.\nThis can be either via password generation or explicitly set the password.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetMasterAuthRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster to upgrade."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.setNetworkPolicy",
      "title": "projects.zones.clusters.setNetworkPolicy",
      "description": "Enables/Disables Network Policy for a cluster.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SetNetworkPolicyRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.clusters.startIpRotation",
      "title": "projects.zones.clusters.startIpRotation",
      "description": "Start master IP rotation.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/StartIPRotationRequest"
          },
          "clusterId": {
            "type": "string",
            "description": "The name of the cluster."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://developers.google.com/console/help/new/#projectnumber)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "clusterId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.operations.list",
      "title": "projects.zones.operations.list",
      "description": "Lists all operations in a project in a specific zone or all zones.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available)\nto return operations for, or `-` for all zones."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListOperationsResponse"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.operations.get",
      "title": "projects.zones.operations.get",
      "description": "Gets the specified operation.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operationId": {
            "type": "string",
            "description": "The server-assigned `name` of the operation."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the cluster\nresides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "operationId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Operation"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.operations.cancel",
      "title": "projects.zones.operations.cancel",
      "description": "Cancels the specified operation.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CancelOperationRequest"
          },
          "operationId": {
            "type": "string",
            "description": "The server-assigned `name` of the operation."
          },
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine\n[zone](/compute/docs/zones#available) in which the operation resides."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "operationId",
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    },
    {
      "id": "projects.zones.getServerconfig",
      "title": "projects.zones.getServerconfig",
      "description": "Returns configuration info about the Container Engine service.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "The Google Developers Console [project ID or project\nnumber](https://support.google.com/cloud/answer/6158840)."
          },
          "zone": {
            "type": "string",
            "description": "The name of the Google Compute Engine [zone](/compute/docs/zones#available)\nto return operations for."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          }
        },
        "additionalProperties": false,
        "required": [
          "projectId",
          "zone"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ServerConfig"
      },
      "security": {
        "google_container": {
          "integration": "google_container"
        }
      }
    }
  ],
  "tags": [
    "google"
  ]
}