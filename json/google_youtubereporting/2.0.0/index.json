{
  "id": "google_youtubereporting",
  "title": "YouTube Reporting",
  "description": "Schedules reporting jobs containing your YouTube Analytics data and downloads the resulting bulk data reports in the form of CSV files.",
  "security": {
    "google_youtubereporting": {
      "integration": "google_youtubereporting",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)"
      },
      "oauth": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 accessCode authentication",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/yt-analytics-monetary.readonly": "View monetary and non-monetary YouTube Analytics reports for your YouTube content",
          "https://www.googleapis.com/auth/yt-analytics.readonly": "View YouTube Analytics reports for your YouTube content"
        },
        "tokenUrl": "https://accounts.google.com/o/oauth2/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
  },
  "definitions": {
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "Job": {
      "description": "A job creating reports of a specific type.",
      "properties": {
        "createTime": {
          "description": "The creation date/time of the job.",
          "format": "google-datetime",
          "type": "string"
        },
        "expireTime": {
          "description": "The date/time when this job will expire/expired. After a job expired, no\nnew reports are generated.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "description": "The server-generated ID of the job (max. 40 characters).",
          "type": "string"
        },
        "name": {
          "description": "The name of the job (max. 100 characters).",
          "type": "string"
        },
        "reportTypeId": {
          "description": "The type of reports this job creates. Corresponds to the ID of a\nReportType.",
          "type": "string"
        },
        "systemManaged": {
          "description": "True if this a system-managed job that cannot be modified by the user;\notherwise false.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ListJobsResponse": {
      "description": "Response message for ReportingService.ListJobs.",
      "properties": {
        "jobs": {
          "description": "The list of jobs.",
          "items": {
            "$ref": "#/definitions/Job"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results.\nPass this value in the\nListJobsRequest.page_token\nfield in the subsequent call to `ListJobs` method to retrieve the next\npage of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListReportTypesResponse": {
      "description": "Response message for ReportingService.ListReportTypes.",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results.\nPass this value in the\nListReportTypesRequest.page_token\nfield in the subsequent call to `ListReportTypes` method to retrieve the next\npage of results.",
          "type": "string"
        },
        "reportTypes": {
          "description": "The list of report types.",
          "items": {
            "$ref": "#/definitions/ReportType"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListReportsResponse": {
      "description": "Response message for ReportingService.ListReports.",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results.\nPass this value in the\nListReportsRequest.page_token\nfield in the subsequent call to `ListReports` method to retrieve the next\npage of results.",
          "type": "string"
        },
        "reports": {
          "description": "The list of report types.",
          "items": {
            "$ref": "#/definitions/Report"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Media": {
      "description": "Media resource.",
      "properties": {
        "resourceName": {
          "description": "Name of the media resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Report": {
      "description": "A report's metadata including the URL from which the report itself can be\ndownloaded.",
      "properties": {
        "createTime": {
          "description": "The date/time when this report was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "downloadUrl": {
          "description": "The URL from which the report can be downloaded (max. 1000 characters).",
          "type": "string"
        },
        "endTime": {
          "description": "The end of the time period that the report instance covers. The value is\nexclusive.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "description": "The server-generated ID of the report.",
          "type": "string"
        },
        "jobExpireTime": {
          "description": "The date/time when the job this report belongs to will expire/expired.",
          "format": "google-datetime",
          "type": "string"
        },
        "jobId": {
          "description": "The ID of the job that created this report.",
          "type": "string"
        },
        "startTime": {
          "description": "The start of the time period that the report instance covers. The value is\ninclusive.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReportType": {
      "description": "A report type.",
      "properties": {
        "deprecateTime": {
          "description": "The date/time when this report type was/will be deprecated.",
          "format": "google-datetime",
          "type": "string"
        },
        "id": {
          "description": "The ID of the report type (max. 100 characters).",
          "type": "string"
        },
        "name": {
          "description": "The name of the report type (max. 100 characters).",
          "type": "string"
        },
        "systemManaged": {
          "description": "True if this a system-managed report type; otherwise false. Reporting jobs\nfor system-managed report types are created automatically and can thus not\nbe used in the `CreateJob` method.",
          "type": "boolean"
        }
      },
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "jobs.list",
      "title": "jobs.list",
      "description": "Lists jobs.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "onBehalfOfContentOwner": {
            "type": "string",
            "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
          },
          "pageToken": {
            "type": "string",
            "description": "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportTypesResponse.next_page_token\nreturned in response to the previous call to the `ListJobs` method."
          },
          "includeSystemManaged": {
            "type": "boolean",
            "description": "If set to true, also system-managed jobs will be returned; otherwise only\nuser-created jobs will be returned. System-managed jobs can neither be\nmodified nor deleted."
          },
          "pageSize": {
            "type": "integer",
            "description": "Requested page size. Server may return fewer jobs than requested.\nIf unspecified, server will pick an appropriate default."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListJobsResponse"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    },
    {
      "id": "jobs.create",
      "title": "jobs.create",
      "description": "Creates a job and returns it.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "onBehalfOfContentOwner": {
            "type": "string",
            "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
          },
          "body": {
            "$ref": "#/definitions/Job"
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Job"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    },
    {
      "id": "jobs.delete",
      "title": "jobs.delete",
      "description": "Deletes a job.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "The ID of the job to delete."
          },
          "onBehalfOfContentOwner": {
            "type": "string",
            "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    },
    {
      "id": "jobs.get",
      "title": "jobs.get",
      "description": "Gets a job.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "The ID of the job to retrieve."
          },
          "onBehalfOfContentOwner": {
            "type": "string",
            "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Job"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    },
    {
      "id": "jobs.reports.list",
      "title": "jobs.reports.list",
      "description": "Lists reports created by a specific job.\nReturns NOT_FOUND if the job does not exist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "The ID of the job."
          },
          "onBehalfOfContentOwner": {
            "type": "string",
            "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
          },
          "startTimeBefore": {
            "type": "string",
            "description": "If set, only reports whose start time is smaller than the specified\ndate/time are returned."
          },
          "createdAfter": {
            "type": "string",
            "description": "If set, only reports created after the specified date/time are returned."
          },
          "pageToken": {
            "type": "string",
            "description": "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportsResponse.next_page_token\nreturned in response to the previous call to the `ListReports` method."
          },
          "startTimeAtOrAfter": {
            "type": "string",
            "description": "If set, only reports whose start time is greater than or equal the\nspecified date/time are returned."
          },
          "pageSize": {
            "type": "integer",
            "description": "Requested page size. Server may return fewer report types than requested.\nIf unspecified, server will pick an appropriate default."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListReportsResponse"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    },
    {
      "id": "jobs.reports.get",
      "title": "jobs.reports.get",
      "description": "Gets the metadata of a specific report.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string",
            "description": "The ID of the job."
          },
          "reportId": {
            "type": "string",
            "description": "The ID of the report to retrieve."
          },
          "onBehalfOfContentOwner": {
            "type": "string",
            "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Report"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    },
    {
      "id": "media.download",
      "title": "media.download",
      "description": "Method for media download. Download is supported\non the URI `/v1/media/{+name}?alt=media`.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceName": {
            "type": "string",
            "description": "Name of the media that is being downloaded.  See\nReadRequest.resource_name."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Media"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    },
    {
      "id": "reportTypes.list",
      "title": "reportTypes.list",
      "description": "Lists report types.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "pageToken": {
            "type": "string",
            "description": "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportTypesResponse.next_page_token\nreturned in response to the previous call to the `ListReportTypes` method."
          },
          "includeSystemManaged": {
            "type": "boolean",
            "description": "If set to true, also system-managed report types will be returned;\notherwise only the report types that can be used to create new reporting\njobs will be returned."
          },
          "pageSize": {
            "type": "integer",
            "description": "Requested page size. Server may return fewer report types than requested.\nIf unspecified, server will pick an appropriate default."
          },
          "onBehalfOfContentOwner": {
            "type": "string",
            "description": "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel)."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListReportTypesResponse"
      },
      "security": {
        "google_youtubereporting": {
          "integration": "google_youtubereporting"
        }
      }
    }
  ]
}