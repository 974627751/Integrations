{
  "id": "google_kgsearch",
  "title": "Knowledge Graph Search",
  "description": "Searches the Google Knowledge Graph for entities.",
  "security": {},
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/google_kgsearch.png"
  },
  "actionCount": 1,
  "definitions": {
    "SearchResponse": {
      "description": "Response message includes the context and a list of matching results\nwhich contain the detail of associated entities.",
      "properties": {
        "@context": {
          "description": "The local context applicable for the response. See more details at\nhttp://www.w3.org/TR/json-ld/#context-definitions."
        },
        "@type": {
          "description": "The schema type of top-level JSON-LD object, e.g. ItemList."
        },
        "itemListElement": {
          "description": "The item list of search results.",
          "items": {},
          "type": "array"
        }
      },
      "type": "object",
      "title": "SearchResponse"
    }
  },
  "actions": [
    {
      "id": "entities.search",
      "title": "entities.search",
      "description": "Searches Knowledge Graph for entities that match the constraints.\nA list of matched entities will be returned in response, which will be in\nJSON-LD format and compatible with http://schema.org",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "limit": {
            "type": "integer",
            "description": "Limits the number of entities to be returned."
          },
          "prefix": {
            "type": "boolean",
            "description": "Enables prefix match against names and aliases of entities"
          },
          "query": {
            "type": "string",
            "description": "The literal query string for search."
          },
          "types": {
            "type": "array",
            "description": "Restricts returned entities with these types, e.g. Person\n(as defined in http://schema.org/Person). If multiple types are specified,\nreturned entities will contain one or more of these types."
          },
          "indent": {
            "type": "boolean",
            "description": "Enables indenting of json results."
          },
          "languages": {
            "type": "array",
            "description": "The list of language codes (defined in ISO 693) to run the query with,\ne.g. 'en'."
          },
          "ids": {
            "type": "array",
            "description": "The list of entity id to be used for search instead of query string.\nTo specify multiple ids in the HTTP request, repeat the parameter in the\nURL as in ...?ids=A&ids=B"
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ],
            "default": "json"
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response.",
            "default": true
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SearchResponse"
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "search",
    "google"
  ]
}