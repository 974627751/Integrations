{
  "id": "amazonaws_xray",
  "title": "AWS X-Ray",
  "description": "AWS X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.",
  "security": {
    "amazonaws_xray": {
      "integration": "amazonaws_xray",
      "fields": {
        "accessKeyId": "",
        "secretAccessKey": "",
        "region": "AWS region (if applicable)"
      }
    }
  },
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_xray.jpg"
  },
  "actionCount": 6,
  "definitions": {
    "Alias": {
      "description": "An alias for an edge.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The canonical name of the alias."
        },
        "Names": {
          "$ref": "#/definitions/AliasNames",
          "description": "A list of names for the alias, including the canonical name."
        },
        "Type": {
          "$ref": "#/definitions/String",
          "description": "The type of the alias."
        }
      },
      "type": "object",
      "title": "Alias"
    },
    "AliasList": {
      "items": {
        "$ref": "#/definitions/Alias"
      },
      "type": "array",
      "title": "AliasList"
    },
    "AliasNames": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "AliasNames"
    },
    "AnnotationKey": {
      "type": "string",
      "title": "AnnotationKey"
    },
    "AnnotationValue": {
      "description": "Value of a segment annotation. Has one of three value types: Number, Boolean or String.",
      "properties": {
        "BooleanValue": {
          "$ref": "#/definitions/NullableBoolean",
          "description": "Value for a Boolean annotation."
        },
        "NumberValue": {
          "$ref": "#/definitions/NullableDouble",
          "description": "Value for a Number annotation."
        },
        "StringValue": {
          "$ref": "#/definitions/String",
          "description": "Value for a String annotation."
        }
      },
      "type": "object",
      "title": "AnnotationValue"
    },
    "Annotations": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/AnnotationKey"
          },
          "value": {
            "$ref": "#/definitions/ValuesWithServiceIds"
          }
        },
        "type": "object"
      },
      "type": "array",
      "title": "Annotations"
    },
    "BackendConnectionErrors": {
      "description": "<p/>",
      "properties": {
        "ConnectionRefusedCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "HTTPCode4XXCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "HTTPCode5XXCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "OtherCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "TimeoutCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "UnknownHostCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "BackendConnectionErrors"
    },
    "BatchGetTracesRequest": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "Pagination token. Not used."
        },
        "TraceIds": {
          "$ref": "#/definitions/TraceIdList",
          "description": "Specify the trace IDs of requests for which to retrieve segments."
        }
      },
      "required": [
        "TraceIds"
      ],
      "type": "object",
      "title": "BatchGetTracesRequest"
    },
    "BatchGetTracesResult": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "Pagination token. Not used."
        },
        "Traces": {
          "$ref": "#/definitions/TraceList",
          "description": "Full traces for the specified requests."
        },
        "UnprocessedTraceIds": {
          "$ref": "#/definitions/UnprocessedTraceIdList",
          "description": "Trace IDs of requests that haven't been processed."
        }
      },
      "type": "object",
      "title": "BatchGetTracesResult"
    },
    "Double": {
      "format": "double",
      "type": "number",
      "title": "Double"
    },
    "Edge": {
      "description": "Information about a connection between two services.",
      "properties": {
        "Aliases": {
          "$ref": "#/definitions/AliasList",
          "description": "Aliases for the edge."
        },
        "EndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The end time of the last segment on the edge."
        },
        "ReferenceId": {
          "$ref": "#/definitions/NullableInteger",
          "description": "Identifier of the edge. Unique within a service map."
        },
        "ResponseTimeHistogram": {
          "$ref": "#/definitions/Histogram",
          "description": "A histogram that maps the spread of client response times on an edge."
        },
        "StartTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The start time of the first segment on the edge."
        },
        "SummaryStatistics": {
          "$ref": "#/definitions/EdgeStatistics",
          "description": "Response statistics for segments on the edge."
        }
      },
      "type": "object",
      "title": "Edge"
    },
    "EdgeList": {
      "items": {
        "$ref": "#/definitions/Edge"
      },
      "type": "array",
      "title": "EdgeList"
    },
    "EdgeStatistics": {
      "description": "Response statistics for an edge.",
      "properties": {
        "ErrorStatistics": {
          "$ref": "#/definitions/ErrorStatistics",
          "description": "Information about requests that failed with a 4xx Client Error status code."
        },
        "FaultStatistics": {
          "$ref": "#/definitions/FaultStatistics",
          "description": "Information about requests that failed with a 5xx Server Error status code."
        },
        "OkCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The number of requests that completed with a 2xx Success status code."
        },
        "TotalCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The total number of completed requests."
        },
        "TotalResponseTime": {
          "$ref": "#/definitions/NullableDouble",
          "description": "The aggregate response time of completed requests."
        }
      },
      "type": "object",
      "title": "EdgeStatistics"
    },
    "ErrorStatistics": {
      "description": "Information about requests that failed with a 4xx Client Error status code.",
      "properties": {
        "OtherCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The number of requests that failed with untracked 4xx Client Error status codes."
        },
        "ThrottleCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The number of requests that failed with a 419 throttling status code."
        },
        "TotalCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The total number of requests that failed with a 4xx Client Error status code."
        }
      },
      "type": "object",
      "title": "ErrorStatistics"
    },
    "FaultStatistics": {
      "description": "Information about requests that failed with a 5xx Server Error status code.",
      "properties": {
        "OtherCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The number of requests that failed with untracked 5xx Server Error status codes."
        },
        "TotalCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The total number of requests that failed with a 5xx Server Error status code."
        }
      },
      "type": "object",
      "title": "FaultStatistics"
    },
    "FilterExpression": {
      "maxLength": 2000,
      "minLength": 0,
      "type": "string",
      "title": "FilterExpression"
    },
    "GetServiceGraphRequest": {
      "properties": {
        "EndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The end of the time frame for which to generate a graph."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "Pagination token. Not used."
        },
        "StartTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The start of the time frame for which to generate a graph."
        }
      },
      "required": [
        "StartTime",
        "EndTime"
      ],
      "type": "object",
      "title": "GetServiceGraphRequest"
    },
    "GetServiceGraphResult": {
      "properties": {
        "EndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The end of the time frame for which the graph was generated."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "Pagination token. Not used."
        },
        "Services": {
          "$ref": "#/definitions/ServiceList",
          "description": "The services that have processed a traced request during the specified time frame."
        },
        "StartTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The start of the time frame for which the graph was generated."
        }
      },
      "type": "object",
      "title": "GetServiceGraphResult"
    },
    "GetTraceGraphRequest": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "Pagination token. Not used."
        },
        "TraceIds": {
          "$ref": "#/definitions/TraceIdList",
          "description": "Trace IDs of requests for which to generate a service graph."
        }
      },
      "required": [
        "TraceIds"
      ],
      "type": "object",
      "title": "GetTraceGraphRequest"
    },
    "GetTraceGraphResult": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "Pagination token. Not used."
        },
        "Services": {
          "$ref": "#/definitions/ServiceList",
          "description": "The services that have processed one of the specified requests."
        }
      },
      "type": "object",
      "title": "GetTraceGraphResult"
    },
    "GetTraceSummariesRequest": {
      "properties": {
        "EndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The end of the time frame for which to retrieve traces."
        },
        "FilterExpression": {
          "$ref": "#/definitions/FilterExpression",
          "description": "Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "Specify the pagination token returned by a previous request to retrieve the next page of results."
        },
        "Sampling": {
          "$ref": "#/definitions/NullableBoolean",
          "description": "Set to <code>true</code> to get summaries for only a subset of available traces."
        },
        "StartTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The start of the time frame for which to retrieve traces."
        }
      },
      "required": [
        "StartTime",
        "EndTime"
      ],
      "type": "object",
      "title": "GetTraceSummariesRequest"
    },
    "GetTraceSummariesResult": {
      "properties": {
        "ApproximateTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The start time of this page of results."
        },
        "NextToken": {
          "$ref": "#/definitions/String",
          "description": "If the requested time frame contained more than one page of results, you can use this token to retrieve the next page. The first page contains the most most recent results, closest to the end of the time frame."
        },
        "TraceSummaries": {
          "$ref": "#/definitions/TraceSummaryList",
          "description": "Trace IDs and metadata for traces that were found in the specified time frame."
        },
        "TracesProcessedCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The number of traces that were processed to get this set of summaries."
        }
      },
      "type": "object",
      "title": "GetTraceSummariesResult"
    },
    "Histogram": {
      "items": {
        "$ref": "#/definitions/HistogramEntry"
      },
      "type": "array",
      "title": "Histogram"
    },
    "HistogramEntry": {
      "description": "An entry in a histogram for a statistic. A histogram maps the range of observed values on the X axis, and the prevalence of each value on the Y axis.",
      "properties": {
        "Count": {
          "$ref": "#/definitions/Integer",
          "description": "The prevalence of the entry."
        },
        "Value": {
          "$ref": "#/definitions/Double",
          "description": "The value of the entry."
        }
      },
      "type": "object",
      "title": "HistogramEntry"
    },
    "Http": {
      "description": "Information about an HTTP request.",
      "properties": {
        "ClientIp": {
          "$ref": "#/definitions/String",
          "description": "The IP address of the requestor."
        },
        "HttpMethod": {
          "$ref": "#/definitions/String",
          "description": "The request method."
        },
        "HttpStatus": {
          "$ref": "#/definitions/NullableInteger",
          "description": "The response status."
        },
        "HttpURL": {
          "$ref": "#/definitions/String",
          "description": "The request URL."
        },
        "UserAgent": {
          "$ref": "#/definitions/String",
          "description": "The request's user agent string."
        }
      },
      "type": "object",
      "title": "Http"
    },
    "Integer": {
      "type": "integer",
      "title": "Integer"
    },
    "InvalidRequestException": {
      "description": "The request is missing required parameters or has invalid parameters.",
      "properties": {},
      "type": "object",
      "title": "InvalidRequestException"
    },
    "NullableBoolean": {
      "type": "boolean",
      "title": "NullableBoolean"
    },
    "NullableDouble": {
      "format": "double",
      "type": "number",
      "title": "NullableDouble"
    },
    "NullableInteger": {
      "type": "integer",
      "title": "NullableInteger"
    },
    "NullableLong": {
      "type": "integer",
      "title": "NullableLong"
    },
    "PutTelemetryRecordsRequest": {
      "properties": {
        "EC2InstanceId": {
          "$ref": "#/definitions/String",
          "description": "<p/>"
        },
        "Hostname": {
          "$ref": "#/definitions/String",
          "description": "<p/>"
        },
        "ResourceARN": {
          "$ref": "#/definitions/String",
          "description": "<p/>"
        },
        "TelemetryRecords": {
          "$ref": "#/definitions/TelemetryRecordList",
          "description": "<p/>"
        }
      },
      "required": [
        "TelemetryRecords"
      ],
      "type": "object",
      "title": "PutTelemetryRecordsRequest"
    },
    "PutTelemetryRecordsResult": {
      "properties": {},
      "type": "object",
      "title": "PutTelemetryRecordsResult"
    },
    "PutTraceSegmentsRequest": {
      "properties": {
        "TraceSegmentDocuments": {
          "$ref": "#/definitions/TraceSegmentDocumentList",
          "description": "A string containing a JSON document defining one or more segments or subsegments."
        }
      },
      "required": [
        "TraceSegmentDocuments"
      ],
      "type": "object",
      "title": "PutTraceSegmentsRequest"
    },
    "PutTraceSegmentsResult": {
      "properties": {
        "UnprocessedTraceSegments": {
          "$ref": "#/definitions/UnprocessedTraceSegmentList",
          "description": "Segments that failed processing."
        }
      },
      "type": "object",
      "title": "PutTraceSegmentsResult"
    },
    "Segment": {
      "description": "A segment from a trace that has been ingested by the X-Ray service. The segment can be compiled from documents uploaded with <a>PutTraceSegments</a>, or an <code>inferred</code> segment for a downstream service, generated from a subsegment sent by the service that called it.",
      "properties": {
        "Document": {
          "$ref": "#/definitions/SegmentDocument",
          "description": "The segment document"
        },
        "Id": {
          "$ref": "#/definitions/SegmentId",
          "description": "The segment's ID."
        }
      },
      "type": "object",
      "title": "Segment"
    },
    "SegmentDocument": {
      "minLength": 1,
      "type": "string",
      "title": "SegmentDocument"
    },
    "SegmentId": {
      "maxLength": 16,
      "minLength": 16,
      "type": "string",
      "title": "SegmentId"
    },
    "SegmentList": {
      "items": {
        "$ref": "#/definitions/Segment"
      },
      "type": "array",
      "title": "SegmentList"
    },
    "Service": {
      "description": "Information about an application that processed requests, users that made requests, or downstream services, resources and applications that an application used.",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/String",
          "description": "Identifier of the AWS account in which the service runs."
        },
        "DurationHistogram": {
          "$ref": "#/definitions/Histogram",
          "description": "A histogram that maps the spread of service durations."
        },
        "Edges": {
          "$ref": "#/definitions/EdgeList",
          "description": "Connections to downstream services."
        },
        "EndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The end time of the last segment that the service generated."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The canonical name of the service."
        },
        "Names": {
          "$ref": "#/definitions/ServiceNames",
          "description": "A list of names for the service, including the canonical name."
        },
        "ReferenceId": {
          "$ref": "#/definitions/NullableInteger",
          "description": "Identifier for the service. Unique within the service map."
        },
        "ResponseTimeHistogram": {
          "$ref": "#/definitions/Histogram",
          "description": "A histogram that maps the spread of service response times."
        },
        "Root": {
          "$ref": "#/definitions/NullableBoolean",
          "description": "Indicates that the service was the first service to process a request."
        },
        "StartTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "The start time of the first segment that the service generated."
        },
        "State": {
          "$ref": "#/definitions/String",
          "description": "The service's state."
        },
        "SummaryStatistics": {
          "$ref": "#/definitions/ServiceStatistics",
          "description": "Aggregated statistics for the service."
        },
        "Type": {
          "$ref": "#/definitions/String",
          "description": "<p>The type of service.</p> <ul> <li> <p>AWS Resource - The type of an AWS resource. For example, <code>AWS::EC2::Instance</code> for a application running on Amazon EC2 or <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table that the application used.</p> </li> <li> <p>AWS Service - The type of an AWS service. For example, <code>AWS::DynamoDB</code> for downstream calls to Amazon DynamoDB that didn't target a specific table.</p> </li> <li> <p> <code>client</code> - Represents the clients that sent requests to a root service.</p> </li> <li> <p> <code>remote</code> - A downstream service of indeterminate type.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "Service"
    },
    "ServiceId": {
      "description": "<p/>",
      "properties": {
        "AccountId": {
          "$ref": "#/definitions/String",
          "description": "<p/>"
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "<p/>"
        },
        "Names": {
          "$ref": "#/definitions/ServiceNames",
          "description": "<p/>"
        },
        "Type": {
          "$ref": "#/definitions/String",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "ServiceId"
    },
    "ServiceIds": {
      "items": {
        "$ref": "#/definitions/ServiceId"
      },
      "type": "array",
      "title": "ServiceIds"
    },
    "ServiceList": {
      "items": {
        "$ref": "#/definitions/Service"
      },
      "type": "array",
      "title": "ServiceList"
    },
    "ServiceNames": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "ServiceNames"
    },
    "ServiceStatistics": {
      "description": "Response statistics for a service.",
      "properties": {
        "ErrorStatistics": {
          "$ref": "#/definitions/ErrorStatistics",
          "description": "Information about requests that failed with a 4xx Client Error status code."
        },
        "FaultStatistics": {
          "$ref": "#/definitions/FaultStatistics",
          "description": "Information about requests that failed with a 5xx Server Error status code."
        },
        "OkCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The number of requests that completed with a 2xx Success status code."
        },
        "TotalCount": {
          "$ref": "#/definitions/NullableLong",
          "description": "The total number of completed requests."
        },
        "TotalResponseTime": {
          "$ref": "#/definitions/NullableDouble",
          "description": "The aggregate response time of completed requests."
        }
      },
      "type": "object",
      "title": "ServiceStatistics"
    },
    "String": {
      "type": "string",
      "title": "String"
    },
    "TelemetryRecord": {
      "description": "<p/>",
      "properties": {
        "BackendConnectionErrors": {
          "$ref": "#/definitions/BackendConnectionErrors",
          "description": "<p/>"
        },
        "SegmentsReceivedCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "SegmentsRejectedCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "SegmentsSentCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "SegmentsSpilloverCount": {
          "$ref": "#/definitions/NullableInteger",
          "description": "<p/>"
        },
        "Timestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "TelemetryRecord"
    },
    "TelemetryRecordList": {
      "items": {
        "$ref": "#/definitions/TelemetryRecord"
      },
      "type": "array",
      "title": "TelemetryRecordList"
    },
    "ThrottledException": {
      "description": "The request exceeds the maximum number of requests per second.",
      "properties": {},
      "type": "object",
      "title": "ThrottledException"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string",
      "title": "Timestamp"
    },
    "Trace": {
      "description": "A collection of segment documents with matching trace IDs.",
      "properties": {
        "Duration": {
          "$ref": "#/definitions/NullableDouble",
          "description": "The length of time in seconds between the start time of the root segment and the end time of the last segment that completed."
        },
        "Id": {
          "$ref": "#/definitions/TraceId",
          "description": "The unique identifier for the request that generated the trace's segments and subsegments."
        },
        "Segments": {
          "$ref": "#/definitions/SegmentList",
          "description": "Segment documents for the segments and subsegments that comprise the trace."
        }
      },
      "type": "object",
      "title": "Trace"
    },
    "TraceId": {
      "maxLength": 35,
      "minLength": 35,
      "type": "string",
      "title": "TraceId"
    },
    "TraceIdList": {
      "items": {
        "$ref": "#/definitions/TraceId"
      },
      "type": "array",
      "title": "TraceIdList"
    },
    "TraceList": {
      "items": {
        "$ref": "#/definitions/Trace"
      },
      "type": "array",
      "title": "TraceList"
    },
    "TraceSegmentDocument": {
      "type": "string",
      "title": "TraceSegmentDocument"
    },
    "TraceSegmentDocumentList": {
      "items": {
        "$ref": "#/definitions/TraceSegmentDocument"
      },
      "type": "array",
      "title": "TraceSegmentDocumentList"
    },
    "TraceSummary": {
      "description": "Metadata generated from the segment documents in a trace.",
      "properties": {
        "Annotations": {
          "$ref": "#/definitions/Annotations",
          "description": "Annotations from the trace's segment documents."
        },
        "Duration": {
          "$ref": "#/definitions/NullableDouble",
          "description": "The length of time in seconds between the start time of the root segment and the end time of the last segment that completed."
        },
        "HasError": {
          "$ref": "#/definitions/NullableBoolean",
          "description": "One or more of the segment documents has a 400 series error."
        },
        "HasFault": {
          "$ref": "#/definitions/NullableBoolean",
          "description": "One or more of the segment documents has a 500 series error."
        },
        "HasThrottle": {
          "$ref": "#/definitions/NullableBoolean",
          "description": "One or more of the segment documents has a 429 throttling error."
        },
        "Http": {
          "$ref": "#/definitions/Http",
          "description": "Information about the HTTP request served by the trace."
        },
        "Id": {
          "$ref": "#/definitions/TraceId",
          "description": "The unique identifier for the request that generated the trace's segments and subsegments."
        },
        "IsPartial": {
          "$ref": "#/definitions/NullableBoolean",
          "description": "One or more of the segment documents is in progress."
        },
        "ResponseTime": {
          "$ref": "#/definitions/NullableDouble",
          "description": "The length of time in seconds between the start and end times of the root segment. If the service performs work asynchronously, the response time measures the time before the response is sent to the user, while the duration measures the amount of time before the last traced activity completes."
        },
        "ServiceIds": {
          "$ref": "#/definitions/ServiceIds",
          "description": "Service IDs from the trace's segment documents."
        },
        "Users": {
          "$ref": "#/definitions/TraceUsers",
          "description": "Users from the trace's segment documents."
        }
      },
      "type": "object",
      "title": "TraceSummary"
    },
    "TraceSummaryList": {
      "items": {
        "$ref": "#/definitions/TraceSummary"
      },
      "type": "array",
      "title": "TraceSummaryList"
    },
    "TraceUser": {
      "description": "Information about a user recorded in segment documents.",
      "properties": {
        "ServiceIds": {
          "$ref": "#/definitions/ServiceIds",
          "description": "Services that the user's request hit."
        },
        "UserName": {
          "$ref": "#/definitions/String",
          "description": "The user's name."
        }
      },
      "type": "object",
      "title": "TraceUser"
    },
    "TraceUsers": {
      "items": {
        "$ref": "#/definitions/TraceUser"
      },
      "type": "array",
      "title": "TraceUsers"
    },
    "UnprocessedTraceIdList": {
      "items": {
        "$ref": "#/definitions/TraceId"
      },
      "type": "array",
      "title": "UnprocessedTraceIdList"
    },
    "UnprocessedTraceSegment": {
      "description": "Information about a segment that failed processing.",
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/String",
          "description": "The error that caused processing to fail."
        },
        "Id": {
          "$ref": "#/definitions/String",
          "description": "The segment's ID."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The error message."
        }
      },
      "type": "object",
      "title": "UnprocessedTraceSegment"
    },
    "UnprocessedTraceSegmentList": {
      "items": {
        "$ref": "#/definitions/UnprocessedTraceSegment"
      },
      "type": "array",
      "title": "UnprocessedTraceSegmentList"
    },
    "ValueWithServiceIds": {
      "description": "Information about a segment annotation.",
      "properties": {
        "AnnotationValue": {
          "$ref": "#/definitions/AnnotationValue",
          "description": "Values of the annotation."
        },
        "ServiceIds": {
          "$ref": "#/definitions/ServiceIds",
          "description": "Services to which the annotation applies."
        }
      },
      "type": "object",
      "title": "ValueWithServiceIds"
    },
    "ValuesWithServiceIds": {
      "items": {
        "$ref": "#/definitions/ValueWithServiceIds"
      },
      "type": "array",
      "title": "ValuesWithServiceIds"
    }
  },
  "actions": [
    {
      "id": "GetServiceGraph",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetServiceGraphRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetServiceGraphResult"
      },
      "security": {
        "amazonaws_xray": {
          "integration": "amazonaws_xray"
        }
      }
    },
    {
      "id": "PutTelemetryRecords",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutTelemetryRecordsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/PutTelemetryRecordsResult"
      },
      "security": {
        "amazonaws_xray": {
          "integration": "amazonaws_xray"
        }
      }
    },
    {
      "id": "GetTraceGraph",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetTraceGraphRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetTraceGraphResult"
      },
      "security": {
        "amazonaws_xray": {
          "integration": "amazonaws_xray"
        }
      }
    },
    {
      "id": "PutTraceSegments",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutTraceSegmentsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/PutTraceSegmentsResult"
      },
      "security": {
        "amazonaws_xray": {
          "integration": "amazonaws_xray"
        }
      }
    },
    {
      "id": "GetTraceSummaries",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetTraceSummariesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetTraceSummariesResult"
      },
      "security": {
        "amazonaws_xray": {
          "integration": "amazonaws_xray"
        }
      }
    },
    {
      "id": "BatchGetTraces",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/BatchGetTracesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/BatchGetTracesResult"
      },
      "security": {
        "amazonaws_xray": {
          "integration": "amazonaws_xray"
        }
      }
    }
  ],
  "tags": [
    "cloud",
    "aws"
  ]
}