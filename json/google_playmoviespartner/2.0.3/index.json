{
  "id": "google_playmoviespartner",
  "title": "Google Play Movies Partner",
  "description": "Gets the delivery status of titles for Google Play Movies Partners.",
  "security": {
    "google_playmoviespartner": {
      "integration": "google_playmoviespartner",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 accessCode authentication",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/playmovies_partner.readonly": "View the digital assets you publish on Google Play Movies and TV"
        },
        "tokenUrl": "https://accounts.google.com/o/oauth2/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/google_playmoviespartner.png"
  },
  "actionCount": 8,
  "definitions": {
    "Avail": {
      "description": "An Avail describes the Availability Window of a specific Edit in a given\ncountry, which means the period Google is allowed to sell or rent the Edit.\n\nAvails are exposed in EMA format Version 1.6b (available at\nhttp://www.movielabs.com/md/avails/)\n\nStudios can see the Avails for the Titles they own.\nPost-production houses cannot see any Avails.",
      "properties": {
        "altId": {
          "description": "Other identifier referring to the Edit, as defined by partner.\nExample: \"GOOGLER_2006\"",
          "type": "string"
        },
        "availId": {
          "description": "ID internally generated by Google to uniquely identify an Avail.\nNot part of EMA Specs.",
          "type": "string"
        },
        "captionExemption": {
          "description": "Communicating an exempt category as defined by FCC regulations.\nIt is not required for non-US Avails.\nExample: \"1\"",
          "type": "string"
        },
        "captionIncluded": {
          "description": "Communicating if caption file will be delivered.",
          "type": "boolean"
        },
        "contentId": {
          "description": "Title Identifier. This should be the Title Level EIDR.\nExample: \"10.5240/1489-49A2-3956-4B2D-FE16-5\".",
          "type": "string"
        },
        "displayName": {
          "description": "The name of the studio that owns the Edit referred in the Avail.\nThis is the equivalent of `studio_name` in other resources, but it follows\nthe EMA nomenclature.\nExample: \"Google Films\".",
          "type": "string"
        },
        "encodeId": {
          "description": "Manifestation Identifier. This should be the Manifestation\nLevel EIDR.\nExample: \"10.2340/1489-49A2-3956-4B2D-FE16-7\"",
          "type": "string"
        },
        "end": {
          "description": "End of term in YYYY-MM-DD format in the timezone of the country\nof the Avail.\n\"Open\" if no end date is available.\nExample: \"2019-02-17\"",
          "type": "string"
        },
        "episodeAltId": {
          "description": "Other identifier referring to the episode, as defined by partner.\nOnly available on TV avails.\nExample: \"rs_googlers_s1_3\".",
          "type": "string"
        },
        "episodeNumber": {
          "description": "The number assigned to the episode within a season.\nOnly available on TV Avails.\nExample: \"3\".",
          "type": "string"
        },
        "episodeTitleInternalAlias": {
          "description": "OPTIONAL.TV Only. Title used by involved parties to refer to this episode.\nOnly available on TV Avails.\nExample: \"Coding at Google\".",
          "type": "string"
        },
        "formatProfile": {
          "description": "Indicates the format profile covered by the transaction.",
          "enum": [
            "FORMAT_PROFILE_UNSPECIFIED",
            "SD",
            "HD",
            "UHD"
          ],
          "type": "string"
        },
        "licenseType": {
          "description": "Type of transaction.",
          "enum": [
            "LICENSE_TYPE_UNSPECIFIED",
            "EST",
            "VOD",
            "SVOD",
            "POEST"
          ],
          "type": "string"
        },
        "pphNames": {
          "description": "Name of the post-production houses that manage the Avail.\nNot part of EMA Specs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "priceType": {
          "description": "Type of pricing that should be applied to this Avail\nbased on how the partner classify them.\nExample: \"Tier\", \"WSP\", \"SRP\", or \"Category\".",
          "type": "string"
        },
        "priceValue": {
          "description": "Value to be applied to the pricing type.\nExample: \"4\" or \"2.99\"",
          "type": "string"
        },
        "productId": {
          "description": "Edit Identifier. This should be the Edit Level EIDR.\nExample: \"10.2340/1489-49A2-3956-4B2D-FE16-6\"",
          "type": "string"
        },
        "ratingReason": {
          "description": "Value representing the rating reason.\nRating reasons should be formatted as per\n[EMA ratings spec](http://www.movielabs.com/md/ratings/)\nand comma-separated for inclusion of multiple reasons.\nExample: \"L, S, V\"",
          "type": "string"
        },
        "ratingSystem": {
          "description": "Rating system applied to the version of title within territory\nof Avail.\nRating systems should be formatted as per\n[EMA ratings spec](http://www.movielabs.com/md/ratings/)\nExample: \"MPAA\"",
          "type": "string"
        },
        "ratingValue": {
          "description": "Value representing the rating.\nRatings should be formatted as per http://www.movielabs.com/md/ratings/\nExample: \"PG\"",
          "type": "string"
        },
        "releaseDate": {
          "description": "Release date of the Title in earliest released territory.\nTypically it is just the year, but it is free-form as per EMA spec.\nExamples: \"1979\", \"Oct 2014\"",
          "type": "string"
        },
        "seasonAltId": {
          "description": "Other identifier referring to the season, as defined by partner.\nOnly available on TV avails.\nExample: \"rs_googlers_s1\".",
          "type": "string"
        },
        "seasonNumber": {
          "description": "The number assigned to the season within a series.\nOnly available on TV Avails.\nExample: \"1\".",
          "type": "string"
        },
        "seasonTitleInternalAlias": {
          "description": "Title used by involved parties to refer to this season.\nOnly available on TV Avails.\nExample: \"Googlers, The\".",
          "type": "string"
        },
        "seriesAltId": {
          "description": "Other identifier referring to the series, as defined by partner.\nOnly available on TV avails.\nExample: \"rs_googlers\".",
          "type": "string"
        },
        "seriesTitleInternalAlias": {
          "description": "Title used by involved parties to refer to this series.\nOnly available on TV Avails.\nExample: \"Googlers, The\".",
          "type": "string"
        },
        "start": {
          "description": "Start of term in YYYY-MM-DD format in the timezone of the\ncountry of the Avail.\nExample: \"2013-05-14\".",
          "type": "string"
        },
        "storeLanguage": {
          "description": "Spoken language of the intended audience.\nLanguage shall be encoded in accordance with RFC 5646.\nExample: \"fr\".",
          "type": "string"
        },
        "suppressionLiftDate": {
          "description": "First date an Edit could be publically announced as becoming\navailable at a specific future date in territory of Avail.\n*Not* the Avail start date or pre-order start date.\nFormat is YYYY-MM-DD.\nOnly available for pre-orders.\nExample: \"2012-12-10\"",
          "type": "string"
        },
        "territory": {
          "description": "ISO 3166-1 alpha-2 country code for the country or territory\nof this Avail.\nFor Avails, we use Territory in lieu of Country to comply with\nEMA specifications.\nBut please note that Territory and Country identify the same thing.\nExample: \"US\".",
          "type": "string"
        },
        "titleInternalAlias": {
          "description": "Title used by involved parties to refer to this content.\nExample: \"Googlers, The\".\nOnly available on Movie Avails.",
          "type": "string"
        },
        "videoId": {
          "description": "Google-generated ID identifying the video linked to this Avail, once\ndelivered.\nNot part of EMA Specs.\nExample: 'gtry456_xc'",
          "type": "string"
        },
        "workType": {
          "description": "Work type as enumerated in EMA.",
          "enum": [
            "TITLE_TYPE_UNSPECIFIED",
            "MOVIE",
            "SEASON",
            "EPISODE",
            "BUNDLE"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "title": "Avail"
    },
    "ListAvailsResponse": {
      "description": "Response to the 'ListAvails' method.",
      "properties": {
        "avails": {
          "description": "List of Avails that match the request criteria.",
          "items": {
            "$ref": "#/definitions/Avail"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "See _List methods rules_ for info about this field.",
          "type": "string"
        },
        "totalSize": {
          "description": "See _List methods rules_ for more information about this field.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "ListAvailsResponse"
    },
    "ListOrdersResponse": {
      "description": "Response to the 'ListOrders' method.",
      "properties": {
        "nextPageToken": {
          "description": "See _List methods rules_ for info about this field.",
          "type": "string"
        },
        "orders": {
          "description": "List of Orders that match the request criteria.",
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "totalSize": {
          "description": "See _List methods rules_ for more information about this field.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "ListOrdersResponse"
    },
    "ListStoreInfosResponse": {
      "description": "Response to the 'ListStoreInfos' method.",
      "properties": {
        "nextPageToken": {
          "description": "See 'List methods rules' for info about this field.",
          "type": "string"
        },
        "storeInfos": {
          "description": "List of StoreInfos that match the request criteria.",
          "items": {
            "$ref": "#/definitions/StoreInfo"
          },
          "type": "array"
        },
        "totalSize": {
          "description": "See _List methods rules_ for more information about this field.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "ListStoreInfosResponse"
    },
    "Order": {
      "description": "An Order tracks the fulfillment of an Edit when delivered using the\nlegacy, non-component-based delivery.\n\nEach Order is uniquely identified by an `order_id`, which is generated\nby Google.\n\nExternally, Orders can also be identified by partners using its `custom_id`\n(when provided).",
      "properties": {
        "approvedTime": {
          "description": "Timestamp when the Order was approved.",
          "format": "google-datetime",
          "type": "string"
        },
        "channelId": {
          "description": "YouTube Channel ID that should be used to fulfill the Order.\nExample: \"UCRG64darCZhb\".",
          "type": "string"
        },
        "channelName": {
          "description": "YouTube Channel Name that should be used to fulfill the Order.\nExample: \"Google_channel\".",
          "type": "string"
        },
        "countries": {
          "description": "Countries where the Order is available,\nusing the \"ISO 3166-1 alpha-2\" format (example: \"US\").",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "customId": {
          "description": "ID that can be used to externally identify an Order.\nThis ID is provided by partners when submitting the Avails.\nExample: 'GOOGLER_2006'",
          "type": "string"
        },
        "earliestAvailStartTime": {
          "description": "Timestamp of the earliest start date of the Avails\nlinked to this Order.",
          "format": "google-datetime",
          "type": "string"
        },
        "episodeName": {
          "description": "Default Episode name,\nusually in the language of the country of origin.\nOnly available for TV Edits\nExample: \"Googlers, The - Pilot\".",
          "type": "string"
        },
        "legacyPriority": {
          "description": "Legacy Order priority, as defined by Google.\nExample: 'P0'",
          "type": "string"
        },
        "name": {
          "description": "Default Edit name,\nusually in the language of the country of origin.\nExample: \"Googlers, The\".",
          "type": "string"
        },
        "normalizedPriority": {
          "description": "A simpler representation of the priority.",
          "enum": [
            "NORMALIZED_PRIORITY_UNSPECIFIED",
            "LOW_PRIORITY",
            "HIGH_PRIORITY"
          ],
          "type": "string"
        },
        "orderId": {
          "description": "ID internally generated by Google to uniquely identify an Order.\nExample: 'abcde12_x'",
          "type": "string"
        },
        "orderedTime": {
          "description": "Timestamp when the Order was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "pphName": {
          "description": "Name of the post-production house that manages the Edit ordered.",
          "type": "string"
        },
        "priority": {
          "description": "Order priority, as defined by Google.\nThe higher the value, the higher the priority.\nExample: 90",
          "format": "double",
          "type": "number"
        },
        "receivedTime": {
          "description": "Timestamp when the Order was fulfilled.",
          "format": "google-datetime",
          "type": "string"
        },
        "rejectionNote": {
          "description": "Field explaining why an Order has been rejected.\nExample: \"Trailer audio is 2ch mono, please re-deliver in stereo\".",
          "type": "string"
        },
        "seasonName": {
          "description": "Default Season name,\nusually in the language of the country of origin.\nOnly available for TV Edits\nExample: \"Googlers, The - A Brave New World\".",
          "type": "string"
        },
        "showName": {
          "description": "Default Show name,\nusually in the language of the country of origin.\nOnly available for TV Edits\nExample: \"Googlers, The\".",
          "type": "string"
        },
        "status": {
          "description": "High-level status of the order.",
          "enum": [
            "STATUS_UNSPECIFIED",
            "STATUS_APPROVED",
            "STATUS_FAILED",
            "STATUS_PROCESSING",
            "STATUS_UNFULFILLED",
            "STATUS_NOT_AVAILABLE"
          ],
          "type": "string"
        },
        "statusDetail": {
          "description": "Detailed status of the order",
          "enum": [
            "ORDER_STATUS_UNSPECIFIED",
            "ORDER_STATUS_QC_APPROVED",
            "ORDER_STATUS_QC_REJECTION",
            "ORDER_STATUS_INTERNAL_FIX",
            "ORDER_STATUS_OPEN_ORDER",
            "ORDER_STATUS_NOT_AVAILABLE",
            "ORDER_STATUS_AWAITING_REDELIVERY",
            "ORDER_STATUS_READY_FOR_QC",
            "ORDER_STATUS_FILE_PROCESSING"
          ],
          "type": "string"
        },
        "studioName": {
          "description": "Name of the studio that owns the Edit ordered.",
          "type": "string"
        },
        "type": {
          "description": "Type of the Edit linked to the Order.",
          "enum": [
            "TITLE_TYPE_UNSPECIFIED",
            "MOVIE",
            "SEASON",
            "EPISODE",
            "BUNDLE"
          ],
          "type": "string"
        },
        "videoId": {
          "description": "Google-generated ID identifying the video linked to this Order, once\ndelivered.\nExample: 'gtry456_xc'.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Order"
    },
    "StoreInfo": {
      "description": "Information about a playable sequence (video) associated with an Edit\nand available at the Google Play Store.\n\nInternally, each StoreInfo is uniquely identified by a `video_id`\nand `country`.\n\nExternally, Title-level EIDR or Edit-level EIDR, if provided,\ncan also be used to identify a specific title or edit in a country.",
      "properties": {
        "audioTracks": {
          "description": "Audio tracks available for this Edit.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "country": {
          "description": "Country where Edit is available in ISO 3166-1 alpha-2 country\ncode.\nExample: \"US\".",
          "type": "string"
        },
        "editLevelEidr": {
          "description": "Edit-level EIDR ID.\nExample: \"10.5240/1489-49A2-3956-4B2D-FE16-6\".",
          "type": "string"
        },
        "episodeNumber": {
          "description": "The number assigned to the episode within a season.\nOnly available on TV Edits.\nExample: \"1\".",
          "type": "string"
        },
        "hasAudio51": {
          "description": "Whether the Edit has a 5.1 channel audio track.",
          "type": "boolean"
        },
        "hasEstOffer": {
          "description": "Whether the Edit has a EST offer.",
          "type": "boolean"
        },
        "hasHdOffer": {
          "description": "Whether the Edit has a HD offer.",
          "type": "boolean"
        },
        "hasInfoCards": {
          "description": "Whether the Edit has info cards.",
          "type": "boolean"
        },
        "hasSdOffer": {
          "description": "Whether the Edit has a SD offer.",
          "type": "boolean"
        },
        "hasVodOffer": {
          "description": "Whether the Edit has a VOD offer.",
          "type": "boolean"
        },
        "liveTime": {
          "description": "Timestamp when the Edit went live on the Store.",
          "format": "google-datetime",
          "type": "string"
        },
        "mid": {
          "description": "Knowledge Graph ID associated to this Edit, if available.\nThis ID links the Edit to its knowledge entity, externally accessible\nat http://freebase.com.\nIn the absense of Title EIDR or Edit EIDR, this ID helps link together\nmultiple Edits across countries.\nExample: '/m/0ffx29'",
          "type": "string"
        },
        "name": {
          "description": "Default Edit name, usually in the language of the country of\norigin.\nExample: \"Googlers, The\".",
          "type": "string"
        },
        "pphNames": {
          "description": "Name of the post-production houses that manage the Edit.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "seasonId": {
          "description": "Google-generated ID identifying the season linked to the Edit.\nOnly available for TV Edits.\nExample: 'ster23ex'",
          "type": "string"
        },
        "seasonName": {
          "description": "Default Season name, usually in the language of the country of\norigin.\nOnly available for TV Edits\nExample: \"Googlers, The - A Brave New World\".",
          "type": "string"
        },
        "seasonNumber": {
          "description": "The number assigned to the season within a show.\nOnly available on TV Edits.\nExample: \"1\".",
          "type": "string"
        },
        "showId": {
          "description": "Google-generated ID identifying the show linked to the Edit.\nOnly available for TV Edits.\nExample: 'et2hsue_x'",
          "type": "string"
        },
        "showName": {
          "description": "Default Show name, usually in the language of the country of\norigin.\nOnly available for TV Edits\nExample: \"Googlers, The\".",
          "type": "string"
        },
        "studioName": {
          "description": "Name of the studio that owns the Edit ordered.",
          "type": "string"
        },
        "subtitles": {
          "description": "Subtitles available for this Edit.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "titleLevelEidr": {
          "description": "Title-level EIDR ID.\nExample: \"10.5240/1489-49A2-3956-4B2D-FE16-5\".",
          "type": "string"
        },
        "trailerId": {
          "description": "Google-generated ID identifying the trailer linked to the Edit.\nExample: 'bhd_4e_cx'",
          "type": "string"
        },
        "type": {
          "description": "Edit type, like Movie, Episode or Season.",
          "enum": [
            "TITLE_TYPE_UNSPECIFIED",
            "MOVIE",
            "SEASON",
            "EPISODE",
            "BUNDLE"
          ],
          "type": "string"
        },
        "videoId": {
          "description": "Google-generated ID identifying the video linked to the Edit.\nExample: 'gtry456_xc'",
          "type": "string"
        }
      },
      "type": "object",
      "title": "StoreInfo"
    }
  },
  "actions": [
    {
      "id": "oauthCallback",
      "title": "",
      "description": "Exchange the code passed to your redirect URI for an access_token",
      "inputSchema": {
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    },
    {
      "id": "oauthRefresh",
      "title": "",
      "description": "Exchange a refresh_token for an access_token",
      "inputSchema": {},
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    },
    {
      "id": "accounts.avails.list",
      "title": "accounts.avails.list",
      "description": "List Avails owned or managed by the partner.\n\nSee _Authentication and Authorization rules_ and\n_List methods rules_ for more information about this method.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "REQUIRED. See _General rules_ for more information about this field."
          },
          "title": {
            "type": "string",
            "description": "Filter that matches Avails with a `title_internal_alias`,\n`series_title_internal_alias`, `season_title_internal_alias`,\nor `episode_title_internal_alias` that contains the given\ncase-insensitive title."
          },
          "videoIds": {
            "type": "array",
            "description": "Filter Avails that match any of the given `video_id`s."
          },
          "pageToken": {
            "type": "string",
            "description": "See _List methods rules_ for info about this field."
          },
          "pageSize": {
            "type": "integer",
            "description": "See _List methods rules_ for info about this field."
          },
          "altIds": {
            "type": "array",
            "description": "Filter Avails that match (case-insensitive) any of the given partner-specific custom ids."
          },
          "pphNames": {
            "type": "array",
            "description": "See _List methods rules_ for info about this field."
          },
          "altId": {
            "type": "string",
            "description": "Filter Avails that match a case-insensitive, partner-specific custom id.\nNOTE: this field is deprecated and will be removed on V2; `alt_ids`\nshould be used instead."
          },
          "studioNames": {
            "type": "array",
            "description": "See _List methods rules_ for info about this field."
          },
          "territories": {
            "type": "array",
            "description": "Filter Avails that match (case-insensitive) any of the given country codes,\nusing the \"ISO 3166-1 alpha-2\" format (examples: \"US\", \"us\", \"Us\")."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "accountId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListAvailsResponse"
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    },
    {
      "id": "accounts.avails.get",
      "title": "accounts.avails.get",
      "description": "Get an Avail given its avail group id and avail id.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "REQUIRED. See _General rules_ for more information about this field."
          },
          "availId": {
            "type": "string",
            "description": "REQUIRED. Avail ID."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "accountId",
          "availId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Avail"
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    },
    {
      "id": "accounts.orders.list",
      "title": "accounts.orders.list",
      "description": "List Orders owned or managed by the partner.\n\nSee _Authentication and Authorization rules_ and\n_List methods rules_ for more information about this method.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "REQUIRED. See _General rules_ for more information about this field."
          },
          "pageToken": {
            "type": "string",
            "description": "See _List methods rules_ for info about this field."
          },
          "customId": {
            "type": "string",
            "description": "Filter Orders that match a case-insensitive, partner-specific custom id."
          },
          "videoIds": {
            "type": "array",
            "description": "Filter Orders that match any of the given `video_id`s."
          },
          "pageSize": {
            "type": "integer",
            "description": "See _List methods rules_ for info about this field."
          },
          "pphNames": {
            "type": "array",
            "description": "See _List methods rules_ for info about this field."
          },
          "status": {
            "type": "array",
            "description": "Filter Orders that match one of the given status."
          },
          "name": {
            "type": "string",
            "description": "Filter that matches Orders with a `name`, `show`, `season` or `episode`\nthat contains the given case-insensitive name."
          },
          "studioNames": {
            "type": "array",
            "description": "See _List methods rules_ for info about this field."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "accountId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListOrdersResponse"
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    },
    {
      "id": "accounts.orders.get",
      "title": "accounts.orders.get",
      "description": "Get an Order given its id.\n\nSee _Authentication and Authorization rules_ and\n_Get methods rules_ for more information about this method.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "REQUIRED. See _General rules_ for more information about this field."
          },
          "orderId": {
            "type": "string",
            "description": "REQUIRED. Order ID."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "accountId",
          "orderId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Order"
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    },
    {
      "id": "accounts.storeInfos.list",
      "title": "accounts.storeInfos.list",
      "description": "List StoreInfos owned or managed by the partner.\n\nSee _Authentication and Authorization rules_ and\n_List methods rules_ for more information about this method.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "REQUIRED. See _General rules_ for more information about this field."
          },
          "seasonIds": {
            "type": "array",
            "description": "Filter StoreInfos that match any of the given `season_id`s."
          },
          "pageToken": {
            "type": "string",
            "description": "See _List methods rules_ for info about this field."
          },
          "videoId": {
            "type": "string",
            "description": "Filter StoreInfos that match a given `video_id`.\nNOTE: this field is deprecated and will be removed on V2; `video_ids`\nshould be used instead."
          },
          "videoIds": {
            "type": "array",
            "description": "Filter StoreInfos that match any of the given `video_id`s."
          },
          "pageSize": {
            "type": "integer",
            "description": "See _List methods rules_ for info about this field."
          },
          "mids": {
            "type": "array",
            "description": "Filter StoreInfos that match any of the given `mid`s."
          },
          "pphNames": {
            "type": "array",
            "description": "See _List methods rules_ for info about this field."
          },
          "countries": {
            "type": "array",
            "description": "Filter StoreInfos that match (case-insensitive) any of the given country\ncodes, using the \"ISO 3166-1 alpha-2\" format (examples: \"US\", \"us\", \"Us\")."
          },
          "name": {
            "type": "string",
            "description": "Filter that matches StoreInfos with a `name` or `show_name`\nthat contains the given case-insensitive name."
          },
          "studioNames": {
            "type": "array",
            "description": "See _List methods rules_ for info about this field."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "accountId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListStoreInfosResponse"
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    },
    {
      "id": "accounts.storeInfos.country.get",
      "title": "accounts.storeInfos.country.get",
      "description": "Get a StoreInfo given its video id and country.\n\nSee _Authentication and Authorization rules_ and\n_Get methods rules_ for more information about this method.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "REQUIRED. See _General rules_ for more information about this field."
          },
          "videoId": {
            "type": "string",
            "description": "REQUIRED. Video ID."
          },
          "country": {
            "type": "string",
            "description": "REQUIRED. Edit country."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "access_token": {
            "type": "string",
            "description": "OAuth access token."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
          },
          "pp": {
            "type": "boolean",
            "description": "Pretty-print response."
          },
          "bearer_token": {
            "type": "string",
            "description": "OAuth bearer token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "upload_protocol": {
            "type": "string",
            "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "uploadType": {
            "type": "string",
            "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "callback": {
            "type": "string",
            "description": "JSONP"
          },
          "$.xgafv": {
            "type": "string",
            "description": "V1 error format.",
            "enum": [
              "1",
              "2"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for response.",
            "enum": [
              "json",
              "media",
              "proto"
            ]
          }
        },
        "additionalProperties": false,
        "required": [
          "accountId",
          "videoId",
          "country"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StoreInfo"
      },
      "security": {
        "google_playmoviespartner": {
          "integration": "google_playmoviespartner"
        }
      }
    }
  ],
  "tags": [
    "google"
  ]
}