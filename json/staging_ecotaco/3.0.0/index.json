{
  "id": "staging_ecotaco",
  "title": "api.ecota.co v2",
  "description": "The API ecotaco allows you to connect, create an account,\nmanage your credit cards and order rides.\n\n# Authentication\n\nEcotaco API use a system of application key and authentification token.\n\n## Application key :\n\nThe application key is generated by Ecota.co and unique to an application.\n\nBefore accessing EcoTa.co APIs, you need to register your application. Please supply the following information to dev@ecota.co:\n\n- Application name\n\n- Company (if appropriate)\n\n- Contact name, phone and address\n\n- Contact email\n\n- Is this a web application, a desktop application, or an application running on a device?\n\n- Short description of your application\n\nIt **must** be passed on request : \"accounts -> login\", \"accounts -> facebook login\" and \"accounts -> register\" .\n\n## Authentification token :\n\nThe authentification token is retrieved at login or register of an user.\n\nIt **must** be passed in request for authenticate action in Authorization HTTP header.\n\nExample :\n\nAuthorization: Token token=e55887022c1aca4c86abcc49e85ceb8a0c855d2af4d9fac75c08040a583dcde4\n\n# Language\n\nOn some of our resources, we filter the content displayed based on the Accept-Language header.\nIf the language is not defined or if we don't use the language defined in this header, we automatically use French as the default language.\nEcoTa.co currently support two languages: English, French. (\"en\" and \"fr\")\n\n# Encoding\n\nAll requests and answers on EcoTa.co are in UTF-8.",
  "security": {},
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/staging_ecotaco.png"
  },
  "actionCount": 27,
  "definitions": {
    "Autocomplete_places": {
      "title": "Autocomplete_places"
    },
    "Autocomplete_places_details": {
      "title": "Autocomplete_places_details"
    },
    "Cancel_Ride": {
      "title": "Cancel_Ride"
    },
    "Cancel_fee": {
      "title": "Cancel_fee"
    },
    "Catchement_Area": {
      "title": "Catchement_Area"
    },
    "Collection_of_catchement_areas": {
      "title": "Collection_of_catchement_areas"
    },
    "Collection_of_products": {
      "title": "Collection_of_products"
    },
    "Credit_card": {
      "title": "Credit_card"
    },
    "Current_User": {
      "title": "Current_User"
    },
    "Endpoint": {
      "title": "Endpoint"
    },
    "Estimate_Ride": {
      "title": "Estimate_Ride"
    },
    "Forget_password": {
      "title": "Forget_password"
    },
    "Login": {
      "title": "Login"
    },
    "Password": {
      "title": "Password"
    },
    "Payment_Methods": {
      "title": "Payment_Methods"
    },
    "Product": {
      "title": "Product"
    },
    "Register": {
      "title": "Register"
    },
    "Reserve_Ride": {
      "title": "Reserve_Ride"
    },
    "Settings": {
      "title": "Settings"
    },
    "User_Credit_Cards": {
      "title": "User_Credit_Cards"
    },
    "User_Promotional_Codes": {
      "title": "User_Promotional_Codes"
    },
    "User_Ride": {
      "title": "User_Ride"
    },
    "User_Rides": {
      "title": "User_Rides"
    },
    "Version": {
      "title": "Version"
    }
  },
  "actions": [
    {
      "id": ".get",
      "title": ".get",
      "description": "Retrieve the version API",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.get",
      "title": "accounts.get",
      "description": "Get current user",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.post",
      "title": "accounts.post",
      "description": "Create a new account with an application key",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.put",
      "title": "accounts.put",
      "description": "Update User",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.password.post",
      "title": "accounts.password.post",
      "description": "Forget password with email",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.payment_methods.get",
      "title": "accounts.payment_methods.get",
      "description": "Payment Methods",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.settings.post",
      "title": "accounts.settings.post",
      "description": "Settings",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.sign_in.post",
      "title": "accounts.sign_in.post",
      "description": "Login with email, password and application key",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "accounts.update_password.put",
      "title": "accounts.update_password.put",
      "description": "Update Password",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "addresses.places_autocomplete.post",
      "title": "addresses.places_autocomplete.post",
      "description": "For searching places just send the following attributes :\n\n- **longitude** (optional, float) : The location longitude for the seach\n\n- **latitude** (optional, float) : The location latitude for the seach\n\n- **search** (required, string) : The search text (most than 3 char)",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "addresses.places_details.post",
      "title": "addresses.places_details.post",
      "description": "Get autocomplete places details",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "catchement_areas.get",
      "title": "catchement_areas.get",
      "description": "List all catchement areas",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "catchement_areas.id.get",
      "title": "catchement_areas.id.get",
      "description": "Get a Catchement Area",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of the Catchement Area"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "credit_cards.get",
      "title": "credit_cards.get",
      "description": "List all CreditCards for the current User",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "credit_cards.id.get",
      "title": "credit_cards.id.get",
      "description": "Get a CreditCard",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of the Credit Card"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "products.get",
      "title": "products.get",
      "description": "List all products",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "products.id.get",
      "title": "products.id.get",
      "description": "Get a Product",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of the Product"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "promotional_codes.get",
      "title": "promotional_codes.get",
      "description": "Get all promotional codes for user",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "promotional_codes.post",
      "title": "promotional_codes.post",
      "description": "Add a promotional code",
      "inputSchema": {},
      "outputSchema": {}
    },
    {
      "id": "rides.id.get",
      "title": "rides.id.get",
      "description": "Get a ride",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of Ride"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "rides.id.cancel.get",
      "title": "rides.id.cancel.get",
      "description": "**Must be authenticate**",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of Ride"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "rides.id.cancel_fees.get",
      "title": "rides.id.cancel_fees.get",
      "description": "**Must be authenticate**",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of Ride"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "rides.id.estimate.get",
      "title": "rides.id.estimate.get",
      "description": "Estimate a ride",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of Ride"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "rides.id.reserve.post",
      "title": "rides.id.reserve.post",
      "description": "To book, the ride must belong to the connected user. The ride must have a main passenger at least, the booking user id and the payment hash must be set.\n\n**Must be authenticate**",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Numeric `id` of Ride"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "rides_page_page_per_page_per_page.get",
      "title": "rides_page_page_per_page_per_page.get",
      "description": "Get all user rides",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "description": "Number of the page to load"
          },
          "per_page": {
            "type": "number",
            "description": "Number of items per page to load"
          }
        },
        "additionalProperties": false,
        "required": [
          "page",
          "per_page"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "rides_page_page_per_page_per_page.post",
      "title": "rides_page_page_per_page_per_page.post",
      "description": "Create a ride",
      "inputSchema": {
        "type": "object",
        "properties": {
          "page": {
            "type": "string"
          },
          "per_page": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "required": [
          "page",
          "per_page"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "version.get",
      "title": "version.get",
      "description": "Retrieve the Entry Point on Version",
      "inputSchema": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Ecotaco API version"
          }
        },
        "additionalProperties": false,
        "required": [
          "version"
        ]
      },
      "outputSchema": {}
    }
  ],
  "tags": [
    "location"
  ]
}