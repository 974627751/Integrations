{
  "id": "azure_arm_logic",
  "title": "LogicManagementClient",
  "description": "REST API for Azure Logic Apps.",
  "definitions": {
    "AS2AcknowledgementConnectionSettings": {
      "description": "The AS2 agreement acknowledegment connection settings.",
      "properties": {
        "ignoreCertificateNameMismatch": {
          "description": "The value indicating whether to ignore mismatch in certificate name.",
          "type": "boolean"
        },
        "keepHttpConnectionAlive": {
          "description": "The value indicating whether to keep the connection alive.",
          "type": "boolean"
        },
        "supportHttpStatusCodeContinue": {
          "description": "The value indicating whether to support HTTP status code 'CONTINUE'.",
          "type": "boolean"
        },
        "unfoldHttpHeaders": {
          "description": "The value indicating whether to unfold the HTTP headers.",
          "type": "boolean"
        }
      },
      "required": [
        "ignoreCertificateNameMismatch",
        "supportHttpStatusCodeContinue",
        "keepHttpConnectionAlive",
        "unfoldHttpHeaders"
      ],
      "type": "object"
    },
    "AS2AgreementContent": {
      "description": "The integration account AS2 agreement content.",
      "properties": {
        "receiveAgreement": {
          "$ref": "#/definitions/AS2OneWayAgreement",
          "description": "The AS2 one-way receive agreement."
        },
        "sendAgreement": {
          "$ref": "#/definitions/AS2OneWayAgreement",
          "description": "The AS2 one-way send agreement."
        }
      },
      "required": [
        "receiveAgreement",
        "sendAgreement"
      ],
      "type": "object"
    },
    "AS2EnvelopeSettings": {
      "description": "The AS2 agreement envelope settings.",
      "properties": {
        "autogenerateFileName": {
          "description": "The value indicating whether to auto generate file name.",
          "type": "boolean"
        },
        "fileNameTemplate": {
          "description": "The template for file name.",
          "type": "string"
        },
        "messageContentType": {
          "description": "The message content type.",
          "type": "string"
        },
        "suspendMessageOnFileNameGenerationError": {
          "description": "The value indicating whether to suspend message on file name generation error.",
          "type": "boolean"
        },
        "transmitFileNameInMimeHeader": {
          "description": "The value indicating whether to transmit file name in mime header.",
          "type": "boolean"
        }
      },
      "required": [
        "messageContentType",
        "transmitFileNameInMimeHeader",
        "fileNameTemplate",
        "suspendMessageOnFileNameGenerationError",
        "autogenerateFileName"
      ],
      "type": "object"
    },
    "AS2ErrorSettings": {
      "description": "The AS2 agreement error settings.",
      "properties": {
        "resendIfMdnNotReceived": {
          "description": "The value indicating whether to resend message If MDN is not received.",
          "type": "boolean"
        },
        "suspendDuplicateMessage": {
          "description": "The value indicating whether to suspend duplicate message.",
          "type": "boolean"
        }
      },
      "required": [
        "suspendDuplicateMessage",
        "resendIfMdnNotReceived"
      ],
      "type": "object"
    },
    "AS2MdnSettings": {
      "description": "The AS2 agreement mdn settings.",
      "properties": {
        "dispositionNotificationTo": {
          "description": "The disposition notification to header value.",
          "type": "string"
        },
        "mdnText": {
          "description": "The MDN text.",
          "type": "string"
        },
        "micHashingAlgorithm": {
          "$ref": "#/definitions/HashingAlgorithm",
          "description": "The signing or hashing algorithm."
        },
        "needMdn": {
          "description": "The value indicating whether to send or request a MDN.",
          "type": "boolean"
        },
        "receiptDeliveryUrl": {
          "description": "The receipt delivery URL.",
          "type": "string"
        },
        "sendInboundMdnToMessageBox": {
          "description": "The value indicating whether to send inbound MDN to message box.",
          "type": "boolean"
        },
        "sendMdnAsynchronously": {
          "description": "The value indicating whether to send the asynchronous MDN.",
          "type": "boolean"
        },
        "signMdn": {
          "description": "The value indicating whether the MDN needs to be signed or not.",
          "type": "boolean"
        },
        "signOutboundMdnIfOptional": {
          "description": "The value indicating whether to sign the outbound MDN if optional.",
          "type": "boolean"
        }
      },
      "required": [
        "needMdn",
        "signMdn",
        "sendMdnAsynchronously",
        "signOutboundMdnIfOptional",
        "sendInboundMdnToMessageBox",
        "micHashingAlgorithm"
      ],
      "type": "object"
    },
    "AS2MessageConnectionSettings": {
      "description": "The AS2 agreement message connection settings.",
      "properties": {
        "ignoreCertificateNameMismatch": {
          "description": "The value indicating whether to ignore mismatch in certificate name.",
          "type": "boolean"
        },
        "keepHttpConnectionAlive": {
          "description": "The value indicating whether to keep the connection alive.",
          "type": "boolean"
        },
        "supportHttpStatusCodeContinue": {
          "description": "The value indicating whether to support HTTP status code 'CONTINUE'.",
          "type": "boolean"
        },
        "unfoldHttpHeaders": {
          "description": "The value indicating whether to unfold the HTTP headers.",
          "type": "boolean"
        }
      },
      "required": [
        "ignoreCertificateNameMismatch",
        "supportHttpStatusCodeContinue",
        "keepHttpConnectionAlive",
        "unfoldHttpHeaders"
      ],
      "type": "object"
    },
    "AS2OneWayAgreement": {
      "description": "The integration account AS2 oneway agreement.",
      "properties": {
        "protocolSettings": {
          "$ref": "#/definitions/AS2ProtocolSettings",
          "description": "The AS2 protocol settings."
        },
        "receiverBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The receiver business identity"
        },
        "senderBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The sender business identity"
        }
      },
      "required": [
        "senderBusinessIdentity",
        "receiverBusinessIdentity",
        "protocolSettings"
      ],
      "type": "object"
    },
    "AS2ProtocolSettings": {
      "description": "The AS2 agreement protocol settings.",
      "properties": {
        "acknowledgementConnectionSettings": {
          "$ref": "#/definitions/AS2AcknowledgementConnectionSettings",
          "description": "The acknowledgement connection settings."
        },
        "envelopeSettings": {
          "$ref": "#/definitions/AS2EnvelopeSettings",
          "description": "The envelope settings."
        },
        "errorSettings": {
          "$ref": "#/definitions/AS2ErrorSettings",
          "description": "The error settings."
        },
        "mdnSettings": {
          "$ref": "#/definitions/AS2MdnSettings",
          "description": "The MDN settings."
        },
        "messageConnectionSettings": {
          "$ref": "#/definitions/AS2MessageConnectionSettings",
          "description": "The message connection settings."
        },
        "securitySettings": {
          "$ref": "#/definitions/AS2SecuritySettings",
          "description": "The security settings."
        },
        "validationSettings": {
          "$ref": "#/definitions/AS2ValidationSettings",
          "description": "The validation settings."
        }
      },
      "required": [
        "messageConnectionSettings",
        "acknowledgementConnectionSettings",
        "mdnSettings",
        "securitySettings",
        "validationSettings",
        "envelopeSettings",
        "errorSettings"
      ],
      "type": "object"
    },
    "AS2SecuritySettings": {
      "description": "The AS2 agreement security settings.",
      "properties": {
        "enableNrrForInboundDecodedMessages": {
          "description": "The value indicating whether to enable NRR for inbound decoded messages.",
          "type": "boolean"
        },
        "enableNrrForInboundEncodedMessages": {
          "description": "The value indicating whether to enable NRR for inbound encoded messages.",
          "type": "boolean"
        },
        "enableNrrForInboundMdn": {
          "description": "The value indicating whether to enable NRR for inbound MDN.",
          "type": "boolean"
        },
        "enableNrrForOutboundDecodedMessages": {
          "description": "The value indicating whether to enable NRR for outbound decoded messages.",
          "type": "boolean"
        },
        "enableNrrForOutboundEncodedMessages": {
          "description": "The value indicating whether to enable NRR for outbound encoded messages.",
          "type": "boolean"
        },
        "enableNrrForOutboundMdn": {
          "description": "The value indicating whether to enable NRR for outbound MDN.",
          "type": "boolean"
        },
        "encryptionCertificateName": {
          "description": "The name of the encryption certificate.",
          "type": "string"
        },
        "overrideGroupSigningCertificate": {
          "description": "The value indicating whether to send or request a MDN.",
          "type": "boolean"
        },
        "sha2AlgorithmFormat": {
          "description": "The Sha2 algorithm format. Valid values are Sha2, ShaHashSize, ShaHyphenHashSize, Sha2UnderscoreHashSize.",
          "type": "string"
        },
        "signingCertificateName": {
          "description": "The name of the signing certificate.",
          "type": "string"
        }
      },
      "required": [
        "overrideGroupSigningCertificate",
        "enableNrrForInboundEncodedMessages",
        "enableNrrForInboundDecodedMessages",
        "enableNrrForOutboundMdn",
        "enableNrrForOutboundEncodedMessages",
        "enableNrrForOutboundDecodedMessages",
        "enableNrrForInboundMdn"
      ],
      "type": "object"
    },
    "AS2ValidationSettings": {
      "description": "The AS2 agreement validation settings.",
      "properties": {
        "checkCertificateRevocationListOnReceive": {
          "description": "The value indicating whether to check for certificate revocation list on receive.",
          "type": "boolean"
        },
        "checkCertificateRevocationListOnSend": {
          "description": "The value indicating whether to check for certificate revocation list on send.",
          "type": "boolean"
        },
        "checkDuplicateMessage": {
          "description": "The value indicating whether to check for duplicate message.",
          "type": "boolean"
        },
        "compressMessage": {
          "description": "The value indicating whether the message has to be compressed.",
          "type": "boolean"
        },
        "encryptMessage": {
          "description": "The value indicating whether the message has to be encrypted.",
          "type": "boolean"
        },
        "encryptionAlgorithm": {
          "$ref": "#/definitions/EncryptionAlgorithm",
          "description": "The encryption algorithm."
        },
        "interchangeDuplicatesValidityDays": {
          "description": "The number of days to look back for duplicate interchange.",
          "format": "int32",
          "type": "integer"
        },
        "overrideMessageProperties": {
          "description": "The value indicating whether to override incoming message properties with those in agreement.",
          "type": "boolean"
        },
        "signMessage": {
          "description": "The value indicating whether the message has to be signed.",
          "type": "boolean"
        },
        "signingAlgorithm": {
          "$ref": "#/definitions/SigningAlgorithm",
          "description": "The signing algorithm."
        }
      },
      "required": [
        "overrideMessageProperties",
        "encryptMessage",
        "signMessage",
        "compressMessage",
        "checkDuplicateMessage",
        "interchangeDuplicatesValidityDays",
        "checkCertificateRevocationListOnSend",
        "checkCertificateRevocationListOnReceive",
        "encryptionAlgorithm"
      ],
      "type": "object"
    },
    "AgreementContent": {
      "description": "The integration account agreement content.",
      "properties": {
        "aS2": {
          "$ref": "#/definitions/AS2AgreementContent",
          "description": "The AS2 agreement content."
        },
        "edifact": {
          "$ref": "#/definitions/EdifactAgreementContent",
          "description": "The EDIFACT agreement content."
        },
        "x12": {
          "$ref": "#/definitions/X12AgreementContent",
          "description": "The X12 agreement content."
        }
      },
      "type": "object"
    },
    "AgreementType": {
      "enum": [
        "NotSpecified",
        "AS2",
        "X12",
        "Edifact"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "AgreementType"
      }
    },
    "B2BPartnerContent": {
      "description": "The B2B partner content.",
      "properties": {
        "businessIdentities": {
          "description": "The list of partner business identities.",
          "items": {
            "$ref": "#/definitions/BusinessIdentity"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BusinessIdentity": {
      "description": "The integration account partner's business identity.",
      "properties": {
        "qualifier": {
          "description": "The business identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32",
          "type": "string"
        },
        "value": {
          "description": "The user defined business identity value.",
          "type": "string"
        }
      },
      "required": [
        "qualifier",
        "value"
      ],
      "type": "object"
    },
    "CallbackUrl": {
      "description": "The callback url.",
      "properties": {
        "value": {
          "description": "The URL value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContentHash": {
      "description": "The content hash.",
      "properties": {
        "algorithm": {
          "description": "The algorithm of the content hash.",
          "type": "string"
        },
        "value": {
          "description": "The value of the content hash.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContentLink": {
      "description": "The content link.",
      "properties": {
        "contentHash": {
          "$ref": "#/definitions/ContentHash",
          "description": "The content hash."
        },
        "contentSize": {
          "description": "The content size.",
          "format": "int64",
          "type": "integer"
        },
        "contentVersion": {
          "description": "The content version.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Object",
          "description": "The metadata."
        },
        "uri": {
          "description": "The content link URI.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Correlation": {
      "description": "The correlation property.",
      "properties": {
        "clientTrackingId": {
          "description": "The client tracking id.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DayOfWeek": {
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "DayOfWeek"
      }
    },
    "EdifactAcknowledgementSettings": {
      "description": "The Edifact agreement acknowledgement settings.",
      "properties": {
        "acknowledgementControlNumberLowerBound": {
          "description": "The acknowledgement control number lower bound.",
          "format": "int32",
          "type": "integer"
        },
        "acknowledgementControlNumberPrefix": {
          "description": "The acknowledgement control number prefix.",
          "type": "string"
        },
        "acknowledgementControlNumberSuffix": {
          "description": "The acknowledgement control number suffix.",
          "type": "string"
        },
        "acknowledgementControlNumberUpperBound": {
          "description": "The acknowledgement control number upper bound.",
          "format": "int32",
          "type": "integer"
        },
        "batchFunctionalAcknowledgements": {
          "description": "The value indicating whether to batch functional acknowledgements.",
          "type": "boolean"
        },
        "batchTechnicalAcknowledgements": {
          "description": "The value indicating whether to batch the technical acknowledgements.",
          "type": "boolean"
        },
        "needFunctionalAcknowledgement": {
          "description": "The value indicating whether functional acknowledgement is needed.",
          "type": "boolean"
        },
        "needLoopForValidMessages": {
          "description": "The value indicating whether a loop is needed for valid messages.",
          "type": "boolean"
        },
        "needTechnicalAcknowledgement": {
          "description": "The value indicating whether technical acknowledgement is needed.",
          "type": "boolean"
        },
        "rolloverAcknowledgementControlNumber": {
          "description": "The value indicating whether to rollover acknowledgement control number.",
          "type": "boolean"
        },
        "sendSynchronousAcknowledgement": {
          "description": "The value indicating whether to send synchronous acknowledgement.",
          "type": "boolean"
        }
      },
      "required": [
        "needTechnicalAcknowledgement",
        "batchTechnicalAcknowledgements",
        "needFunctionalAcknowledgement",
        "batchFunctionalAcknowledgements",
        "needLoopForValidMessages",
        "sendSynchronousAcknowledgement",
        "acknowledgementControlNumberLowerBound",
        "acknowledgementControlNumberUpperBound",
        "rolloverAcknowledgementControlNumber"
      ],
      "type": "object"
    },
    "EdifactAgreementContent": {
      "description": "The Edifact agreement content.",
      "properties": {
        "receiveAgreement": {
          "$ref": "#/definitions/EdifactOneWayAgreement",
          "description": "The EDIFACT one-way receive agreement."
        },
        "sendAgreement": {
          "$ref": "#/definitions/EdifactOneWayAgreement",
          "description": "The EDIFACT one-way send agreement."
        }
      },
      "required": [
        "receiveAgreement",
        "sendAgreement"
      ],
      "type": "object"
    },
    "EdifactCharacterSet": {
      "enum": [
        "NotSpecified",
        "UNOB",
        "UNOA",
        "UNOC",
        "UNOD",
        "UNOE",
        "UNOF",
        "UNOG",
        "UNOH",
        "UNOI",
        "UNOJ",
        "UNOK",
        "UNOX",
        "UNOY",
        "KECA"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "EdifactCharacterSet"
      }
    },
    "EdifactDecimalIndicator": {
      "enum": [
        "NotSpecified",
        "Comma",
        "Decimal"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "EdifactDecimalIndicator"
      }
    },
    "EdifactDelimiterOverride": {
      "description": "The Edifact delimiter override settings.",
      "properties": {
        "componentSeparator": {
          "description": "The component separator.",
          "format": "int32",
          "type": "integer"
        },
        "dataElementSeparator": {
          "description": "The data element separator.",
          "format": "int32",
          "type": "integer"
        },
        "decimalPointIndicator": {
          "$ref": "#/definitions/EdifactDecimalIndicator",
          "description": "The decimal point indicator."
        },
        "messageAssociationAssignedCode": {
          "description": "The message association assigned code.",
          "type": "string"
        },
        "messageId": {
          "description": "The message id.",
          "type": "string"
        },
        "messageRelease": {
          "description": "The message releaseversion.",
          "type": "string"
        },
        "messageVersion": {
          "description": "The message version.",
          "type": "string"
        },
        "releaseIndicator": {
          "description": "The release indicator.",
          "format": "int32",
          "type": "integer"
        },
        "repetitionSeparator": {
          "description": "The repetition separator.",
          "format": "int32",
          "type": "integer"
        },
        "segmentTerminator": {
          "description": "The segment terminator.",
          "format": "int32",
          "type": "integer"
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The segment terminator suffix."
        },
        "targetNamespace": {
          "description": "The target namespace on which this delimiter settings has to be applied.",
          "type": "string"
        }
      },
      "required": [
        "dataElementSeparator",
        "componentSeparator",
        "segmentTerminator",
        "repetitionSeparator",
        "segmentTerminatorSuffix",
        "decimalPointIndicator",
        "releaseIndicator"
      ],
      "type": "object"
    },
    "EdifactEnvelopeOverride": {
      "description": "The Edifact enevlope override settings.",
      "properties": {
        "applicationPassword": {
          "description": "The application password.",
          "type": "string"
        },
        "associationAssignedCode": {
          "description": "The association assigned code.",
          "type": "string"
        },
        "controllingAgencyCode": {
          "description": "The controlling agency code.",
          "type": "string"
        },
        "functionalGroupId": {
          "description": "The functional group id.",
          "type": "string"
        },
        "groupHeaderMessageRelease": {
          "description": "The group header message release.",
          "type": "string"
        },
        "groupHeaderMessageVersion": {
          "description": "The group header message version.",
          "type": "string"
        },
        "messageAssociationAssignedCode": {
          "description": "The message association assigned code.",
          "type": "string"
        },
        "messageId": {
          "description": "The message id on which this envelope settings has to be applied.",
          "type": "string"
        },
        "messageRelease": {
          "description": "The message release version on which this envelope settings has to be applied.",
          "type": "string"
        },
        "messageVersion": {
          "description": "The message version on which this envelope settings has to be applied.",
          "type": "string"
        },
        "receiverApplicationId": {
          "description": "The receiver application id.",
          "type": "string"
        },
        "receiverApplicationQualifier": {
          "description": "The receiver application qualifier.",
          "type": "string"
        },
        "senderApplicationId": {
          "description": "The sender application id.",
          "type": "string"
        },
        "senderApplicationQualifier": {
          "description": "The sender application qualifier.",
          "type": "string"
        },
        "targetNamespace": {
          "description": "The target namespace on which this envelope settings has to be applied.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EdifactEnvelopeSettings": {
      "description": "The Edifact agreement envelope settings.",
      "properties": {
        "applicationReferenceId": {
          "description": "The application reference id.",
          "type": "string"
        },
        "applyDelimiterStringAdvice": {
          "description": "The value indicating whether to apply delimiter string advice.",
          "type": "boolean"
        },
        "communicationAgreementId": {
          "description": "The communication agreement id.",
          "type": "string"
        },
        "createGroupingSegments": {
          "description": "The value indicating whether to create grouping segments.",
          "type": "boolean"
        },
        "enableDefaultGroupHeaders": {
          "description": "The value indicating whether to enable default group headers.",
          "type": "boolean"
        },
        "functionalGroupId": {
          "description": "The functional group id.",
          "type": "string"
        },
        "groupApplicationPassword": {
          "description": "The group application password.",
          "type": "string"
        },
        "groupApplicationReceiverId": {
          "description": "The group application receiver id.",
          "type": "string"
        },
        "groupApplicationReceiverQualifier": {
          "description": "The group application receiver qualifier.",
          "type": "string"
        },
        "groupApplicationSenderId": {
          "description": "The group application sender id.",
          "type": "string"
        },
        "groupApplicationSenderQualifier": {
          "description": "The group application sender qualifier.",
          "type": "string"
        },
        "groupAssociationAssignedCode": {
          "description": "The group association assigned code.",
          "type": "string"
        },
        "groupControlNumberLowerBound": {
          "description": "The group control number lower bound.",
          "format": "int64",
          "type": "integer"
        },
        "groupControlNumberPrefix": {
          "description": "The group control number prefix.",
          "type": "string"
        },
        "groupControlNumberSuffix": {
          "description": "The group control number suffix.",
          "type": "string"
        },
        "groupControlNumberUpperBound": {
          "description": "The group control number upper bound.",
          "format": "int64",
          "type": "integer"
        },
        "groupControllingAgencyCode": {
          "description": "The group controlling agency code.",
          "type": "string"
        },
        "groupMessageRelease": {
          "description": "The group message release.",
          "type": "string"
        },
        "groupMessageVersion": {
          "description": "The group message version.",
          "type": "string"
        },
        "interchangeControlNumberLowerBound": {
          "description": "The interchange control number lower bound.",
          "format": "int64",
          "type": "integer"
        },
        "interchangeControlNumberPrefix": {
          "description": "The interchange control number prefix.",
          "type": "string"
        },
        "interchangeControlNumberSuffix": {
          "description": "The interchange control number suffix.",
          "type": "string"
        },
        "interchangeControlNumberUpperBound": {
          "description": "The interchange control number upper bound.",
          "format": "int64",
          "type": "integer"
        },
        "isTestInterchange": {
          "description": "The value indicating whether the message is a test interchange.",
          "type": "boolean"
        },
        "overwriteExistingTransactionSetControlNumber": {
          "description": "The value indicating whether to overwrite existing transaction set control number.",
          "type": "boolean"
        },
        "processingPriorityCode": {
          "description": "The processing priority code.",
          "type": "string"
        },
        "receiverInternalIdentification": {
          "description": "The receiver internal identification.",
          "type": "string"
        },
        "receiverInternalSubIdentification": {
          "description": "The receiver internal sub identification.",
          "type": "string"
        },
        "receiverReverseRoutingAddress": {
          "description": "The receiver reverse routing address.",
          "type": "string"
        },
        "recipientReferencePasswordQualifier": {
          "description": "The recipient reference password qualifier.",
          "type": "string"
        },
        "recipientReferencePasswordValue": {
          "description": "The recipient reference password value.",
          "type": "string"
        },
        "rolloverGroupControlNumber": {
          "description": "The value indicating whether to rollover group control number.",
          "type": "boolean"
        },
        "rolloverInterchangeControlNumber": {
          "description": "The value indicating whether to rollover interchange control number.",
          "type": "boolean"
        },
        "rolloverTransactionSetControlNumber": {
          "description": "The value indicating whether to rollover transaction set control number.",
          "type": "boolean"
        },
        "senderInternalIdentification": {
          "description": "The sender internal identification.",
          "type": "string"
        },
        "senderInternalSubIdentification": {
          "description": "The sender internal sub identification.",
          "type": "string"
        },
        "senderReverseRoutingAddress": {
          "description": "The sender reverse routing address.",
          "type": "string"
        },
        "transactionSetControlNumberLowerBound": {
          "description": "The transaction set control number lower bound.",
          "format": "int64",
          "type": "integer"
        },
        "transactionSetControlNumberPrefix": {
          "description": "The transaction set control number prefix.",
          "type": "string"
        },
        "transactionSetControlNumberSuffix": {
          "description": "The transaction set control number suffix.",
          "type": "string"
        },
        "transactionSetControlNumberUpperBound": {
          "description": "The transaction set control number upper bound.",
          "format": "int64",
          "type": "integer"
        }
      },
      "required": [
        "applyDelimiterStringAdvice",
        "createGroupingSegments",
        "enableDefaultGroupHeaders",
        "interchangeControlNumberLowerBound",
        "interchangeControlNumberUpperBound",
        "rolloverInterchangeControlNumber",
        "groupControlNumberLowerBound",
        "groupControlNumberUpperBound",
        "rolloverGroupControlNumber",
        "overwriteExistingTransactionSetControlNumber",
        "transactionSetControlNumberLowerBound",
        "transactionSetControlNumberUpperBound",
        "rolloverTransactionSetControlNumber",
        "isTestInterchange"
      ],
      "type": "object"
    },
    "EdifactFramingSettings": {
      "description": "The Edifact agreement framing settings.",
      "properties": {
        "characterEncoding": {
          "description": "The character encoding.",
          "type": "string"
        },
        "characterSet": {
          "$ref": "#/definitions/EdifactCharacterSet",
          "description": "The EDIFACT frame setting characterSet."
        },
        "componentSeparator": {
          "description": "The component separator.",
          "format": "int32",
          "type": "integer"
        },
        "dataElementSeparator": {
          "description": "The data element separator.",
          "format": "int32",
          "type": "integer"
        },
        "decimalPointIndicator": {
          "$ref": "#/definitions/EdifactDecimalIndicator",
          "description": "The EDIFACT frame setting decimal indicator."
        },
        "protocolVersion": {
          "description": "The protocol version.",
          "format": "int32",
          "type": "integer"
        },
        "releaseIndicator": {
          "description": "The release indicator.",
          "format": "int32",
          "type": "integer"
        },
        "repetitionSeparator": {
          "description": "The repetition separator.",
          "format": "int32",
          "type": "integer"
        },
        "segmentTerminator": {
          "description": "The segment terminator.",
          "format": "int32",
          "type": "integer"
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The EDIFACT frame setting segment terminator suffix."
        },
        "serviceCodeListDirectoryVersion": {
          "description": "The service code list directory version.",
          "type": "string"
        }
      },
      "required": [
        "protocolVersion",
        "dataElementSeparator",
        "componentSeparator",
        "segmentTerminator",
        "releaseIndicator",
        "repetitionSeparator",
        "characterSet",
        "decimalPointIndicator",
        "segmentTerminatorSuffix"
      ],
      "type": "object"
    },
    "EdifactMessageFilter": {
      "description": "The Edifact message filter for odata query.",
      "properties": {
        "messageFilterType": {
          "$ref": "#/definitions/MessageFilterType",
          "description": "The message filter type."
        }
      },
      "required": [
        "messageFilterType"
      ],
      "type": "object"
    },
    "EdifactMessageIdentifier": {
      "description": "The Edifact message identifier.",
      "properties": {
        "messageId": {
          "description": "The message id on which this envelope settings has to be applied.",
          "type": "string"
        }
      },
      "required": [
        "messageId"
      ],
      "type": "object"
    },
    "EdifactOneWayAgreement": {
      "description": "The Edifact one way agreement.",
      "properties": {
        "protocolSettings": {
          "$ref": "#/definitions/EdifactProtocolSettings",
          "description": "The EDIFACT protocol settings."
        },
        "receiverBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The receiver business identity"
        },
        "senderBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The sender business identity"
        }
      },
      "required": [
        "senderBusinessIdentity",
        "receiverBusinessIdentity",
        "protocolSettings"
      ],
      "type": "object"
    },
    "EdifactProcessingSettings": {
      "description": "The Edifact agreement protocol settings.",
      "properties": {
        "createEmptyXmlTagsForTrailingSeparators": {
          "description": "The value indicating whether to create empty xml tags for trailing separators.",
          "type": "boolean"
        },
        "maskSecurityInfo": {
          "description": "The value indicating whether to mask security information.",
          "type": "boolean"
        },
        "preserveInterchange": {
          "description": "The value indicating whether to preserve interchange.",
          "type": "boolean"
        },
        "suspendInterchangeOnError": {
          "description": "The value indicating whether to suspend interchange on error.",
          "type": "boolean"
        },
        "useDotAsDecimalSeparator": {
          "description": "The value indicating whether to use dot as decimal separator.",
          "type": "boolean"
        }
      },
      "required": [
        "maskSecurityInfo",
        "preserveInterchange",
        "suspendInterchangeOnError",
        "createEmptyXmlTagsForTrailingSeparators",
        "useDotAsDecimalSeparator"
      ],
      "type": "object"
    },
    "EdifactProtocolSettings": {
      "description": "The Edifact agreement protocol settings.",
      "properties": {
        "acknowledgementSettings": {
          "$ref": "#/definitions/EdifactAcknowledgementSettings",
          "description": "The EDIFACT acknowledgement settings."
        },
        "edifactDelimiterOverrides": {
          "description": "The EDIFACT delimiter override settings.",
          "items": {
            "$ref": "#/definitions/EdifactDelimiterOverride"
          },
          "type": "array"
        },
        "envelopeOverrides": {
          "description": "The EDIFACT envelope override settings.",
          "items": {
            "$ref": "#/definitions/EdifactEnvelopeOverride"
          },
          "type": "array"
        },
        "envelopeSettings": {
          "$ref": "#/definitions/EdifactEnvelopeSettings",
          "description": "The EDIFACT envelope settings."
        },
        "framingSettings": {
          "$ref": "#/definitions/EdifactFramingSettings",
          "description": "The EDIFACT framing settings."
        },
        "messageFilter": {
          "$ref": "#/definitions/EdifactMessageFilter",
          "description": "The EDIFACT message filter."
        },
        "messageFilterList": {
          "description": "The EDIFACT message filter list.",
          "items": {
            "$ref": "#/definitions/EdifactMessageIdentifier"
          },
          "type": "array"
        },
        "processingSettings": {
          "$ref": "#/definitions/EdifactProcessingSettings",
          "description": "The EDIFACT processing Settings."
        },
        "schemaReferences": {
          "description": "The EDIFACT schema references.",
          "items": {
            "$ref": "#/definitions/EdifactSchemaReference"
          },
          "type": "array"
        },
        "validationOverrides": {
          "description": "The EDIFACT validation override settings.",
          "items": {
            "$ref": "#/definitions/EdifactValidationOverride"
          },
          "type": "array"
        },
        "validationSettings": {
          "$ref": "#/definitions/EdifactValidationSettings",
          "description": "The EDIFACT validation settings."
        }
      },
      "required": [
        "validationSettings",
        "framingSettings",
        "envelopeSettings",
        "acknowledgementSettings",
        "messageFilter",
        "processingSettings",
        "schemaReferences"
      ],
      "type": "object"
    },
    "EdifactSchemaReference": {
      "description": "The Edifact schema reference.",
      "properties": {
        "associationAssignedCode": {
          "description": "The association assigned code.",
          "type": "string"
        },
        "messageId": {
          "description": "The message id.",
          "type": "string"
        },
        "messageRelease": {
          "description": "The message release version.",
          "type": "string"
        },
        "messageVersion": {
          "description": "The message version.",
          "type": "string"
        },
        "schemaName": {
          "description": "The schema name.",
          "type": "string"
        },
        "senderApplicationId": {
          "description": "The sender application id.",
          "type": "string"
        },
        "senderApplicationQualifier": {
          "description": "The sender application qualifier.",
          "type": "string"
        }
      },
      "required": [
        "messageId",
        "messageVersion",
        "messageRelease",
        "schemaName"
      ],
      "type": "object"
    },
    "EdifactValidationOverride": {
      "description": "The Edifact validation override settings.",
      "properties": {
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "enforceCharacterSet": {
          "description": "The value indicating whether to validate character Set.",
          "type": "boolean"
        },
        "messageId": {
          "description": "The message id on which the validation settings has to be applied.",
          "type": "string"
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "validateEdiTypes": {
          "description": "The value indicating whether to validate EDI types.",
          "type": "boolean"
        },
        "validateXsdTypes": {
          "description": "The value indicating whether to validate XSD types.",
          "type": "boolean"
        }
      },
      "required": [
        "messageId",
        "enforceCharacterSet",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy",
        "trimLeadingAndTrailingSpacesAndZeroes"
      ],
      "type": "object"
    },
    "EdifactValidationSettings": {
      "description": "The Edifact agreement validation settings.",
      "properties": {
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "checkDuplicateGroupControlNumber": {
          "description": "The value indicating whether to check for duplicate group control number.",
          "type": "boolean"
        },
        "checkDuplicateInterchangeControlNumber": {
          "description": "The value indicating whether to check for duplicate interchange control number.",
          "type": "boolean"
        },
        "checkDuplicateTransactionSetControlNumber": {
          "description": "The value indicating whether to check for duplicate transaction set control number.",
          "type": "boolean"
        },
        "interchangeControlNumberValidityDays": {
          "description": "The validity period of interchange control number.",
          "format": "int32",
          "type": "integer"
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "validateCharacterSet": {
          "description": "The value indicating whether to validate character set in the message.",
          "type": "boolean"
        },
        "validateEdiTypes": {
          "description": "The value indicating whether to Whether to validate EDI types.",
          "type": "boolean"
        },
        "validateXsdTypes": {
          "description": "The value indicating whether to Whether to validate XSD types.",
          "type": "boolean"
        }
      },
      "required": [
        "validateCharacterSet",
        "checkDuplicateInterchangeControlNumber",
        "interchangeControlNumberValidityDays",
        "checkDuplicateGroupControlNumber",
        "checkDuplicateTransactionSetControlNumber",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "trimLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy"
      ],
      "type": "object"
    },
    "EncryptionAlgorithm": {
      "enum": [
        "NotSpecified",
        "None",
        "DES3",
        "RC2",
        "AES128",
        "AES192",
        "AES256"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "EncryptionAlgorithm"
      }
    },
    "ErrorProperties": {
      "description": "Error properties indicate why the Logic service was not able to process the incoming request. The reason is provided in the error message.",
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ErrorResponse": {
      "description": "Error reponse indicates Logic service is not able to process the incoming request. The error property contains the error details.",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorProperties",
          "description": "The error properties."
        }
      },
      "type": "object"
    },
    "GenerateUpgradedDefinitionParameters": {
      "description": "The parameters to generate upgraded definition.",
      "properties": {
        "targetSchemaVersion": {
          "description": "The target schema version.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCallbackUrlParameters": {
      "description": "The callback url parameters.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The key type."
        },
        "notAfter": {
          "description": "The expiry time.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "HashingAlgorithm": {
      "enum": [
        "NotSpecified",
        "None",
        "MD5",
        "SHA1",
        "SHA2256",
        "SHA2384",
        "SHA2512"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "HashingAlgorithm"
      }
    },
    "IntegrationAccount": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The integration account.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountProperties",
          "description": "The integration account properties.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/IntegrationAccountSku",
          "description": "The sku."
        }
      },
      "type": "object"
    },
    "IntegrationAccountAgreement": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The integration account agreement.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountAgreementProperties",
          "description": "The integration account agreement properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "IntegrationAccountAgreementFilter": {
      "description": "The integration account agreement filter for odata query.",
      "properties": {
        "agreementType": {
          "$ref": "#/definitions/AgreementType",
          "description": "The agreement type of integration account agreement."
        }
      },
      "required": [
        "agreementType"
      ],
      "type": "object"
    },
    "IntegrationAccountAgreementListResult": {
      "description": "The list of integration account agreements.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of integration account agreements.",
          "items": {
            "$ref": "#/definitions/IntegrationAccountAgreement"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegrationAccountAgreementProperties": {
      "description": "The integration account agreement properties.",
      "properties": {
        "agreementType": {
          "$ref": "#/definitions/AgreementType",
          "description": "The agreement type."
        },
        "changedTime": {
          "description": "The changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/AgreementContent",
          "description": "The agreement content."
        },
        "createdTime": {
          "description": "The created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "guestIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The business identity of the guest partner."
        },
        "guestPartner": {
          "description": "The integration account partner that is set as guest partner for this agreement.",
          "type": "string"
        },
        "hostIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The business identity of the host partner."
        },
        "hostPartner": {
          "description": "The integration account partner that is set as host partner for this agreement.",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata.",
          "properties": {},
          "type": "object"
        }
      },
      "required": [
        "hostPartner",
        "guestPartner",
        "hostIdentity",
        "guestIdentity",
        "agreementType",
        "content"
      ],
      "type": "object"
    },
    "IntegrationAccountCertificate": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The integration account certificate.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountCertificateProperties",
          "description": "The integration account certificate properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "IntegrationAccountCertificateListResult": {
      "description": "The list of integration account certificates.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of integration account certificates.",
          "items": {
            "$ref": "#/definitions/IntegrationAccountCertificate"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegrationAccountCertificateProperties": {
      "description": "The integration account certificate properties.",
      "properties": {
        "changedTime": {
          "description": "The changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "createdTime": {
          "description": "The created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "key": {
          "$ref": "#/definitions/KeyVaultKeyReference",
          "description": "The key details in the key vault."
        },
        "metadata": {
          "description": "The metadata.",
          "properties": {},
          "type": "object"
        },
        "publicCertificate": {
          "description": "The public certificate.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegrationAccountListResult": {
      "description": "The list of integration accounts.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of integration accounts.",
          "items": {
            "$ref": "#/definitions/IntegrationAccount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegrationAccountMap": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The integration account map.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountMapProperties",
          "description": "The integration account map properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "IntegrationAccountMapFilter": {
      "description": "The integration account map filter for odata query.",
      "properties": {
        "mapType": {
          "$ref": "#/definitions/MapType",
          "description": "The map type of integration account map."
        }
      },
      "required": [
        "mapType"
      ],
      "type": "object"
    },
    "IntegrationAccountMapListResult": {
      "description": "The list of integration account maps.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of integration account maps.",
          "items": {
            "$ref": "#/definitions/IntegrationAccountMap"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegrationAccountMapProperties": {
      "description": "The integration account map.",
      "properties": {
        "changedTime": {
          "description": "The changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "content": {
          "description": "The content.",
          "properties": {},
          "type": "string"
        },
        "contentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "The content link.",
          "readOnly": true
        },
        "contentType": {
          "description": "The content type.",
          "type": "string"
        },
        "createdTime": {
          "description": "The created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "mapType": {
          "$ref": "#/definitions/MapType",
          "description": "The map type."
        },
        "metadata": {
          "description": "The metadata.",
          "properties": {},
          "type": "object"
        },
        "parametersSchema": {
          "description": "The parameters schema of integration account map.",
          "properties": {
            "ref": {
              "description": "The reference name.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "mapType"
      ],
      "type": "object"
    },
    "IntegrationAccountPartner": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The integration account partner.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountPartnerProperties",
          "description": "The integration account partner properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "IntegrationAccountPartnerFilter": {
      "description": "The integration account partner filter for odata query.",
      "properties": {
        "partnerType": {
          "$ref": "#/definitions/PartnerType",
          "description": "The partner type of integration account partner."
        }
      },
      "required": [
        "partnerType"
      ],
      "type": "object"
    },
    "IntegrationAccountPartnerListResult": {
      "description": "The list of integration account partners.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of integration account partners.",
          "items": {
            "$ref": "#/definitions/IntegrationAccountPartner"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegrationAccountPartnerProperties": {
      "description": "The integration account partner properties.",
      "properties": {
        "changedTime": {
          "description": "The changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/PartnerContent",
          "description": "The partner content."
        },
        "createdTime": {
          "description": "The created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "metadata": {
          "description": "The metadata.",
          "properties": {},
          "type": "object"
        },
        "partnerType": {
          "$ref": "#/definitions/PartnerType",
          "description": "The partner type."
        }
      },
      "required": [
        "partnerType",
        "content"
      ],
      "type": "object"
    },
    "IntegrationAccountProperties": {
      "properties": {},
      "type": "object"
    },
    "IntegrationAccountSchema": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The integration account schema.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountSchemaProperties",
          "description": "The integration account schema properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "IntegrationAccountSchemaFilter": {
      "description": "The integration account schema filter for odata query.",
      "properties": {
        "schemaType": {
          "$ref": "#/definitions/SchemaType",
          "description": "The schema type of integration account schema."
        }
      },
      "required": [
        "schemaType"
      ],
      "type": "object"
    },
    "IntegrationAccountSchemaListResult": {
      "description": "The list of integration account schemas.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of integration account schemas.",
          "items": {
            "$ref": "#/definitions/IntegrationAccountSchema"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegrationAccountSchemaProperties": {
      "description": "The integration account schema properties.",
      "properties": {
        "changedTime": {
          "description": "The changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "content": {
          "description": "The content.",
          "properties": {},
          "type": "string"
        },
        "contentLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "The content link.",
          "readOnly": true
        },
        "contentType": {
          "description": "The content type.",
          "type": "string"
        },
        "createdTime": {
          "description": "The created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "documentName": {
          "description": "The document name.",
          "type": "string"
        },
        "fileName": {
          "description": "The file name.",
          "type": "string"
        },
        "metadata": {
          "description": "The metadata.",
          "properties": {},
          "type": "object"
        },
        "schemaType": {
          "$ref": "#/definitions/SchemaType",
          "description": "The schema type."
        },
        "targetNamespace": {
          "description": "The target namespace of the schema.",
          "type": "string"
        }
      },
      "required": [
        "schemaType"
      ],
      "type": "object"
    },
    "IntegrationAccountSession": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The integration account session.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/IntegrationAccountSessionProperties",
          "description": "The integration account session properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "IntegrationAccountSessionFilter": {
      "description": "The integration account session filter.",
      "properties": {
        "changedTime": {
          "description": "The changed time of integration account sessions.",
          "format": "date-time",
          "type": "string"
        }
      },
      "required": [
        "changedTime"
      ],
      "type": "object"
    },
    "IntegrationAccountSessionListResult": {
      "description": "The list of integration account sessions.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of integration account sessions.",
          "items": {
            "$ref": "#/definitions/IntegrationAccountSession"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IntegrationAccountSessionProperties": {
      "description": "The integration account session properties.",
      "properties": {
        "changedTime": {
          "description": "The changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "content": {
          "$ref": "#/definitions/Object",
          "description": "The session content."
        },
        "createdTime": {
          "description": "The created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "IntegrationAccountSku": {
      "description": "The integration account sku.",
      "properties": {
        "name": {
          "$ref": "#/definitions/IntegrationAccountSkuName",
          "description": "The sku name."
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "IntegrationAccountSkuName": {
      "enum": [
        "NotSpecified",
        "Free",
        "Standard"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "IntegrationAccountSkuName"
      }
    },
    "KeyType": {
      "enum": [
        "NotSpecified",
        "Primary",
        "Secondary"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "KeyType"
      }
    },
    "KeyVaultKeyReference": {
      "description": "The reference to the key vault key.",
      "properties": {
        "keyName": {
          "description": "The private key name in key vault.",
          "type": "string"
        },
        "keyVault": {
          "description": "The key vault reference.",
          "properties": {
            "id": {
              "description": "The resource id.",
              "type": "string"
            },
            "name": {
              "description": "The resource name.",
              "readOnly": true,
              "type": "string"
            },
            "type": {
              "description": "The resource type.",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        },
        "keyVersion": {
          "description": "The private key version in key vault.",
          "type": "string"
        }
      },
      "required": [
        "keyVault",
        "keyName"
      ],
      "type": "object"
    },
    "MapType": {
      "enum": [
        "NotSpecified",
        "Xslt"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "MapType"
      }
    },
    "MessageFilterType": {
      "enum": [
        "NotSpecified",
        "Include",
        "Exclude"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "MessageFilterType"
      }
    },
    "Object": {
      "properties": {},
      "type": "object"
    },
    "Operation": {
      "description": "Logic REST API operation",
      "properties": {
        "display": {
          "description": "The object that represents the operation.",
          "properties": {
            "operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string"
            },
            "provider": {
              "description": "Service provider: Microsoft.Logic",
              "type": "string"
            },
            "resource": {
              "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
              "type": "string"
            }
          }
        },
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationListResult": {
      "description": "Result of the request to list Logic operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "nextLink": {
          "description": "URL to get the next set of operation list results if there are any.",
          "type": "string"
        },
        "value": {
          "description": "List of Logic operations supported by the Logic resource provider.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array"
        }
      }
    },
    "ParameterType": {
      "enum": [
        "NotSpecified",
        "String",
        "SecureString",
        "Int",
        "Float",
        "Bool",
        "Array",
        "Object",
        "SecureObject"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "ParameterType"
      }
    },
    "PartnerContent": {
      "description": "The integration account partner content.",
      "properties": {
        "b2b": {
          "$ref": "#/definitions/B2BPartnerContent",
          "description": "The B2B partner content."
        }
      },
      "type": "object"
    },
    "PartnerType": {
      "enum": [
        "NotSpecified",
        "B2B"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "PartnerType"
      }
    },
    "RecurrenceFrequency": {
      "enum": [
        "NotSpecified",
        "Second",
        "Minute",
        "Hour",
        "Day",
        "Week",
        "Month",
        "Year"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "RecurrenceFrequency"
      }
    },
    "RecurrenceSchedule": {
      "description": "The recurrence schedule.",
      "properties": {
        "hours": {
          "description": "The hours.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "minutes": {
          "description": "The minutes.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "monthDays": {
          "description": "The month days.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "monthlyOccurrences": {
          "description": "The monthly occurrences.",
          "items": {
            "$ref": "#/definitions/RecurrenceScheduleOccurrence"
          },
          "type": "array"
        },
        "weekDays": {
          "description": "The days of the week.",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DaysOfWeek"
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RecurrenceScheduleOccurrence": {
      "description": "The recurrence schedule occurence.",
      "properties": {
        "day": {
          "$ref": "#/definitions/DayOfWeek",
          "description": "The day of the week."
        },
        "occurrence": {
          "description": "The occurrence.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RegenerateActionParameter": {
      "description": "The access key regenerate action content.",
      "properties": {
        "keyType": {
          "$ref": "#/definitions/KeyType",
          "description": "The key type."
        }
      },
      "type": "object"
    },
    "Resource": {
      "description": "The base resource type.",
      "properties": {
        "id": {
          "description": "The resource id.",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "The resource location.",
          "type": "string"
        },
        "name": {
          "description": "Gets the resource name.",
          "readOnly": true,
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Gets the resource type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "ResourceReference": {
      "description": "The resource reference.",
      "properties": {
        "id": {
          "description": "The resource id.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Gets the resource name.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Gets the resource type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "RetryHistory": {
      "description": "The retry history.",
      "properties": {
        "clientRequestId": {
          "description": "Gets the client request Id.",
          "type": "string"
        },
        "code": {
          "description": "Gets the status code.",
          "type": "string"
        },
        "endTime": {
          "description": "Gets the end time.",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ErrorResponse",
          "description": "Gets the error response."
        },
        "serviceRequestId": {
          "description": "Gets the service request Id.",
          "type": "string"
        },
        "startTime": {
          "description": "Gets the start time.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SchemaType": {
      "enum": [
        "NotSpecified",
        "Xml"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "SchemaType"
      }
    },
    "SegmentTerminatorSuffix": {
      "enum": [
        "NotSpecified",
        "None",
        "CR",
        "LF",
        "CRLF"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "SegmentTerminatorSuffix"
      }
    },
    "SigningAlgorithm": {
      "enum": [
        "NotSpecified",
        "Default",
        "SHA1",
        "SHA2256",
        "SHA2384",
        "SHA2512"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "SigningAlgorithm"
      }
    },
    "Sku": {
      "description": "The sku type.",
      "properties": {
        "name": {
          "$ref": "#/definitions/SkuName",
          "description": "The name."
        },
        "plan": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The reference to plan."
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "SkuName": {
      "description": "The sku name.",
      "enum": [
        "NotSpecified",
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "SkuName"
      }
    },
    "SubResource": {
      "description": "The sub resource type.",
      "properties": {
        "id": {
          "description": "The resource id.",
          "readOnly": true,
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "TrailingSeparatorPolicy": {
      "enum": [
        "NotSpecified",
        "NotAllowed",
        "Optional",
        "Mandatory"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "TrailingSeparatorPolicy"
      }
    },
    "UsageIndicator": {
      "enum": [
        "NotSpecified",
        "Test",
        "Information",
        "Production"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "UsageIndicator"
      }
    },
    "Workflow": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The workflow type.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowProperties",
          "description": "The workflow properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "WorkflowFilter": {
      "description": "The workflow filter.",
      "properties": {
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state of workflows."
        }
      },
      "type": "object"
    },
    "WorkflowListResult": {
      "description": "The list of workflows.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "The list of workflows.",
          "items": {
            "$ref": "#/definitions/Workflow"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowOutputParameter": {
      "allOf": [
        {
          "$ref": "#/definitions/WorkflowParameter"
        }
      ],
      "description": "The workflow output parameter.",
      "properties": {
        "error": {
          "$ref": "#/definitions/Object",
          "description": "Gets the error.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "WorkflowParameter": {
      "description": "The workflow parameters.",
      "properties": {
        "description": {
          "description": "The description.",
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/Object",
          "description": "The metadata."
        },
        "type": {
          "$ref": "#/definitions/ParameterType",
          "description": "The type."
        },
        "value": {
          "$ref": "#/definitions/Object",
          "description": "The value."
        }
      },
      "type": "object"
    },
    "WorkflowProperties": {
      "description": "The workflow properties.",
      "properties": {
        "accessEndpoint": {
          "description": "Gets the access endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "changedTime": {
          "description": "Gets the changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "createdTime": {
          "description": "Gets the created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "definition": {
          "$ref": "#/definitions/Object",
          "description": "The definition."
        },
        "integrationAccount": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration account."
        },
        "parameters": {
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowParameter"
          },
          "description": "The parameters.",
          "type": "object"
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkflowProvisioningState",
          "description": "Gets the provisioning state.",
          "readOnly": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku."
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state."
        },
        "version": {
          "description": "Gets the version.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowProvisioningState": {
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Moving",
        "Updating",
        "Registering",
        "Registered",
        "Unregistering",
        "Unregistered",
        "Completed"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "WorkflowProvisioningState"
      }
    },
    "WorkflowRun": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "The workflow run.",
      "properties": {
        "name": {
          "description": "Gets the workflow run name.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WorkflowRunProperties",
          "description": "The workflow run properties.",
          "x-ms-client-flatten": true
        },
        "type": {
          "description": "Gets the workflow run type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowRunAction": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "The workflow run action.",
      "properties": {
        "name": {
          "description": "Gets the workflow run action name.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WorkflowRunActionProperties",
          "description": "The workflow run action properties.",
          "x-ms-client-flatten": true
        },
        "type": {
          "description": "Gets the workflow run action type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowRunActionFilter": {
      "description": "The workflow run action filter.",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of workflow run action."
        }
      },
      "type": "object"
    },
    "WorkflowRunActionListResult": {
      "description": "The list of workflow run actions.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "A list of workflow run actions.",
          "items": {
            "$ref": "#/definitions/WorkflowRunAction"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowRunActionProperties": {
      "description": "The workflow run action properties.",
      "properties": {
        "code": {
          "description": "Gets the code.",
          "readOnly": true,
          "type": "string"
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The correlation properties."
        },
        "endTime": {
          "description": "Gets the end time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Object",
          "description": "Gets the error.",
          "readOnly": true
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to inputs.",
          "readOnly": true
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to outputs.",
          "readOnly": true
        },
        "retryHistory": {
          "description": "Gets the retry histories.",
          "items": {
            "$ref": "#/definitions/RetryHistory"
          },
          "type": "array"
        },
        "startTime": {
          "description": "Gets the start time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "trackedProperties": {
          "$ref": "#/definitions/Object",
          "description": "Gets the tracked properties.",
          "readOnly": true
        },
        "trackingId": {
          "description": "Gets the tracking id.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowRunFilter": {
      "description": "The workflow run filter.",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of workflow run."
        }
      },
      "type": "object"
    },
    "WorkflowRunListResult": {
      "description": "The list of workflow runs.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "A list of workflow runs.",
          "items": {
            "$ref": "#/definitions/WorkflowRun"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowRunProperties": {
      "description": "The workflow run properties.",
      "properties": {
        "code": {
          "description": "Gets the code.",
          "readOnly": true,
          "type": "string"
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "correlationId": {
          "description": "Gets the correlation id.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "Gets the end time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Object",
          "description": "Gets the error.",
          "readOnly": true
        },
        "outputs": {
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowOutputParameter"
          },
          "description": "Gets the outputs.",
          "readOnly": true,
          "type": "object"
        },
        "response": {
          "$ref": "#/definitions/WorkflowRunTrigger",
          "description": "Gets the response of the flow run.",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets the start time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "trigger": {
          "$ref": "#/definitions/WorkflowRunTrigger",
          "description": "Gets the fired trigger.",
          "readOnly": true
        },
        "workflow": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Gets the reference to workflow version.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "WorkflowRunTrigger": {
      "description": "The workflow run trigger.",
      "properties": {
        "code": {
          "description": "Gets the code.",
          "readOnly": true,
          "type": "string"
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "endTime": {
          "description": "Gets the end time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Object",
          "description": "Gets the error.",
          "readOnly": true
        },
        "inputs": {
          "$ref": "#/definitions/Object",
          "description": "Gets the inputs.",
          "readOnly": true
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to inputs.",
          "readOnly": true
        },
        "name": {
          "description": "Gets the name.",
          "readOnly": true,
          "type": "string"
        },
        "outputs": {
          "$ref": "#/definitions/Object",
          "description": "Gets the outputs.",
          "readOnly": true
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to outputs.",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets the start time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "trackedProperties": {
          "$ref": "#/definitions/Object",
          "description": "Gets the tracked properties.",
          "readOnly": true
        },
        "trackingId": {
          "description": "Gets the tracking id.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowState": {
      "enum": [
        "NotSpecified",
        "Completed",
        "Enabled",
        "Disabled",
        "Deleted",
        "Suspended"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "WorkflowState"
      }
    },
    "WorkflowStatus": {
      "enum": [
        "NotSpecified",
        "Paused",
        "Running",
        "Waiting",
        "Succeeded",
        "Skipped",
        "Suspended",
        "Cancelled",
        "Failed",
        "Faulted",
        "TimedOut",
        "Aborted",
        "Ignored"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "WorkflowStatus"
      }
    },
    "WorkflowTrigger": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "The workflow trigger.",
      "properties": {
        "name": {
          "description": "Gets the workflow trigger name.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WorkflowTriggerProperties",
          "description": "The workflow trigger properties.",
          "x-ms-client-flatten": true
        },
        "type": {
          "description": "Gets the workflow trigger type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowTriggerCallbackUrl": {
      "description": "The workflow trigger callback URL.",
      "properties": {
        "basePath": {
          "description": "Gets the workflow trigger callback URL base path.",
          "readOnly": true,
          "type": "string"
        },
        "method": {
          "description": "Gets the workflow trigger callback URL HTTP method.",
          "readOnly": true,
          "type": "string"
        },
        "queries": {
          "$ref": "#/definitions/WorkflowTriggerListCallbackUrlQueries",
          "description": "Gets the workflow trigger callback URL query parameters."
        },
        "relativePath": {
          "description": "Gets the workflow trigger callback URL relative path.",
          "readOnly": true,
          "type": "string"
        },
        "relativePathParameters": {
          "description": "Gets the workflow trigger callback URL relative path parameters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "value": {
          "description": "Gets the workflow trigger callback URL.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowTriggerFilter": {
      "description": "The workflow trigger filter.",
      "properties": {
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state of workflow trigger."
        }
      },
      "type": "object"
    },
    "WorkflowTriggerHistory": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "The workflow trigger history.",
      "properties": {
        "name": {
          "description": "Gets the workflow trigger history name.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/WorkflowTriggerHistoryProperties",
          "description": "Gets the workflow trigger history properties.",
          "x-ms-client-flatten": true
        },
        "type": {
          "description": "Gets the workflow trigger history type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowTriggerHistoryFilter": {
      "description": "The workflow trigger history filter.",
      "properties": {
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "The status of workflow trigger history."
        }
      },
      "type": "object"
    },
    "WorkflowTriggerHistoryListResult": {
      "description": "The list of workflow trigger histories.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "A list of workflow trigger histories.",
          "items": {
            "$ref": "#/definitions/WorkflowTriggerHistory"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowTriggerHistoryProperties": {
      "description": "The workflow trigger history properties.",
      "properties": {
        "code": {
          "description": "Gets the code.",
          "readOnly": true,
          "type": "string"
        },
        "correlation": {
          "$ref": "#/definitions/Correlation",
          "description": "The run correlation."
        },
        "endTime": {
          "description": "Gets the end time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/Object",
          "description": "Gets the error.",
          "readOnly": true
        },
        "fired": {
          "description": "Gets a value indicating whether trigger was fired.",
          "readOnly": true,
          "type": "boolean"
        },
        "inputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to input parameters.",
          "readOnly": true
        },
        "outputsLink": {
          "$ref": "#/definitions/ContentLink",
          "description": "Gets the link to output parameters.",
          "readOnly": true
        },
        "run": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Gets the reference to workflow run.",
          "readOnly": true
        },
        "startTime": {
          "description": "Gets the start time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "trackingId": {
          "description": "Gets the tracking id.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowTriggerListCallbackUrlQueries": {
      "description": "Gets the workflow trigger callback URL query parameters.",
      "properties": {
        "api-version": {
          "description": "The api version.",
          "type": "string"
        },
        "sig": {
          "description": "The SAS signature.",
          "type": "string"
        },
        "sp": {
          "description": "The SAS permissions.",
          "type": "string"
        },
        "sv": {
          "description": "The SAS version.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowTriggerListResult": {
      "description": "The list of workflow triggers.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "A list of workflow triggers.",
          "items": {
            "$ref": "#/definitions/WorkflowTrigger"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowTriggerProperties": {
      "description": "The workflow trigger properties.",
      "properties": {
        "changedTime": {
          "description": "Gets the changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "createdTime": {
          "description": "Gets the created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "lastExecutionTime": {
          "description": "Gets the last execution time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "nextExecutionTime": {
          "description": "Gets the next execution time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "provisioningState": {
          "$ref": "#/definitions/WorkflowTriggerProvisioningState",
          "description": "Gets the provisioning state.",
          "readOnly": true
        },
        "recurrence": {
          "$ref": "#/definitions/WorkflowTriggerRecurrence",
          "description": "Gets the workflow trigger recurrence.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "Gets the state.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/WorkflowStatus",
          "description": "Gets the status.",
          "readOnly": true
        },
        "workflow": {
          "$ref": "#/definitions/ResourceReference",
          "description": "Gets the reference to workflow.",
          "readOnly": true
        }
      },
      "type": "object"
    },
    "WorkflowTriggerProvisioningState": {
      "enum": [
        "NotSpecified",
        "Accepted",
        "Running",
        "Ready",
        "Creating",
        "Created",
        "Deleting",
        "Deleted",
        "Canceled",
        "Failed",
        "Succeeded",
        "Moving",
        "Updating",
        "Registering",
        "Registered",
        "Unregistering",
        "Unregistered",
        "Completed"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "WorkflowTriggerProvisioningState"
      }
    },
    "WorkflowTriggerRecurrence": {
      "description": "The workflow trigger recurrence.",
      "properties": {
        "endTime": {
          "description": "The end time.",
          "format": "date-time",
          "type": "string"
        },
        "frequency": {
          "$ref": "#/definitions/RecurrenceFrequency",
          "description": "The frequency."
        },
        "interval": {
          "description": "The interval.",
          "format": "int32",
          "type": "integer"
        },
        "schedule": {
          "$ref": "#/definitions/RecurrenceSchedule",
          "description": "The recurrence schedule."
        },
        "startTime": {
          "description": "The start time.",
          "format": "date-time",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowVersion": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The workflow version.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkflowVersionProperties",
          "description": "The workflow version properties.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "WorkflowVersionListResult": {
      "description": "The list of workflow versions.",
      "properties": {
        "nextLink": {
          "description": "The URL to get the next set of results.",
          "type": "string"
        },
        "value": {
          "description": "A list of workflow versions.",
          "items": {
            "$ref": "#/definitions/WorkflowVersion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowVersionProperties": {
      "description": "The workflow version properties.",
      "properties": {
        "accessEndpoint": {
          "description": "Gets the access endpoint.",
          "readOnly": true,
          "type": "string"
        },
        "changedTime": {
          "description": "Gets the changed time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "createdTime": {
          "description": "Gets the created time.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "definition": {
          "$ref": "#/definitions/Object",
          "description": "The definition."
        },
        "integrationAccount": {
          "$ref": "#/definitions/ResourceReference",
          "description": "The integration account."
        },
        "parameters": {
          "additionalProperties": {
            "$ref": "#/definitions/WorkflowParameter"
          },
          "description": "The parameters.",
          "type": "object"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The sku."
        },
        "state": {
          "$ref": "#/definitions/WorkflowState",
          "description": "The state."
        },
        "version": {
          "description": "Gets the version.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object"
    },
    "X12AcknowledgementSettings": {
      "description": "The X12 agreement acknowledgement settings.",
      "properties": {
        "acknowledgementControlNumberLowerBound": {
          "description": "The acknowledgement control number lower bound.",
          "format": "int32",
          "type": "integer"
        },
        "acknowledgementControlNumberPrefix": {
          "description": "The acknowledgement control number prefix.",
          "type": "string"
        },
        "acknowledgementControlNumberSuffix": {
          "description": "The acknowledgement control number suffix.",
          "type": "string"
        },
        "acknowledgementControlNumberUpperBound": {
          "description": "The acknowledgement control number upper bound.",
          "format": "int32",
          "type": "integer"
        },
        "batchFunctionalAcknowledgements": {
          "description": "The value indicating whether to batch functional acknowledgements.",
          "type": "boolean"
        },
        "batchImplementationAcknowledgements": {
          "description": "The value indicating whether to batch implementation acknowledgements.",
          "type": "boolean"
        },
        "batchTechnicalAcknowledgements": {
          "description": "The value indicating whether to batch the technical acknowledgements.",
          "type": "boolean"
        },
        "functionalAcknowledgementVersion": {
          "description": "The functional acknowledgement version.",
          "type": "string"
        },
        "implementationAcknowledgementVersion": {
          "description": "The implementation acknowledgement version.",
          "type": "string"
        },
        "needFunctionalAcknowledgement": {
          "description": "The value indicating whether functional acknowledgement is needed.",
          "type": "boolean"
        },
        "needImplementationAcknowledgement": {
          "description": "The value indicating whether implementation acknowledgement is needed.",
          "type": "boolean"
        },
        "needLoopForValidMessages": {
          "description": "The value indicating whether a loop is needed for valid messages.",
          "type": "boolean"
        },
        "needTechnicalAcknowledgement": {
          "description": "The value indicating whether technical acknowledgement is needed.",
          "type": "boolean"
        },
        "rolloverAcknowledgementControlNumber": {
          "description": "The value indicating whether to rollover acknowledgement control number.",
          "type": "boolean"
        },
        "sendSynchronousAcknowledgement": {
          "description": "The value indicating whether to send synchronous acknowledgement.",
          "type": "boolean"
        }
      },
      "required": [
        "needTechnicalAcknowledgement",
        "batchTechnicalAcknowledgements",
        "needFunctionalAcknowledgement",
        "batchFunctionalAcknowledgements",
        "needImplementationAcknowledgement",
        "batchImplementationAcknowledgements",
        "needLoopForValidMessages",
        "sendSynchronousAcknowledgement",
        "acknowledgementControlNumberLowerBound",
        "acknowledgementControlNumberUpperBound",
        "rolloverAcknowledgementControlNumber"
      ],
      "type": "object"
    },
    "X12AgreementContent": {
      "description": "The X12 agreement content.",
      "properties": {
        "receiveAgreement": {
          "$ref": "#/definitions/X12OneWayAgreement",
          "description": "The X12 one-way receive agreement."
        },
        "sendAgreement": {
          "$ref": "#/definitions/X12OneWayAgreement",
          "description": "The X12 one-way send agreement."
        }
      },
      "required": [
        "receiveAgreement",
        "sendAgreement"
      ],
      "type": "object"
    },
    "X12CharacterSet": {
      "enum": [
        "NotSpecified",
        "Basic",
        "Extended",
        "UTF8"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "X12CharacterSet"
      }
    },
    "X12DateFormat": {
      "enum": [
        "NotSpecified",
        "CCYYMMDD",
        "YYMMDD"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "X12DateFormat"
      }
    },
    "X12DelimiterOverrides": {
      "description": "The X12 delimiter override settings.",
      "properties": {
        "componentSeparator": {
          "description": "The component separator.",
          "format": "int32",
          "type": "integer"
        },
        "dataElementSeparator": {
          "description": "The data element separator.",
          "format": "int32",
          "type": "integer"
        },
        "messageId": {
          "description": "The message id.",
          "type": "string"
        },
        "protocolVersion": {
          "description": "The protocol version.",
          "type": "string"
        },
        "replaceCharacter": {
          "description": "The replacement character.",
          "format": "int32",
          "type": "integer"
        },
        "replaceSeparatorsInPayload": {
          "description": "The value indicating whether to replace separators in payload.",
          "type": "boolean"
        },
        "segmentTerminator": {
          "description": "The segment terminator.",
          "format": "int32",
          "type": "integer"
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The segment terminator suffix."
        },
        "targetNamespace": {
          "description": "The target namespace on which this delimiter settings has to be applied.",
          "type": "string"
        }
      },
      "required": [
        "dataElementSeparator",
        "componentSeparator",
        "segmentTerminator",
        "segmentTerminatorSuffix",
        "replaceCharacter",
        "replaceSeparatorsInPayload"
      ],
      "type": "object"
    },
    "X12EnvelopeOverride": {
      "description": "The X12 envelope override settings.",
      "properties": {
        "dateFormat": {
          "$ref": "#/definitions/X12DateFormat",
          "description": "The date format."
        },
        "functionalIdentifierCode": {
          "description": "The functional identifier code.",
          "type": "string"
        },
        "headerVersion": {
          "description": "The header version.",
          "type": "string"
        },
        "messageId": {
          "description": "The message id on which this envelope settings has to be applied.",
          "type": "string"
        },
        "protocolVersion": {
          "description": "The protocol version on which this envelope settings has to be applied.",
          "type": "string"
        },
        "receiverApplicationId": {
          "description": "The receiver application id.",
          "type": "string"
        },
        "responsibleAgencyCode": {
          "description": "The responsible agency code.",
          "type": "string"
        },
        "senderApplicationId": {
          "description": "The sender application id.",
          "type": "string"
        },
        "targetNamespace": {
          "description": "The target namespace on which this envelope settings has to be applied.",
          "type": "string"
        },
        "timeFormat": {
          "$ref": "#/definitions/X12TimeFormat",
          "description": "The time format."
        }
      },
      "required": [
        "targetNamespace",
        "protocolVersion",
        "messageId",
        "responsibleAgencyCode",
        "headerVersion",
        "senderApplicationId",
        "receiverApplicationId",
        "dateFormat",
        "timeFormat"
      ],
      "type": "object"
    },
    "X12EnvelopeSettings": {
      "description": "The X12 agreement envelope settings.",
      "properties": {
        "controlStandardsId": {
          "description": "The controls standards id.",
          "format": "int32",
          "type": "integer"
        },
        "controlVersionNumber": {
          "description": "The control version number.",
          "type": "string"
        },
        "enableDefaultGroupHeaders": {
          "description": "The value indicating whether to enable default group headers.",
          "type": "boolean"
        },
        "functionalGroupId": {
          "description": "The functional group id.",
          "type": "string"
        },
        "groupControlNumberLowerBound": {
          "description": "The group control number lower bound.",
          "format": "int32",
          "type": "integer"
        },
        "groupControlNumberUpperBound": {
          "description": "The group control number upper bound.",
          "format": "int32",
          "type": "integer"
        },
        "groupHeaderAgencyCode": {
          "description": "The group header agency code.",
          "type": "string"
        },
        "groupHeaderDateFormat": {
          "$ref": "#/definitions/X12DateFormat",
          "description": "The group header date format."
        },
        "groupHeaderTimeFormat": {
          "$ref": "#/definitions/X12TimeFormat",
          "description": "The group header time format."
        },
        "groupHeaderVersion": {
          "description": "The group header version.",
          "type": "string"
        },
        "interchangeControlNumberLowerBound": {
          "description": "The interchange  control number lower bound.",
          "format": "int32",
          "type": "integer"
        },
        "interchangeControlNumberUpperBound": {
          "description": "The interchange  control number upper bound.",
          "format": "int32",
          "type": "integer"
        },
        "overwriteExistingTransactionSetControlNumber": {
          "description": "The value indicating whether to overwrite existing transaction set control number.",
          "type": "boolean"
        },
        "receiverApplicationId": {
          "description": "The receiver application id.",
          "type": "string"
        },
        "rolloverGroupControlNumber": {
          "description": "The value indicating whether to rollover group control number.",
          "type": "boolean"
        },
        "rolloverInterchangeControlNumber": {
          "description": "The value indicating whether to rollover interchange control number.",
          "type": "boolean"
        },
        "rolloverTransactionSetControlNumber": {
          "description": "The value indicating whether to rollover transaction set control number.",
          "type": "boolean"
        },
        "senderApplicationId": {
          "description": "The sender application id.",
          "type": "string"
        },
        "transactionSetControlNumberLowerBound": {
          "description": "The transaction set control number lower bound.",
          "format": "int32",
          "type": "integer"
        },
        "transactionSetControlNumberPrefix": {
          "description": "The transaction set control number prefix.",
          "type": "string"
        },
        "transactionSetControlNumberSuffix": {
          "description": "The transaction set control number suffix.",
          "type": "string"
        },
        "transactionSetControlNumberUpperBound": {
          "description": "The transaction set control number upper bound.",
          "format": "int32",
          "type": "integer"
        },
        "usageIndicator": {
          "$ref": "#/definitions/UsageIndicator",
          "description": "The usage indicator."
        },
        "useControlStandardsIdAsRepetitionCharacter": {
          "description": "The value indicating whether to use control standards id as repetition character.",
          "type": "boolean"
        }
      },
      "required": [
        "controlStandardsId",
        "useControlStandardsIdAsRepetitionCharacter",
        "senderApplicationId",
        "receiverApplicationId",
        "controlVersionNumber",
        "interchangeControlNumberLowerBound",
        "interchangeControlNumberUpperBound",
        "rolloverInterchangeControlNumber",
        "enableDefaultGroupHeaders",
        "groupControlNumberLowerBound",
        "groupControlNumberUpperBound",
        "rolloverGroupControlNumber",
        "groupHeaderAgencyCode",
        "groupHeaderVersion",
        "transactionSetControlNumberLowerBound",
        "transactionSetControlNumberUpperBound",
        "rolloverTransactionSetControlNumber",
        "overwriteExistingTransactionSetControlNumber",
        "groupHeaderDateFormat",
        "groupHeaderTimeFormat",
        "usageIndicator"
      ],
      "type": "object"
    },
    "X12FramingSettings": {
      "description": "The X12 agreement framing settings.",
      "properties": {
        "characterSet": {
          "$ref": "#/definitions/X12CharacterSet",
          "description": "The X12 character set."
        },
        "componentSeparator": {
          "description": "The component separator.",
          "format": "int32",
          "type": "integer"
        },
        "dataElementSeparator": {
          "description": "The data element separator.",
          "format": "int32",
          "type": "integer"
        },
        "replaceCharacter": {
          "description": "The replacement character.",
          "format": "int32",
          "type": "integer"
        },
        "replaceSeparatorsInPayload": {
          "description": "The value indicating whether to replace separators in payload.",
          "type": "boolean"
        },
        "segmentTerminator": {
          "description": "The segment terminator.",
          "format": "int32",
          "type": "integer"
        },
        "segmentTerminatorSuffix": {
          "$ref": "#/definitions/SegmentTerminatorSuffix",
          "description": "The segment terminator suffix."
        }
      },
      "required": [
        "dataElementSeparator",
        "componentSeparator",
        "replaceSeparatorsInPayload",
        "replaceCharacter",
        "segmentTerminator",
        "characterSet",
        "segmentTerminatorSuffix"
      ],
      "type": "object"
    },
    "X12MessageFilter": {
      "description": "The X12 message filter for odata query.",
      "properties": {
        "messageFilterType": {
          "$ref": "#/definitions/MessageFilterType",
          "description": "The message filter type."
        }
      },
      "required": [
        "messageFilterType"
      ],
      "type": "object"
    },
    "X12MessageIdentifier": {
      "description": "The X12 message identifier.",
      "properties": {
        "messageId": {
          "description": "The message id.",
          "type": "string"
        }
      },
      "required": [
        "messageId"
      ],
      "type": "object"
    },
    "X12OneWayAgreement": {
      "description": "The X12 oneway agreement.",
      "properties": {
        "protocolSettings": {
          "$ref": "#/definitions/X12ProtocolSettings",
          "description": "The X12 protocol settings."
        },
        "receiverBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The receiver business identity"
        },
        "senderBusinessIdentity": {
          "$ref": "#/definitions/BusinessIdentity",
          "description": "The sender business identity"
        }
      },
      "required": [
        "senderBusinessIdentity",
        "receiverBusinessIdentity",
        "protocolSettings"
      ],
      "type": "object"
    },
    "X12ProcessingSettings": {
      "description": "The X12 processing settings.",
      "properties": {
        "convertImpliedDecimal": {
          "description": "The value indicating whether to convert numerical type to implied decimal.",
          "type": "boolean"
        },
        "createEmptyXmlTagsForTrailingSeparators": {
          "description": "The value indicating whether to create empty xml tags for trailing separators.",
          "type": "boolean"
        },
        "maskSecurityInfo": {
          "description": "The value indicating whether to mask security information.",
          "type": "boolean"
        },
        "preserveInterchange": {
          "description": "The value indicating whether to preserve interchange.",
          "type": "boolean"
        },
        "suspendInterchangeOnError": {
          "description": "The value indicating whether to suspend interchange on error.",
          "type": "boolean"
        },
        "useDotAsDecimalSeparator": {
          "description": "The value indicating whether to use dot as decimal separator.",
          "type": "boolean"
        }
      },
      "required": [
        "maskSecurityInfo",
        "convertImpliedDecimal",
        "preserveInterchange",
        "suspendInterchangeOnError",
        "createEmptyXmlTagsForTrailingSeparators",
        "useDotAsDecimalSeparator"
      ],
      "type": "object"
    },
    "X12ProtocolSettings": {
      "description": "The X12 agreement protocol settings.",
      "properties": {
        "acknowledgementSettings": {
          "$ref": "#/definitions/X12AcknowledgementSettings",
          "description": "The X12 acknowledgment settings."
        },
        "envelopeOverrides": {
          "description": "The X12 envelope override settings.",
          "items": {
            "$ref": "#/definitions/X12EnvelopeOverride"
          },
          "type": "array"
        },
        "envelopeSettings": {
          "$ref": "#/definitions/X12EnvelopeSettings",
          "description": "The X12 envelope settings."
        },
        "framingSettings": {
          "$ref": "#/definitions/X12FramingSettings",
          "description": "The X12 framing settings."
        },
        "messageFilter": {
          "$ref": "#/definitions/X12MessageFilter",
          "description": "The X12 message filter."
        },
        "messageFilterList": {
          "description": "The X12 message filter list.",
          "items": {
            "$ref": "#/definitions/X12MessageIdentifier"
          },
          "type": "array"
        },
        "processingSettings": {
          "$ref": "#/definitions/X12ProcessingSettings",
          "description": "The X12 processing settings."
        },
        "schemaReferences": {
          "description": "The X12 schema references.",
          "items": {
            "$ref": "#/definitions/X12SchemaReference"
          },
          "type": "array"
        },
        "securitySettings": {
          "$ref": "#/definitions/X12SecuritySettings",
          "description": "The X12 security settings."
        },
        "validationOverrides": {
          "description": "The X12 validation override settings.",
          "items": {
            "$ref": "#/definitions/X12ValidationOverride"
          },
          "type": "array"
        },
        "validationSettings": {
          "$ref": "#/definitions/X12ValidationSettings",
          "description": "The X12 validation settings."
        },
        "x12DelimiterOverrides": {
          "description": "The X12 delimiter override settings.",
          "items": {
            "$ref": "#/definitions/X12DelimiterOverrides"
          },
          "type": "array"
        }
      },
      "required": [
        "validationSettings",
        "framingSettings",
        "envelopeSettings",
        "acknowledgementSettings",
        "messageFilter",
        "securitySettings",
        "processingSettings",
        "schemaReferences"
      ],
      "type": "object"
    },
    "X12SchemaReference": {
      "description": "The X12 schema reference.",
      "properties": {
        "messageId": {
          "description": "The message id.",
          "type": "string"
        },
        "schemaName": {
          "description": "The schema name.",
          "type": "string"
        },
        "schemaVersion": {
          "description": "The schema version.",
          "type": "string"
        },
        "senderApplicationId": {
          "description": "The sender application id.",
          "type": "string"
        }
      },
      "required": [
        "messageId",
        "schemaVersion",
        "schemaName"
      ],
      "type": "object"
    },
    "X12SecuritySettings": {
      "description": "The X12 agreement security settings.",
      "properties": {
        "authorizationQualifier": {
          "description": "The authorization qualifier.",
          "type": "string"
        },
        "authorizationValue": {
          "description": "The authorization value.",
          "type": "string"
        },
        "passwordValue": {
          "description": "The password value.",
          "type": "string"
        },
        "securityQualifier": {
          "description": "The security qualifier.",
          "type": "string"
        }
      },
      "required": [
        "authorizationQualifier",
        "securityQualifier"
      ],
      "type": "object"
    },
    "X12TimeFormat": {
      "enum": [
        "NotSpecified",
        "HHMM",
        "HHMMSS",
        "HHMMSSdd",
        "HHMMSSd"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "X12TimeFormat"
      }
    },
    "X12ValidationOverride": {
      "description": "The X12 validation override settings.",
      "properties": {
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "messageId": {
          "description": "The message id on which the validation settings has to be applied.",
          "type": "string"
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "validateCharacterSet": {
          "description": "The value indicating whether to validate character Set.",
          "type": "boolean"
        },
        "validateEdiTypes": {
          "description": "The value indicating whether to validate EDI types.",
          "type": "boolean"
        },
        "validateXsdTypes": {
          "description": "The value indicating whether to validate XSD types.",
          "type": "boolean"
        }
      },
      "required": [
        "messageId",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "validateCharacterSet",
        "trimLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy"
      ],
      "type": "object"
    },
    "X12ValidationSettings": {
      "description": "The X12 agreement validation settings.",
      "properties": {
        "allowLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to allow leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "checkDuplicateGroupControlNumber": {
          "description": "The value indicating whether to check for duplicate group control number.",
          "type": "boolean"
        },
        "checkDuplicateInterchangeControlNumber": {
          "description": "The value indicating whether to check for duplicate interchange control number.",
          "type": "boolean"
        },
        "checkDuplicateTransactionSetControlNumber": {
          "description": "The value indicating whether to check for duplicate transaction set control number.",
          "type": "boolean"
        },
        "interchangeControlNumberValidityDays": {
          "description": "The validity period of interchange control number.",
          "format": "int32",
          "type": "integer"
        },
        "trailingSeparatorPolicy": {
          "$ref": "#/definitions/TrailingSeparatorPolicy",
          "description": "The trailing separator policy."
        },
        "trimLeadingAndTrailingSpacesAndZeroes": {
          "description": "The value indicating whether to trim leading and trailing spaces and zeroes.",
          "type": "boolean"
        },
        "validateCharacterSet": {
          "description": "The value indicating whether to validate character set in the message.",
          "type": "boolean"
        },
        "validateEdiTypes": {
          "description": "The value indicating whether to Whether to validate EDI types.",
          "type": "boolean"
        },
        "validateXsdTypes": {
          "description": "The value indicating whether to Whether to validate XSD types.",
          "type": "boolean"
        }
      },
      "required": [
        "validateCharacterSet",
        "checkDuplicateInterchangeControlNumber",
        "interchangeControlNumberValidityDays",
        "checkDuplicateGroupControlNumber",
        "checkDuplicateTransactionSetControlNumber",
        "validateEdiTypes",
        "validateXsdTypes",
        "allowLeadingAndTrailingSpacesAndZeroes",
        "trimLeadingAndTrailingSpacesAndZeroes",
        "trailingSeparatorPolicy"
      ],
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "ListOperations",
      "title": "ListOperations",
      "description": "Lists all of the available Logic REST API operations.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/OperationListResult"
      }
    },
    {
      "id": "IntegrationAccounts_ListBySubscription",
      "title": "IntegrationAccounts_ListBySubscription",
      "description": "Gets a list of integration accounts by subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountListResult"
      }
    },
    {
      "id": "Workflows_ListBySubscription",
      "title": "Workflows_ListBySubscription",
      "description": "Gets a list of workflows by subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowListResult"
      }
    },
    {
      "id": "IntegrationAccounts_ListByResourceGroup",
      "title": "IntegrationAccounts_ListByResourceGroup",
      "description": "Gets a list of integration accounts by resource group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountListResult"
      }
    },
    {
      "id": "IntegrationAccounts_Delete",
      "title": "IntegrationAccounts_Delete",
      "description": "Deletes an integration account.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "IntegrationAccounts_Get",
      "title": "IntegrationAccounts_Get",
      "description": "Gets an integration account.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccount"
      }
    },
    {
      "id": "IntegrationAccounts_Update",
      "title": "IntegrationAccounts_Update",
      "description": "Updates an integration account.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "integrationAccount": {
            "$ref": "#/definitions/IntegrationAccount"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccount"
      }
    },
    {
      "id": "IntegrationAccounts_CreateOrUpdate",
      "title": "IntegrationAccounts_CreateOrUpdate",
      "description": "Creates or updates an integration account.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "integrationAccount": {
            "$ref": "#/definitions/IntegrationAccount"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccount"
      }
    },
    {
      "id": "Agreements_ListByIntegrationAccounts",
      "title": "Agreements_ListByIntegrationAccounts",
      "description": "Gets a list of integration account agreements.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountAgreementListResult"
      }
    },
    {
      "id": "Agreements_Delete",
      "title": "Agreements_Delete",
      "description": "Deletes an integration account agreement.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "agreementName": {
            "type": "string",
            "description": "The integration account agreement name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Agreements_Get",
      "title": "Agreements_Get",
      "description": "Gets an integration account agreement.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "agreementName": {
            "type": "string",
            "description": "The integration account agreement name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountAgreement"
      }
    },
    {
      "id": "Agreements_CreateOrUpdate",
      "title": "Agreements_CreateOrUpdate",
      "description": "Creates or updates an integration account agreement.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "agreementName": {
            "type": "string",
            "description": "The integration account agreement name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "agreement": {
            "$ref": "#/definitions/IntegrationAccountAgreement"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountAgreement"
      }
    },
    {
      "id": "Certificates_ListByIntegrationAccounts",
      "title": "Certificates_ListByIntegrationAccounts",
      "description": "Gets a list of integration account certificates.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountCertificateListResult"
      }
    },
    {
      "id": "Certificates_Delete",
      "title": "Certificates_Delete",
      "description": "Deletes an integration account certificate.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "certificateName": {
            "type": "string",
            "description": "The integration account certificate name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Certificates_Get",
      "title": "Certificates_Get",
      "description": "Gets an integration account certificate.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "certificateName": {
            "type": "string",
            "description": "The integration account certificate name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountCertificate"
      }
    },
    {
      "id": "Certificates_CreateOrUpdate",
      "title": "Certificates_CreateOrUpdate",
      "description": "Creates or updates an integration account certificate.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "certificateName": {
            "type": "string",
            "description": "The integration account certificate name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "certificate": {
            "$ref": "#/definitions/IntegrationAccountCertificate"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountCertificate"
      }
    },
    {
      "id": "IntegrationAccounts_GetCallbackUrl",
      "title": "IntegrationAccounts_GetCallbackUrl",
      "description": "Gets the integration account callback URL.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "parameters": {
            "$ref": "#/definitions/GetCallbackUrlParameters"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CallbackUrl"
      }
    },
    {
      "id": "Maps_ListByIntegrationAccounts",
      "title": "Maps_ListByIntegrationAccounts",
      "description": "Gets a list of integration account maps.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountMapListResult"
      }
    },
    {
      "id": "Maps_Delete",
      "title": "Maps_Delete",
      "description": "Deletes an integration account map.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "mapName": {
            "type": "string",
            "description": "The integration account map name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Maps_Get",
      "title": "Maps_Get",
      "description": "Gets an integration account map.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "mapName": {
            "type": "string",
            "description": "The integration account map name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountMap"
      }
    },
    {
      "id": "Maps_CreateOrUpdate",
      "title": "Maps_CreateOrUpdate",
      "description": "Creates or updates an integration account map.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "mapName": {
            "type": "string",
            "description": "The integration account map name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "map": {
            "$ref": "#/definitions/IntegrationAccountMap"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountMap"
      }
    },
    {
      "id": "Partners_ListByIntegrationAccounts",
      "title": "Partners_ListByIntegrationAccounts",
      "description": "Gets a list of integration account partners.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountPartnerListResult"
      }
    },
    {
      "id": "Partners_Delete",
      "title": "Partners_Delete",
      "description": "Deletes an integration account partner.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "partnerName": {
            "type": "string",
            "description": "The integration account partner name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Partners_Get",
      "title": "Partners_Get",
      "description": "Gets an integration account partner.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "partnerName": {
            "type": "string",
            "description": "The integration account partner name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountPartner"
      }
    },
    {
      "id": "Partners_CreateOrUpdate",
      "title": "Partners_CreateOrUpdate",
      "description": "Creates or updates an integration account partner.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "partnerName": {
            "type": "string",
            "description": "The integration account partner name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "partner": {
            "$ref": "#/definitions/IntegrationAccountPartner"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountPartner"
      }
    },
    {
      "id": "Schemas_ListByIntegrationAccounts",
      "title": "Schemas_ListByIntegrationAccounts",
      "description": "Gets a list of integration account schemas.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountSchemaListResult"
      }
    },
    {
      "id": "Schemas_Delete",
      "title": "Schemas_Delete",
      "description": "Deletes an integration account schema.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "schemaName": {
            "type": "string",
            "description": "The integration account schema name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Schemas_Get",
      "title": "Schemas_Get",
      "description": "Gets an integration account schema.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "schemaName": {
            "type": "string",
            "description": "The integration account schema name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountSchema"
      }
    },
    {
      "id": "Schemas_CreateOrUpdate",
      "title": "Schemas_CreateOrUpdate",
      "description": "Creates or updates an integration account schema.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "schemaName": {
            "type": "string",
            "description": "The integration account schema name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "schema": {
            "$ref": "#/definitions/IntegrationAccountSchema"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountSchema"
      }
    },
    {
      "id": "Sessions_ListByIntegrationAccounts",
      "title": "Sessions_ListByIntegrationAccounts",
      "description": "Gets a list of integration account sessions.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountSessionListResult"
      }
    },
    {
      "id": "Sessions_Delete",
      "title": "Sessions_Delete",
      "description": "Deletes an integration account session.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "sessionName": {
            "type": "string",
            "description": "The integration account session name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Sessions_Get",
      "title": "Sessions_Get",
      "description": "Gets an integration account session.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "sessionName": {
            "type": "string",
            "description": "The integration account session name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountSession"
      }
    },
    {
      "id": "Sessions_CreateOrUpdate",
      "title": "Sessions_CreateOrUpdate",
      "description": "Creates or updates an integration account session.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "integrationAccountName": {
            "type": "string",
            "description": "The integration account name."
          },
          "sessionName": {
            "type": "string",
            "description": "The integration account session name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "session": {
            "$ref": "#/definitions/IntegrationAccountSession"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/IntegrationAccountSession"
      }
    },
    {
      "id": "Workflows_Validate",
      "title": "Workflows_Validate",
      "description": "Validates the workflow definition.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "location": {
            "type": "string",
            "description": "The workflow location."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "workflow": {
            "$ref": "#/definitions/Workflow"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Workflows_ListByResourceGroup",
      "title": "Workflows_ListByResourceGroup",
      "description": "Gets a list of workflows by resource group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowListResult"
      }
    },
    {
      "id": "Workflows_Delete",
      "title": "Workflows_Delete",
      "description": "Deletes a workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Workflows_Get",
      "title": "Workflows_Get",
      "description": "Gets a workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Workflow"
      }
    },
    {
      "id": "Workflows_Update",
      "title": "Workflows_Update",
      "description": "Updates a workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "workflow": {
            "$ref": "#/definitions/Workflow"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Workflow"
      }
    },
    {
      "id": "Workflows_CreateOrUpdate",
      "title": "Workflows_CreateOrUpdate",
      "description": "Creates or updates a workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "workflow": {
            "$ref": "#/definitions/Workflow"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Workflow"
      }
    },
    {
      "id": "Workflows_Disable",
      "title": "Workflows_Disable",
      "description": "Disables a workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Workflows_Enable",
      "title": "Workflows_Enable",
      "description": "Enables a workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "Workflows_GenerateUpgradedDefinition",
      "title": "Workflows_GenerateUpgradedDefinition",
      "description": "Generates the upgraded definition for a workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "parameters": {
            "$ref": "#/definitions/GenerateUpgradedDefinitionParameters"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Object"
      }
    },
    {
      "id": "Workflows_ListSwagger",
      "title": "Workflows_ListSwagger",
      "description": "Gets an OpenAPI definition for the workflow.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Object"
      }
    },
    {
      "id": "Workflows_RegenerateAccessKey",
      "title": "Workflows_RegenerateAccessKey",
      "description": "Regenerates the callback URL access key for request triggers.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "keyType": {
            "$ref": "#/definitions/RegenerateActionParameter"
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "WorkflowRuns_List",
      "title": "WorkflowRuns_List",
      "description": "Gets a list of workflow runs.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowRunListResult"
      }
    },
    {
      "id": "WorkflowRuns_Get",
      "title": "WorkflowRuns_Get",
      "description": "Gets a workflow run.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "runName": {
            "type": "string",
            "description": "The workflow run name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowRun"
      }
    },
    {
      "id": "WorkflowRunActions_List",
      "title": "WorkflowRunActions_List",
      "description": "Gets a list of workflow run actions.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "runName": {
            "type": "string",
            "description": "The workflow run name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowRunActionListResult"
      }
    },
    {
      "id": "WorkflowRunActions_Get",
      "title": "WorkflowRunActions_Get",
      "description": "Gets a workflow run action.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "runName": {
            "type": "string",
            "description": "The workflow run name."
          },
          "actionName": {
            "type": "string",
            "description": "The workflow action name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowRunAction"
      }
    },
    {
      "id": "WorkflowRuns_Cancel",
      "title": "WorkflowRuns_Cancel",
      "description": "Cancels a workflow run.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "runName": {
            "type": "string",
            "description": "The workflow run name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "WorkflowTriggers_List",
      "title": "WorkflowTriggers_List",
      "description": "Gets a list of workflow triggers.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowTriggerListResult"
      }
    },
    {
      "id": "WorkflowTriggers_Get",
      "title": "WorkflowTriggers_Get",
      "description": "Gets a workflow trigger.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "triggerName": {
            "type": "string",
            "description": "The workflow trigger name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowTrigger"
      }
    },
    {
      "id": "WorkflowTriggerHistories_List",
      "title": "WorkflowTriggerHistories_List",
      "description": "Gets a list of workflow trigger histories.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "triggerName": {
            "type": "string",
            "description": "The workflow trigger name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowTriggerHistoryListResult"
      }
    },
    {
      "id": "WorkflowTriggerHistories_Get",
      "title": "WorkflowTriggerHistories_Get",
      "description": "Gets a workflow trigger history.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "triggerName": {
            "type": "string",
            "description": "The workflow trigger name."
          },
          "historyName": {
            "type": "string",
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowTriggerHistory"
      }
    },
    {
      "id": "WorkflowTriggerHistories_Resubmit",
      "title": "WorkflowTriggerHistories_Resubmit",
      "description": "Resubmits a workflow run based on the trigger history.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "triggerName": {
            "type": "string",
            "description": "The workflow trigger name."
          },
          "historyName": {
            "type": "string",
            "description": "The workflow trigger history name. Corresponds to the run name for triggers that resulted in a run."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "WorkflowTriggers_ListCallbackUrl",
      "title": "WorkflowTriggers_ListCallbackUrl",
      "description": "Gets the callback URL for a workflow trigger.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "triggerName": {
            "type": "string",
            "description": "The workflow trigger name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
      }
    },
    {
      "id": "WorkflowTriggers_Run",
      "title": "WorkflowTriggers_Run",
      "description": "Runs a workflow trigger.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "triggerName": {
            "type": "string",
            "description": "The workflow trigger name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Object"
      }
    },
    {
      "id": "WorkflowVersions_List",
      "title": "WorkflowVersions_List",
      "description": "Gets a list of workflow versions.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The number of items to be included in the result."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowVersionListResult"
      }
    },
    {
      "id": "WorkflowVersions_Get",
      "title": "WorkflowVersions_Get",
      "description": "Gets a workflow version.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "versionId": {
            "type": "string",
            "description": "The workflow versionId."
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowVersion"
      }
    },
    {
      "id": "WorkflowVersions_ListCallbackUrl",
      "title": "WorkflowVersions_ListCallbackUrl",
      "description": "Lists the callback URL for a trigger of a workflow version.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription id."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The resource group name."
          },
          "workflowName": {
            "type": "string",
            "description": "The workflow name."
          },
          "versionId": {
            "type": "string",
            "description": "The workflow versionId."
          },
          "triggerName": {
            "type": "string",
            "description": "The workflow trigger name."
          },
          "parameters": {
            "$ref": "#/definitions/GetCallbackUrlParameters"
          },
          "api-version": {
            "type": "string",
            "description": "The API version."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WorkflowTriggerCallbackUrl"
      }
    }
  ]
}