{
  "id": "amazonaws_monitoring",
  "title": "Amazon CloudWatch",
  "description": "Amazon CloudWatch monitors your Amazon Web Services (AWS) resources and the applications you run on AWS in real time. You can use CloudWatch to collect and track metrics, which are the variables you want to measure for your resources and applications.\n\nCloudWatch alarms send notifications or automatically change the resources you are monitoring based on rules that you define. For example, you can monitor the CPU usage and disk reads and writes of your Amazon EC2 instances. Then, use this data to determine whether you should launch additional instances to handle increased load. You can also use this data to stop under-used instances to save money.\n\nIn addition to monitoring the built-in metrics that come with AWS, you can monitor your own custom metrics. With CloudWatch, you gain system-wide visibility into resource utilization, application performance, and operational health.",
  "security": {
    "amazonaws_monitoring": {
      "integration": "amazonaws_monitoring",
      "accessKeyId": "",
      "secretAccessKey": "",
      "region": "AWS region (if applicable)"
    }
  },
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_monitoring.jpg"
  },
  "actionCount": 11,
  "definitions": {
    "ActionPrefix": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string",
      "title": "ActionPrefix"
    },
    "ActionsEnabled": {
      "type": "boolean",
      "title": "ActionsEnabled"
    },
    "AlarmArn": {
      "maxLength": 1600,
      "minLength": 1,
      "type": "string",
      "title": "AlarmArn"
    },
    "AlarmDescription": {
      "maxLength": 1024,
      "minLength": 0,
      "type": "string",
      "title": "AlarmDescription"
    },
    "AlarmHistoryItem": {
      "description": "Represents the history of a specific alarm.",
      "properties": {
        "AlarmName": {
          "$ref": "#/definitions/AlarmName",
          "description": "The descriptive name for the alarm."
        },
        "HistoryData": {
          "$ref": "#/definitions/HistoryData",
          "description": "Data about the alarm, in JSON format."
        },
        "HistoryItemType": {
          "$ref": "#/definitions/HistoryItemType",
          "description": "The type of alarm history item."
        },
        "HistorySummary": {
          "$ref": "#/definitions/HistorySummary",
          "description": "A summary of the alarm history, in text format."
        },
        "Timestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time stamp for the alarm history item."
        }
      },
      "type": "object",
      "title": "AlarmHistoryItem"
    },
    "AlarmHistoryItems": {
      "items": {
        "$ref": "#/definitions/AlarmHistoryItem"
      },
      "type": "array",
      "title": "AlarmHistoryItems"
    },
    "AlarmName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "AlarmName"
    },
    "AlarmNamePrefix": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "AlarmNamePrefix"
    },
    "AlarmNames": {
      "items": {
        "$ref": "#/definitions/AlarmName"
      },
      "maxItems": 100,
      "type": "array",
      "title": "AlarmNames"
    },
    "AwsQueryErrorMessage": {
      "type": "string",
      "title": "AwsQueryErrorMessage"
    },
    "ComparisonOperator": {
      "enum": [
        "GreaterThanOrEqualToThreshold",
        "GreaterThanThreshold",
        "LessThanThreshold",
        "LessThanOrEqualToThreshold"
      ],
      "type": "string",
      "title": "ComparisonOperator"
    },
    "Datapoint": {
      "description": "Encapsulates the statistical data that Amazon CloudWatch computes from metric data.",
      "properties": {
        "Average": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The average of the metric values that correspond to the data point."
        },
        "ExtendedStatistics": {
          "$ref": "#/definitions/DatapointValueMap",
          "description": "The percentile statistic for the data point."
        },
        "Maximum": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The maximum metric value for the data point."
        },
        "Minimum": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The minimum metric value for the data point."
        },
        "SampleCount": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The number of metric values that contributed to the aggregate value of this data point."
        },
        "Sum": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The sum of the metric values for the data point."
        },
        "Timestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time stamp used for the data point."
        },
        "Unit": {
          "$ref": "#/definitions/StandardUnit",
          "description": "The standard unit for the data point."
        }
      },
      "type": "object",
      "title": "Datapoint"
    },
    "DatapointValue": {
      "format": "double",
      "type": "number",
      "title": "DatapointValue"
    },
    "DatapointValueMap": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/ExtendedStatistic"
          },
          "value": {
            "$ref": "#/definitions/DatapointValue"
          }
        },
        "type": "object"
      },
      "type": "array",
      "title": "DatapointValueMap"
    },
    "Datapoints": {
      "items": {
        "$ref": "#/definitions/Datapoint"
      },
      "type": "array",
      "title": "Datapoints"
    },
    "DeleteAlarmsInput": {
      "properties": {
        "AlarmNames": {
          "$ref": "#/definitions/AlarmNames",
          "description": "The alarms to be deleted."
        }
      },
      "required": [
        "AlarmNames"
      ],
      "type": "object",
      "title": "DeleteAlarmsInput"
    },
    "DescribeAlarmHistoryInput": {
      "properties": {
        "AlarmName": {
          "$ref": "#/definitions/AlarmName",
          "description": "The name of the alarm."
        },
        "EndDate": {
          "$ref": "#/definitions/Timestamp",
          "description": "The ending date to retrieve alarm history."
        },
        "HistoryItemType": {
          "$ref": "#/definitions/HistoryItemType",
          "description": "The type of alarm histories to retrieve."
        },
        "MaxRecords": {
          "$ref": "#/definitions/MaxRecords",
          "description": "The maximum number of alarm history records to retrieve."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned by a previous call to indicate that there is more data available."
        },
        "StartDate": {
          "$ref": "#/definitions/Timestamp",
          "description": "The starting date to retrieve alarm history."
        }
      },
      "type": "object",
      "title": "DescribeAlarmHistoryInput"
    },
    "DescribeAlarmHistoryOutput": {
      "properties": {
        "AlarmHistoryItems": {
          "$ref": "#/definitions/AlarmHistoryItems",
          "description": "The alarm histories, in JSON format."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token that marks the start of the next batch of returned results."
        }
      },
      "type": "object",
      "title": "DescribeAlarmHistoryOutput"
    },
    "DescribeAlarmsForMetricInput": {
      "properties": {
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The dimensions associated with the metric. If the metric has any associated dimensions, you must specify them in order for the call to succeed."
        },
        "ExtendedStatistic": {
          "$ref": "#/definitions/ExtendedStatistic",
          "description": "The percentile statistic for the metric. Specify a value between p0.0 and p100."
        },
        "MetricName": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metric."
        },
        "Namespace": {
          "$ref": "#/definitions/Namespace",
          "description": "The namespace of the metric."
        },
        "Period": {
          "$ref": "#/definitions/Period",
          "description": "The period, in seconds, over which the statistic is applied."
        },
        "Statistic": {
          "$ref": "#/definitions/Statistic",
          "description": "The statistic for the metric, other than percentiles. For percentile statistics, use <code>ExtendedStatistics</code>."
        },
        "Unit": {
          "$ref": "#/definitions/StandardUnit",
          "description": "The unit for the metric."
        }
      },
      "required": [
        "MetricName",
        "Namespace"
      ],
      "type": "object",
      "title": "DescribeAlarmsForMetricInput"
    },
    "DescribeAlarmsForMetricOutput": {
      "properties": {
        "MetricAlarms": {
          "$ref": "#/definitions/MetricAlarms",
          "description": "The information for each alarm with the specified metric."
        }
      },
      "type": "object",
      "title": "DescribeAlarmsForMetricOutput"
    },
    "DescribeAlarmsInput": {
      "properties": {
        "ActionPrefix": {
          "$ref": "#/definitions/ActionPrefix",
          "description": "The action name prefix."
        },
        "AlarmNamePrefix": {
          "$ref": "#/definitions/AlarmNamePrefix",
          "description": "The alarm name prefix. You cannot specify <code>AlarmNames</code> if this parameter is specified."
        },
        "AlarmNames": {
          "$ref": "#/definitions/AlarmNames",
          "description": "The names of the alarms."
        },
        "MaxRecords": {
          "$ref": "#/definitions/MaxRecords",
          "description": "The maximum number of alarm descriptions to retrieve."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned by a previous call to indicate that there is more data available."
        },
        "StateValue": {
          "$ref": "#/definitions/StateValue",
          "description": "The state value to be used in matching alarms."
        }
      },
      "type": "object",
      "title": "DescribeAlarmsInput"
    },
    "DescribeAlarmsOutput": {
      "properties": {
        "MetricAlarms": {
          "$ref": "#/definitions/MetricAlarms",
          "description": "The information for the specified alarms."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token that marks the start of the next batch of returned results."
        }
      },
      "type": "object",
      "title": "DescribeAlarmsOutput"
    },
    "Dimension": {
      "description": "Expands the identity of a metric.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/DimensionName",
          "description": "The name of the dimension."
        },
        "Value": {
          "$ref": "#/definitions/DimensionValue",
          "description": "The value representing the dimension measurement."
        }
      },
      "required": [
        "Name",
        "Value"
      ],
      "type": "object",
      "title": "Dimension"
    },
    "DimensionFilter": {
      "description": "Represents filters for a dimension.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/DimensionName",
          "description": "The dimension name to be matched."
        },
        "Value": {
          "$ref": "#/definitions/DimensionValue",
          "description": "The value of the dimension to be matched."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object",
      "title": "DimensionFilter"
    },
    "DimensionFilters": {
      "items": {
        "$ref": "#/definitions/DimensionFilter"
      },
      "maxItems": 10,
      "type": "array",
      "title": "DimensionFilters"
    },
    "DimensionName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "DimensionName"
    },
    "DimensionValue": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "DimensionValue"
    },
    "Dimensions": {
      "items": {
        "$ref": "#/definitions/Dimension"
      },
      "maxItems": 10,
      "type": "array",
      "title": "Dimensions"
    },
    "DisableAlarmActionsInput": {
      "properties": {
        "AlarmNames": {
          "$ref": "#/definitions/AlarmNames",
          "description": "The names of the alarms."
        }
      },
      "required": [
        "AlarmNames"
      ],
      "type": "object",
      "title": "DisableAlarmActionsInput"
    },
    "EnableAlarmActionsInput": {
      "properties": {
        "AlarmNames": {
          "$ref": "#/definitions/AlarmNames",
          "description": "The names of the alarms."
        }
      },
      "required": [
        "AlarmNames"
      ],
      "type": "object",
      "title": "EnableAlarmActionsInput"
    },
    "ErrorMessage": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "ErrorMessage"
    },
    "EvaluateLowSampleCountPercentile": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "EvaluateLowSampleCountPercentile"
    },
    "EvaluationPeriods": {
      "minimum": 1,
      "type": "integer",
      "title": "EvaluationPeriods"
    },
    "ExtendedStatistic": {
      "pattern": "p(\\d{1,2}(\\.\\d{0,2})?|100)",
      "type": "string",
      "title": "ExtendedStatistic"
    },
    "ExtendedStatistics": {
      "items": {
        "$ref": "#/definitions/ExtendedStatistic"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array",
      "title": "ExtendedStatistics"
    },
    "FaultDescription": {
      "type": "string",
      "title": "FaultDescription"
    },
    "GetMetricStatisticsInput": {
      "properties": {
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The dimensions. If the metric contains multiple dimensions, you must include a value for each dimension. CloudWatch treats each unique combination of dimensions as a separate metric. You can't retrieve statistics using combinations of dimensions that were not specially published. You must specify the same dimensions that were used when the metrics were created. For an example, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_concepts.html#dimension-combinations\">Dimension Combinations</a> in the <i>Amazon CloudWatch User Guide</i>. For more information on specifying dimensions, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html\">Publishing Metrics</a> in the <i>Amazon CloudWatch User Guide</i>."
        },
        "EndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "<p>The time stamp that determines the last data point to return.</p> <p>The value specified is exclusive; results will include data points up to the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-10T23:00:00Z).</p>"
        },
        "ExtendedStatistics": {
          "$ref": "#/definitions/ExtendedStatistics",
          "description": "The percentile statistics. Specify values between p0.0 and p100."
        },
        "MetricName": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metric, with or without spaces."
        },
        "Namespace": {
          "$ref": "#/definitions/Namespace",
          "description": "The namespace of the metric, with or without spaces."
        },
        "Period": {
          "$ref": "#/definitions/Period",
          "description": "<p>The granularity, in seconds, of the returned data points. A period can be as short as one minute (60 seconds) and must be a multiple of 60. The default value is 60.</p> <p>If the <code>StartTime</code> parameter specifies a time stamp that is greater than 15 days ago, you must specify the period as follows or no data points in that time range is returned:</p> <ul> <li> <p>Start time between 15 and 63 days ago - Use a multiple of 300 seconds (5 minutes).</p> </li> <li> <p>Start time greater than 63 days ago - Use a multiple of 3600 seconds (1 hour).</p> </li> </ul>"
        },
        "StartTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "<p>The time stamp that determines the first data point to return. Note that start times are evaluated relative to the time that CloudWatch receives the request.</p> <p>The value specified is inclusive; results include data points with the specified time stamp. The time stamp must be in ISO 8601 UTC format (for example, 2016-10-03T23:00:00Z).</p> <p>CloudWatch rounds the specified time stamp as follows:</p> <ul> <li> <p>Start time less than 15 days ago - Round down to the nearest whole minute. For example, 12:32:34 is rounded down to 12:32:00.</p> </li> <li> <p>Start time between 15 and 63 days ago - Round down to the nearest 5-minute clock interval. For example, 12:32:34 is rounded down to 12:30:00.</p> </li> <li> <p>Start time greater than 63 days ago - Round down to the nearest 1-hour clock interval. For example, 12:32:34 is rounded down to 12:00:00.</p> </li> </ul>"
        },
        "Statistics": {
          "$ref": "#/definitions/Statistics",
          "description": "The metric statistics, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>."
        },
        "Unit": {
          "$ref": "#/definitions/StandardUnit",
          "description": "The unit for a given metric. Metrics may be reported in multiple units. Not supplying a unit results in all units being returned. If the metric only ever reports one unit, specifying a unit has no effect."
        }
      },
      "required": [
        "Namespace",
        "MetricName",
        "StartTime",
        "EndTime",
        "Period"
      ],
      "type": "object",
      "title": "GetMetricStatisticsInput"
    },
    "GetMetricStatisticsOutput": {
      "properties": {
        "Datapoints": {
          "$ref": "#/definitions/Datapoints",
          "description": "The data points for the specified metric."
        },
        "Label": {
          "$ref": "#/definitions/MetricLabel",
          "description": "A label for the specified metric."
        }
      },
      "type": "object",
      "title": "GetMetricStatisticsOutput"
    },
    "HistoryData": {
      "maxLength": 4095,
      "minLength": 1,
      "type": "string",
      "title": "HistoryData"
    },
    "HistoryItemType": {
      "enum": [
        "ConfigurationUpdate",
        "StateUpdate",
        "Action"
      ],
      "type": "string",
      "title": "HistoryItemType"
    },
    "HistorySummary": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "HistorySummary"
    },
    "InternalServiceFault": {
      "description": "Request processing has failed due to some unknown error, exception, or failure.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/FaultDescription",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InternalServiceFault"
    },
    "InvalidFormatFault": {
      "description": "Data was not syntactically valid JSON.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InvalidFormatFault"
    },
    "InvalidNextToken": {
      "description": "The next token specified is invalid.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InvalidNextToken"
    },
    "InvalidParameterCombinationException": {
      "description": "Parameters that cannot be used together were used together.",
      "properties": {
        "message": {
          "$ref": "#/definitions/AwsQueryErrorMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InvalidParameterCombinationException"
    },
    "InvalidParameterValueException": {
      "description": "The value of an input parameter is bad or out-of-range.",
      "properties": {
        "message": {
          "$ref": "#/definitions/AwsQueryErrorMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InvalidParameterValueException"
    },
    "LimitExceededFault": {
      "description": "The quota for alarms for this customer has already been reached.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "LimitExceededFault"
    },
    "ListMetricsInput": {
      "properties": {
        "Dimensions": {
          "$ref": "#/definitions/DimensionFilters",
          "description": "The dimensions to filter against."
        },
        "MetricName": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metric to filter against."
        },
        "Namespace": {
          "$ref": "#/definitions/Namespace",
          "description": "The namespace to filter against."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned by a previous call to indicate that there is more data available."
        }
      },
      "type": "object",
      "title": "ListMetricsInput"
    },
    "ListMetricsOutput": {
      "properties": {
        "Metrics": {
          "$ref": "#/definitions/Metrics",
          "description": "The metrics."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token that marks the start of the next batch of returned results."
        }
      },
      "type": "object",
      "title": "ListMetricsOutput"
    },
    "MaxRecords": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer",
      "title": "MaxRecords"
    },
    "Metric": {
      "description": "Represents a specific metric.",
      "properties": {
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The dimensions for the metric."
        },
        "MetricName": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metric."
        },
        "Namespace": {
          "$ref": "#/definitions/Namespace",
          "description": "The namespace of the metric."
        }
      },
      "type": "object",
      "title": "Metric"
    },
    "MetricAlarm": {
      "description": "Represents an alarm.",
      "properties": {
        "ActionsEnabled": {
          "$ref": "#/definitions/ActionsEnabled",
          "description": "Indicates whether actions should be executed during any changes to the alarm state."
        },
        "AlarmActions": {
          "$ref": "#/definitions/ResourceList",
          "description": "The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN)."
        },
        "AlarmArn": {
          "$ref": "#/definitions/AlarmArn",
          "description": "The Amazon Resource Name (ARN) of the alarm."
        },
        "AlarmConfigurationUpdatedTimestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time stamp of the last update to the alarm configuration."
        },
        "AlarmDescription": {
          "$ref": "#/definitions/AlarmDescription",
          "description": "The description of the alarm."
        },
        "AlarmName": {
          "$ref": "#/definitions/AlarmName",
          "description": "The name of the alarm."
        },
        "ComparisonOperator": {
          "$ref": "#/definitions/ComparisonOperator",
          "description": "The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand."
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The dimensions for the metric associated with the alarm."
        },
        "EvaluateLowSampleCountPercentile": {
          "$ref": "#/definitions/EvaluateLowSampleCountPercentile"
        },
        "EvaluationPeriods": {
          "$ref": "#/definitions/EvaluationPeriods",
          "description": "The number of periods over which data is compared to the specified threshold."
        },
        "ExtendedStatistic": {
          "$ref": "#/definitions/ExtendedStatistic",
          "description": "The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100."
        },
        "InsufficientDataActions": {
          "$ref": "#/definitions/ResourceList",
          "description": "The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN)."
        },
        "MetricName": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metric associated with the alarm."
        },
        "Namespace": {
          "$ref": "#/definitions/Namespace",
          "description": "The namespace of the metric associated with the alarm."
        },
        "OKActions": {
          "$ref": "#/definitions/ResourceList",
          "description": "The actions to execute when this alarm transitions to the <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN)."
        },
        "Period": {
          "$ref": "#/definitions/Period",
          "description": "The period, in seconds, over which the statistic is applied."
        },
        "StateReason": {
          "$ref": "#/definitions/StateReason",
          "description": "An explanation for the alarm state, in text format."
        },
        "StateReasonData": {
          "$ref": "#/definitions/StateReasonData",
          "description": "An explanation for the alarm state, in JSON format."
        },
        "StateUpdatedTimestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time stamp of the last update to the alarm state."
        },
        "StateValue": {
          "$ref": "#/definitions/StateValue",
          "description": "The state value for the alarm."
        },
        "Statistic": {
          "$ref": "#/definitions/Statistic",
          "description": "The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>."
        },
        "Threshold": {
          "$ref": "#/definitions/Threshold",
          "description": "The value to compare with the specified statistic."
        },
        "TreatMissingData": {
          "$ref": "#/definitions/TreatMissingData"
        },
        "Unit": {
          "$ref": "#/definitions/StandardUnit",
          "description": "The unit of the metric associated with the alarm."
        }
      },
      "type": "object",
      "title": "MetricAlarm"
    },
    "MetricAlarms": {
      "items": {
        "$ref": "#/definitions/MetricAlarm"
      },
      "type": "array",
      "title": "MetricAlarms"
    },
    "MetricData": {
      "items": {
        "$ref": "#/definitions/MetricDatum"
      },
      "type": "array",
      "title": "MetricData"
    },
    "MetricDatum": {
      "description": "Encapsulates the information sent to either create a metric or add new values to be aggregated into an existing metric.",
      "properties": {
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The dimensions associated with the metric."
        },
        "MetricName": {
          "$ref": "#/definitions/MetricName",
          "description": "The name of the metric."
        },
        "StatisticValues": {
          "$ref": "#/definitions/StatisticSet",
          "description": "The statistical values for the metric."
        },
        "Timestamp": {
          "$ref": "#/definitions/Timestamp",
          "description": "The time the metric data was received, expressed as the number of milliseconds since Jan 1, 1970 00:00:00 UTC."
        },
        "Unit": {
          "$ref": "#/definitions/StandardUnit",
          "description": "The unit of the metric."
        },
        "Value": {
          "$ref": "#/definitions/DatapointValue",
          "description": "<p>The value for the metric.</p> <p>Although the parameter accepts numbers of type Double, Amazon CloudWatch rejects values that are either too small or too large. Values must be in the range of 8.515920e-109 to 1.174271e+108 (Base 10) or 2e-360 to 2e360 (Base 2). In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.</p>"
        }
      },
      "required": [
        "MetricName"
      ],
      "type": "object",
      "title": "MetricDatum"
    },
    "MetricLabel": {
      "type": "string",
      "title": "MetricLabel"
    },
    "MetricName": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "MetricName"
    },
    "Metrics": {
      "items": {
        "$ref": "#/definitions/Metric"
      },
      "type": "array",
      "title": "Metrics"
    },
    "MissingRequiredParameterException": {
      "description": "An input parameter that is required is missing.",
      "properties": {
        "message": {
          "$ref": "#/definitions/AwsQueryErrorMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "MissingRequiredParameterException"
    },
    "Namespace": {
      "maxLength": 255,
      "minLength": 1,
      "pattern": "[^:].*",
      "type": "string",
      "title": "Namespace"
    },
    "NextToken": {
      "maxLength": 1024,
      "minLength": 0,
      "type": "string",
      "title": "NextToken"
    },
    "Period": {
      "minimum": 60,
      "type": "integer",
      "title": "Period"
    },
    "PutMetricAlarmInput": {
      "properties": {
        "ActionsEnabled": {
          "$ref": "#/definitions/ActionsEnabled",
          "description": "Indicates whether actions should be executed during any changes to the alarm state."
        },
        "AlarmActions": {
          "$ref": "#/definitions/ResourceList",
          "description": "<p>The actions to execute when this alarm transitions to the <code>ALARM</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: arn:aws:automate:<i>region</i>:ec2:stop | arn:aws:automate:<i>region</i>:ec2:terminate | arn:aws:automate:<i>region</i>:ec2:recover</p> <p>Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0</p>"
        },
        "AlarmDescription": {
          "$ref": "#/definitions/AlarmDescription",
          "description": "The description for the alarm."
        },
        "AlarmName": {
          "$ref": "#/definitions/AlarmName",
          "description": "The name for the alarm. This name must be unique within the AWS account."
        },
        "ComparisonOperator": {
          "$ref": "#/definitions/ComparisonOperator",
          "description": " The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand."
        },
        "Dimensions": {
          "$ref": "#/definitions/Dimensions",
          "description": "The dimensions for the metric associated with the alarm."
        },
        "EvaluateLowSampleCountPercentile": {
          "$ref": "#/definitions/EvaluateLowSampleCountPercentile",
          "description": "<p> Used only for alarms based on percentiles. If you specify <code>ignore</code>, the alarm state will not change during periods with too few data points to be statistically significant. If you specify <code>evaluate</code> or omit this parameter, the alarm will always be evaluated and possibly change state no matter how many data points are available. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#percentiles-with-low-samples\">Percentile-Based CloudWatch Alarms and Low Data Samples</a>.</p> <p>Valid Values: <code>evaluate | ignore</code> </p>"
        },
        "EvaluationPeriods": {
          "$ref": "#/definitions/EvaluationPeriods",
          "description": "The number of periods over which data is compared to the specified threshold."
        },
        "ExtendedStatistic": {
          "$ref": "#/definitions/ExtendedStatistic",
          "description": "The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100."
        },
        "InsufficientDataActions": {
          "$ref": "#/definitions/ResourceList",
          "description": "<p>The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: arn:aws:automate:<i>region</i>:ec2:stop | arn:aws:automate:<i>region</i>:ec2:terminate | arn:aws:automate:<i>region</i>:ec2:recover</p> <p>Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0</p>"
        },
        "MetricName": {
          "$ref": "#/definitions/MetricName",
          "description": "The name for the metric associated with the alarm."
        },
        "Namespace": {
          "$ref": "#/definitions/Namespace",
          "description": "The namespace for the metric associated with the alarm."
        },
        "OKActions": {
          "$ref": "#/definitions/ResourceList",
          "description": "<p>The actions to execute when this alarm transitions to an <code>OK</code> state from any other state. Each action is specified as an Amazon Resource Name (ARN).</p> <p>Valid Values: arn:aws:automate:<i>region</i>:ec2:stop | arn:aws:automate:<i>region</i>:ec2:terminate | arn:aws:automate:<i>region</i>:ec2:recover</p> <p>Valid Values (for use with IAM roles): arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Stop/1.0 | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Terminate/1.0 | arn:aws:swf:us-east-1:{<i>customer-account</i>}:action/actions/AWS_EC2.InstanceId.Reboot/1.0</p>"
        },
        "Period": {
          "$ref": "#/definitions/Period",
          "description": "The period, in seconds, over which the specified statistic is applied."
        },
        "Statistic": {
          "$ref": "#/definitions/Statistic",
          "description": "The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>."
        },
        "Threshold": {
          "$ref": "#/definitions/Threshold",
          "description": "The value against which the specified statistic is compared."
        },
        "TreatMissingData": {
          "$ref": "#/definitions/TreatMissingData",
          "description": "<p> Sets how this alarm is to handle missing data points. If <code>TreatMissingData</code> is omitted, the default behavior of <code>missing</code> is used. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarms-and-missing-data\">Configuring How CloudWatch Alarms Treats Missing Data</a>.</p> <p>Valid Values: <code>breaching | notBreaching | ignore | missing</code> </p>"
        },
        "Unit": {
          "$ref": "#/definitions/StandardUnit",
          "description": "<p>The unit of measure for the statistic. For example, the units for the Amazon EC2 NetworkIn metric are Bytes because NetworkIn tracks the number of bytes that an instance receives on all network interfaces. You can also specify a unit when you create a custom metric. Units help provide conceptual meaning to your data. Metric data points that specify a unit of measure, such as Percent, are aggregated separately.</p> <p>If you specify a unit, you must use a unit that is appropriate for the metric. Otherwise, the Amazon CloudWatch alarm can get stuck in the <code>INSUFFICIENT DATA</code> state. </p>"
        }
      },
      "required": [
        "AlarmName",
        "MetricName",
        "Namespace",
        "Period",
        "EvaluationPeriods",
        "Threshold",
        "ComparisonOperator"
      ],
      "type": "object",
      "title": "PutMetricAlarmInput"
    },
    "PutMetricDataInput": {
      "properties": {
        "MetricData": {
          "$ref": "#/definitions/MetricData",
          "description": "The data for the metric."
        },
        "Namespace": {
          "$ref": "#/definitions/Namespace",
          "description": "<p>The namespace for the metric data.</p> <p>You cannot specify a namespace that begins with \"AWS/\". Namespaces that begin with \"AWS/\" are reserved for use by Amazon Web Services products.</p>"
        }
      },
      "required": [
        "Namespace",
        "MetricData"
      ],
      "type": "object",
      "title": "PutMetricDataInput"
    },
    "ResourceList": {
      "items": {
        "$ref": "#/definitions/ResourceName"
      },
      "maxItems": 5,
      "type": "array",
      "title": "ResourceList"
    },
    "ResourceName": {
      "maxLength": 1024,
      "minLength": 1,
      "type": "string",
      "title": "ResourceName"
    },
    "ResourceNotFound": {
      "description": "The named resource does not exist.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "ResourceNotFound"
    },
    "SetAlarmStateInput": {
      "properties": {
        "AlarmName": {
          "$ref": "#/definitions/AlarmName",
          "description": "The name for the alarm. This name must be unique within the AWS account. The maximum length is 255 characters."
        },
        "StateReason": {
          "$ref": "#/definitions/StateReason",
          "description": "The reason that this alarm is set to this specific state, in text format."
        },
        "StateReasonData": {
          "$ref": "#/definitions/StateReasonData",
          "description": "The reason that this alarm is set to this specific state, in JSON format."
        },
        "StateValue": {
          "$ref": "#/definitions/StateValue",
          "description": "The value of the state."
        }
      },
      "required": [
        "AlarmName",
        "StateValue",
        "StateReason"
      ],
      "type": "object",
      "title": "SetAlarmStateInput"
    },
    "StandardUnit": {
      "enum": [
        "Seconds",
        "Microseconds",
        "Milliseconds",
        "Bytes",
        "Kilobytes",
        "Megabytes",
        "Gigabytes",
        "Terabytes",
        "Bits",
        "Kilobits",
        "Megabits",
        "Gigabits",
        "Terabits",
        "Percent",
        "Count",
        "Bytes/Second",
        "Kilobytes/Second",
        "Megabytes/Second",
        "Gigabytes/Second",
        "Terabytes/Second",
        "Bits/Second",
        "Kilobits/Second",
        "Megabits/Second",
        "Gigabits/Second",
        "Terabits/Second",
        "Count/Second",
        "None"
      ],
      "type": "string",
      "title": "StandardUnit"
    },
    "StateReason": {
      "maxLength": 1023,
      "minLength": 0,
      "type": "string",
      "title": "StateReason"
    },
    "StateReasonData": {
      "maxLength": 4000,
      "minLength": 0,
      "type": "string",
      "title": "StateReasonData"
    },
    "StateValue": {
      "enum": [
        "OK",
        "ALARM",
        "INSUFFICIENT_DATA"
      ],
      "type": "string",
      "title": "StateValue"
    },
    "Statistic": {
      "enum": [
        "SampleCount",
        "Average",
        "Sum",
        "Minimum",
        "Maximum"
      ],
      "type": "string",
      "title": "Statistic"
    },
    "StatisticSet": {
      "description": "Represents a set of statistics that describes a specific metric. ",
      "properties": {
        "Maximum": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The maximum value of the sample set."
        },
        "Minimum": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The minimum value of the sample set."
        },
        "SampleCount": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The number of samples used for the statistic set."
        },
        "Sum": {
          "$ref": "#/definitions/DatapointValue",
          "description": "The sum of values for the sample set."
        }
      },
      "required": [
        "SampleCount",
        "Sum",
        "Minimum",
        "Maximum"
      ],
      "type": "object",
      "title": "StatisticSet"
    },
    "Statistics": {
      "items": {
        "$ref": "#/definitions/Statistic"
      },
      "maxItems": 5,
      "minItems": 1,
      "type": "array",
      "title": "Statistics"
    },
    "Threshold": {
      "format": "double",
      "type": "number",
      "title": "Threshold"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string",
      "title": "Timestamp"
    },
    "TreatMissingData": {
      "maxLength": 255,
      "minLength": 1,
      "type": "string",
      "title": "TreatMissingData"
    }
  },
  "actions": [
    {
      "id": "DeleteAlarms",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteAlarmsInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "DescribeAlarmHistory",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeAlarmHistoryInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeAlarmHistoryOutput"
      },
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "DescribeAlarms",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeAlarmsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeAlarmsOutput"
      },
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "DescribeAlarmsForMetric",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeAlarmsForMetricInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeAlarmsForMetricOutput"
      },
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "DisableAlarmActions",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DisableAlarmActionsInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "EnableAlarmActions",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/EnableAlarmActionsInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "GetMetricStatistics",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetMetricStatisticsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetMetricStatisticsOutput"
      },
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "ListMetrics",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListMetricsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListMetricsOutput"
      },
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "PutMetricAlarm",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutMetricAlarmInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "PutMetricData",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutMetricDataInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    },
    {
      "id": "SetAlarmState",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/SetAlarmStateInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_monitoring": {
          "integration": "amazonaws_monitoring"
        }
      }
    }
  ],
  "tags": [
    "cloud",
    "aws"
  ]
}