{
  "id": "azure_arm_postgresql",
  "title": "PostgreSQLManagementClient",
  "description": "The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, log files and configurations.",
  "security": {
    "azure_arm_postgresql": {
      "integration": "azure_arm_postgresql",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "description": "Azure Active Directory OAuth2 Flow",
        "flow": "implicit",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        },
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/azure_arm_postgresql.png"
  },
  "actionCount": 19,
  "definitions": {
    "Configuration": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Configuration.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigurationProperties",
          "description": "The properties of a configuration.",
          "x-ms-client-flatten": true
        }
      },
      "title": "Configuration"
    },
    "ConfigurationListResult": {
      "description": "A list of server configurations.",
      "properties": {
        "value": {
          "description": "The list of server configurations.",
          "items": {
            "$ref": "#/definitions/Configuration"
          },
          "type": "array"
        }
      },
      "title": "ConfigurationListResult"
    },
    "ConfigurationProperties": {
      "description": "The properties of a configuration.",
      "properties": {
        "allowedValues": {
          "description": "Allowed values of the configuration.",
          "readOnly": true,
          "type": "string"
        },
        "dataType": {
          "description": "Data type of the configuration.",
          "readOnly": true,
          "type": "string"
        },
        "defaultValue": {
          "description": "Default value of the configuration.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of the configuration.",
          "readOnly": true,
          "type": "string"
        },
        "source": {
          "description": "Source of the configuration.",
          "type": "string"
        },
        "value": {
          "description": "Value of the configuration.",
          "type": "string"
        }
      },
      "title": "ConfigurationProperties"
    },
    "Database": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a Database.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "The properties of a database.",
          "x-ms-client-flatten": true
        }
      },
      "title": "Database"
    },
    "DatabaseListResult": {
      "description": "A List of databases.",
      "properties": {
        "value": {
          "description": "The list of databases housed in a server",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "type": "array"
        }
      },
      "title": "DatabaseListResult"
    },
    "DatabaseProperties": {
      "description": "The properties of a database.",
      "properties": {
        "charset": {
          "description": "The charset of the database.",
          "type": "string"
        },
        "collation": {
          "description": "The collation of the database.",
          "type": "string"
        }
      },
      "title": "DatabaseProperties"
    },
    "FirewallRule": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a server firewall rule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FirewallRuleProperties",
          "description": "The properties of a firewall rule.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "title": "FirewallRule"
    },
    "FirewallRuleListResult": {
      "description": "A list of firewall rules.",
      "properties": {
        "value": {
          "description": "The list of firewall rules in a server.",
          "items": {
            "$ref": "#/definitions/FirewallRule"
          },
          "type": "array"
        }
      },
      "title": "FirewallRuleListResult"
    },
    "FirewallRuleProperties": {
      "description": "The properties of a server firewall rule.",
      "properties": {
        "endIpAddress": {
          "description": "The end IP address of the server firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "type": "string"
        },
        "startIpAddress": {
          "description": "The start IP address of the server firewall rule. Must be IPv4 format.",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "type": "string"
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "title": "FirewallRuleProperties"
    },
    "LogFile": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a log file.",
      "properties": {
        "name": {
          "description": "The name of the log file.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/LogFileProperties",
          "description": "The properties of the log file.",
          "x-ms-client-flatten": true
        }
      },
      "title": "LogFile"
    },
    "LogFileListResult": {
      "description": "A list of log files.",
      "properties": {
        "value": {
          "description": "The list of log files.",
          "items": {
            "$ref": "#/definitions/LogFile"
          },
          "type": "array"
        }
      },
      "title": "LogFileListResult"
    },
    "LogFileProperties": {
      "description": "The properties of a log file.",
      "properties": {
        "createdTime": {
          "description": "Creation timestamp of the log file.",
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedTime": {
          "description": "Last modified timestamp of the log file.",
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "Log file name.",
          "type": "string"
        },
        "sizeInKB": {
          "description": "Size of the log file.",
          "format": "int64",
          "type": "integer"
        },
        "type": {
          "description": "Type of the log file.",
          "type": "string"
        },
        "url": {
          "description": "The url to download the log file from.",
          "type": "string"
        }
      },
      "title": "LogFileProperties"
    },
    "Operation": {
      "description": "REST API operation definition.",
      "properties": {
        "display": {
          "$ref": "#/definitions/OperationDisplay",
          "description": "The localized display information for this particular operation or action.",
          "readOnly": true
        },
        "name": {
          "description": "The name of the operation being performed on this particular object.",
          "readOnly": true,
          "type": "string"
        },
        "origin": {
          "description": "The intended executor of the operation.",
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "OperationOrigin"
          }
        },
        "properties": {
          "additionalProperties": {
            "type": "object"
          },
          "description": "Additional descriptions for the operation.",
          "readOnly": true,
          "type": "object",
          "x-ms-client-flatten": false
        }
      },
      "title": "Operation"
    },
    "OperationDisplay": {
      "description": "Display metadata associated with the operation.",
      "properties": {
        "description": {
          "description": "Operation description.",
          "readOnly": true,
          "type": "string"
        },
        "operation": {
          "description": "Localized friendly name for the operation.",
          "readOnly": true,
          "type": "string"
        },
        "provider": {
          "description": "Operation resource provider name.",
          "readOnly": true,
          "type": "string"
        },
        "resource": {
          "description": "Resource on which the operation is performed.",
          "readOnly": true,
          "type": "string"
        }
      },
      "title": "OperationDisplay"
    },
    "OperationListResult": {
      "description": "A list of resource provider operations.",
      "properties": {
        "value": {
          "description": "The list of resource provider operations.",
          "items": {
            "$ref": "#/definitions/Operation"
          },
          "type": "array"
        }
      },
      "title": "OperationListResult"
    },
    "ProxyResource": {
      "description": "Resource properties.",
      "properties": {
        "id": {
          "description": "Resource ID",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Resource name.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "x-ms-azure-resource": true,
      "title": "ProxyResource"
    },
    "Server": {
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a server.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServerProperties",
          "description": "Properties of the server.",
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        }
      },
      "title": "Server"
    },
    "ServerForCreate": {
      "description": "Represents a server to be created.",
      "properties": {
        "location": {
          "description": "The location the resource resides in.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ServerPropertiesForCreate",
          "description": "Properties of the server.",
          "x-ms-client-flatten": false
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs.",
          "type": "object"
        }
      },
      "required": [
        "properties",
        "location"
      ],
      "title": "ServerForCreate"
    },
    "ServerListResult": {
      "description": "A list of servers.",
      "properties": {
        "value": {
          "description": "The list of servers",
          "items": {
            "$ref": "#/definitions/Server"
          },
          "type": "array"
        }
      },
      "title": "ServerListResult"
    },
    "ServerProperties": {
      "description": "The properties of a server.",
      "properties": {
        "administratorLogin": {
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "type": "string"
        },
        "fullyQualifiedDomainName": {
          "description": "The fully qualified domain name of a server.",
          "type": "string"
        },
        "sslEnforcement": {
          "$ref": "#/definitions/SslEnforcement",
          "description": "Enable ssl enforcement or not when connect to server."
        },
        "storageMB": {
          "description": "The maximum storage allowed for a server.",
          "format": "int64",
          "minimum": 1024,
          "type": "integer"
        },
        "userVisibleState": {
          "description": "A state of a server that is visible to user.",
          "enum": [
            "Ready",
            "Dropping",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServerState"
          }
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        }
      },
      "title": "ServerProperties"
    },
    "ServerPropertiesForCreate": {
      "description": "The properties used to create a new server.",
      "discriminator": "createMode",
      "properties": {
        "createMode": {
          "description": "The mode to create a new server.",
          "enum": [
            "Default",
            "PointInTimeRestore"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CreateMode"
          }
        },
        "sslEnforcement": {
          "$ref": "#/definitions/SslEnforcement",
          "description": "Enable ssl enforcement or not when connect to server."
        },
        "storageMB": {
          "description": "The maximum storage allowed for a server.",
          "format": "int64",
          "minimum": 1024,
          "type": "integer"
        },
        "version": {
          "$ref": "#/definitions/ServerVersion",
          "description": "Server version."
        }
      },
      "required": [
        "createMode"
      ],
      "title": "ServerPropertiesForCreate"
    },
    "ServerPropertiesForDefaultCreate": {
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "description": "The properties used to create a new server.",
      "properties": {
        "administratorLogin": {
          "description": "The administrator's login name of a server. Can only be specified when the server is being created (and is required for creation).",
          "type": "string"
        },
        "administratorLoginPassword": {
          "description": "The password of the administrator login.",
          "format": "password",
          "type": "string"
        }
      },
      "required": [
        "administratorLogin",
        "administratorLoginPassword"
      ],
      "x-ms-discriminator-value": "Default",
      "title": "ServerPropertiesForDefaultCreate"
    },
    "ServerPropertiesForRestore": {
      "allOf": [
        {
          "$ref": "#/definitions/ServerPropertiesForCreate"
        }
      ],
      "description": "The properties to a new server by restoring from a backup.",
      "properties": {
        "restorePointInTime": {
          "description": "Restore point creation time (ISO8601 format), specifying the time to restore from.",
          "format": "date-time",
          "type": "string"
        },
        "sourceServerId": {
          "description": "The source server id to restore from.",
          "type": "string"
        }
      },
      "required": [
        "sourceServerId",
        "restorePointInTime"
      ],
      "x-ms-discriminator-value": "PointInTimeRestore",
      "title": "ServerPropertiesForRestore"
    },
    "ServerUpdateParameters": {
      "description": "Parameters allowd to update for a server.",
      "properties": {
        "properties": {
          "description": "The properties that can be updated for a server.",
          "properties": {
            "administratorLoginPassword": {
              "description": "The password of the administrator login.",
              "format": "password",
              "type": "string"
            },
            "sslEnforcement": {
              "$ref": "#/definitions/SslEnforcement",
              "description": "Enable ssl enforcement or not when connect to server."
            },
            "storageMB": {
              "description": "The max storage allowed for a server.",
              "format": "int64",
              "minimum": 1024,
              "type": "integer"
            },
            "version": {
              "$ref": "#/definitions/ServerVersion",
              "description": "The version of a server."
            }
          },
          "x-ms-client-flatten": true
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "The SKU (pricing tier) of the server."
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs.",
          "type": "object"
        }
      },
      "title": "ServerUpdateParameters"
    },
    "ServerVersion": {
      "description": "The version of a server.",
      "enum": [
        "9.5",
        "9.6"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ServerVersion"
      },
      "title": "ServerVersion"
    },
    "Sku": {
      "description": "Billing information related properties of a server.",
      "properties": {
        "capacity": {
          "description": "The scale up/out capacity, representing server's compute units.",
          "format": "int32",
          "minimum": 0,
          "type": "integer"
        },
        "family": {
          "description": "The family of hardware.",
          "type": "string"
        },
        "name": {
          "description": "The name of the sku, typically, a letter + Number code, e.g. P3.",
          "type": "string"
        },
        "size": {
          "description": "The size code, to be interpreted by resource as appropriate.",
          "type": "string"
        },
        "tier": {
          "description": "The tier of the particular SKU, e.g. Basic.",
          "enum": [
            "Basic",
            "Standard"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SkuTier"
          }
        }
      },
      "title": "Sku"
    },
    "SslEnforcement": {
      "description": "Enable ssl enforcement or not when connect to server.",
      "enum": [
        "Enabled",
        "Disabled"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "SslEnforcementEnum"
      },
      "title": "SslEnforcement"
    },
    "TrackedResource": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Resource properties including location and tags for track resources.",
      "properties": {
        "location": {
          "description": "The location the resource resides in.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs.",
          "type": "object"
        }
      },
      "required": [
        "location"
      ],
      "title": "TrackedResource"
    }
  },
  "actions": [
    {
      "id": "Operations_List",
      "title": "Operations_List",
      "description": "Lists all of the available REST API operations.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/OperationListResult"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Servers_List",
      "title": "Servers_List",
      "description": "List all the servers in a given subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ServerListResult"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Servers_ListByResourceGroup",
      "title": "Servers_ListByResourceGroup",
      "description": "List all the servers in a given resource group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ServerListResult"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Servers_Delete",
      "title": "Servers_Delete",
      "description": "Deletes a server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Servers_Get",
      "title": "Servers_Get",
      "description": "Gets information about a server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Server"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Servers_Update",
      "title": "Servers_Update",
      "description": "Updates an existing server. The request body can contain one to many of the properties present in the normal server definition.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "parameters": {
            "$ref": "#/definitions/ServerUpdateParameters"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "parameters"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Server"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Servers_Create",
      "title": "Servers_Create",
      "description": "Creates a new server, or will overwrite an existing server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "parameters": {
            "$ref": "#/definitions/ServerForCreate"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "parameters"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Server"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Configurations_ListByServer",
      "title": "Configurations_ListByServer",
      "description": "List all the configurations in a given server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ConfigurationListResult"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Configurations_Get",
      "title": "Configurations_Get",
      "description": "Gets information about a configuration of server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "configurationName": {
            "type": "string",
            "description": "The name of the server configuration."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "configurationName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Configuration"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Configurations_CreateOrUpdate",
      "title": "Configurations_CreateOrUpdate",
      "description": "Updates a configuration of a server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "configurationName": {
            "type": "string",
            "description": "The name of the server configuration."
          },
          "parameters": {
            "$ref": "#/definitions/Configuration"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "configurationName",
          "parameters"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Configuration"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Databases_ListByServer",
      "title": "Databases_ListByServer",
      "description": "List all the databases in a given server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DatabaseListResult"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Databases_Delete",
      "title": "Databases_Delete",
      "description": "Deletes a database.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "databaseName": {
            "type": "string",
            "description": "The name of the database."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "databaseName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Databases_Get",
      "title": "Databases_Get",
      "description": "Gets information about a database.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "databaseName": {
            "type": "string",
            "description": "The name of the database."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "databaseName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Database"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "Databases_CreateOrUpdate",
      "title": "Databases_CreateOrUpdate",
      "description": "Creates a new database or updates an existing database.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "databaseName": {
            "type": "string",
            "description": "The name of the database."
          },
          "parameters": {
            "$ref": "#/definitions/Database"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "databaseName",
          "parameters"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Database"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "FirewallRules_ListByServer",
      "title": "FirewallRules_ListByServer",
      "description": "List all the firewall rules in a given server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/FirewallRuleListResult"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "FirewallRules_Delete",
      "title": "FirewallRules_Delete",
      "description": "Deletes a server firewall rule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "firewallRuleName": {
            "type": "string",
            "description": "The name of the server firewall rule."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "firewallRuleName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "FirewallRules_Get",
      "title": "FirewallRules_Get",
      "description": "Gets information about a server firewall rule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "firewallRuleName": {
            "type": "string",
            "description": "The name of the server firewall rule."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "firewallRuleName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/FirewallRule"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "FirewallRules_CreateOrUpdate",
      "title": "FirewallRules_CreateOrUpdate",
      "description": "Creates a new firewall rule or updates an existing firewall rule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          },
          "firewallRuleName": {
            "type": "string",
            "description": "The name of the server firewall rule."
          },
          "parameters": {
            "$ref": "#/definitions/FirewallRule"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName",
          "firewallRuleName",
          "parameters"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/FirewallRule"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    },
    {
      "id": "LogFiles_ListByServer",
      "title": "LogFiles_ListByServer",
      "description": "List all the log files in a given server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "The API version to use for the request."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID that identifies an Azure subscription."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal."
          },
          "serverName": {
            "type": "string",
            "description": "The name of the server."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId",
          "resourceGroupName",
          "serverName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LogFileListResult"
      },
      "security": {
        "azure_arm_postgresql": {
          "integration": "azure_arm_postgresql"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "cloud",
    "azure"
  ]
}