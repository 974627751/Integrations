{
  "id": "geneea",
  "title": "Geneea Natural Language Processing",
  "description": "\n\n## Authentication\n\nFor all calls, supply your API key. [Sign up to _obtain the key_](https://www.geneea.com/pricing).\n\nOur API supports both _unencrypted (HTTP)_ and _encrypted (HTTPS)_ protocols. However, for security reasons, we strongly encourage using only the encrypted version.\n\nThe API key should be supplied as either a request parameter `user_key` or in `Authorization` header.\n\n    Authorization: user_key \n\n## API operations\n\nAll API operations can perform analysis on supplied raw text or on text extracted from a given URL. Optionally, one can supply additional information which can make the result more precise. An example of such information would be the language of text or a particular text extractor for URL resources.\n\nThe supported types of analyses are:\n\n*   **lemmatization** ⟶ Finds out lemmata (basic forms) of all the words in the document.\n*   **correction** ⟶ Performs correction (diacritization) on all the words in the document.\n*   **topic detection** ⟶ Determines a topic of the document, e.g. finance or sports.\n*   **sentiment analysis** ⟶ Determines a sentiment of the document, i.e. how positive or negative the document is.\n*   **named entity recognition** ⟶ Finds named entities (like person, location, date etc.) mentioned the the document.\n\n## Encoding\n\nThe supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.\n\n## Returned values\n\nThe API calls always return objects in serialized JSON format in UTF-8 encoding.\n\nIf any error occurs, the HTTP response code will be in the range `4xx` (client-side error) or `5xx` (server-side error). In this situation, the body of the response will contain information about the error in JSON format, with `exception` and `message` values.\n\n## URL limitations\n\nAll the requests are semantically `GET`. However, for longer texts, you may run into issues with URL length limit. Therefore, it's possible to always issue a `POST` request with all the parameters encoded as a JSON in the request body.\n\nExample:\n\n            POST /s1/sentiment\n            Content-Type: application/json\n\n            {\"text\":\"There is no harm in being sometimes wrong - especially if one is promptly found out.\"}\n\nThis is equivalent to `GET /s1/sentiment?text=There%20is%20no%20harm...`\n\n## Request limitations\n\nThe API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any POST request body is _512 KiB_. For request with a URL resource, the maximum allowed number of extracted characters from each such resource is _100,000_.\n\n## More information\n\n[The Interpretor Public Documentation](https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation)\n\n",
  "security": {
    "geneea": {
      "integration": "geneea",
      "fields": {
        "user_key": "API key"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/geneea.png"
  },
  "actionCount": 11,
  "definitions": {
    "EntitiesResponse": {
      "description": "Response for the named-entity recognition",
      "properties": {
        "entities": {
          "description": "Found named entities in the document",
          "items": {
            "$ref": "#/definitions/Entity"
          },
          "type": "array"
        },
        "language": {
          "description": "The used language of the document",
          "type": "string"
        },
        "text": {
          "description": "The raw text of the document which has been analysed",
          "type": "string"
        }
      },
      "required": [
        "entities",
        "language"
      ],
      "title": "EntitiesResponse"
    },
    "Entity": {
      "description": "The named entity",
      "properties": {
        "entity": {
          "description": "Disambiguated and standardized form of the entity",
          "type": "string"
        },
        "links": {
          "description": "Disambiguation links for the entity, e.g. its DBpedia page",
          "type": "object"
        },
        "sentiment": {
          "description": "Detected sentiment of the entity (value from -1.0 to 1.0)",
          "format": "double",
          "type": "number"
        },
        "textOffset": {
          "description": "Character offset in the text (starting from 0)",
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "description": "Detected type of the entity",
          "type": "string"
        }
      },
      "required": [
        "entity",
        "links",
        "textOffset",
        "type"
      ],
      "title": "Entity"
    },
    "Entry«string,long»": {
      "properties": {
        "key": {
          "format": "int64",
          "type": "integer"
        }
      },
      "title": "Entry«string,long»"
    },
    "Information_about_a_user_account.": {
      "properties": {
        "remainingQuotas": {
          "description": "Remaining quotas for the user account.",
          "items": {
            "$ref": "#/definitions/Entry«string,long»"
          },
          "type": "array"
        },
        "type": {
          "description": "Type (plan) of the user account.",
          "type": "string"
        }
      },
      "title": "Information_about_a_user_account."
    },
    "Label": {
      "description": "The topic label",
      "properties": {
        "confidence": {
          "description": "Confidence (probability) of this label",
          "format": "double",
          "type": "number"
        },
        "label": {
          "description": "The value of this label",
          "type": "string"
        }
      },
      "required": [
        "confidence",
        "label"
      ],
      "title": "Label"
    },
    "LemmatizeResponse": {
      "description": "Response for the lemmatization",
      "properties": {
        "language": {
          "description": "The used language of the document",
          "type": "string"
        },
        "lemmatizedText": {
          "description": "Lemmatized text of the document, individual tokens are separated by a space and sentences are separated by a new-line character",
          "type": "string"
        },
        "text": {
          "description": "The raw text of the document which has been analysed",
          "type": "string"
        }
      },
      "required": [
        "language",
        "lemmatizedText"
      ],
      "title": "LemmatizeResponse"
    },
    "Request": {
      "description": "Request encapsulation for simple API version 1",
      "properties": {
        "extractor": {
          "description": "[optional] Text extractor to be used when analyzing HTML document",
          "enum": [
            "default",
            "article",
            "keep-everything"
          ],
          "type": "string"
        },
        "language": {
          "description": "[optional] The language of the document, auto-detection will be used if omitted",
          "type": "string"
        },
        "options": {
          "description": "[optional] Additional options for the internal modules (key-value pairs)",
          "type": "object"
        },
        "returnTextInfo": {
          "description": "[optional] Indicates whether to return the source text within the response object",
          "type": "boolean"
        },
        "text": {
          "description": "The raw text to be analyzed, mutually exclusive with the 'url' parameter",
          "type": "string"
        },
        "url": {
          "description": "URL of a document to be analysed, mutually exclusive with the 'text' parameter",
          "type": "string"
        }
      },
      "title": "Request"
    },
    "Response_for_the_text_correction": {
      "properties": {
        "corrected": {
          "type": "boolean"
        },
        "correctedText": {
          "description": "Corrected text of the document",
          "type": "string"
        },
        "diacritized": {
          "type": "boolean"
        },
        "language": {
          "description": "The used language of the document",
          "type": "string"
        },
        "text": {
          "description": "The raw text of the document which has been analysed",
          "type": "string"
        }
      },
      "required": [
        "correctedText",
        "language"
      ],
      "title": "Response_for_the_text_correction"
    },
    "SentimentResponse": {
      "description": "Response for the sentiment analysis",
      "properties": {
        "language": {
          "description": "The used language of the document",
          "type": "string"
        },
        "sentiment": {
          "description": "Detected sentiment of the document (value from -1.0 to 1.0)",
          "format": "double",
          "type": "number"
        },
        "text": {
          "description": "The raw text of the document which has been analysed",
          "type": "string"
        }
      },
      "required": [
        "language",
        "sentiment"
      ],
      "title": "SentimentResponse"
    },
    "TopicResponse": {
      "description": "Response for the topic detection",
      "properties": {
        "confidence": {
          "description": "Confidence for the detected topic",
          "format": "double",
          "type": "number"
        },
        "labels": {
          "description": "Probabilistic distribution over possible topic labels",
          "items": {
            "$ref": "#/definitions/Label"
          },
          "type": "array"
        },
        "language": {
          "description": "The used language of the document",
          "type": "string"
        },
        "text": {
          "description": "The raw text of the document which has been analysed",
          "type": "string"
        },
        "topic": {
          "description": "Detected topic of the document",
          "type": "string"
        }
      },
      "required": [
        "confidence",
        "labels",
        "language",
        "topic"
      ],
      "title": "TopicResponse"
    }
  },
  "actions": [
    {
      "id": "getInfo",
      "title": "getInfo",
      "description": "getInfo",
      "inputSchema": {},
      "outputSchema": {
        "$ref": "#/definitions/Information_about_a_user_account."
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "correctionGet",
      "title": "correctionGet",
      "description": "  \n**Possible options:**\n\nAn optional parameter `diacritize` with values `yes`, `no` or `auto` indicate whether the text diacritization will be performed. The default value is `auto`.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "raw document text"
          },
          "url": {
            "type": "string",
            "description": "document URL"
          },
          "extractor": {
            "type": "string",
            "description": "document extractor",
            "enum": [
              "default",
              "article",
              "keep-everything"
            ]
          },
          "language": {
            "type": "string",
            "description": "document language"
          },
          "returnTextInfo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Response_for_the_text_correction"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "correctionPost",
      "title": "correctionPost",
      "description": "**Notes:**  \nValid JSON cannot contain newline characters. These have to be escaped. (See also [Interpretor documentation](https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation))  \nFields `text` and `url` are mutually exclusive.  \n**Examples:**\n\n    {\"text\": \"Hello world!\"}\n\n    {\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}\n\n**Possible options:**\n\nAn optional parameter `diacritize` with values `yes`, `no` or `auto` indicate whether the text diacritization will be performed. The default value is `auto`.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/Request"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Response_for_the_text_correction"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "entitiesGet",
      "title": "entitiesGet",
      "description": "entitiesGet",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "raw document text"
          },
          "url": {
            "type": "string",
            "description": "document URL"
          },
          "extractor": {
            "type": "string",
            "description": "document extractor",
            "enum": [
              "default",
              "article",
              "keep-everything"
            ]
          },
          "language": {
            "type": "string",
            "description": "document language"
          },
          "returnTextInfo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/EntitiesResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "entitiesPost",
      "title": "entitiesPost",
      "description": "**Notes:**  \nValid JSON cannot contain newline characters. These have to be escaped. (See also [Interpretor documentation](https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation))  \nFields `text` and `url` are mutually exclusive.  \n**Examples:**\n\n    {\"text\": \"Hello world!\"}\n\n    {\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/Request"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/EntitiesResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "lemmatizeGet",
      "title": "lemmatizeGet",
      "description": "lemmatizeGet",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "raw document text"
          },
          "url": {
            "type": "string",
            "description": "document URL"
          },
          "extractor": {
            "type": "string",
            "description": "document extractor",
            "enum": [
              "default",
              "article",
              "keep-everything"
            ]
          },
          "language": {
            "type": "string",
            "description": "document language"
          },
          "returnTextInfo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LemmatizeResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "lemmatizePost",
      "title": "lemmatizePost",
      "description": "**Notes:**  \nValid JSON cannot contain newline characters. These have to be escaped. (See also [Interpretor documentation](https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation))  \nFields `text` and `url` are mutually exclusive.  \n**Examples:**\n\n    {\"text\": \"Hello world!\"}\n\n    {\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/Request"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LemmatizeResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "sentimentGet",
      "title": "sentimentGet",
      "description": "sentimentGet",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "raw document text"
          },
          "url": {
            "type": "string",
            "description": "document URL"
          },
          "extractor": {
            "type": "string",
            "description": "document extractor",
            "enum": [
              "default",
              "article",
              "keep-everything"
            ]
          },
          "language": {
            "type": "string",
            "description": "document language"
          },
          "returnTextInfo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SentimentResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "sentimentPost",
      "title": "sentimentPost",
      "description": "**Notes:**  \nValid JSON cannot contain newline characters. These have to be escaped. (See also [Interpretor documentation](https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation))  \nFields `text` and `url` are mutually exclusive.  \n**Examples:**\n\n    {\"text\": \"Hello world!\"}\n\n    {\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/Request"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SentimentResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "topicGet",
      "title": "topicGet",
      "description": "topicGet",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "text": {
            "type": "string",
            "description": "raw document text"
          },
          "url": {
            "type": "string",
            "description": "document URL"
          },
          "extractor": {
            "type": "string",
            "description": "document extractor",
            "enum": [
              "default",
              "article",
              "keep-everything"
            ]
          },
          "language": {
            "type": "string",
            "description": "document language"
          },
          "returnTextInfo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TopicResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    },
    {
      "id": "topicPost",
      "title": "topicPost",
      "description": "**Notes:**  \nValid JSON cannot contain newline characters. These have to be escaped. (See also [Interpretor documentation](https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation))  \nFields `text` and `url` are mutually exclusive.  \n**Examples:**\n\n    {\"text\": \"Hello world!\"}\n\n    {\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"}",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/Request"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TopicResponse"
      },
      "security": {
        "geneea": {
          "integration": "geneea"
        }
      }
    }
  ],
  "tags": [
    "text"
  ]
}