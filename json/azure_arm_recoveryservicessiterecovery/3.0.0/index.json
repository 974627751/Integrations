{
  "id": "azure_arm_recoveryservicessiterecovery",
  "title": "SiteRecoveryManagementClient",
  "security": {
    "azure_arm_recoveryservicessiterecovery": {
      "integration": "azure_arm_recoveryservicessiterecovery",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "description": "Azure Active Directory OAuth2 Flow",
        "flow": "implicit",
        "scopes": {
          "user_impersonation": "impersonate your user account."
        },
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/azure_arm_recoveryservicessiterecovery.png"
  },
  "actionCount": 101,
  "definitions": {
    "A2AApplyRecoveryPointInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "description": "ApplyRecoveryPoint input specific to A2A provider.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AApplyRecoveryPointInput"
    },
    "A2AContainerCreationInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerCreationInput"
        }
      ],
      "description": "A2A cloud creation input.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AContainerCreationInput"
    },
    "A2AEnableProtectionInput": {
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "description": "A2A enable protection input.",
      "properties": {
        "fabricObjectId": {
          "description": "The fabric specific object Id of the virtual machine.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set Id.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "The recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "vmDisks": {
          "description": "The list of vm disk details.",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AEnableProtectionInput"
    },
    "A2AEventDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "description": "Model class for event details of a A2A event.",
      "properties": {
        "fabricLocation": {
          "description": "The fabric location.",
          "type": "string"
        },
        "fabricName": {
          "description": "Fabric arm name.",
          "type": "string"
        },
        "fabricObjectId": {
          "description": "The azure vm arm id.",
          "type": "string"
        },
        "protectedItemName": {
          "description": "The protected item arm name.",
          "type": "string"
        },
        "remoteFabricLocation": {
          "description": "Remote fabric location.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "Remote fabric arm name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AEventDetails"
    },
    "A2AFailoverProviderInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "description": "A2A provider specific input for failover.",
      "properties": {
        "cloudServiceCreationOption": {
          "description": "A value indicating whether to use recovery cloud service for TFO or not.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AFailoverProviderInput"
    },
    "A2APolicyCreationInput": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "description": "A2A Policy creation input.",
      "properties": {
        "appConsistentFrequencyInMinutes": {
          "description": "The app consistent snapshot frequency (in minutes).",
          "format": "int32",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "description": "The crash consistent snapshot frequency (in minutes).",
          "format": "int32",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "SetMultiVmSyncStatus"
          }
        },
        "recoveryPointHistory": {
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2APolicyCreationInput"
    },
    "A2APolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "A2A specific policy details.",
      "properties": {
        "appConsistentFrequencyInMinutes": {
          "description": "The app consistent snapshot frequency in minutes.",
          "format": "int32",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "description": "The crash consistent snapshot frequency in minutes.",
          "format": "int32",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        },
        "recoveryPointHistory": {
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "format": "int32",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "description": "The recovery point threshold in minutes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2APolicyDetails"
    },
    "A2AProtectedDiskDetails": {
      "description": "A2A protected disk details.",
      "properties": {
        "dataPendingAtSourceAgentInMB": {
          "description": "The data pending at source virtual machine in MB.",
          "format": "double",
          "type": "number"
        },
        "dataPendingInStagingStorageAccountInMB": {
          "description": "The data pending for replication in MB at staging account.",
          "format": "double",
          "type": "number"
        },
        "diskCapacityInBytes": {
          "description": "The disk capacity in bytes.",
          "format": "int64",
          "type": "integer"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "diskType": {
          "description": "The type of disk.",
          "type": "string"
        },
        "diskUri": {
          "description": "The disk uri.",
          "type": "string"
        },
        "monitoringJobType": {
          "description": "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.",
          "type": "string"
        },
        "monitoringPercentageCompletion": {
          "description": "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
          "format": "int32",
          "type": "integer"
        },
        "primaryDiskAzureStorageAccountId": {
          "description": "The primary disk storage account.",
          "type": "string"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "The primary staging storage account.",
          "type": "string"
        },
        "recoveryAzureStorageAccountId": {
          "description": "The recovery disk storage account.",
          "type": "string"
        },
        "recoveryDiskUri": {
          "description": "Recovery disk uri.",
          "type": "string"
        },
        "resyncRequired": {
          "description": "A value indicating whether resync is required for this disk.",
          "type": "boolean"
        }
      },
      "type": "object",
      "title": "A2AProtectedDiskDetails"
    },
    "A2AReplicationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "description": "A2A provider specific settings.",
      "properties": {
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "fabricObjectId": {
          "description": "The fabric specific object Id of the virtual machine.",
          "type": "string"
        },
        "isReplicationAgentUpdateRequired": {
          "description": "A value indicating whether replication agent update is required.",
          "type": "boolean"
        },
        "lastHeartbeat": {
          "description": "The last heartbeat received from the source server.",
          "format": "date-time",
          "type": "string"
        },
        "lifecycleId": {
          "description": "An id associated with the PE that survives actions like switch protection which change the backing PE/CPE objects internally.The lifecycle id gets carried forward to have a link/continuity in being able to have an Id that denotes the \"same\" protected item even though other internal Ids/ARM Id might be changing.",
          "type": "string"
        },
        "managementId": {
          "description": "The management Id.",
          "type": "string"
        },
        "monitoringJobType": {
          "description": "The type of the monitoring job. The progress is contained in MonitoringPercentageCompletion property.",
          "type": "string"
        },
        "monitoringPercentageCompletion": {
          "description": "The percentage of the monitoring job. The type of the monitoring job is defined by MonitoringJobType property.",
          "format": "int32",
          "type": "integer"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "osType": {
          "description": "The type of operating system.",
          "type": "string"
        },
        "primaryFabricLocation": {
          "description": "Primary fabric location.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "The list of protected disks.",
          "items": {
            "$ref": "#/definitions/A2AProtectedDiskDetails"
          },
          "type": "array"
        },
        "recoveryAvailabilitySet": {
          "description": "The recovery availability set.",
          "type": "string"
        },
        "recoveryAzureResourceGroupId": {
          "description": "The recovery resource group.",
          "type": "string"
        },
        "recoveryAzureVMName": {
          "description": "The name of recovery virtual machine.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "The size of recovery virtual machine.",
          "type": "string"
        },
        "recoveryCloudService": {
          "description": "The recovery cloud service.",
          "type": "string"
        },
        "recoveryFabricLocation": {
          "description": "The recovery fabric location.",
          "type": "string"
        },
        "recoveryFabricObjectId": {
          "description": "The recovery fabric object Id.",
          "type": "string"
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "The recovery virtual network.",
          "type": "string"
        },
        "vmNics": {
          "description": "The virtual machine nic details.",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          },
          "type": "array"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        },
        "vmSyncedConfigDetails": {
          "$ref": "#/definitions/AzureToAzureVmSyncedConfigDetails",
          "description": "The synced configuration details."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AReplicationDetails"
    },
    "A2AReprotectInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "description": "Azure specific reprotect input.",
      "properties": {
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "The recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "vmDisks": {
          "description": "The list of vm disk details.",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AReprotectInput"
    },
    "A2ASwitchProtectionInput": {
      "allOf": [
        {
          "$ref": "#/definitions/SwitchProtectionProviderSpecificInput"
        }
      ],
      "description": "A2A specific switch protection input.",
      "properties": {
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set.",
          "type": "string"
        },
        "recoveryCloudServiceId": {
          "description": "The recovery cloud service Id. Valid for V1 scenarios.",
          "type": "string"
        },
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The recovery resource group Id. Valid for V2 scenarios.",
          "type": "string"
        },
        "vmDisks": {
          "description": "The list of vm disk details.",
          "items": {
            "$ref": "#/definitions/A2AVmDiskInputDetails"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2ASwitchProtectionInput"
    },
    "A2AUpdateReplicationProtectedItemInput": {
      "allOf": [
        {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput"
        }
      ],
      "description": "InMage Azure V2 input to update replication protected item.",
      "properties": {
        "recoveryCloudServiceId": {
          "description": "The target cloud service ARM Id (for V1).",
          "type": "string"
        },
        "recoveryResourceGroupId": {
          "description": "The target resource group ARM Id (for V2).",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "A2AUpdateReplicationProtectedItemInput"
    },
    "A2AVmDiskInputDetails": {
      "description": "Azure VM disk input details.",
      "properties": {
        "diskUri": {
          "description": "The disk Uri.",
          "type": "string"
        },
        "primaryStagingAzureStorageAccountId": {
          "description": "The primary staging storage account Id.",
          "type": "string"
        },
        "recoveryAzureStorageAccountId": {
          "description": "The recovery VHD storage account Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "A2AVmDiskInputDetails"
    },
    "ARMException": {
      "description": "ARM inner exception class.",
      "properties": {
        "code": {
          "description": "Gets HTTP status code for the error.",
          "type": "string"
        },
        "details": {
          "description": "Gets service based error details.",
          "items": {
            "$ref": "#/definitions/ARMExceptionDetails"
          },
          "type": "array"
        },
        "innererror": {
          "$ref": "#/definitions/ARMInnerError",
          "description": "Gets private data for service debugging."
        },
        "message": {
          "description": "Gets exception message.",
          "type": "string"
        },
        "target": {
          "description": "Gets exception target.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ARMException"
    },
    "ARMExceptionDetails": {
      "description": "Service based exception details.",
      "properties": {
        "activityId": {
          "description": "Gets the activity Id for the session.",
          "type": "string"
        },
        "clientRequestId": {
          "description": "Gets the client request Id for the session.",
          "type": "string"
        },
        "code": {
          "description": "Gets service error code.",
          "type": "string"
        },
        "message": {
          "description": "Gets error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Gets possible cause for error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Gets recommended action for the error.",
          "type": "string"
        },
        "target": {
          "description": "Gets exception target.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ARMExceptionDetails"
    },
    "ARMInnerError": {
      "description": "ARM internal error class for providing additional debug data.",
      "properties": {
        "cloudId": {
          "description": "Gets cloud Id in exception.",
          "type": "string"
        },
        "containerId": {
          "description": "Gets container Id of the caller.",
          "type": "string"
        },
        "fabricId": {
          "description": "Gets Fabric Id.",
          "type": "string"
        },
        "hVClusterId": {
          "description": "Gets hyperV cluster Id.",
          "type": "string"
        },
        "hVHostId": {
          "description": "Gets hyperV host ID.",
          "type": "string"
        },
        "liveId": {
          "description": "Gets Live Id of the caller.",
          "type": "string"
        },
        "methodStatus": {
          "$ref": "#/definitions/MethodCallStatus",
          "description": "Gets data related to method which threw the exception."
        },
        "networkId": {
          "description": "Gets network Id.",
          "type": "string"
        },
        "resourceId": {
          "description": "Gets resource id used in the call.",
          "type": "string"
        },
        "resourceName": {
          "description": "Gets caller resource name.",
          "type": "string"
        },
        "serializedSRSLogContext": {
          "description": "Gets serialized SRS log context.",
          "type": "string"
        },
        "source": {
          "description": "Gets exception source.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "Gets subscription Id.",
          "type": "string"
        },
        "trace": {
          "description": "Gets complete stack trace of the exception.",
          "type": "string"
        },
        "vmId": {
          "description": "Gets Vm Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ARMInnerError"
    },
    "ASRTask": {
      "description": "Task of the Job.",
      "properties": {
        "allowedActions": {
          "description": "The state/actions applicable on this task.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "customDetails": {
          "$ref": "#/definitions/TaskTypeDetails",
          "description": "The custom task details based on the task type."
        },
        "endTime": {
          "description": "The end time.",
          "format": "date-time",
          "type": "string"
        },
        "errors": {
          "description": "The task error details.",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          },
          "type": "array"
        },
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "groupTaskCustomDetails": {
          "$ref": "#/definitions/GroupTaskDetails",
          "description": "The custom task details based on the task type, if the task type is GroupTaskDetails or one of the types derived from it."
        },
        "name": {
          "description": "The unique Task name.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time.",
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "description": "The State. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.",
          "type": "string"
        },
        "stateDescription": {
          "description": "The description of the task state. For example - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.",
          "type": "string"
        },
        "taskId": {
          "description": "The Id.",
          "type": "string"
        },
        "taskType": {
          "description": "The type of task. Details in CustomDetails property depend on this type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ASRTask"
    },
    "AddVCenterRequest": {
      "description": "Input required to add vCenter.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AddVCenterRequestProperties",
          "description": "The properties of an add vCenter request."
        }
      },
      "type": "object",
      "title": "AddVCenterRequest"
    },
    "AddVCenterRequestProperties": {
      "description": "The properties of an add vCenter request.",
      "properties": {
        "friendlyName": {
          "description": "The friendly name of the vCenter.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the vCenter to be discovered.",
          "type": "string"
        },
        "port": {
          "description": "The port number for discovery.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id from where the discovery is orchestrated.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The account Id which has privileges to discover the vCenter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "AddVCenterRequestProperties"
    },
    "Alert": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Implements the Alert class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertProperties",
          "description": "Alert related data."
        }
      },
      "type": "object",
      "title": "Alert"
    },
    "AlertCollection": {
      "description": "Collection of alerts.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The list of alerts.",
          "items": {
            "$ref": "#/definitions/Alert"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "AlertCollection"
    },
    "AlertProperties": {
      "description": "The proprties of an alert.",
      "properties": {
        "customEmailAddresses": {
          "description": "The custom email address for sending emails.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "locale": {
          "description": "The locale for the email notification.",
          "type": "string"
        },
        "sendToOwners": {
          "description": "A value indicating whether to send email to subscription administrator.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "AlertProperties"
    },
    "ApplyRecoveryPointInput": {
      "description": "Input to apply recovery point.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplyRecoveryPointInputProperties",
          "description": "The input properties to apply recovery point."
        }
      },
      "type": "object",
      "title": "ApplyRecoveryPointInput"
    },
    "ApplyRecoveryPointInputProperties": {
      "description": "Input properties to apply recovery point.",
      "properties": {
        "providerSpecificDetails": {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput",
          "description": "Provider specific input for applying recovery point."
        },
        "recoveryPointId": {
          "description": "The recovery point Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ApplyRecoveryPointInputProperties"
    },
    "ApplyRecoveryPointProviderSpecificInput": {
      "description": "Provider specific input for apply recovery point.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ApplyRecoveryPointProviderSpecificInput"
    },
    "AsrJobDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "description": "This class represents job details based on specific job type.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "AsrJobDetails",
      "title": "AsrJobDetails"
    },
    "AutomationRunbookTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class represents the task details for an automation runbook.",
      "properties": {
        "accountName": {
          "description": "The automation account name of the runbook.",
          "type": "string"
        },
        "cloudServiceName": {
          "description": "The cloud service of the automation runbook account.",
          "type": "string"
        },
        "isPrimarySideScript": {
          "description": "A value indicating whether it is a primary side script or not.",
          "type": "boolean"
        },
        "jobId": {
          "description": "The job Id of the runbook execution.",
          "type": "string"
        },
        "jobOutput": {
          "description": "The execution output of the runbook.",
          "type": "string"
        },
        "name": {
          "description": "The recovery plan task name.",
          "type": "string"
        },
        "runbookId": {
          "description": "The runbook Id.",
          "type": "string"
        },
        "runbookName": {
          "description": "The runbook name.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The subscription Id of the automation runbook account.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AutomationRunbookTaskDetails",
      "title": "AutomationRunbookTaskDetails"
    },
    "AzureFabricCreationInput": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreationInput"
        }
      ],
      "description": "Fabric provider specific settings.",
      "properties": {
        "location": {
          "description": "The Location.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "AzureFabricCreationInput"
    },
    "AzureFabricSpecificDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "description": "Azure Fabric Specific Details.",
      "properties": {
        "containerIds": {
          "description": "The container Ids for the Azure fabric.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "location": {
          "description": "The Location for the Azure fabric.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Azure",
      "title": "AzureFabricSpecificDetails"
    },
    "AzureToAzureCreateNetworkMappingInput": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput"
        }
      ],
      "description": "Create network mappings input properties/behaviour specific to Azure to Azure Network mapping.",
      "properties": {
        "primaryNetworkId": {
          "description": "The primary azure vnet Id.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureToAzure",
      "title": "AzureToAzureCreateNetworkMappingInput"
    },
    "AzureToAzureNetworkMappingSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings"
        }
      ],
      "description": "A2A  Network Mapping fabric specific settings.",
      "properties": {
        "primaryFabricLocation": {
          "description": "The primary fabric location.",
          "type": "string"
        },
        "recoveryFabricLocation": {
          "description": "The recovery fabric location.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureToAzure",
      "title": "AzureToAzureNetworkMappingSettings"
    },
    "AzureToAzureUpdateNetworkMappingInput": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput"
        }
      ],
      "description": "Updates network mappings input.",
      "properties": {
        "primaryNetworkId": {
          "description": "The primary azure vnet Id.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureToAzure",
      "title": "AzureToAzureUpdateNetworkMappingInput"
    },
    "AzureToAzureVmSyncedConfigDetails": {
      "description": "Azure to Azure VM synced configuration details.",
      "properties": {
        "inputEndpoints": {
          "description": "The Azure VM input endpoints.",
          "items": {
            "$ref": "#/definitions/InputEndpoint"
          },
          "type": "array"
        },
        "roleAssignments": {
          "description": "The Azure role assignments.",
          "items": {
            "$ref": "#/definitions/RoleAssignment"
          },
          "type": "array"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The Azure VM tags.",
          "type": "object"
        }
      },
      "type": "object",
      "title": "AzureToAzureVmSyncedConfigDetails"
    },
    "AzureVmDiskDetails": {
      "description": "Disk details for E2A provider.",
      "properties": {
        "lunId": {
          "description": "Ordinal\\LunId of the disk for the Azure VM.",
          "type": "string"
        },
        "maxSizeMB": {
          "description": "Max side in MB.",
          "type": "string"
        },
        "targetDiskLocation": {
          "description": "Blob uri of the Azure disk.",
          "type": "string"
        },
        "targetDiskName": {
          "description": "The target Azure disk name.",
          "type": "string"
        },
        "vhdId": {
          "description": "The VHD id.",
          "type": "string"
        },
        "vhdName": {
          "description": "VHD name.",
          "type": "string"
        },
        "vhdType": {
          "description": "VHD type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "AzureVmDiskDetails"
    },
    "ConfigurationSettings": {
      "description": "Replication provider specific settings.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "ConfigurationSettings"
    },
    "ConfigureAlertRequest": {
      "description": "Request to configure alerts for the system.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ConfigureAlertRequestProperties",
          "description": "The properties of a configure alert request."
        }
      },
      "type": "object",
      "title": "ConfigureAlertRequest"
    },
    "ConfigureAlertRequestProperties": {
      "description": "Properties of a configure alert request.",
      "properties": {
        "customEmailAddresses": {
          "description": "The custom email address for sending emails.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "locale": {
          "description": "The locale for the email notification.",
          "type": "string"
        },
        "sendToOwners": {
          "description": "A value indicating whether to send email to subscription administrator.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ConfigureAlertRequestProperties"
    },
    "ConsistencyCheckTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class contains monitoring details of all the inconsistent Protected Entites in Vmm.",
      "properties": {
        "vmDetails": {
          "description": "The list of inconsistent Vm details.",
          "items": {
            "$ref": "#/definitions/InconsistentVmDetails"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "ConsistencyCheckTaskDetails",
      "title": "ConsistencyCheckTaskDetails"
    },
    "CreateNetworkMappingInput": {
      "description": "Create network mappings input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateNetworkMappingInputProperties",
          "description": "Properties."
        }
      },
      "type": "object",
      "title": "CreateNetworkMappingInput"
    },
    "CreateNetworkMappingInputProperties": {
      "description": "Common input details for network mapping operation.",
      "properties": {
        "fabricSpecificDetails": {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput",
          "description": "Fabric specific input properties."
        },
        "recoveryFabricName": {
          "description": "Recovery fabric Name.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "Recovery network Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "CreateNetworkMappingInputProperties"
    },
    "CreatePolicyInput": {
      "description": "Protection profile input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreatePolicyInputProperties",
          "description": "Policy creation properties."
        }
      },
      "type": "object",
      "title": "CreatePolicyInput"
    },
    "CreatePolicyInputProperties": {
      "description": "Policy creation properties.",
      "properties": {
        "providerSpecificInput": {
          "$ref": "#/definitions/PolicyProviderSpecificInput",
          "description": "The ReplicationProviderSettings."
        }
      },
      "type": "object",
      "title": "CreatePolicyInputProperties"
    },
    "CreateProtectionContainerInput": {
      "description": "Create protection container input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateProtectionContainerInputProperties",
          "description": "Create protection container input properties."
        }
      },
      "type": "object",
      "title": "CreateProtectionContainerInput"
    },
    "CreateProtectionContainerInputProperties": {
      "description": "Create protection container input properties.",
      "properties": {
        "providerSpecificInput": {
          "description": "Provider specific inputs for container creation.",
          "items": {
            "$ref": "#/definitions/ReplicationProviderSpecificContainerCreationInput"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "CreateProtectionContainerInputProperties"
    },
    "CreateProtectionContainerMappingInput": {
      "description": "Configure pairing input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateProtectionContainerMappingInputProperties",
          "description": "Configure protection input properties."
        }
      },
      "type": "object",
      "title": "CreateProtectionContainerMappingInput"
    },
    "CreateProtectionContainerMappingInputProperties": {
      "description": "Configure pairing input properties.",
      "properties": {
        "PolicyId": {
          "description": "Applicable policy.",
          "type": "string"
        },
        "providerSpecificInput": {
          "$ref": "#/definitions/ReplicationProviderSpecificContainerMappingInput",
          "description": "Provider specific input for pairing."
        },
        "targetProtectionContainerId": {
          "description": "The target unique protection container name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "CreateProtectionContainerMappingInputProperties"
    },
    "CreateRecoveryPlanInput": {
      "description": "Create recovery plan input class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CreateRecoveryPlanInputProperties",
          "description": "Recovery plan creation properties."
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "CreateRecoveryPlanInput"
    },
    "CreateRecoveryPlanInputProperties": {
      "description": "Recovery plan creation properties.",
      "properties": {
        "failoverDeploymentModel": {
          "description": "The failover deployment model.",
          "enum": [
            "NotApplicable",
            "Classic",
            "ResourceManager"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "FailoverDeploymentModel"
          }
        },
        "groups": {
          "description": "The recovery plan groups.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          },
          "type": "array"
        },
        "primaryFabricId": {
          "description": "The primary fabric Id.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "The recovery fabric Id.",
          "type": "string"
        }
      },
      "required": [
        "primaryFabricId",
        "recoveryFabricId",
        "groups"
      ],
      "type": "object",
      "title": "CreateRecoveryPlanInputProperties"
    },
    "CurrentScenarioDetails": {
      "description": "Current scenario details of the protected entity.",
      "properties": {
        "jobId": {
          "description": "ARM Id of the job being executed.",
          "type": "string"
        },
        "scenarioName": {
          "description": "Scenario name.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time of the workflow.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object",
      "title": "CurrentScenarioDetails"
    },
    "DataStore": {
      "description": "The datastore details of the MT.",
      "properties": {
        "capacity": {
          "description": "The capacity of data store in GBs.",
          "type": "string"
        },
        "freeSpace": {
          "description": "The free space of data store in GBs.",
          "type": "string"
        },
        "symbolicName": {
          "description": "The symbolic name of data store.",
          "type": "string"
        },
        "type": {
          "description": "The type of data store.",
          "type": "string"
        },
        "uuid": {
          "description": "The uuid of data store.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DataStore"
    },
    "DisableProtectionInput": {
      "description": "Disable protection input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DisableProtectionInputProperties",
          "description": "Disable protection input properties."
        }
      },
      "type": "object",
      "title": "DisableProtectionInput"
    },
    "DisableProtectionInputProperties": {
      "description": "Disable protection input properties.",
      "properties": {
        "disableProtectionReason": {
          "description": "Disable protection reason. It can have values NotSpecified/MigrationComplete.",
          "enum": [
            "NotSpecified",
            "MigrationComplete"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DisableProtectionReason"
          }
        },
        "replicationProviderInput": {
          "$ref": "#/definitions/DisableProtectionProviderSpecificInput",
          "description": "Replication provider specific input."
        }
      },
      "type": "object",
      "title": "DisableProtectionInputProperties"
    },
    "DisableProtectionProviderSpecificInput": {
      "description": "Disable protection provider specific input.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DisableProtectionProviderSpecificInput"
    },
    "DiscoverProtectableItemRequest": {
      "description": "Request to add a physical machine as a protectable item in a container.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiscoverProtectableItemRequestProperties",
          "description": "The properties of a discover protectable item request."
        }
      },
      "type": "object",
      "title": "DiscoverProtectableItemRequest"
    },
    "DiscoverProtectableItemRequestProperties": {
      "description": "Discover protectable item properties.",
      "properties": {
        "friendlyName": {
          "description": "The friendly name of the physical machine.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the physical machine to be discovered.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type on the physical machine.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DiscoverProtectableItemRequestProperties"
    },
    "DiskDetails": {
      "description": "Onprem disk details data.",
      "properties": {
        "maxSizeMB": {
          "description": "The hard disk max size in MB.",
          "format": "int64",
          "type": "integer"
        },
        "vhdId": {
          "description": "The VHD Id.",
          "type": "string"
        },
        "vhdName": {
          "description": "The VHD name.",
          "type": "string"
        },
        "vhdType": {
          "description": "The type of the volume.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DiskDetails"
    },
    "DiskVolumeDetails": {
      "description": "Volume details.",
      "properties": {
        "label": {
          "description": "The volume label.",
          "type": "string"
        },
        "name": {
          "description": "The volume name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DiskVolumeDetails"
    },
    "Display": {
      "description": "Contains the localized display information for this particular operation / action. These value will be used by several clients for (1) custom role definitions for RBAC; (2) complex query filters for the event service; and (3) audit history / records for management operations.",
      "properties": {
        "description": {
          "description": "The description. The localized friendly description for the operation, as it should be shown to the user. It should be thorough, yet concise � it will be used in tool tips and detailed views.   Prescriptive guidance for namespaces: Read any 'display.provider'  resource Create or Update any  'display.provider'  resource Delete any  'display.provider'  resource Perform any other action on any  'display.provider'  resource  Prescriptive guidance for namespaces: Read any 'display.resource' Create or Update any  'display.resource' Delete any 'display.resource' 'ActionName' any 'display.resources'",
          "type": "string"
        },
        "operation": {
          "description": "The operation. The localized friendly name for the operation, as it should be shown to the user. It should be concise (to fit in drop downs) but clear (i.e. self-documenting). It should use Title Casing.  Prescriptive guidance: Read Create or Update Delete 'ActionName'",
          "type": "string"
        },
        "provider": {
          "description": "The provider. The localized friendly form of the resource provider name � it is expected to also include the publisher/company responsible. It should use Title Casing and begin with \"Microsoft\" for 1st party services.   e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute.\"",
          "type": "string"
        },
        "resource": {
          "description": "The resource. The localized friendly form of the resource related to this action/operation � it should match the public documentation for the resource provider. It should use Title Casing.   This value should be unique for a particular URL type (e.g. nested types should *not* reuse their parent�s display.resource field).  e.g. \"Virtual Machines\" or \"Scheduler Job Collections\", or \"Virtual Machine VM Sizes\" or \"Scheduler Jobs\"",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Display"
    },
    "EnableProtectionInput": {
      "description": "Enable protection input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnableProtectionInputProperties",
          "description": "Enable protection input properties."
        }
      },
      "type": "object",
      "title": "EnableProtectionInput"
    },
    "EnableProtectionInputProperties": {
      "description": "Enable protection input properties.",
      "properties": {
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "protectableItemId": {
          "description": "The protectable item Id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput",
          "description": "The ReplicationProviderInput. For HyperVReplicaAzure provider, it will be AzureEnableProtectionInput object. For San provider, it will be SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be null."
        }
      },
      "type": "object",
      "title": "EnableProtectionInputProperties"
    },
    "EnableProtectionProviderSpecificInput": {
      "description": "Enable protection provider specific input.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "EnableProtectionProviderSpecificInput"
    },
    "EncryptionDetails": {
      "description": "Encryption details for the fabric.",
      "properties": {
        "kekCertExpiryDate": {
          "description": "The key encryption key certificate expiry date.",
          "format": "date-time",
          "type": "string"
        },
        "kekCertThumbprint": {
          "description": "The key encryption key certificate thumbprint.",
          "type": "string"
        },
        "kekState": {
          "description": "The key encryption key state for the Vmm.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "EncryptionDetails"
    },
    "Event": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Implements the Event class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EventProperties",
          "description": "Event related data."
        }
      },
      "type": "object",
      "title": "Event"
    },
    "EventCollection": {
      "description": "Collection of fabric details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The list of events.",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "EventCollection"
    },
    "EventProperties": {
      "description": "The properties of a monitoring event.",
      "properties": {
        "affectedObjectFriendlyName": {
          "description": "The friendly name of the source of the event on which it is raised (for example, VM, VMM etc).",
          "type": "string"
        },
        "description": {
          "description": "The event name.",
          "type": "string"
        },
        "eventCode": {
          "description": "The Id of the monitoring event.",
          "type": "string"
        },
        "eventSpecificDetails": {
          "$ref": "#/definitions/EventSpecificDetails",
          "description": "The event specific settings."
        },
        "eventType": {
          "description": "The type of the event. for example: VM Health, Server Health, Job Failure etc.",
          "type": "string"
        },
        "fabricId": {
          "description": "The ARM ID of the fabric.",
          "type": "string"
        },
        "healthErrors": {
          "description": "The list of errors / warnings capturing details associated with the issue(s).",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/EventProviderSpecificDetails",
          "description": "The provider specific settings."
        },
        "severity": {
          "description": "The severity of the event.",
          "type": "string"
        },
        "timeOfOccurrence": {
          "description": "The time of occurence of the event.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object",
      "title": "EventProperties"
    },
    "EventProviderSpecificDetails": {
      "description": "Model class for provider specific details for an event.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "EventProviderSpecificDetails"
    },
    "EventSpecificDetails": {
      "description": "Model class for event specific details for an event.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "EventSpecificDetails"
    },
    "ExportJobDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "description": "This class represents details for export jobs workflow.",
      "properties": {
        "blobUri": {
          "description": "BlobUri of the exported jobs.",
          "type": "string"
        },
        "sasToken": {
          "description": "The sas token to access blob.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "ExportJobDetails",
      "title": "ExportJobDetails"
    },
    "Fabric": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Fabric definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricProperties",
          "description": "Fabric related data."
        }
      },
      "type": "object",
      "title": "Fabric"
    },
    "FabricCollection": {
      "description": "Collection of fabric details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The fabric details.",
          "items": {
            "$ref": "#/definitions/Fabric"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "FabricCollection"
    },
    "FabricCreationInput": {
      "description": "Site details provided during the time of site creation",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FabricCreationInputProperties",
          "description": "Fabric creation input."
        }
      },
      "type": "object",
      "title": "FabricCreationInput"
    },
    "FabricCreationInputProperties": {
      "description": "Properties of site details provided during the time of site creation",
      "properties": {
        "customDetails": {
          "$ref": "#/definitions/FabricSpecificCreationInput",
          "description": "Fabric provider specific creation input."
        }
      },
      "type": "object",
      "title": "FabricCreationInputProperties"
    },
    "FabricProperties": {
      "description": "Fabric properties.",
      "properties": {
        "bcdrState": {
          "description": "BCDR state of the fabric.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/FabricSpecificDetails",
          "description": "Fabric specific settings."
        },
        "encryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Encryption details for the fabric."
        },
        "friendlyName": {
          "description": "Friendly name of the fabric.",
          "type": "string"
        },
        "health": {
          "description": "Health of fabric.",
          "type": "string"
        },
        "healthErrorDetails": {
          "description": "Fabric health error details.",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "internalIdentifier": {
          "description": "Dra Registration Id.",
          "type": "string"
        },
        "rolloverEncryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Rollover encryption details for the fabric."
        }
      },
      "type": "object",
      "title": "FabricProperties"
    },
    "FabricReplicationGroupTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class represents the fabric replication group task details.",
      "properties": {
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "The job entity."
        },
        "skippedReason": {
          "description": "The skipped reason.",
          "type": "string"
        },
        "skippedReasonString": {
          "description": "The skipped reason string.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "FabricReplicationGroupTaskDetails",
      "title": "FabricReplicationGroupTaskDetails"
    },
    "FabricSpecificCreateNetworkMappingInput": {
      "description": "Input details specific to fabrics during Network Mapping.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The instance type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "FabricSpecificCreateNetworkMappingInput"
    },
    "FabricSpecificCreationInput": {
      "description": "Fabric provider specific settings.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the class type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "FabricSpecificCreationInput"
    },
    "FabricSpecificDetails": {
      "description": "Fabric specific details.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "FabricSpecificDetails"
    },
    "FabricSpecificUpdateNetworkMappingInput": {
      "description": "Input details specific to fabrics during Network Mapping.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The instance type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "FabricSpecificUpdateNetworkMappingInput"
    },
    "FailoverProcessServerRequest": {
      "description": "Request to failover a process server.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FailoverProcessServerRequestProperties",
          "description": "The properties of the PS Failover request."
        }
      },
      "type": "object",
      "title": "FailoverProcessServerRequest"
    },
    "FailoverProcessServerRequestProperties": {
      "description": "The properties of the Failover Process Server request.",
      "properties": {
        "containerName": {
          "description": "The container identifier.",
          "type": "string"
        },
        "sourceProcessServerId": {
          "description": "The source process server.",
          "type": "string"
        },
        "targetProcessServerId": {
          "description": "The new process server.",
          "type": "string"
        },
        "updateType": {
          "description": "A value for failover type. It can be systemlevel/serverlevel",
          "type": "string"
        },
        "vmsToMigrate": {
          "description": "The VMS to migrate.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "FailoverProcessServerRequestProperties"
    },
    "GroupTaskDetails": {
      "description": "This class represents the group task details when parent child relationship exists in the drill down.",
      "discriminator": "instanceType",
      "properties": {
        "childTasks": {
          "description": "The child tasks.",
          "items": {
            "$ref": "#/definitions/ASRTask"
          },
          "type": "array"
        },
        "instanceType": {
          "description": "The type of task details.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "GroupTaskDetails"
    },
    "HealthError": {
      "description": "The health error class.",
      "properties": {
        "creationTimeUtc": {
          "description": "Error creation time (UTC)",
          "format": "date-time",
          "type": "string"
        },
        "entityId": {
          "description": "ID of the entity.",
          "type": "string"
        },
        "errorCode": {
          "description": "Error code.",
          "type": "string"
        },
        "errorLevel": {
          "description": "Level of error.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Possible causes of error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Recommended action to resolve error.",
          "type": "string"
        },
        "recoveryProviderErrorMessage": {
          "description": "DRA error message.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "HealthError"
    },
    "HyperVReplica2012EventDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "description": "Model class for event details of a HyperVReplica E2E event.",
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "The remote fabric name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012",
      "title": "HyperVReplica2012EventDetails"
    },
    "HyperVReplica2012R2EventDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "description": "Model class for event details of a HyperVReplica blue E2E event.",
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "The remote fabric name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012R2",
      "title": "HyperVReplica2012R2EventDetails"
    },
    "HyperVReplicaAzureApplyRecoveryPointInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "description": "ApplyRecoveryPoint input specific to HyperVReplicaAzure provider.",
      "properties": {
        "primaryKekCertificatePfx": {
          "description": "The primary kek certificate pfx.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "The secondary kek certificate pfx.",
          "type": "string"
        },
        "vaultLocation": {
          "description": "The vault location where the recovery Vm resides.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzureApplyRecoveryPointInput"
    },
    "HyperVReplicaAzureEnableProtectionInput": {
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "description": "Azure specific enable protection input.",
      "properties": {
        "disksToInclude": {
          "description": "The list of VHD IDs of disks to be protected.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enableRDPOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "hvHostVmId": {
          "description": "The Hyper-V host Vm Id.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type associated with vm.",
          "type": "string"
        },
        "targetAzureNetworkId": {
          "description": "The selected target Azure network Id.",
          "type": "string"
        },
        "targetAzureSubnetId": {
          "description": "The selected target Azure subnet Id.",
          "type": "string"
        },
        "targetAzureV1ResourceGroupId": {
          "description": "The Id of the target resource group (for classic deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "targetAzureV2ResourceGroupId": {
          "description": "The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "targetAzureVmName": {
          "description": "The target azure Vm Name.",
          "type": "string"
        },
        "targetStorageAccountId": {
          "description": "The storage account name.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        },
        "vhdId": {
          "description": "The OS disk VHD id associated with vm.",
          "type": "string"
        },
        "vmName": {
          "description": "The Vm Name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzureEnableProtectionInput"
    },
    "HyperVReplicaAzureEventDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "description": "Model class for event details of a HyperVReplica E2A event.",
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzureEventDetails"
    },
    "HyperVReplicaAzureFailbackProviderInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "description": "HvrA provider specific input for failback.",
      "properties": {
        "dataSyncOption": {
          "description": "Data sync option.",
          "type": "string"
        },
        "providerIdForAlternateRecovery": {
          "description": "Provider ID for alternate location",
          "type": "string"
        },
        "recoveryVmCreationOption": {
          "description": "ALR options to create alternate recovery.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzureFailback",
      "title": "HyperVReplicaAzureFailbackProviderInput"
    },
    "HyperVReplicaAzureFailoverProviderInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "description": "HvrA provider specific input for failover.",
      "properties": {
        "primaryKekCertificatePfx": {
          "description": "Primary kek certificate pfx.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        },
        "secondaryKekCertificatePfx": {
          "description": "Secondary kek certificate pfx.",
          "type": "string"
        },
        "vaultLocation": {
          "description": "Location of the vault.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzureFailoverProviderInput"
    },
    "HyperVReplicaAzurePolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "Hyper-V Replica Azure specific protection profile details.",
      "properties": {
        "activeStorageAccountId": {
          "description": "The active storage account Id.",
          "type": "string"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "description": "The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.",
          "format": "int32",
          "type": "integer"
        },
        "encryption": {
          "description": "A value indicating whether encryption is enabled for virtual machines in this cloud.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.",
          "type": "string"
        },
        "recoveryPointHistoryDurationInHours": {
          "description": "The duration (in hours) to which point the recovery history needs to be maintained.",
          "format": "int32",
          "type": "integer"
        },
        "replicationInterval": {
          "description": "The replication interval.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzurePolicyDetails"
    },
    "HyperVReplicaAzurePolicyInput": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "description": "Hyper-V Replica Azure specific input for creating a protection profile.",
      "properties": {
        "applicationConsistentSnapshotFrequencyInHours": {
          "description": "The interval (in hours) at which Hyper-V Replica should create an application consistent snapshot within the VM.",
          "format": "int32",
          "type": "integer"
        },
        "encryption": {
          "description": "A value indicating whether encryption needs to be enabled for Vms in this cloud.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "The scheduled start time for the initial replication. If this parameter is Null, the initial replication starts immediately.",
          "type": "string"
        },
        "recoveryPointHistoryDuration": {
          "description": "The duration (in hours) to which point the recovery history needs to be maintained.",
          "format": "int32",
          "type": "integer"
        },
        "replicationInterval": {
          "description": "The replication interval.",
          "format": "int32",
          "type": "integer"
        },
        "storageAccounts": {
          "description": "The list of storage accounts to which the VMs in the primary cloud can replicate to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzurePolicyInput"
    },
    "HyperVReplicaAzureReplicationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "description": "Hyper V Replica Azure provider specific settings.",
      "properties": {
        "azureVMDiskDetails": {
          "description": "Azure VM Disk details.",
          "items": {
            "$ref": "#/definitions/AzureVmDiskDetails"
          },
          "type": "array"
        },
        "enableRDPOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "encryption": {
          "description": "The encryption info.",
          "type": "string"
        },
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "lastReplicatedTime": {
          "description": "The Last replication time.",
          "format": "date-time",
          "type": "string"
        },
        "licenseType": {
          "description": "License Type of the VM to be used.",
          "type": "string"
        },
        "oSDetails": {
          "$ref": "#/definitions/OSDetails",
          "description": "The operating system info."
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set Id.",
          "type": "string"
        },
        "recoveryAzureLogStorageAccountId": {
          "description": "The ARM id of the log storage acount used for replication. This will be set to null if no log storage account was provided during enable protection.",
          "type": "string"
        },
        "recoveryAzureResourceGroupId": {
          "description": "The target resource group Id.",
          "type": "string"
        },
        "recoveryAzureStorageAccount": {
          "description": "The recovery Azure storage account.",
          "type": "string"
        },
        "recoveryAzureVMName": {
          "description": "Recovery Azure given name.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "The Recovery Azure VM size.",
          "type": "string"
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "The selected recovery azure network Id.",
          "type": "string"
        },
        "sourceVmCPUCount": {
          "description": "The CPU count of the VM on the primary side.",
          "format": "int32",
          "type": "integer"
        },
        "sourceVmRAMSizeInMB": {
          "description": "The RAM size of the VM on the primary side.",
          "format": "int32",
          "type": "integer"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          },
          "type": "array"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzureReplicationDetails"
    },
    "HyperVReplicaAzureReprotectInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "description": "Azure specific reprotect input.",
      "properties": {
        "hvHostVmId": {
          "description": "The Hyper-V host Vm Id.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type associated with vm.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "The storage account name.",
          "type": "string"
        },
        "vHDId": {
          "description": "The OS disk VHD id associated with vm.",
          "type": "string"
        },
        "vmName": {
          "description": "The Vm Name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzureReprotectInput"
    },
    "HyperVReplicaAzureUpdateReplicationProtectedItemInput": {
      "allOf": [
        {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput"
        }
      ],
      "description": "HyperV replica Azure input to update replication protected item.",
      "properties": {
        "recoveryAzureV1ResourceGroupId": {
          "description": "The recovery Azure resource group Id for classic deployment.",
          "type": "string"
        },
        "recoveryAzureV2ResourceGroupId": {
          "description": "The recovery Azure resource group Id for resource manager deployment.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "HyperVReplicaAzureUpdateReplicationProtectedItemInput"
    },
    "HyperVReplicaBaseEventDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "description": "Abstract model class for event details of a HyperVReplica E2E event.",
      "properties": {
        "containerName": {
          "description": "The container friendly name.",
          "type": "string"
        },
        "fabricName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "remoteContainerName": {
          "description": "The remote container name.",
          "type": "string"
        },
        "remoteFabricName": {
          "description": "The remote fabric name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaBaseEventDetails",
      "title": "HyperVReplicaBaseEventDetails"
    },
    "HyperVReplicaBasePolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "Base class for HyperVReplica policy details.",
      "properties": {
        "allowedAuthenticationType": {
          "description": "A value indicating the authentication type.",
          "format": "int32",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "description": "A value indicating the application consistent frequency.",
          "format": "int32",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "recoveryPoints": {
          "description": "A value indicating the number of recovery points.",
          "format": "int32",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        },
        "replicationPort": {
          "description": "A value indicating the recovery HTTPS port.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaBasePolicyDetails",
      "title": "HyperVReplicaBasePolicyDetails"
    },
    "HyperVReplicaBaseReplicationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "description": "Hyper V replica provider specific settings base class.",
      "properties": {
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "lastReplicatedTime": {
          "description": "The Last replication time.",
          "format": "date-time",
          "type": "string"
        },
        "vMDiskDetails": {
          "description": "VM disk details.",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          },
          "type": "array"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          },
          "type": "array"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaBaseReplicationDetails",
      "title": "HyperVReplicaBaseReplicationDetails"
    },
    "HyperVReplicaBluePolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "Hyper-V Replica Blue specific protection profile details.",
      "properties": {
        "allowedAuthenticationType": {
          "description": "A value indicating the authentication type.",
          "format": "int32",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "description": "A value indicating the application consistent frequency.",
          "format": "int32",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "recoveryPoints": {
          "description": "A value indicating the number of recovery points.",
          "format": "int32",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        },
        "replicationFrequencyInSeconds": {
          "description": "A value indicating the replication interval.",
          "format": "int32",
          "type": "integer"
        },
        "replicationPort": {
          "description": "A value indicating the recovery HTTPS port.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012R2",
      "title": "HyperVReplicaBluePolicyDetails"
    },
    "HyperVReplicaBluePolicyInput": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "description": "HyperV Replica Blue policy input.",
      "properties": {
        "allowedAuthenticationType": {
          "description": "A value indicating the authentication type.",
          "format": "int32",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "description": "A value indicating the application consistent frequency.",
          "format": "int32",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "recoveryPoints": {
          "description": "A value indicating the number of recovery points.",
          "format": "int32",
          "type": "integer"
        },
        "replicaDeletion": {
          "description": "A value indicating whether the VM has to be auto deleted.",
          "type": "string"
        },
        "replicationFrequencyInSeconds": {
          "description": "A value indicating the replication interval.",
          "format": "int32",
          "type": "integer"
        },
        "replicationPort": {
          "description": "A value indicating the recovery HTTPS port.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012R2",
      "title": "HyperVReplicaBluePolicyInput"
    },
    "HyperVReplicaBlueReplicationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "description": "HyperV replica 2012 R2 (Blue) replication details.",
      "properties": {
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "lastReplicatedTime": {
          "description": "The Last replication time.",
          "format": "date-time",
          "type": "string"
        },
        "vMDiskDetails": {
          "description": "VM disk details.",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          },
          "type": "array"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          },
          "type": "array"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012R2",
      "title": "HyperVReplicaBlueReplicationDetails"
    },
    "HyperVReplicaPolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "Hyper-V Replica Blue specific protection profile details.",
      "properties": {
        "allowedAuthenticationType": {
          "description": "A value indicating the authentication type.",
          "format": "int32",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "description": "A value indicating the application consistent frequency.",
          "format": "int32",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "recoveryPoints": {
          "description": "A value indicating the number of recovery points.",
          "format": "int32",
          "type": "integer"
        },
        "replicaDeletionOption": {
          "description": "A value indicating whether the VM has to be auto deleted. Supported Values: String.Empty, None, OnRecoveryCloud",
          "type": "string"
        },
        "replicationPort": {
          "description": "A value indicating the recovery HTTPS port.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012",
      "title": "HyperVReplicaPolicyDetails"
    },
    "HyperVReplicaPolicyInput": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "description": "Hyper-V Replica specific protection profile Input.",
      "properties": {
        "allowedAuthenticationType": {
          "description": "A value indicating the authentication type.",
          "format": "int32",
          "type": "integer"
        },
        "applicationConsistentSnapshotFrequencyInHours": {
          "description": "A value indicating the application consistent frequency.",
          "format": "int32",
          "type": "integer"
        },
        "compression": {
          "description": "A value indicating whether compression has to be enabled.",
          "type": "string"
        },
        "initialReplicationMethod": {
          "description": "A value indicating whether IR is online.",
          "type": "string"
        },
        "offlineReplicationExportPath": {
          "description": "A value indicating the offline IR export path.",
          "type": "string"
        },
        "offlineReplicationImportPath": {
          "description": "A value indicating the offline IR import path.",
          "type": "string"
        },
        "onlineReplicationStartTime": {
          "description": "A value indicating the online IR start time.",
          "type": "string"
        },
        "recoveryPoints": {
          "description": "A value indicating the number of recovery points.",
          "format": "int32",
          "type": "integer"
        },
        "replicaDeletion": {
          "description": "A value indicating whether the VM has to be auto deleted.",
          "type": "string"
        },
        "replicationPort": {
          "description": "A value indicating the recovery HTTPS port.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012",
      "title": "HyperVReplicaPolicyInput"
    },
    "HyperVReplicaReplicationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "description": "HyperV replica 2012 replication details.",
      "properties": {
        "initialReplicationDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "Initial replication details."
        },
        "lastReplicatedTime": {
          "description": "The Last replication time.",
          "format": "date-time",
          "type": "string"
        },
        "vMDiskDetails": {
          "description": "VM disk details.",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          },
          "type": "array"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          },
          "type": "array"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplica2012",
      "title": "HyperVReplicaReplicationDetails"
    },
    "HyperVSiteDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "description": "HyperVSite fabric specific details.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "HyperVSite",
      "title": "HyperVSiteDetails"
    },
    "HyperVVirtualMachineDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "description": "Hyper V replica provider specific settings",
      "properties": {
        "diskDetails": {
          "description": "The Last successful failover time.",
          "items": {
            "$ref": "#/definitions/DiskDetails"
          },
          "type": "array"
        },
        "generation": {
          "description": "The id of the object in fabric.",
          "type": "string"
        },
        "osDetails": {
          "$ref": "#/definitions/OSDetails",
          "description": "The Last replication time."
        },
        "sourceItemId": {
          "description": "The source id of the object.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "HyperVVirtualMachine",
      "title": "HyperVVirtualMachineDetails"
    },
    "InMageAgentDetails": {
      "description": "The details of the InMage agent.",
      "properties": {
        "agentUpdateStatus": {
          "description": "A value indicating whether installed agent needs to be updated.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "postUpdateRebootStatus": {
          "description": "A value indicating whether reboot is required after update is applied.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "InMageAgentDetails"
    },
    "InMageAzureV2ApplyRecoveryPointInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ApplyRecoveryPointProviderSpecificInput"
        }
      ],
      "description": "ApplyRecoveryPoint input specific to InMageAzureV2 provider.",
      "properties": {
        "vaultLocation": {
          "description": "The vault location where the recovery Vm resides.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2ApplyRecoveryPointInput"
    },
    "InMageAzureV2EnableProtectionInput": {
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "description": "VMware Azure specific enable protection input.",
      "properties": {
        "disksToInclude": {
          "description": "The disks to include list.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enableRDPOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "The Master target Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "The storage account name.",
          "type": "string"
        },
        "targetAzureNetworkId": {
          "description": "The selected target Azure network Id.",
          "type": "string"
        },
        "targetAzureSubnetId": {
          "description": "The selected target Azure subnet Id.",
          "type": "string"
        },
        "targetAzureV1ResourceGroupId": {
          "description": "The Id of the target resource group (for classic deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "targetAzureV2ResourceGroupId": {
          "description": "The Id of the target resource group (for resource manager deployment) in which the failover VM is to be created.",
          "type": "string"
        },
        "targetAzureVmName": {
          "description": "The target azure Vm Name.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        }
      },
      "required": [
        "storageAccountId"
      ],
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2EnableProtectionInput"
    },
    "InMageAzureV2EventDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/EventProviderSpecificDetails"
        }
      ],
      "description": "Model class for event details of a VMwareAzureV2 event.",
      "properties": {
        "category": {
          "description": "InMage Event Category.",
          "type": "string"
        },
        "component": {
          "description": "InMage Event Component.",
          "type": "string"
        },
        "correctiveAction": {
          "description": "Corrective Action string for the event.",
          "type": "string"
        },
        "details": {
          "description": "InMage Event Details.",
          "type": "string"
        },
        "eventType": {
          "description": "InMage Event type. Takes one of the values of {InMageDataContract.InMageMonitoringEventType}.",
          "type": "string"
        },
        "siteName": {
          "description": "VMware Site name.",
          "type": "string"
        },
        "summary": {
          "description": "InMage Event Summary.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2EventDetails"
    },
    "InMageAzureV2FailoverProviderInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "description": "InMageAzureV2 provider specific input for failover.",
      "properties": {
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        },
        "vaultLocation": {
          "description": "Location of the vault.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2FailoverProviderInput"
    },
    "InMageAzureV2PolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "InMage Azure v2 specific protection profile details.",
      "properties": {
        "appConsistentFrequencyInMinutes": {
          "description": "The app consistent snapshot frequency in minutes.",
          "format": "int32",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "description": "The crash consistent snapshot frequency in minutes.",
          "format": "int32",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        },
        "recoveryPointHistory": {
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "format": "int32",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "description": "The recovery point threshold in minutes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2PolicyDetails"
    },
    "InMageAzureV2PolicyInput": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "description": "VMWare Azure specific protection profile Input.",
      "properties": {
        "appConsistentFrequencyInMinutes": {
          "description": "The app consistent snapshot frequency (in minutes).",
          "format": "int32",
          "type": "integer"
        },
        "crashConsistentFrequencyInMinutes": {
          "description": "The crash consistent snapshot frequency (in minutes).",
          "format": "int32",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "SetMultiVmSyncStatus"
          }
        },
        "recoveryPointHistory": {
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "format": "int32",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "description": "The recovery point threshold in minutes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2PolicyInput"
    },
    "InMageAzureV2ProtectedDiskDetails": {
      "description": "InMageAzureV2 protected disk details.",
      "properties": {
        "diskCapacityInBytes": {
          "description": "The disk capacity in bytes.",
          "format": "int64",
          "type": "integer"
        },
        "diskId": {
          "description": "The disk id.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "diskResized": {
          "description": "A value indicating whether disk is resized.",
          "type": "string"
        },
        "fileSystemCapacityInBytes": {
          "description": "The disk file system capacity in bytes.",
          "format": "int64",
          "type": "integer"
        },
        "healthErrorCode": {
          "description": "The health error code for the disk.",
          "type": "string"
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "psDataInMegaBytes": {
          "description": "The PS data transit in MB.",
          "format": "double",
          "type": "number"
        },
        "resyncDurationInSeconds": {
          "description": "The resync duration in seconds.",
          "format": "int64",
          "type": "integer"
        },
        "resyncProgressPercentage": {
          "description": "The resync progress percentage.",
          "format": "int32",
          "type": "integer"
        },
        "resyncRequired": {
          "description": "A value indicating whether resync is required for this disk.",
          "type": "string"
        },
        "rpoInSeconds": {
          "description": "The RPO in seconds.",
          "format": "int64",
          "type": "integer"
        },
        "sourceDataInMegaBytes": {
          "description": "The source data transit in MB.",
          "format": "double",
          "type": "number"
        },
        "targetDataInMegaBytes": {
          "description": "The target data transit in MB.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "title": "InMageAzureV2ProtectedDiskDetails"
    },
    "InMageAzureV2ReplicationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "description": "InMageAzureV2 provider specific settings",
      "properties": {
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "azureVMDiskDetails": {
          "description": "Azure VM Disk details.",
          "items": {
            "$ref": "#/definitions/AzureVmDiskDetails"
          },
          "type": "array"
        },
        "compressedDataRateInMB": {
          "description": "The compressed data change rate in MB.",
          "format": "double",
          "type": "number"
        },
        "datastores": {
          "description": "The datastores of the on-premise machine. Value can be list of strings that contain datastore names.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "discoveryType": {
          "description": "A value inidicating the discovery type of the machine. Value can be vCenter or physical.",
          "type": "string"
        },
        "diskResized": {
          "description": "A value indicating whether any disk is resized for this VM.",
          "type": "string"
        },
        "enableRDPOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "infrastructureVmId": {
          "description": "The infrastructure VM Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The source IP address.",
          "type": "string"
        },
        "isAgentUpdateRequired": {
          "description": "A value indicating whether installed agent needs to be updated.",
          "type": "string"
        },
        "isRebootAfterUpdateRequired": {
          "description": "A value indicating whether the source server requires a restart after update.",
          "type": "string"
        },
        "lastHeartbeat": {
          "description": "The last heartbeat received from the source server.",
          "format": "date-time",
          "type": "string"
        },
        "licenseType": {
          "description": "License Type of the VM to be used.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "The master target Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi vm sync is enabled or disabled.",
          "type": "string"
        },
        "osDiskId": {
          "description": "The id of the disk containing the OS.",
          "type": "string"
        },
        "osType": {
          "description": "The type of the OS on the VM.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "The list of protected disks.",
          "items": {
            "$ref": "#/definitions/InMageAzureV2ProtectedDiskDetails"
          },
          "type": "array"
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "recoveryAvailabilitySetId": {
          "description": "The recovery availability set Id.",
          "type": "string"
        },
        "recoveryAzureLogStorageAccountId": {
          "description": "The ARM id of the log storage acount used for replication. This will be set to null if no log storage account was provided during enable protection.",
          "type": "string"
        },
        "recoveryAzureResourceGroupId": {
          "description": "The target resource group Id.",
          "type": "string"
        },
        "recoveryAzureStorageAccount": {
          "description": "The recovery Azure storage account.",
          "type": "string"
        },
        "recoveryAzureVMName": {
          "description": "Recovery Azure given name.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "The Recovery Azure VM size.",
          "type": "string"
        },
        "resyncProgressPercentage": {
          "description": "The resync progress percentage.",
          "format": "int32",
          "type": "integer"
        },
        "rpoInSeconds": {
          "description": "The RPO in seconds.",
          "format": "int64",
          "type": "integer"
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "The selected recovery azure network Id.",
          "type": "string"
        },
        "sourceVmCPUCount": {
          "description": "The CPU count of the VM on the primary side.",
          "format": "int32",
          "type": "integer"
        },
        "sourceVmRAMSizeInMB": {
          "description": "The RAM size of the VM on the primary side.",
          "format": "int32",
          "type": "integer"
        },
        "targetVmId": {
          "description": "The ARM Id of the target Azure VM. This value will be null until the VM is failed over. Only after failure it will be populated with the ARM Id of the Azure VM.",
          "type": "string"
        },
        "uncompressedDataRateInMB": {
          "description": "The uncompressed data change rate in MB.",
          "format": "double",
          "type": "number"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        },
        "vCenterInfrastructureId": {
          "description": "The vCenter infrastructure Id.",
          "type": "string"
        },
        "validationErrors": {
          "description": "The validation errors of the on-premise machine Value can be list of validation errors.",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "vhdName": {
          "description": "The OS disk VHD name.",
          "type": "string"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          },
          "type": "array"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2ReplicationDetails"
    },
    "InMageAzureV2ReprotectInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "description": "InMageAzureV2 specific provider input.",
      "properties": {
        "disksToInclude": {
          "description": "The disks to include list.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "logStorageAccountId": {
          "description": "The storage account to be used for logging during replication.",
          "type": "string"
        },
        "masterTargetId": {
          "description": "The Master target Id.",
          "type": "string"
        },
        "policyId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "The storage account id.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2ReprotectInput"
    },
    "InMageAzureV2UpdateReplicationProtectedItemInput": {
      "allOf": [
        {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput"
        }
      ],
      "description": "InMage Azure V2 input to update replication protected item.",
      "properties": {
        "recoveryAzureV1ResourceGroupId": {
          "description": "The recovery Azure resource group Id for classic deployment.",
          "type": "string"
        },
        "recoveryAzureV2ResourceGroupId": {
          "description": "The recovery Azure resource group Id for resource manager deployment.",
          "type": "string"
        },
        "useManagedDisks": {
          "description": "A value indicating whether managed disks should be used during failover.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "InMageAzureV2UpdateReplicationProtectedItemInput"
    },
    "InMageBasePolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "Base class for the policies of providers using InMage replication.",
      "properties": {
        "appConsistentFrequencyInMinutes": {
          "description": "The app consistent snapshot frequency in minutes.",
          "format": "int32",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        },
        "recoveryPointHistory": {
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "format": "int32",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "description": "The recovery point threshold in minutes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMageBasePolicyDetails",
      "title": "InMageBasePolicyDetails"
    },
    "InMageDisableProtectionProviderSpecificInput": {
      "allOf": [
        {
          "$ref": "#/definitions/DisableProtectionProviderSpecificInput"
        }
      ],
      "description": "InMage disable protection provider specific input.",
      "properties": {
        "replicaVmDeletionStatus": {
          "description": "A value indicating whether the replica VM should be destroyed or retained. Values from Delete and Retain.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "InMageDisableProtectionProviderSpecificInput"
    },
    "InMageDiskDetails": {
      "description": "VMware/Physical specific Disk Details",
      "properties": {
        "diskConfiguration": {
          "description": "Whether disk is dynamic disk or basic disk.",
          "type": "string"
        },
        "diskId": {
          "description": "The disk Id.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "diskSizeInMB": {
          "description": "The disk size in MB.",
          "type": "string"
        },
        "diskType": {
          "description": "Whether disk is system disk or data disk.",
          "type": "string"
        },
        "volumeList": {
          "description": "Volumes of the disk.",
          "items": {
            "$ref": "#/definitions/DiskVolumeDetails"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "InMageDiskDetails"
    },
    "InMageDiskExclusionInput": {
      "description": "DiskExclusionInput when doing enable protection of virtual machine in InMage provider.",
      "properties": {
        "diskSignatureOptions": {
          "description": "The guest disk signature based option for disk exclusion.",
          "items": {
            "$ref": "#/definitions/InMageDiskSignatureExclusionOptions"
          },
          "type": "array"
        },
        "volumeOptions": {
          "description": "The volume label based option for disk exclusion.",
          "items": {
            "$ref": "#/definitions/InMageVolumeExclusionOptions"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "InMageDiskExclusionInput"
    },
    "InMageDiskSignatureExclusionOptions": {
      "description": "Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.",
      "properties": {
        "diskSignature": {
          "description": "The guest signature of disk to be excluded from replication.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "InMageDiskSignatureExclusionOptions"
    },
    "InMageEnableProtectionInput": {
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "description": "VMware Azure specific enable protection input.",
      "properties": {
        "datastoreName": {
          "description": "The target datastore name.",
          "type": "string"
        },
        "diskExclusionInput": {
          "$ref": "#/definitions/InMageDiskExclusionInput",
          "description": "The enable disk exclusion input."
        },
        "disksToInclude": {
          "description": "The disks to include list.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "masterTargetId": {
          "description": "The Master Target Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "retentionDrive": {
          "description": "The retention drive to use on the MT.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        },
        "vmFriendlyName": {
          "description": "The Vm Name.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "InMageEnableProtectionInput"
    },
    "InMageFailoverProviderInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ProviderSpecificFailoverInput"
        }
      ],
      "description": "Provider specific input for InMage failover.",
      "properties": {
        "recoveryPointId": {
          "description": "The recovery point id to be passed to failover to a particular recovery point. In case of latest recovery point, null should be passed.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "The recovery point type. Values from LatestTime, LatestTag or Custom. In the case of custom, the recovery point provided by RecoveryPointId will be used. In the other two cases, recovery point id will be ignored.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "InMageFailoverProviderInput"
    },
    "InMagePolicyDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificDetails"
        }
      ],
      "description": "InMage specific protection profile details.",
      "properties": {
        "appConsistentFrequencyInMinutes": {
          "description": "The app consistent snapshot frequency in minutes.",
          "format": "int32",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled.",
          "type": "string"
        },
        "recoveryPointHistory": {
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "format": "int32",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "description": "The recovery point threshold in minutes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "InMagePolicyDetails"
    },
    "InMagePolicyInput": {
      "allOf": [
        {
          "$ref": "#/definitions/PolicyProviderSpecificInput"
        }
      ],
      "description": "VMWare Azure specific protection profile Input.",
      "properties": {
        "appConsistentFrequencyInMinutes": {
          "description": "The app consistent snapshot frequency (in minutes).",
          "format": "int32",
          "type": "integer"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether multi-VM sync has to be enabled. Value should be 'Enabled' or 'Disabled'.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "SetMultiVmSyncStatus"
          }
        },
        "recoveryPointHistory": {
          "description": "The duration in minutes until which the recovery points need to be stored.",
          "format": "int32",
          "type": "integer"
        },
        "recoveryPointThresholdInMinutes": {
          "description": "The recovery point threshold in minutes.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "multiVmSyncStatus"
      ],
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "InMagePolicyInput"
    },
    "InMageProtectedDiskDetails": {
      "description": "InMage protected disk details.",
      "properties": {
        "diskCapacityInBytes": {
          "description": "The disk capacity in bytes.",
          "format": "int64",
          "type": "integer"
        },
        "diskId": {
          "description": "The disk id.",
          "type": "string"
        },
        "diskName": {
          "description": "The disk name.",
          "type": "string"
        },
        "diskResized": {
          "description": "A value indicating whether disk is resized.",
          "type": "string"
        },
        "fileSystemCapacityInBytes": {
          "description": "The file system capacity in bytes.",
          "format": "int64",
          "type": "integer"
        },
        "healthErrorCode": {
          "description": "The health error code for the disk.",
          "type": "string"
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "psDataInMB": {
          "description": "The PS data transit in MB.",
          "format": "double",
          "type": "number"
        },
        "resyncDurationInSeconds": {
          "description": "The resync duration in seconds.",
          "format": "int64",
          "type": "integer"
        },
        "resyncProgressPercentage": {
          "description": "The resync progress percentage.",
          "format": "int32",
          "type": "integer"
        },
        "resyncRequired": {
          "description": "A value indicating whether resync is required for this disk.",
          "type": "string"
        },
        "rpoInSeconds": {
          "description": "The RPO in seconds.",
          "format": "int64",
          "type": "integer"
        },
        "sourceDataInMB": {
          "description": "The source data transit in MB.",
          "format": "double",
          "type": "number"
        },
        "targetDataInMB": {
          "description": "The target data transit in MB.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "title": "InMageProtectedDiskDetails"
    },
    "InMageReplicationDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings"
        }
      ],
      "description": "InMage provider specific settings",
      "properties": {
        "activeSiteType": {
          "description": "The active location of the VM. If the VM is being protected from Azure, this field will take values from { Azure, OnPrem }. If the VM is being protected between two data-centers, this field will be OnPrem always.",
          "type": "string"
        },
        "agentDetails": {
          "$ref": "#/definitions/InMageAgentDetails",
          "description": "The agent details."
        },
        "azureStorageAccountId": {
          "description": "A value indicating the underlying Azure storage account. If the VM is not running in Azure, this value shall be set to null.",
          "type": "string"
        },
        "compressedDataRateInMB": {
          "description": "The compressed data change rate in MB.",
          "format": "double",
          "type": "number"
        },
        "consistencyPoints": {
          "additionalProperties": {
            "format": "date-time",
            "type": "string"
          },
          "description": "The collection of Consistency points.",
          "type": "object"
        },
        "datastores": {
          "description": "The datastores of the on-premise machine Value can be list of strings that contain datastore names",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "discoveryType": {
          "description": "A value inidicating the discovery type of the machine.",
          "type": "string"
        },
        "diskResized": {
          "description": "A value indicating whether any disk is resized for this VM.",
          "type": "string"
        },
        "infrastructureVmId": {
          "description": "The infrastructure VM Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The source IP address.",
          "type": "string"
        },
        "lastHeartbeat": {
          "description": "The last heartbeat received from the source server.",
          "format": "date-time",
          "type": "string"
        },
        "masterTargetId": {
          "description": "The master target Id.",
          "type": "string"
        },
        "multiVmGroupId": {
          "description": "The multi vm group Id, if any.",
          "type": "string"
        },
        "multiVmGroupName": {
          "description": "The multi vm group name, if any.",
          "type": "string"
        },
        "multiVmSyncStatus": {
          "description": "A value indicating whether the multi vm sync is enabled or disabled.",
          "type": "string"
        },
        "osDetails": {
          "$ref": "#/definitions/OSDiskDetails",
          "description": "The OS details."
        },
        "processServerId": {
          "description": "The process server Id.",
          "type": "string"
        },
        "protectedDisks": {
          "description": "The list of protected disks.",
          "items": {
            "$ref": "#/definitions/InMageProtectedDiskDetails"
          },
          "type": "array"
        },
        "protectionStage": {
          "description": "The protection stage.",
          "type": "string"
        },
        "rebootAfterUpdateStatus": {
          "description": "A value indicating whether the source server requires a restart after update.",
          "type": "string"
        },
        "resyncDetails": {
          "$ref": "#/definitions/InitialReplicationDetails",
          "description": "The resync details of the machine"
        },
        "retentionWindowEnd": {
          "description": "The retention window end time.",
          "format": "date-time",
          "type": "string"
        },
        "retentionWindowStart": {
          "description": "The retention window start time.",
          "format": "date-time",
          "type": "string"
        },
        "rpoInSeconds": {
          "description": "The RPO in seconds.",
          "format": "int64",
          "type": "integer"
        },
        "sourceVmCPUCount": {
          "description": "The CPU count of the VM on the primary side.",
          "format": "int32",
          "type": "integer"
        },
        "sourceVmRAMSizeInMB": {
          "description": "The RAM size of the VM on the primary side.",
          "format": "int32",
          "type": "integer"
        },
        "uncompressedDataRateInMB": {
          "description": "The uncompressed data change rate in MB.",
          "format": "double",
          "type": "number"
        },
        "vCenterInfrastructureId": {
          "description": "The vCenter infrastructure Id.",
          "type": "string"
        },
        "validationErrors": {
          "description": "The validation errors of the on-premise machine Value can be list of validation errors",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "vmId": {
          "description": "The virtual machine Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The PE Network details.",
          "items": {
            "$ref": "#/definitions/VMNicDetails"
          },
          "type": "array"
        },
        "vmProtectionState": {
          "description": "The protection state for the vm.",
          "type": "string"
        },
        "vmProtectionStateDescription": {
          "description": "The protection state description for the vm.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "InMageReplicationDetails"
    },
    "InMageReprotectInput": {
      "allOf": [
        {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput"
        }
      ],
      "description": "InMageAzureV2 specific provider input.",
      "properties": {
        "datastoreName": {
          "description": "The target datastore name.",
          "type": "string"
        },
        "diskExclusionInput": {
          "$ref": "#/definitions/InMageDiskExclusionInput",
          "description": "The enable disk exclusion input."
        },
        "disksToInclude": {
          "description": "The disks to include list.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "masterTargetId": {
          "description": "The Master Target Id.",
          "type": "string"
        },
        "processServerId": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "profileId": {
          "description": "The Policy Id.",
          "type": "string"
        },
        "retentionDrive": {
          "description": "The retention drive to use on the MT.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "InMageReprotectInput"
    },
    "InMageVolumeExclusionOptions": {
      "description": "Guest disk signature based disk exclusion option when doing enable protection of virtual machine in InMage provider.",
      "properties": {
        "OnlyExcludeIfSingleVolume": {
          "description": "The value indicating whether to exclude multi volume disk or not. If a disk has multiple volumes and one of the volume has label matching with VolumeLabel this disk will be excluded from replication if OnlyExcludeIfSingleVolume is false.",
          "type": "string"
        },
        "volumeLabel": {
          "description": "The volume label. The disk having any volume with this label will be excluded from replication.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "InMageVolumeExclusionOptions"
    },
    "InconsistentVmDetails": {
      "description": "This class stores the monitoring details for consistency check of inconsistent Protected Entity.",
      "properties": {
        "cloudName": {
          "description": "The Cloud name.",
          "type": "string"
        },
        "details": {
          "description": "The list of details regarding state of the Protected Entity in SRS and On prem.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "errorIds": {
          "description": "The list of error ids.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "vmName": {
          "description": "The Vm name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "InconsistentVmDetails"
    },
    "InitialReplicationDetails": {
      "description": "Initial replication details.",
      "properties": {
        "initialReplicationProgressPercentage": {
          "description": "The initial replication progress percentage.",
          "type": "string"
        },
        "initialReplicationType": {
          "description": "Initial replication type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "InitialReplicationDetails"
    },
    "InlineWorkflowTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "description": "This class represents the inline workflow task details.",
      "properties": {
        "workflowIds": {
          "description": "The list of child workflow ids.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "InlineWorkflowTaskDetails",
      "title": "InlineWorkflowTaskDetails"
    },
    "InputEndpoint": {
      "description": "Azure VM input endpoint details.",
      "properties": {
        "endpointName": {
          "description": "The input endpoint name.",
          "type": "string"
        },
        "privatePort": {
          "description": "The input endpoint private port.",
          "format": "int32",
          "type": "integer"
        },
        "protocol": {
          "description": "The input endpoint protocol.",
          "type": "string"
        },
        "publicPort": {
          "description": "The input endpoint public port.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "InputEndpoint"
    },
    "Job": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Job details.",
      "properties": {
        "endTime": {
          "description": "The start time.",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/ARMException",
          "description": "The error."
        },
        "properties": {
          "$ref": "#/definitions/JobProperties",
          "description": "The custom data."
        },
        "startTime": {
          "description": "The start time.",
          "type": "string"
        },
        "status": {
          "description": "The status of the Job. ARM expects the terminal status to be one of (1) Succeeded, (2) Failed or (3) Canceled. All other values imply that the operation is still running / being applied.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Job"
    },
    "JobCollection": {
      "description": "Collection of jobs.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The list of jobs.",
          "items": {
            "$ref": "#/definitions/Job"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "JobCollection"
    },
    "JobDetails": {
      "description": "Job details based on specific job type.",
      "discriminator": "instanceType",
      "properties": {
        "affectedObjectDetails": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The affected object properties like source server, source cloud, target server, target cloud etc. based on the workflow object details.",
          "type": "object"
        },
        "instanceType": {
          "description": "Gets the type of job details (see JobDetailsTypes enum for possible values).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "JobDetails"
    },
    "JobEntity": {
      "description": "This class contains the minimal job details required to navigate to the desired drill down.",
      "properties": {
        "jobFriendlyName": {
          "description": "The job display name.",
          "type": "string"
        },
        "jobId": {
          "description": "The job id.",
          "type": "string"
        },
        "jobScenarioName": {
          "description": "The job name. Enum type ScenarioName.",
          "type": "string"
        },
        "targetInstanceType": {
          "description": "The workflow affected object type.",
          "type": "string"
        },
        "targetObjectId": {
          "description": "The object id.",
          "type": "string"
        },
        "targetObjectName": {
          "description": "The object name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "JobEntity"
    },
    "JobErrorDetails": {
      "description": "This class contains the error details per object.",
      "properties": {
        "creationTime": {
          "description": "The creation time of job error.",
          "format": "date-time",
          "type": "string"
        },
        "errorLevel": {
          "description": "Error level of error.",
          "type": "string"
        },
        "providerErrorDetails": {
          "$ref": "#/definitions/ProviderError",
          "description": "The Provider error details."
        },
        "serviceErrorDetails": {
          "$ref": "#/definitions/ServiceError",
          "description": "The Service error details."
        },
        "taskId": {
          "description": "The Id of the task.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "JobErrorDetails"
    },
    "JobProperties": {
      "description": "Job custom data details.",
      "properties": {
        "activityId": {
          "description": "The activity id.",
          "type": "string"
        },
        "allowedActions": {
          "description": "The Allowed action the job.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "customDetails": {
          "$ref": "#/definitions/JobDetails",
          "description": "The custom job details like test failover job details."
        },
        "endTime": {
          "description": "The end time.",
          "format": "date-time",
          "type": "string"
        },
        "errors": {
          "description": "The errors.",
          "items": {
            "$ref": "#/definitions/JobErrorDetails"
          },
          "type": "array"
        },
        "friendlyName": {
          "description": "The DisplayName.",
          "type": "string"
        },
        "scenarioName": {
          "description": "The ScenarioName.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time.",
          "format": "date-time",
          "type": "string"
        },
        "state": {
          "description": "The status of the Job. It is one of these values - NotStarted, InProgress, Succeeded, Failed, Cancelled, Suspended or Other.",
          "type": "string"
        },
        "stateDescription": {
          "description": "The description of the state of the Job. For e.g. - For Succeeded state, description can be Completed, PartiallySucceeded, CompletedWithInformation or Skipped.",
          "type": "string"
        },
        "targetInstanceType": {
          "description": "The type of the affected object which is of {Microsoft.Azure.SiteRecovery.V2015_11_10.AffectedObjectType} class.",
          "type": "string"
        },
        "targetObjectId": {
          "description": "The affected Object Id.",
          "type": "string"
        },
        "targetObjectName": {
          "description": "The name of the affected object.",
          "type": "string"
        },
        "tasks": {
          "description": "The tasks.",
          "items": {
            "$ref": "#/definitions/ASRTask"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "JobProperties"
    },
    "JobQueryParameter": {
      "description": "Query parameter to enumerate jobs.",
      "properties": {
        "affectedObjectTypes": {
          "description": "The type of objects.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "endTime": {
          "description": "Date time to get jobs upto.",
          "type": "string"
        },
        "fabricId": {
          "description": "The Id of the fabric to search jobs under.",
          "type": "string"
        },
        "jobStatus": {
          "description": "The states of the job to be filtered can be in.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "startTime": {
          "description": "Date time to get jobs from.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "JobQueryParameter"
    },
    "JobStatusEventDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/EventSpecificDetails"
        }
      ],
      "description": "Model class for event details of a job status event.",
      "properties": {
        "affectedObjectType": {
          "description": "AffectedObjectType for the event.",
          "type": "string"
        },
        "jobFriendlyName": {
          "description": "JobName for the Event.",
          "type": "string"
        },
        "jobId": {
          "description": "Job arm id for the event.",
          "type": "string"
        },
        "jobStatus": {
          "description": "JobStatus for the  Event.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "JobStatus",
      "title": "JobStatusEventDetails"
    },
    "JobTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class represents a task which is actually a workflow so that one can navigate to its individual drill down.",
      "properties": {
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "The job entity."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "JobTaskDetails",
      "title": "JobTaskDetails"
    },
    "LogicalNetwork": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Logical network data model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogicalNetworkProperties",
          "description": "The Logical Network Properties."
        }
      },
      "type": "object",
      "title": "LogicalNetwork"
    },
    "LogicalNetworkCollection": {
      "description": "List of logical networks.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The Logical Networks list details.",
          "items": {
            "$ref": "#/definitions/LogicalNetwork"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "LogicalNetworkCollection"
    },
    "LogicalNetworkProperties": {
      "description": "Logical Network Properties.",
      "properties": {
        "friendlyName": {
          "description": "The Friendly Name.",
          "type": "string"
        },
        "logicalNetworkDefinitionsStatus": {
          "description": "A value indicating whether logical network definitions are isolated.",
          "type": "string"
        },
        "logicalNetworkUsage": {
          "description": "A value indicating whether logical network is used as private test network by test failover.",
          "type": "string"
        },
        "networkVirtualizationStatus": {
          "description": "A value indicating whether Network Virtualization is enabled for the logical network.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "LogicalNetworkProperties"
    },
    "ManualActionTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class represents the manual action task details.",
      "properties": {
        "instructions": {
          "description": "The instructions.",
          "type": "string"
        },
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "observation": {
          "description": "The observation.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "ManualActionTaskDetails",
      "title": "ManualActionTaskDetails"
    },
    "MasterTargetServer": {
      "description": "Details of a Master Target Server.",
      "properties": {
        "agentVersion": {
          "description": "The version of the scout component on the server.",
          "type": "string"
        },
        "dataStores": {
          "description": "The list of data stores in the fabric.",
          "items": {
            "$ref": "#/definitions/DataStore"
          },
          "type": "array"
        },
        "id": {
          "description": "The server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the server.",
          "type": "string"
        },
        "lastHeartbeat": {
          "description": "The last heartbeat received from the server.",
          "format": "date-time",
          "type": "string"
        },
        "name": {
          "description": "The server name.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the server.",
          "type": "string"
        },
        "retentionVolumes": {
          "description": "The retention volumes of Master target Server.",
          "items": {
            "$ref": "#/definitions/RetentionVolume"
          },
          "type": "array"
        },
        "validationErrors": {
          "description": "Validation errors.",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "versionStatus": {
          "description": "Version status",
          "type": "string"
        }
      },
      "type": "object",
      "title": "MasterTargetServer"
    },
    "MethodCallStatus": {
      "description": "Reports method status where exception was raised.",
      "properties": {
        "containsGenericParameters": {
          "description": "Gets a value indicating whether method container generic params.",
          "type": "string"
        },
        "isVirtual": {
          "description": "Gets a value indicating whether called method was virtual",
          "type": "string"
        },
        "parameters": {
          "description": "Gets parameter list passed to method.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "MethodCallStatus"
    },
    "MobilityServiceUpdate": {
      "description": "The Mobility Service update details.",
      "properties": {
        "osType": {
          "description": "The OS type.",
          "type": "string"
        },
        "rebootStatus": {
          "description": "The reboot status of the update - whether it is required or not.",
          "type": "string"
        },
        "version": {
          "description": "The version of the latest update.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "MobilityServiceUpdate"
    },
    "Network": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Network model.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkProperties",
          "description": "The Network Properties."
        }
      },
      "type": "object",
      "title": "Network"
    },
    "NetworkCollection": {
      "description": "List of networks.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The Networks list details.",
          "items": {
            "$ref": "#/definitions/Network"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "NetworkCollection"
    },
    "NetworkMapping": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Network Mapping model. Ideally it should have been possible to inherit this class from prev version in InheritedModels as long as there is no difference in structure or method signature. Since there were no base Models for certain fields and methods viz NetworkMappingProperties and Load with required return type, the class has been introduced in its entirety with references to base models to facilitate exensions in subsequent versions.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NetworkMappingProperties",
          "description": "The Network Mapping Properties."
        }
      },
      "type": "object",
      "title": "NetworkMapping"
    },
    "NetworkMappingCollection": {
      "description": "List of network mappings. As with NetworkMapping, it should be possible to reuse a prev version of this class. It doesn't seem likely this class could be anything more than a slightly bespoke collection of NetworkMapping. Hence it makes sense to override Load with Base.NetworkMapping instead of existing CurrentVersion.NetworkMapping.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The Network Mappings list.",
          "items": {
            "$ref": "#/definitions/NetworkMapping"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "NetworkMappingCollection"
    },
    "NetworkMappingFabricSpecificSettings": {
      "description": "Network Mapping fabric specific settings.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "NetworkMappingFabricSpecificSettings"
    },
    "NetworkMappingProperties": {
      "description": "Network Mapping Properties.",
      "properties": {
        "fabricSpecificSettings": {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings",
          "description": "The fabric specific settings."
        },
        "primaryFabricFriendlyName": {
          "description": "The primary fabric friendly name.",
          "type": "string"
        },
        "primaryNetworkFriendlyName": {
          "description": "The primary network friendly name.",
          "type": "string"
        },
        "primaryNetworkId": {
          "description": "The primary network id for network mapping.",
          "type": "string"
        },
        "recoveryFabricArmId": {
          "description": "The recovery fabric ARM id.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "The recovery fabric friendly name.",
          "type": "string"
        },
        "recoveryNetworkFriendlyName": {
          "description": "The recovery network friendly name.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "The recovery network id for network mapping.",
          "type": "string"
        },
        "state": {
          "description": "The pairing state for network mapping.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NetworkMappingProperties"
    },
    "NetworkProperties": {
      "description": "Network Properties",
      "properties": {
        "fabricType": {
          "description": "The Fabric Type.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The Friendly Name.",
          "type": "string"
        },
        "networkType": {
          "description": "The Network Type.",
          "type": "string"
        },
        "subnets": {
          "description": "The List of subnets.",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "NetworkProperties"
    },
    "OSDetails": {
      "description": "Disk Details.",
      "properties": {
        "oSMajorVersion": {
          "description": "The OS Major Version.",
          "type": "string"
        },
        "oSMinorVersion": {
          "description": "The OS Minor Version.",
          "type": "string"
        },
        "oSVersion": {
          "description": "The OS Version.",
          "type": "string"
        },
        "osEdition": {
          "description": "The OSEdition.",
          "type": "string"
        },
        "osType": {
          "description": "VM Disk details.",
          "type": "string"
        },
        "productType": {
          "description": "ProductType.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "OSDetails"
    },
    "OSDiskDetails": {
      "description": "Details of the OS Disk.",
      "properties": {
        "osType": {
          "description": "The type of the OS on the VM.",
          "type": "string"
        },
        "osVhdId": {
          "description": "The id of the disk containing the OS.",
          "type": "string"
        },
        "vhdName": {
          "description": "The OS disk VHD name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "OSDiskDetails"
    },
    "Object": {
      "description": "Base of all objects.",
      "properties": {},
      "type": "object",
      "title": "Object"
    },
    "OperationsDiscovery": {
      "description": "Operations discovery class.",
      "properties": {
        "display": {
          "$ref": "#/definitions/Display",
          "description": "Object type"
        },
        "name": {
          "description": "Name of the API. The name of the operation being performed on this particular object. It should match the action name that appears in RBAC / the event service. Examples of operations include:  * Microsoft.Compute/virtualMachine/capture/action * Microsoft.Compute/virtualMachine/restart/action * Microsoft.Compute/virtualMachine/write * Microsoft.Compute/virtualMachine/read * Microsoft.Compute/virtualMachine/delete  Each action should include, in order:  (1) Resource Provider Namespace (2) Type hierarchy for which the action applies (e.g. server/databases for a SQL Azure database) (3) Read, Write, Action or Delete indicating which type applies. If it is a PUT/PATCH on a collection or named value, Write should be used. If it is a GET, Read should be used. If it is a DELETE, Delete should be used. If it is a POST, Action should be used.   As a note: all resource providers would need to include the \"{Resource Provider Namespace}/register/action\" operation in their response.  This API is used to register for their service, and should include details about the operation (e.g. a localized name for the resource provider + any special considerations like PII release)",
          "type": "string"
        },
        "origin": {
          "description": "Origin. The intended executor of the operation; governs the display of the operation in the RBAC UX and the audit logs UX.   Default value is \"user,system\"",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationsDiscoveryProperties",
          "description": "Properties. Reserved for future use."
        }
      },
      "type": "object",
      "title": "OperationsDiscovery"
    },
    "OperationsDiscoveryCollection": {
      "description": "Collection of ClientDiscovery details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The ClientDiscovery details.",
          "items": {
            "$ref": "#/definitions/OperationsDiscovery"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "OperationsDiscoveryCollection"
    },
    "OperationsDiscoveryProperties": {
      "description": "ClientDiscovery properties.",
      "properties": {},
      "type": "object",
      "title": "OperationsDiscoveryProperties"
    },
    "PlannedFailoverInput": {
      "description": "Input definition for planned failover.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PlannedFailoverInputProperties",
          "description": "Planned failover input properties"
        }
      },
      "type": "object",
      "title": "PlannedFailoverInput"
    },
    "PlannedFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Provider specific settings"
        }
      },
      "type": "object",
      "title": "PlannedFailoverInputProperties"
    },
    "Policy": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Protection profile details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyProperties",
          "description": "The custom data."
        }
      },
      "type": "object",
      "title": "Policy"
    },
    "PolicyCollection": {
      "description": "Protection Profile Collection details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The policy details.",
          "items": {
            "$ref": "#/definitions/Policy"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "PolicyCollection"
    },
    "PolicyProperties": {
      "description": "Protection profile custom data details.",
      "properties": {
        "friendlyName": {
          "description": "The FriendlyName.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/PolicyProviderSpecificDetails",
          "description": "The ReplicationChannelSetting."
        }
      },
      "type": "object",
      "title": "PolicyProperties"
    },
    "PolicyProviderSpecificDetails": {
      "description": "Base class for Provider specific details for policies.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overridden in derived classes.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "PolicyProviderSpecificDetails"
    },
    "PolicyProviderSpecificInput": {
      "description": "Base class for provider specific input",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "PolicyProviderSpecificInput"
    },
    "ProcessServer": {
      "description": "Details of the Process Server.",
      "properties": {
        "agentVersion": {
          "description": "The version of the scout component on the server.",
          "type": "string"
        },
        "availableMemoryInBytes": {
          "description": "The available memory.",
          "format": "int64",
          "type": "integer"
        },
        "availableSpaceInBytes": {
          "description": "The available space.",
          "format": "int64",
          "type": "integer"
        },
        "cpuLoad": {
          "description": "The percentage of the CPU load.",
          "type": "string"
        },
        "cpuLoadStatus": {
          "description": "The CPU load status.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The Process Server's friendly name.",
          "type": "string"
        },
        "hostId": {
          "description": "The agent generated Id.",
          "type": "string"
        },
        "id": {
          "description": "The Process Server Id.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the server.",
          "type": "string"
        },
        "lastHeartbeat": {
          "description": "The last heartbeat received from the server.",
          "format": "date-time",
          "type": "string"
        },
        "machineCount": {
          "description": "The servers configured with this PS.",
          "type": "string"
        },
        "memoryUsageStatus": {
          "description": "The memory usage status.",
          "type": "string"
        },
        "mobilityServiceUpdates": {
          "description": "The list of the mobility service updates available on the Process Server.",
          "items": {
            "$ref": "#/definitions/MobilityServiceUpdate"
          },
          "type": "array"
        },
        "osType": {
          "description": "The OS type of the server.",
          "type": "string"
        },
        "psServiceStatus": {
          "description": "The PS service status.",
          "type": "string"
        },
        "replicationPairCount": {
          "description": "The number of replication pairs configured in this PS.",
          "type": "string"
        },
        "spaceUsageStatus": {
          "description": "The space usage status.",
          "type": "string"
        },
        "sslCertExpiryDate": {
          "description": "The PS SSL cert expiry date.",
          "format": "date-time",
          "type": "string"
        },
        "sslCertExpiryRemainingDays": {
          "description": "CS SSL cert expiry date.",
          "format": "int32",
          "type": "integer"
        },
        "systemLoad": {
          "description": "The percentage of the system load.",
          "type": "string"
        },
        "systemLoadStatus": {
          "description": "The system load status.",
          "type": "string"
        },
        "totalMemoryInBytes": {
          "description": "The total memory.",
          "format": "int64",
          "type": "integer"
        },
        "totalSpaceInBytes": {
          "description": "The total space.",
          "format": "int64",
          "type": "integer"
        },
        "versionStatus": {
          "description": "Version status",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProcessServer"
    },
    "ProtectableItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Replication protected item",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectableItemProperties",
          "description": "The custom data."
        }
      },
      "type": "object",
      "title": "ProtectableItem"
    },
    "ProtectableItemCollection": {
      "description": "Protectable item collection.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The Protectable item details.",
          "items": {
            "$ref": "#/definitions/ProtectableItem"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ProtectableItemCollection"
    },
    "ProtectableItemProperties": {
      "description": "Replication protected item custom data details.",
      "properties": {
        "customDetails": {
          "$ref": "#/definitions/ConfigurationSettings",
          "description": "The Replication provider custom settings."
        },
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "protectionReadinessErrors": {
          "description": "The Current protection readiness errors.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "protectionStatus": {
          "description": "The protection status.",
          "type": "string"
        },
        "recoveryServicesProviderId": {
          "description": "The recovery provider ARM Id.",
          "type": "string"
        },
        "replicationProtectedItemId": {
          "description": "The ARM resource of protected items.",
          "type": "string"
        },
        "supportedReplicationProviders": {
          "description": "The list of replication providers supported for the protectable item.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ProtectableItemProperties"
    },
    "ProtectedItemsQueryParameter": {
      "description": "Query parameter to enumerate protected items.",
      "properties": {
        "recoveryPlanName": {
          "description": "The recovery plan filter.",
          "type": "string"
        },
        "sourceFabricName": {
          "description": "The source fabric name filter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProtectedItemsQueryParameter"
    },
    "ProtectionContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Protection container details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainerProperties",
          "description": "The custom data."
        }
      },
      "type": "object",
      "title": "ProtectionContainer"
    },
    "ProtectionContainerCollection": {
      "description": "Protection Container collection.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The Protection Container details.",
          "items": {
            "$ref": "#/definitions/ProtectionContainer"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ProtectionContainerCollection"
    },
    "ProtectionContainerFabricSpecificDetails": {
      "description": "Base class for fabric specific details of container.",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProtectionContainerFabricSpecificDetails"
    },
    "ProtectionContainerMapping": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Protection container mapping object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainerMappingProperties",
          "description": "The custom data."
        }
      },
      "type": "object",
      "title": "ProtectionContainerMapping"
    },
    "ProtectionContainerMappingCollection": {
      "description": "Protection container mapping collection class.",
      "properties": {
        "nextLink": {
          "description": "Link to fetch rest of the data.",
          "type": "string"
        },
        "value": {
          "description": "List of container mappings.",
          "items": {
            "$ref": "#/definitions/ProtectionContainerMapping"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ProtectionContainerMappingCollection"
    },
    "ProtectionContainerMappingProperties": {
      "description": "Protection container mapping properties.",
      "properties": {
        "health": {
          "description": "Health of pairing.",
          "type": "string"
        },
        "healthErrorDetails": {
          "description": "Health error.",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "policyFriendlyName": {
          "description": "Friendly name of replication policy.",
          "type": "string"
        },
        "policyId": {
          "description": "Policy ARM Id.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProtectionContainerMappingProviderSpecificDetails",
          "description": "Provider specific provider details."
        },
        "sourceFabricFriendlyName": {
          "description": "Friendly name of source fabric.",
          "type": "string"
        },
        "sourceProtectionContainerFriendlyName": {
          "description": "Friendly name of source protection container.",
          "type": "string"
        },
        "state": {
          "description": "Association Status",
          "type": "string"
        },
        "targetFabricFriendlyName": {
          "description": "Friendly name of target fabric.",
          "type": "string"
        },
        "targetProtectionContainerFriendlyName": {
          "description": "Friendly name of paired container.",
          "type": "string"
        },
        "targetProtectionContainerId": {
          "description": "Paired protection container ARM ID.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProtectionContainerMappingProperties"
    },
    "ProtectionContainerMappingProviderSpecificDetails": {
      "description": "Container mapping provider specific details.",
      "properties": {
        "instanceType": {
          "description": "Gets the class type. Overriden in derived classes.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProtectionContainerMappingProviderSpecificDetails"
    },
    "ProtectionContainerProperties": {
      "description": "Protection profile custom data details.",
      "properties": {
        "fabricFriendlyName": {
          "description": "Fabric friendly name.",
          "type": "string"
        },
        "fabricSpecificDetails": {
          "$ref": "#/definitions/ProtectionContainerFabricSpecificDetails",
          "description": "Fabric specific details."
        },
        "fabricType": {
          "description": "The fabric type.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "pairingStatus": {
          "description": "The pairing status of this cloud.",
          "type": "string"
        },
        "protectedItemCount": {
          "description": "Number of protected PEs",
          "format": "int32",
          "type": "integer"
        },
        "role": {
          "description": "The role of this cloud.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProtectionContainerProperties"
    },
    "ProviderError": {
      "description": "This class contains the error details per object.",
      "properties": {
        "errorCode": {
          "description": "The Error code.",
          "format": "int32",
          "type": "integer"
        },
        "errorId": {
          "description": "The Provider error Id.",
          "type": "string"
        },
        "errorMessage": {
          "description": "The Error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "The possible causes for the error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "The recommended action to resolve the error.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProviderError"
    },
    "ProviderSpecificFailoverInput": {
      "description": "Provider specific failover input.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ProviderSpecificFailoverInput"
    },
    "RecoveryPlan": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Recovery plan details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanProperties",
          "description": "The custom details."
        }
      },
      "type": "object",
      "title": "RecoveryPlan"
    },
    "RecoveryPlanA2AFailoverInput": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "description": "Recovery plan A2A failover input.",
      "properties": {
        "cloudServiceCreationOption": {
          "description": "A value indicating whether to use recovery cloud service for TFO or not.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestCrashConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "A2ARpRecoveryPointType"
          }
        }
      },
      "required": [
        "recoveryPointType"
      ],
      "type": "object",
      "x-ms-discriminator-value": "A2A",
      "title": "RecoveryPlanA2AFailoverInput"
    },
    "RecoveryPlanAction": {
      "description": "Recovery plan action details.",
      "properties": {
        "actionName": {
          "description": "The action name.",
          "type": "string"
        },
        "customDetails": {
          "$ref": "#/definitions/RecoveryPlanActionDetails",
          "description": "The custom details."
        },
        "failoverDirections": {
          "description": "The list of failover directions.",
          "items": {
            "enum": [
              "PrimaryToRecovery",
              "RecoveryToPrimary"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "PossibleOperationsDirections"
            }
          },
          "type": "array"
        },
        "failoverTypes": {
          "description": "The list of failover types.",
          "items": {
            "enum": [
              "ReverseReplicate",
              "Commit",
              "PlannedFailover",
              "UnplannedFailover",
              "DisableProtection",
              "TestFailover",
              "TestFailoverCleanup",
              "Failback",
              "FinalizeFailback",
              "ChangePit",
              "RepairReplication",
              "SwitchProtection",
              "CompleteMigration"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "ReplicationProtectedItemOperation"
            }
          },
          "type": "array"
        }
      },
      "required": [
        "actionName",
        "failoverTypes",
        "failoverDirections",
        "customDetails"
      ],
      "type": "object",
      "title": "RecoveryPlanAction"
    },
    "RecoveryPlanActionDetails": {
      "description": "Recovery plan action custom details.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the type of action details (see RecoveryPlanActionDetailsTypes enum for possible values).",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "RecoveryPlanActionDetails"
    },
    "RecoveryPlanAutomationRunbookActionDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "description": "Recovery plan Automation runbook action details.",
      "properties": {
        "fabricLocation": {
          "description": "The fabric location.",
          "enum": [
            "Primary",
            "Recovery"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RecoveryPlanActionLocation"
          }
        },
        "runbookId": {
          "description": "The runbook ARM Id.",
          "type": "string"
        },
        "timeout": {
          "description": "The runbook timeout.",
          "type": "string"
        }
      },
      "required": [
        "fabricLocation"
      ],
      "type": "object",
      "x-ms-discriminator-value": "AutomationRunbookActionDetails",
      "title": "RecoveryPlanAutomationRunbookActionDetails"
    },
    "RecoveryPlanCollection": {
      "description": "Recovery plan collection details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The list of recovery plans.",
          "items": {
            "$ref": "#/definitions/RecoveryPlan"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "RecoveryPlanCollection"
    },
    "RecoveryPlanGroup": {
      "description": "Recovery plan group details.",
      "properties": {
        "endGroupActions": {
          "description": "The end group actions.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanAction"
          },
          "type": "array"
        },
        "groupType": {
          "description": "The group type.",
          "enum": [
            "Shutdown",
            "Boot",
            "Failover"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RecoveryPlanGroupType"
          }
        },
        "replicationProtectedItems": {
          "description": "The list of protected items.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProtectedItem"
          },
          "type": "array"
        },
        "startGroupActions": {
          "description": "The start group actions.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanAction"
          },
          "type": "array"
        }
      },
      "required": [
        "groupType"
      ],
      "type": "object",
      "title": "RecoveryPlanGroup"
    },
    "RecoveryPlanGroupTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "description": "This class represents the recovery plan group task.",
      "properties": {
        "groupId": {
          "description": "The group identifier.",
          "type": "string"
        },
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "rpGroupType": {
          "description": "The group type.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "RecoveryPlanGroupTaskDetails",
      "title": "RecoveryPlanGroupTaskDetails"
    },
    "RecoveryPlanHyperVReplicaAzureFailbackInput": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "description": "Recovery plan HVR Azure failback input.",
      "properties": {
        "dataSyncOption": {
          "description": "The data sync option.",
          "enum": [
            "ForDownTime",
            "ForSynchronization"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DataSyncStatus"
          }
        },
        "recoveryVmCreationOption": {
          "description": "The ALR option.",
          "enum": [
            "CreateVmIfNotFound",
            "NoAction"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "AlternateLocationRecoveryOption"
          }
        }
      },
      "required": [
        "dataSyncOption",
        "recoveryVmCreationOption"
      ],
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzureFailback",
      "title": "RecoveryPlanHyperVReplicaAzureFailbackInput"
    },
    "RecoveryPlanHyperVReplicaAzureFailoverInput": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "description": "Recovery plan HVR Azure failover input.",
      "properties": {
        "primaryKekCertificatePfx": {
          "description": "The primary KEK certificate PFX.",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "HyperVReplicaAzureRpRecoveryPointType"
          }
        },
        "secondaryKekCertificatePfx": {
          "description": "The secondary KEK certificate PFX.",
          "type": "string"
        },
        "vaultLocation": {
          "description": "The vault location.",
          "type": "string"
        }
      },
      "required": [
        "vaultLocation"
      ],
      "type": "object",
      "x-ms-discriminator-value": "HyperVReplicaAzure",
      "title": "RecoveryPlanHyperVReplicaAzureFailoverInput"
    },
    "RecoveryPlanInMageAzureV2FailoverInput": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "description": "Recovery plan InMageAzureV2 failover input.",
      "properties": {
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "Latest",
            "LatestApplicationConsistent",
            "LatestCrashConsistent",
            "LatestProcessed"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "InMageV2RpRecoveryPointType"
          }
        },
        "vaultLocation": {
          "description": "The vault location.",
          "type": "string"
        }
      },
      "required": [
        "vaultLocation",
        "recoveryPointType"
      ],
      "type": "object",
      "x-ms-discriminator-value": "InMageAzureV2",
      "title": "RecoveryPlanInMageAzureV2FailoverInput"
    },
    "RecoveryPlanInMageFailoverInput": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
        }
      ],
      "description": "Recovery plan InMage failover input.",
      "properties": {
        "recoveryPointType": {
          "description": "The recovery point type.",
          "enum": [
            "LatestTime",
            "LatestTag",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RpInMageRecoveryPointType"
          }
        }
      },
      "required": [
        "recoveryPointType"
      ],
      "type": "object",
      "x-ms-discriminator-value": "InMage",
      "title": "RecoveryPlanInMageFailoverInput"
    },
    "RecoveryPlanManualActionDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "description": "Recovery plan manual action details.",
      "properties": {
        "description": {
          "description": "The manual action description.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "ManualActionDetails",
      "title": "RecoveryPlanManualActionDetails"
    },
    "RecoveryPlanPlannedFailoverInput": {
      "description": "Recovery plan planned failover input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanPlannedFailoverInputProperties",
          "description": "The recovery plan planned failover input properties."
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "RecoveryPlanPlannedFailoverInput"
    },
    "RecoveryPlanPlannedFailoverInputProperties": {
      "description": "Recovery plan planned failover input properties.",
      "properties": {
        "failoverDirection": {
          "description": "The failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "PossibleOperationsDirections"
          }
        },
        "providerSpecificDetails": {
          "description": "The provider specific properties.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          },
          "type": "array"
        }
      },
      "required": [
        "failoverDirection"
      ],
      "type": "object",
      "title": "RecoveryPlanPlannedFailoverInputProperties"
    },
    "RecoveryPlanProperties": {
      "description": "Recovery plan custom details.",
      "properties": {
        "allowedOperations": {
          "description": "The list of allowed operations.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "currentScenario": {
          "$ref": "#/definitions/CurrentScenarioDetails",
          "description": "The current scenario details."
        },
        "currentScenarioStatus": {
          "description": "The recovery plan status.",
          "type": "string"
        },
        "currentScenarioStatusDescription": {
          "description": "The recovery plan status description.",
          "type": "string"
        },
        "failoverDeploymentModel": {
          "description": "The failover deployment model.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The friendly name.",
          "type": "string"
        },
        "groups": {
          "description": "The recovery plan groups.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          },
          "type": "array"
        },
        "lastPlannedFailoverTime": {
          "description": "The start time of the last planned failover.",
          "format": "date-time",
          "type": "string"
        },
        "lastTestFailoverTime": {
          "description": "The start time of the last test failover.",
          "format": "date-time",
          "type": "string"
        },
        "primaryFabricFriendlyName": {
          "description": "The primary fabric friendly name.",
          "type": "string"
        },
        "primaryFabricId": {
          "description": "The primary fabric Id.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "The recovery fabric friendly name.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "The recovery fabric Id.",
          "type": "string"
        },
        "replicationProviders": {
          "description": "The list of replication providers.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "RecoveryPlanProperties"
    },
    "RecoveryPlanProtectedItem": {
      "description": "Recovery plan protected item.",
      "properties": {
        "id": {
          "description": "The ARM Id of the recovery plan protected item.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "The virtual machine Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RecoveryPlanProtectedItem"
    },
    "RecoveryPlanProviderSpecificFailoverInput": {
      "description": "Recovery plan provider specific failover input base class.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RecoveryPlanProviderSpecificFailoverInput"
    },
    "RecoveryPlanScriptActionDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPlanActionDetails"
        }
      ],
      "description": "Recovery plan script action details.",
      "properties": {
        "fabricLocation": {
          "description": "The fabric location.",
          "enum": [
            "Primary",
            "Recovery"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RecoveryPlanActionLocation"
          }
        },
        "path": {
          "description": "The script path.",
          "type": "string"
        },
        "timeout": {
          "description": "The script timeout.",
          "type": "string"
        }
      },
      "required": [
        "path",
        "fabricLocation"
      ],
      "type": "object",
      "x-ms-discriminator-value": "ScriptActionDetails",
      "title": "RecoveryPlanScriptActionDetails"
    },
    "RecoveryPlanShutdownGroupTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/GroupTaskDetails"
        }
      ],
      "description": "This class represents the recovery plan shutdown group task details.",
      "properties": {
        "groupId": {
          "description": "The group identifier.",
          "type": "string"
        },
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "rpGroupType": {
          "description": "The group type.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "RecoveryPlanShutdownGroupTaskDetails",
      "title": "RecoveryPlanShutdownGroupTaskDetails"
    },
    "RecoveryPlanTestFailoverCleanupInput": {
      "description": "Recovery plan test failover cleanup input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanTestFailoverCleanupInputProperties",
          "description": "The recovery plan test failover cleanup input properties."
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "RecoveryPlanTestFailoverCleanupInput"
    },
    "RecoveryPlanTestFailoverCleanupInputProperties": {
      "description": "Recovery plan test failover cleanup input properties.",
      "properties": {
        "comments": {
          "description": "The test failover cleanup comments.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RecoveryPlanTestFailoverCleanupInputProperties"
    },
    "RecoveryPlanTestFailoverInput": {
      "description": "Recovery plan test failover input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanTestFailoverInputProperties",
          "description": "The recovery plan test failover input properties."
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "RecoveryPlanTestFailoverInput"
    },
    "RecoveryPlanTestFailoverInputProperties": {
      "description": "Recovery plan test failover input properties.",
      "properties": {
        "failoverDirection": {
          "description": "The failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "PossibleOperationsDirections"
          }
        },
        "networkId": {
          "description": "The Id of the network to be used for test failover.",
          "type": "string"
        },
        "networkType": {
          "description": "The network type to be used for test failover.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "description": "The provider specific properties.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          },
          "type": "array"
        },
        "skipTestFailoverCleanup": {
          "description": "A value indicating whether the test failover cleanup is to be skipped.",
          "type": "string"
        }
      },
      "required": [
        "failoverDirection",
        "networkType"
      ],
      "type": "object",
      "title": "RecoveryPlanTestFailoverInputProperties"
    },
    "RecoveryPlanUnplannedFailoverInput": {
      "description": "Recovery plan unplanned failover input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPlanUnplannedFailoverInputProperties",
          "description": "The recovery plan unplanned failover input properties."
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "RecoveryPlanUnplannedFailoverInput"
    },
    "RecoveryPlanUnplannedFailoverInputProperties": {
      "description": "Recovery plan unplanned failover input properties.",
      "properties": {
        "failoverDirection": {
          "description": "The failover direction.",
          "enum": [
            "PrimaryToRecovery",
            "RecoveryToPrimary"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "PossibleOperationsDirections"
          }
        },
        "providerSpecificDetails": {
          "description": "The provider specific properties.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanProviderSpecificFailoverInput"
          },
          "type": "array"
        },
        "sourceSiteOperations": {
          "description": "A value indicating whether source site operations are required.",
          "enum": [
            "Required",
            "NotRequired"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "SourceSiteOperations"
          }
        }
      },
      "required": [
        "failoverDirection",
        "sourceSiteOperations"
      ],
      "type": "object",
      "title": "RecoveryPlanUnplannedFailoverInputProperties"
    },
    "RecoveryPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class representing a recovery point.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPointProperties",
          "description": "Recovery point related data."
        }
      },
      "type": "object",
      "title": "RecoveryPoint"
    },
    "RecoveryPointCollection": {
      "description": "Collection of recovery point details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The recovery point details.",
          "items": {
            "$ref": "#/definitions/RecoveryPoint"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "RecoveryPointCollection"
    },
    "RecoveryPointProperties": {
      "description": "Recovery point properties.",
      "properties": {
        "recoveryPointTime": {
          "description": "The recovery point time.",
          "format": "date-time",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "The recovery point type: ApplicationConsistent, CrashConsistent.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RecoveryPointProperties"
    },
    "RecoveryServicesProvider": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Provider details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryServicesProviderProperties",
          "description": "Provider properties."
        }
      },
      "type": "object",
      "title": "RecoveryServicesProvider"
    },
    "RecoveryServicesProviderCollection": {
      "description": "Collection of providers.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The Servers details.",
          "items": {
            "$ref": "#/definitions/RecoveryServicesProvider"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "RecoveryServicesProviderCollection"
    },
    "RecoveryServicesProviderProperties": {
      "description": "Recovery services provider properties.",
      "properties": {
        "allowedScenarios": {
          "description": "The scenarions allowed on this provider.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "connectionStatus": {
          "description": "A value indicating whether DRA is responsive.",
          "type": "string"
        },
        "fabricFriendlyName": {
          "description": "The fabric friendly name.",
          "type": "string"
        },
        "fabricType": {
          "description": "Type of the site.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the DRA.",
          "type": "string"
        },
        "healthErrorDetails": {
          "description": "The recovery services provider health error details.",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "lastHeartBeat": {
          "description": "Time when last heartbeat was sent by the DRA.",
          "format": "date-time",
          "type": "string"
        },
        "protectedItemCount": {
          "description": "Number of protected VMs currently managed by the DRA.",
          "format": "int32",
          "type": "integer"
        },
        "providerVersion": {
          "description": "The provider version.",
          "type": "string"
        },
        "providerVersionExpiryDate": {
          "description": "Expiry date if the version is deprecated.",
          "format": "date-time",
          "type": "string"
        },
        "providerVersionState": {
          "description": "DRA version status.",
          "type": "string"
        },
        "serverVersion": {
          "description": "The fabric provider.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RecoveryServicesProviderProperties"
    },
    "RemoveProtectionContainerMappingInput": {
      "description": "Container unpairing input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RemoveProtectionContainerMappingInputProperties",
          "description": "Configure protection input properties."
        }
      },
      "type": "object",
      "title": "RemoveProtectionContainerMappingInput"
    },
    "RemoveProtectionContainerMappingInputProperties": {
      "description": "Unpairing input properties.",
      "properties": {
        "providerSpecificInput": {
          "$ref": "#/definitions/ReplicationProviderContainerUnmappingInput",
          "description": "Provider specific input for unpairing."
        }
      },
      "type": "object",
      "title": "RemoveProtectionContainerMappingInputProperties"
    },
    "RenewCertificateInput": {
      "description": "Certificate renewal input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RenewCertificateInputProperties",
          "description": "Renew certificate input properties."
        }
      },
      "type": "object",
      "title": "RenewCertificateInput"
    },
    "RenewCertificateInputProperties": {
      "description": "Renew Certificate input properties.",
      "properties": {
        "renewCertificateType": {
          "description": "Renew certificate type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RenewCertificateInputProperties"
    },
    "ReplicationGroupDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "description": "Replication group details. This will be used in case of San and Wvr.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "ReplicationGroupDetails",
      "title": "ReplicationGroupDetails"
    },
    "ReplicationProtectedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Replication protected item.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReplicationProtectedItemProperties",
          "description": "The custom data."
        }
      },
      "type": "object",
      "title": "ReplicationProtectedItem"
    },
    "ReplicationProtectedItemCollection": {
      "description": "Replication protected item collection.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The Replication protected item details.",
          "items": {
            "$ref": "#/definitions/ReplicationProtectedItem"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ReplicationProtectedItemCollection"
    },
    "ReplicationProtectedItemProperties": {
      "description": "Replication protected item custom data details.",
      "properties": {
        "activeLocation": {
          "description": "The Current active location of the PE.",
          "type": "string"
        },
        "allowedOperations": {
          "description": "The allowed operations on the Replication protected item.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "currentScenario": {
          "$ref": "#/definitions/CurrentScenarioDetails",
          "description": "The current scenario."
        },
        "failoverRecoveryPointId": {
          "description": "The recovery point ARM Id to which the Vm was failed over.",
          "type": "string"
        },
        "friendlyName": {
          "description": "The name.",
          "type": "string"
        },
        "lastSuccessfulFailoverTime": {
          "description": "The Last successful failover time.",
          "format": "date-time",
          "type": "string"
        },
        "lastSuccessfulTestFailoverTime": {
          "description": "The Last successful test failover time.",
          "format": "date-time",
          "type": "string"
        },
        "policyFriendlyName": {
          "description": "The name of Policy governing this PE.",
          "type": "string"
        },
        "policyId": {
          "description": "The ID of Policy governing this PE.",
          "type": "string"
        },
        "primaryFabricFriendlyName": {
          "description": "The friendly name of the primary fabric.",
          "type": "string"
        },
        "primaryProtectionContainerFriendlyName": {
          "description": "The name of primary protection container friendly name.",
          "type": "string"
        },
        "protectableItemId": {
          "description": "The protected item ARM Id.",
          "type": "string"
        },
        "protectedItemType": {
          "description": "The type of protected item type.",
          "type": "string"
        },
        "protectionState": {
          "description": "The protection status.",
          "type": "string"
        },
        "protectionStateDescription": {
          "description": "The protection state description.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ReplicationProviderSpecificSettings",
          "description": "The Replication provider custom settings."
        },
        "recoveryContainerId": {
          "description": "The recovery container Id.",
          "type": "string"
        },
        "recoveryFabricFriendlyName": {
          "description": "The friendly name of recovery fabric.",
          "type": "string"
        },
        "recoveryFabricId": {
          "description": "The Arm Id of recovery fabric.",
          "type": "string"
        },
        "recoveryProtectionContainerFriendlyName": {
          "description": "The name of recovery container friendly name.",
          "type": "string"
        },
        "recoveryServicesProviderId": {
          "description": "The recovery provider ARM Id.",
          "type": "string"
        },
        "replicationHealth": {
          "description": "The consolidated protection health for the VM taking any issues with SRS as well as all the replication units associated with the VM's replication group into account. This is a string representation of the ProtectionHealth enumeration.",
          "type": "string"
        },
        "replicationHealthErrors": {
          "description": "List of replication health errors.",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        },
        "testFailoverState": {
          "description": "The Test failover state.",
          "type": "string"
        },
        "testFailoverStateDescription": {
          "description": "The Test failover state description.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ReplicationProtectedItemProperties"
    },
    "ReplicationProviderContainerUnmappingInput": {
      "description": "Provider specific input for unpairing operations.",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ReplicationProviderContainerUnmappingInput"
    },
    "ReplicationProviderSpecificContainerCreationInput": {
      "description": "Provider specific input for container creation operation.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ReplicationProviderSpecificContainerCreationInput"
    },
    "ReplicationProviderSpecificContainerMappingInput": {
      "description": "Provider specific input for pairing operations.",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ReplicationProviderSpecificContainerMappingInput"
    },
    "ReplicationProviderSpecificSettings": {
      "description": "Replication provider specific settings.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "ReplicationProviderSpecificSettings"
    },
    "Resource": {
      "description": "Azure resource.",
      "properties": {
        "id": {
          "description": "Resource Id",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "Resource Location",
          "type": "string"
        },
        "name": {
          "description": "Resource Name",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Resource Type",
          "readOnly": true,
          "type": "string"
        }
      },
      "x-ms-azure-resource": true,
      "title": "Resource"
    },
    "ResumeJobParams": {
      "description": "Resume job params.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ResumeJobParamsProperties",
          "description": "Resume job properties."
        }
      },
      "type": "object",
      "title": "ResumeJobParams"
    },
    "ResumeJobParamsProperties": {
      "description": "Resume job properties.",
      "properties": {
        "comments": {
          "description": "Resume job comments.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ResumeJobParamsProperties"
    },
    "RetentionVolume": {
      "description": "The retention details of the MT.",
      "properties": {
        "capacityInBytes": {
          "description": "The volume capacity.",
          "format": "int64",
          "type": "integer"
        },
        "freeSpaceInBytes": {
          "description": "The free space available in this volume.",
          "format": "int64",
          "type": "integer"
        },
        "thresholdPercentage": {
          "description": "The threshold percentage.",
          "format": "int32",
          "type": "integer"
        },
        "volumeName": {
          "description": "The volume name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RetentionVolume"
    },
    "ReverseReplicationInput": {
      "description": "Reverse replication input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ReverseReplicationInputProperties",
          "description": "Reverse replication properties"
        }
      },
      "type": "object",
      "title": "ReverseReplicationInput"
    },
    "ReverseReplicationInputProperties": {
      "description": "Reverse replication input properties.",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ReverseReplicationProviderSpecificInput",
          "description": "Provider specific reverse replication input."
        }
      },
      "type": "object",
      "title": "ReverseReplicationInputProperties"
    },
    "ReverseReplicationProviderSpecificInput": {
      "description": "Provider specific reverse replication input.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ReverseReplicationProviderSpecificInput"
    },
    "RoleAssignment": {
      "description": "Azure role assignment details.",
      "properties": {
        "id": {
          "description": "The ARM Id of the role assignment.",
          "type": "string"
        },
        "name": {
          "description": "The name of the role assignment.",
          "type": "string"
        },
        "principalId": {
          "description": "Principal Id.",
          "type": "string"
        },
        "roleDefinitionId": {
          "description": "Role definition id.",
          "type": "string"
        },
        "scope": {
          "description": "Role assignment scope.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RoleAssignment"
    },
    "RunAsAccount": {
      "description": "CS Accounts Details.",
      "properties": {
        "accountId": {
          "description": "The CS RunAs account Id.",
          "type": "string"
        },
        "accountName": {
          "description": "The CS RunAs account name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RunAsAccount"
    },
    "SanEnableProtectionInput": {
      "allOf": [
        {
          "$ref": "#/definitions/EnableProtectionProviderSpecificInput"
        }
      ],
      "description": "San enable protection provider specific input.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "San",
      "title": "SanEnableProtectionInput"
    },
    "ScriptActionTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class represents the script action task details.",
      "properties": {
        "isPrimarySideScript": {
          "description": "A value indicating whether it is a primary side script or not.",
          "type": "boolean"
        },
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "output": {
          "description": "The output.",
          "type": "string"
        },
        "path": {
          "description": "The path.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "ScriptActionTaskDetails",
      "title": "ScriptActionTaskDetails"
    },
    "ServiceError": {
      "description": "ASR error model",
      "properties": {
        "activityId": {
          "description": "Activity Id.",
          "type": "string"
        },
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message.",
          "type": "string"
        },
        "possibleCauses": {
          "description": "Possible causes of error.",
          "type": "string"
        },
        "recommendedAction": {
          "description": "Recommended action to resolve error.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ServiceError"
    },
    "StorageClassification": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Storage object definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageClassificationProperties",
          "description": "Proprties of the storage object."
        }
      },
      "type": "object",
      "title": "StorageClassification"
    },
    "StorageClassificationCollection": {
      "description": "Collection of storage details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The storage details.",
          "items": {
            "$ref": "#/definitions/StorageClassification"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "StorageClassificationCollection"
    },
    "StorageClassificationMapping": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Storage mapping object.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageClassificationMappingProperties",
          "description": "Proprties of the storage mappping object."
        }
      },
      "type": "object",
      "title": "StorageClassificationMapping"
    },
    "StorageClassificationMappingCollection": {
      "description": "Collection of storage mapping details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The storage details.",
          "items": {
            "$ref": "#/definitions/StorageClassificationMapping"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "StorageClassificationMappingCollection"
    },
    "StorageClassificationMappingInput": {
      "description": "Storage mapping input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/StorageMappingInputProperties",
          "description": "Storage mapping input properties."
        }
      },
      "type": "object",
      "title": "StorageClassificationMappingInput"
    },
    "StorageClassificationMappingProperties": {
      "description": "Storage mapping properties.",
      "properties": {
        "targetStorageClassificationId": {
          "description": "Target storage object Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "StorageClassificationMappingProperties"
    },
    "StorageClassificationProperties": {
      "description": "Storage object properties.",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the Storage classification.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "StorageClassificationProperties"
    },
    "StorageMappingInputProperties": {
      "description": "Storage mapping input properties.",
      "properties": {
        "targetStorageClassificationId": {
          "description": "The ID of the storage object.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "StorageMappingInputProperties"
    },
    "Subnet": {
      "description": "Subnets of the network.",
      "properties": {
        "addressList": {
          "description": "The list of addresses for the subnet.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "friendlyName": {
          "description": "The subnet friendly name.",
          "type": "string"
        },
        "name": {
          "description": "The subnet name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Subnet"
    },
    "SwitchProtectionInput": {
      "description": "Switch protection input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SwitchProtectionInputProperties",
          "description": "Switch protection properties"
        }
      },
      "type": "object",
      "title": "SwitchProtectionInput"
    },
    "SwitchProtectionInputProperties": {
      "description": "Switch protection input properties.",
      "properties": {
        "providerSpecificDetails": {
          "$ref": "#/definitions/SwitchProtectionProviderSpecificInput",
          "description": "Provider specific switch protection input."
        },
        "replicationProtectedItemName": {
          "description": "The unique replication protected item name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "SwitchProtectionInputProperties"
    },
    "SwitchProtectionJobDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "description": "This class represents details for switch protection job.",
      "properties": {
        "newReplicationProtectedItemId": {
          "description": "ARM Id of the new replication protected item.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "SwitchProtectionJobDetails",
      "title": "SwitchProtectionJobDetails"
    },
    "SwitchProtectionProviderSpecificInput": {
      "description": "Provider specific switch protection input.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "Gets the Instance type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "SwitchProtectionProviderSpecificInput"
    },
    "TaskTypeDetails": {
      "description": "Task details based on specific task type.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The type of task details.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "TaskTypeDetails"
    },
    "TestFailoverCleanupInput": {
      "description": "Input definition for test failover cleanup.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestFailoverCleanupInputProperties",
          "description": "Test failover cleanup input properties."
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "TestFailoverCleanupInput"
    },
    "TestFailoverCleanupInputProperties": {
      "description": "Input definition for test failover cleanup input properties.",
      "properties": {
        "comments": {
          "description": "Test failover cleanup comments.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "TestFailoverCleanupInputProperties"
    },
    "TestFailoverInput": {
      "description": "Input definition for planned failover.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TestFailoverInputProperties",
          "description": "Planned failover input properties"
        }
      },
      "type": "object",
      "title": "TestFailoverInput"
    },
    "TestFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "networkId": {
          "description": "The id of the network to be used for test failover",
          "type": "string"
        },
        "networkType": {
          "description": "Network type to be used for test failover.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Provider specific settings"
        },
        "skipTestFailoverCleanup": {
          "description": "A value indicating whether the test failover cleanup is to be skipped.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "TestFailoverInputProperties"
    },
    "TestFailoverJobDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/JobDetails"
        }
      ],
      "description": "This class represents the details for a test failover job.",
      "properties": {
        "comments": {
          "description": "The test failover comments.",
          "type": "string"
        },
        "networkFriendlyName": {
          "description": "The test network friendly name.",
          "type": "string"
        },
        "networkName": {
          "description": "The test network name.",
          "type": "string"
        },
        "networkType": {
          "description": "The test network type (see TestFailoverInput enum for possible values).",
          "type": "string"
        },
        "protectedItemDetails": {
          "description": "The test VM details.",
          "items": {
            "$ref": "#/definitions/TestFailoverReplicationProtectedItemDetails"
          },
          "type": "array"
        },
        "testFailoverStatus": {
          "description": "The test failover status.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "TestFailoverJobDetails",
      "title": "TestFailoverJobDetails"
    },
    "TestFailoverReplicationProtectedItemDetails": {
      "description": "Test failover details for a replication protected item.",
      "properties": {
        "friendlyName": {
          "description": "The friendly name.",
          "type": "string"
        },
        "name": {
          "description": "The name.",
          "type": "string"
        },
        "networkConnectionStatus": {
          "description": "The network connection status.",
          "type": "string"
        },
        "networkFriendlyName": {
          "description": "The network friendly name.",
          "type": "string"
        },
        "subnet": {
          "description": "The network subnet.",
          "type": "string"
        },
        "testVmFriendlyName": {
          "description": "The test Vm friendly name.",
          "type": "string"
        },
        "testVmName": {
          "description": "The test Vm name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "TestFailoverReplicationProtectedItemDetails"
    },
    "UnplannedFailoverInput": {
      "description": "Input definition for planned failover.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UnplannedFailoverInputProperties",
          "description": "Planned failover input properties"
        }
      },
      "type": "object",
      "title": "UnplannedFailoverInput"
    },
    "UnplannedFailoverInputProperties": {
      "description": "Input definition for planned failover input properties.",
      "properties": {
        "failoverDirection": {
          "description": "Failover direction.",
          "type": "string"
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/ProviderSpecificFailoverInput",
          "description": "Provider specific settings"
        },
        "sourceSiteOperations": {
          "description": "Source site operations status",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UnplannedFailoverInputProperties"
    },
    "UpdateMobilityServiceRequest": {
      "description": "Request to update the mobility service on a protected item.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateMobilityServiceRequestProperties",
          "description": "The properties of the update mobility service request."
        }
      },
      "type": "object",
      "title": "UpdateMobilityServiceRequest"
    },
    "UpdateMobilityServiceRequestProperties": {
      "description": "The properties of an update mobility service request.",
      "properties": {
        "runAsAccountId": {
          "description": "The CS run as account Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UpdateMobilityServiceRequestProperties"
    },
    "UpdateNetworkMappingInput": {
      "description": "Update network mapping input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateNetworkMappingInputProperties",
          "description": "Properties."
        }
      },
      "type": "object",
      "title": "UpdateNetworkMappingInput"
    },
    "UpdateNetworkMappingInputProperties": {
      "description": "Common input details for network mapping operation.",
      "properties": {
        "fabricSpecificDetails": {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput",
          "description": "Fabrics specific input network Id."
        },
        "recoveryFabricName": {
          "description": "Recovery fabric name.",
          "type": "string"
        },
        "recoveryNetworkId": {
          "description": "Recovery network Id.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UpdateNetworkMappingInputProperties"
    },
    "UpdatePolicyInput": {
      "description": "Update protection profile input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdatePolicyInputProperties",
          "description": "The ReplicationProviderSettings."
        }
      },
      "type": "object",
      "title": "UpdatePolicyInput"
    },
    "UpdatePolicyInputProperties": {
      "description": "Policy update properties.",
      "properties": {
        "replicationProviderSettings": {
          "$ref": "#/definitions/PolicyProviderSpecificInput",
          "description": "The ReplicationProviderSettings."
        }
      },
      "type": "object",
      "title": "UpdatePolicyInputProperties"
    },
    "UpdateRecoveryPlanInput": {
      "description": "Update recovery plan input class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateRecoveryPlanInputProperties",
          "description": "Recovery plan update properties."
        }
      },
      "type": "object",
      "title": "UpdateRecoveryPlanInput"
    },
    "UpdateRecoveryPlanInputProperties": {
      "description": "Recovery plan updation properties.",
      "properties": {
        "groups": {
          "description": "The recovery plan groups.",
          "items": {
            "$ref": "#/definitions/RecoveryPlanGroup"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "UpdateRecoveryPlanInputProperties"
    },
    "UpdateReplicationProtectedItemInput": {
      "description": "Update replication protected item input.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateReplicationProtectedItemInputProperties",
          "description": "Update replication protected item properties."
        }
      },
      "type": "object",
      "title": "UpdateReplicationProtectedItemInput"
    },
    "UpdateReplicationProtectedItemInputProperties": {
      "description": "Update protected item input properties.",
      "properties": {
        "enableRDPOnTargetOption": {
          "description": "The selected option to enable RDP\\SSH on target vm after failover. String value of {SrsDataContract.EnableRDPOnTargetOption} enum.",
          "type": "string"
        },
        "licenseType": {
          "description": "LicenseType.",
          "enum": [
            "NotSpecified",
            "NoLicenseType",
            "WindowsServer"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "LicenseType"
          }
        },
        "providerSpecificDetails": {
          "$ref": "#/definitions/UpdateReplicationProtectedItemProviderInput",
          "description": "The provider specific input to update replication protected item."
        },
        "recoveryAvailabilitySetId": {
          "description": "The target availability set id.",
          "type": "string"
        },
        "recoveryAzureVMName": {
          "description": "Target azure VM name given by the user.",
          "type": "string"
        },
        "recoveryAzureVMSize": {
          "description": "Target Azure Vm size.",
          "type": "string"
        },
        "selectedRecoveryAzureNetworkId": {
          "description": "Target Azure Network Id.",
          "type": "string"
        },
        "vmNics": {
          "description": "The list of vm nic details.",
          "items": {
            "$ref": "#/definitions/VMNicInputDetails"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "UpdateReplicationProtectedItemInputProperties"
    },
    "UpdateReplicationProtectedItemProviderInput": {
      "description": "Update replication protected item provider specific input.",
      "discriminator": "instanceType",
      "properties": {
        "instanceType": {
          "description": "The class type.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UpdateReplicationProtectedItemProviderInput"
    },
    "UpdateVCenterRequest": {
      "description": "Input required to update vCenter.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UpdateVCenterRequestProperties",
          "description": "The update VCenter Request Properties."
        }
      },
      "type": "object",
      "title": "UpdateVCenterRequest"
    },
    "UpdateVCenterRequestProperties": {
      "description": "The properties of an update vCenter request.",
      "properties": {
        "friendlyName": {
          "description": "The friendly name of the vCenter.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the vCenter to be discovered.",
          "type": "string"
        },
        "port": {
          "description": "The port number for discovery.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id from where the update can be orchestrated.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The CS account Id which has priviliges to update the vCenter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UpdateVCenterRequestProperties"
    },
    "VCenter": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "vCenter definition.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VCenterProperties",
          "description": "VCenter related data."
        }
      },
      "type": "object",
      "title": "VCenter"
    },
    "VCenterCollection": {
      "description": "Collection of vCenter details.",
      "properties": {
        "nextLink": {
          "description": "The value of next link.",
          "type": "string"
        },
        "value": {
          "description": "The vCenter details.",
          "items": {
            "$ref": "#/definitions/VCenter"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "VCenterCollection"
    },
    "VCenterProperties": {
      "description": "vCenter properties.",
      "properties": {
        "discoveryStatus": {
          "description": "The VCenter discovery status.",
          "type": "string"
        },
        "fabricArmResourceName": {
          "description": "The ARM resource name of the fabric containing this VCenter.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the vCenter.",
          "type": "string"
        },
        "infrastructureId": {
          "description": "The infrastructure Id of vCenter.",
          "type": "string"
        },
        "internalId": {
          "description": "VCenter internal ID.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address of the vCenter.",
          "type": "string"
        },
        "lastHeartbeat": {
          "description": "The time when the last heartbeat was reveived by vCenter.",
          "format": "date-time",
          "type": "string"
        },
        "port": {
          "description": "The port number for discovery.",
          "type": "string"
        },
        "processServerId": {
          "description": "The process server Id.",
          "type": "string"
        },
        "runAsAccountId": {
          "description": "The account Id which has privileges to discover the vCenter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "VCenterProperties"
    },
    "VMNicDetails": {
      "description": "Hyper V VM network details.",
      "properties": {
        "ipAddressType": {
          "description": "Ip address type.",
          "type": "string"
        },
        "nicId": {
          "description": "The nic Id.",
          "type": "string"
        },
        "primaryNicStaticIPAddress": {
          "description": "Primary nic static IP address.",
          "type": "string"
        },
        "recoveryVMNetworkId": {
          "description": "Recovery VM network Id.",
          "type": "string"
        },
        "recoveryVMSubnetName": {
          "description": "Recovery VM subnet name.",
          "type": "string"
        },
        "replicaNicId": {
          "description": "The replica nic Id.",
          "type": "string"
        },
        "replicaNicStaticIPAddress": {
          "description": "Replica nic static IP address.",
          "type": "string"
        },
        "selectionType": {
          "description": "Selection type for failover.",
          "type": "string"
        },
        "sourceNicArmId": {
          "description": "The source nic ARM Id.",
          "type": "string"
        },
        "vMNetworkName": {
          "description": "VM network name.",
          "type": "string"
        },
        "vMSubnetName": {
          "description": "VM subnet name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "VMNicDetails"
    },
    "VMNicInputDetails": {
      "description": "Hyper V VM network input details.",
      "properties": {
        "nicId": {
          "description": "The nic Id.",
          "type": "string"
        },
        "recoveryVMSubnetName": {
          "description": "Recovery VM subnet name.",
          "type": "string"
        },
        "replicaNicStaticIPAddress": {
          "description": "Replica nic static IP address.",
          "type": "string"
        },
        "selectionType": {
          "description": "Selection type for failover.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "VMNicInputDetails"
    },
    "VMwareDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "description": "Store the fabric details specific to the VMware fabric.",
      "properties": {
        "agentCount": {
          "description": "The number of source and target servers configured to talk to this CS.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The agent Version.",
          "type": "string"
        },
        "availableMemoryInBytes": {
          "description": "The available memory.",
          "format": "int64",
          "type": "integer"
        },
        "availableSpaceInBytes": {
          "description": "The available space.",
          "format": "int64",
          "type": "integer"
        },
        "cpuLoad": {
          "description": "The percentage of the CPU load.",
          "type": "string"
        },
        "cpuLoadStatus": {
          "description": "The CPU load status.",
          "type": "string"
        },
        "csServiceStatus": {
          "description": "The CS service status.",
          "type": "string"
        },
        "databaseServerLoad": {
          "description": "The database server load.",
          "type": "string"
        },
        "databaseServerLoadStatus": {
          "description": "The database server load status.",
          "type": "string"
        },
        "hostName": {
          "description": "The host name.",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address.",
          "type": "string"
        },
        "lastHeartbeat": {
          "description": "The last heartbeat received from CS server.",
          "format": "date-time",
          "type": "string"
        },
        "masterTargetServers": {
          "description": "The list of Master Target servers associated with the fabric.",
          "items": {
            "$ref": "#/definitions/MasterTargetServer"
          },
          "type": "array"
        },
        "memoryUsageStatus": {
          "description": "The memory usage status.",
          "type": "string"
        },
        "processServerCount": {
          "description": "The number of process servers.",
          "type": "string"
        },
        "processServers": {
          "description": "The list of Process Servers associated with the fabric.",
          "items": {
            "$ref": "#/definitions/ProcessServer"
          },
          "type": "array"
        },
        "protectedServers": {
          "description": "The number of protected servers.",
          "type": "string"
        },
        "psTemplateVersion": {
          "description": "PS template version.",
          "type": "string"
        },
        "replicationPairCount": {
          "description": "The number of replication pairs configured in this CS.",
          "type": "string"
        },
        "runAsAccounts": {
          "description": "The list of run as accounts created on the server.",
          "items": {
            "$ref": "#/definitions/RunAsAccount"
          },
          "type": "array"
        },
        "spaceUsageStatus": {
          "description": "The space usage status.",
          "type": "string"
        },
        "sslCertExpiryDate": {
          "description": "CS SSL cert expiry date.",
          "format": "date-time",
          "type": "string"
        },
        "sslCertExpiryRemainingDays": {
          "description": "CS SSL cert expiry date.",
          "format": "int32",
          "type": "integer"
        },
        "systemLoad": {
          "description": "The percentage of the system load.",
          "type": "string"
        },
        "systemLoadStatus": {
          "description": "The system load status.",
          "type": "string"
        },
        "totalMemoryInBytes": {
          "description": "The total memory.",
          "format": "int64",
          "type": "integer"
        },
        "totalSpaceInBytes": {
          "description": "The total space.",
          "format": "int64",
          "type": "integer"
        },
        "versionStatus": {
          "description": "Version status",
          "type": "string"
        },
        "webLoad": {
          "description": "The web load.",
          "type": "string"
        },
        "webLoadStatus": {
          "description": "The web load status.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "VMware",
      "title": "VMwareDetails"
    },
    "VMwareVirtualMachineDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/ConfigurationSettings"
        }
      ],
      "description": "VMware provider specific settings",
      "properties": {
        "agentGeneratedId": {
          "description": "The ID generated by the InMage agent after it gets installed on guest. This is the ID to be used during InMage CreateProtection.",
          "type": "string"
        },
        "agentInstalled": {
          "description": "The value indicating if InMage scout agent is installed on guest.",
          "type": "string"
        },
        "agentVersion": {
          "description": "The agent version.",
          "type": "string"
        },
        "discoveryType": {
          "description": "A value inidicating the discovery type of the machine. Value can be vCenter or physical.",
          "type": "string"
        },
        "diskDetails": {
          "description": "The disk details.",
          "items": {
            "$ref": "#/definitions/InMageDiskDetails"
          },
          "type": "array"
        },
        "ipAddress": {
          "description": "The IP address.",
          "type": "string"
        },
        "osType": {
          "description": "The OsType installed on VM.",
          "type": "string"
        },
        "poweredOn": {
          "description": "The value indicating whether VM is powered on.",
          "type": "string"
        },
        "vCenterInfrastructureId": {
          "description": "The VCenter infrastructure Id.",
          "type": "string"
        },
        "validationErrors": {
          "description": "The validation errors.",
          "items": {
            "$ref": "#/definitions/HealthError"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "VMwareVirtualMachine",
      "title": "VMwareVirtualMachineDetails"
    },
    "VirtualMachineTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class represents the virtual machine task details.",
      "properties": {
        "jobTask": {
          "$ref": "#/definitions/JobEntity",
          "description": "The job entity."
        },
        "skippedReason": {
          "description": "The skipped reason.",
          "type": "string"
        },
        "skippedReasonString": {
          "description": "The skipped reason string.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "VirtualMachineTaskDetails",
      "title": "VirtualMachineTaskDetails"
    },
    "VmNicUpdatesTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TaskTypeDetails"
        }
      ],
      "description": "This class represents the vm NicUpdates task details.",
      "properties": {
        "name": {
          "description": "Name.",
          "type": "string"
        },
        "nicId": {
          "description": "NicId.",
          "type": "string"
        },
        "vmId": {
          "description": "VmId.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "VmNicUpdatesTaskDetails",
      "title": "VmNicUpdatesTaskDetails"
    },
    "VmmDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificDetails"
        }
      ],
      "description": "VMM fabric specific details.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "VMM",
      "title": "VmmDetails"
    },
    "VmmToAzureCreateNetworkMappingInput": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput"
        }
      ],
      "description": "Create network mappings input properties/behaviour specific to Vmm to Azure Network mapping.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "VmmToAzure",
      "title": "VmmToAzureCreateNetworkMappingInput"
    },
    "VmmToAzureNetworkMappingSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings"
        }
      ],
      "description": "E2A  Network Mapping fabric specific settings.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "VmmToAzure",
      "title": "VmmToAzureNetworkMappingSettings"
    },
    "VmmToAzureUpdateNetworkMappingInput": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput"
        }
      ],
      "description": "Update network mappings input properties/behaviour specific to vmm to azure.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "VmmToAzure",
      "title": "VmmToAzureUpdateNetworkMappingInput"
    },
    "VmmToVmmCreateNetworkMappingInput": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificCreateNetworkMappingInput"
        }
      ],
      "description": "Create network mappings input properties/behaviour specific to vmm to vmm Network mapping.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "VmmToVmm",
      "title": "VmmToVmmCreateNetworkMappingInput"
    },
    "VmmToVmmNetworkMappingSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/NetworkMappingFabricSpecificSettings"
        }
      ],
      "description": "E2E  Network Mapping fabric specific settings.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "VmmToVmm",
      "title": "VmmToVmmNetworkMappingSettings"
    },
    "VmmToVmmUpdateNetworkMappingInput": {
      "allOf": [
        {
          "$ref": "#/definitions/FabricSpecificUpdateNetworkMappingInput"
        }
      ],
      "description": "Update network mappings input properties/behaviour specific to vmm to vmm.",
      "properties": {},
      "type": "object",
      "x-ms-discriminator-value": "VmmToVmm",
      "title": "VmmToVmmUpdateNetworkMappingInput"
    }
  },
  "actions": [
    {
      "id": "Operations_List",
      "title": "Operations_List",
      "description": "Operation to return the list of available operations.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/OperationsDiscoveryCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationAlertSettings_List",
      "title": "ReplicationAlertSettings_List",
      "description": "Gets the list of email notification(alert) configurations for the vault. .",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/AlertCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationAlertSettings_Get",
      "title": "ReplicationAlertSettings_Get",
      "description": "Gets the details of the specified email notification(alert) configuration.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "alertSettingName": {
            "type": "string",
            "description": "The name of the email notification configuration."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "alertSettingName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Alert"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationAlertSettings_Create",
      "title": "ReplicationAlertSettings_Create",
      "description": "Create or update an email notification(alert) configuration.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "alertSettingName": {
            "type": "string",
            "description": "The name of the email notification(alert) configuration."
          },
          "request": {
            "$ref": "#/definitions/ConfigureAlertRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "alertSettingName",
          "request"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Alert"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationEvents_List",
      "title": "ReplicationEvents_List",
      "description": "Gets the list of Azure Site Recovery events for the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/EventCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationEvents_Get",
      "title": "ReplicationEvents_Get",
      "description": "The operation to get the details of an Azure Site recovery event.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "eventName": {
            "type": "string",
            "description": "The name of the Azure Site Recovery event."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "eventName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Event"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_List",
      "title": "ReplicationFabrics_List",
      "description": "Gets a list of the Azure Site Recovery fabrics in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/FabricCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_Purge",
      "title": "ReplicationFabrics_Purge",
      "description": "The operation to purge(force delete) an Azure Site Recovery fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "ASR fabric to purge."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_Get",
      "title": "ReplicationFabrics_Get",
      "description": "Gets the details of an Azure Site Recovery fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Fabric"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_Create",
      "title": "ReplicationFabrics_Create",
      "description": "The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V site)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Name of the ASR fabric."
          },
          "input": {
            "$ref": "#/definitions/FabricCreationInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Fabric"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_CheckConsistency",
      "title": "ReplicationFabrics_CheckConsistency",
      "description": "The operation to perform a consistency check on the fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Fabric"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_MigrateToAad",
      "title": "ReplicationFabrics_MigrateToAad",
      "description": "The operation to migrate an Azure Site Recovery fabric to AAD.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "ASR fabric to migrate."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_ReassociateGateway",
      "title": "ReplicationFabrics_ReassociateGateway",
      "description": "The operation to move replications from a process server to another process server.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "The name of the fabric containing the process server."
          },
          "failoverProcessServerRequest": {
            "$ref": "#/definitions/FailoverProcessServerRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "failoverProcessServerRequest"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Fabric"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_Delete",
      "title": "ReplicationFabrics_Delete",
      "description": "The operation to delete or remove an Azure Site Recovery fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "ASR fabric to delete"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationFabrics_RenewCertificate",
      "title": "ReplicationFabrics_RenewCertificate",
      "description": "Renews the connection certificate for the ASR replication fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "fabric name to renew certs for."
          },
          "renewCertificate": {
            "$ref": "#/definitions/RenewCertificateInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "renewCertificate"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Fabric"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationLogicalNetworks_ListByReplicationFabrics",
      "title": "ReplicationLogicalNetworks_ListByReplicationFabrics",
      "description": "Lists all the logical networks of the Azure Site Recovery fabric",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Server Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LogicalNetworkCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationLogicalNetworks_Get",
      "title": "ReplicationLogicalNetworks_Get",
      "description": "Gets the details of a logical network.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Server Id."
          },
          "logicalNetworkName": {
            "type": "string",
            "description": "Logical network name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "logicalNetworkName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LogicalNetwork"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworks_ListByReplicationFabrics",
      "title": "ReplicationNetworks_ListByReplicationFabrics",
      "description": "Lists the networks available for a fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NetworkCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworks_Get",
      "title": "ReplicationNetworks_Get",
      "description": "Gets the details of a network.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Server Id."
          },
          "networkName": {
            "type": "string",
            "description": "Primary network name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "networkName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Network"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworkMappings_ListByReplicationNetworks",
      "title": "ReplicationNetworkMappings_ListByReplicationNetworks",
      "description": "Lists all ASR network mappings for the specified network.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Primary fabric name."
          },
          "networkName": {
            "type": "string",
            "description": "Primary network name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "networkName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NetworkMappingCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworkMappings_Delete",
      "title": "ReplicationNetworkMappings_Delete",
      "description": "The operation to delete a network mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Primary fabric name."
          },
          "networkName": {
            "type": "string",
            "description": "Primary network name."
          },
          "networkMappingName": {
            "type": "string",
            "description": "ARM Resource Name for network mapping."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "networkName",
          "networkMappingName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworkMappings_Get",
      "title": "ReplicationNetworkMappings_Get",
      "description": "Gets the details of an ASR network mapping",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Primary fabric name."
          },
          "networkName": {
            "type": "string",
            "description": "Primary network name."
          },
          "networkMappingName": {
            "type": "string",
            "description": "Network mapping name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "networkName",
          "networkMappingName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NetworkMapping"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworkMappings_Update",
      "title": "ReplicationNetworkMappings_Update",
      "description": "The operation to update an ASR network mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Primary fabric name."
          },
          "networkName": {
            "type": "string",
            "description": "Primary network name."
          },
          "networkMappingName": {
            "type": "string",
            "description": "Network mapping name."
          },
          "input": {
            "$ref": "#/definitions/UpdateNetworkMappingInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "networkName",
          "networkMappingName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NetworkMapping"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworkMappings_Create",
      "title": "ReplicationNetworkMappings_Create",
      "description": "The operation to create an ASR network mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Primary fabric name."
          },
          "networkName": {
            "type": "string",
            "description": "Primary network name."
          },
          "networkMappingName": {
            "type": "string",
            "description": "Network mapping name."
          },
          "input": {
            "$ref": "#/definitions/CreateNetworkMappingInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "networkName",
          "networkMappingName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NetworkMapping"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainers_ListByReplicationFabrics",
      "title": "ReplicationProtectionContainers_ListByReplicationFabrics",
      "description": "Lists the protection containers in the specified fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainerCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainers_Get",
      "title": "ReplicationProtectionContainers_Get",
      "description": "Gets the details of a protection container.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainer"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainers_Create",
      "title": "ReplicationProtectionContainers_Create",
      "description": "Operation to create a protection container.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric ARM name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Unique protection container ARM name."
          },
          "creationInput": {
            "$ref": "#/definitions/CreateProtectionContainerInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "creationInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainer"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainers_DiscoverProtectableItem",
      "title": "ReplicationProtectionContainers_DiscoverProtectableItem",
      "description": "The operation to a add a protectable item to a protection container(Add physical server.)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "The name of the fabric."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "The name of the protection container."
          },
          "discoverProtectableItemRequest": {
            "$ref": "#/definitions/DiscoverProtectableItemRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "discoverProtectableItemRequest"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainer"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainers_Delete",
      "title": "ReplicationProtectionContainers_Delete",
      "description": "Operation to remove a protection container.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric ARM name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Unique protection container ARM name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectableItems_ListByReplicationProtectionContainers",
      "title": "ReplicationProtectableItems_ListByReplicationProtectionContainers",
      "description": "Lists the protectable items in a protection container.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectableItemCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectableItems_Get",
      "title": "ReplicationProtectableItems_Get",
      "description": "The operation to get the details of a protectable item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "protectableItemName": {
            "type": "string",
            "description": "Protectable item name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "protectableItemName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectableItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_ListByReplicationProtectionContainers",
      "title": "ReplicationProtectedItems_ListByReplicationProtectionContainers",
      "description": "Gets the list of ASR replication protected items in the protection container.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItemCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_Purge",
      "title": "ReplicationProtectedItems_Purge",
      "description": "The operation to delete or purge a replication protected item. This operation will force delete the replication protected item. Use the remove operation on replication protected item to perform a clean disable replication for the item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_Get",
      "title": "ReplicationProtectedItems_Get",
      "description": "Gets the details of an ASR replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric unique name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_Update",
      "title": "ReplicationProtectedItems_Update",
      "description": "The operation to update the recovery settings of an ASR replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          },
          "updateProtectionInput": {
            "$ref": "#/definitions/UpdateReplicationProtectedItemInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "updateProtectionInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_Create",
      "title": "ReplicationProtectedItems_Create",
      "description": "The operation to create an ASR replication protected item (Enable replication).",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Name of the fabric."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "A name for the replication protected item."
          },
          "input": {
            "$ref": "#/definitions/EnableProtectionInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_ApplyRecoveryPoint",
      "title": "ReplicationProtectedItems_ApplyRecoveryPoint",
      "description": "The operation to change the recovery point of a failed over replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "The ARM fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "The protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "The replicated protected item's name."
          },
          "applyRecoveryPointInput": {
            "$ref": "#/definitions/ApplyRecoveryPointInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "applyRecoveryPointInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_FailoverCommit",
      "title": "ReplicationProtectedItems_FailoverCommit",
      "description": "Operation to commit the failover of the replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_PlannedFailover",
      "title": "ReplicationProtectedItems_PlannedFailover",
      "description": "Operation to initiate a planned failover of the replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          },
          "failoverInput": {
            "$ref": "#/definitions/PlannedFailoverInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "failoverInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_Reprotect",
      "title": "ReplicationProtectedItems_Reprotect",
      "description": "Operation to reprotect or reverse replicate a failed over replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          },
          "rrInput": {
            "$ref": "#/definitions/ReverseReplicationInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "rrInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "RecoveryPoints_ListByReplicationProtectedItems",
      "title": "RecoveryPoints_ListByReplicationProtectedItems",
      "description": "Lists the available recovery points for a replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "The fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "The protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "The replication protected item's name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPointCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "RecoveryPoints_Get",
      "title": "RecoveryPoints_Get",
      "description": "Get the details of specified recovery point.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "The fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "The protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "The replication protected item's name."
          },
          "recoveryPointName": {
            "type": "string",
            "description": "The recovery point name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "recoveryPointName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPoint"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_Delete",
      "title": "ReplicationProtectedItems_Delete",
      "description": "The operation to disable replication on a replication protected item. This will also remove the item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          },
          "disableProtectionInput": {
            "$ref": "#/definitions/DisableProtectionInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "disableProtectionInput"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_RepairReplication",
      "title": "ReplicationProtectedItems_RepairReplication",
      "description": "The operation to start resynchronize/repair replication for a replication protected item requiring resynchronization.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "The name of the fabric."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "The name of the container."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "The name of the replication protected item."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_TestFailover",
      "title": "ReplicationProtectedItems_TestFailover",
      "description": "Operation to perform a test failover of the replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          },
          "failoverInput": {
            "$ref": "#/definitions/TestFailoverInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "failoverInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_TestFailoverCleanup",
      "title": "ReplicationProtectedItems_TestFailoverCleanup",
      "description": "Operation to clean up the test failover of a replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          },
          "cleanupInput": {
            "$ref": "#/definitions/TestFailoverCleanupInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "cleanupInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_UnplannedFailover",
      "title": "ReplicationProtectedItems_UnplannedFailover",
      "description": "Operation to initiate a failover of the replication protected item.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "replicatedProtectedItemName": {
            "type": "string",
            "description": "Replication protected item name."
          },
          "failoverInput": {
            "$ref": "#/definitions/UnplannedFailoverInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicatedProtectedItemName",
          "failoverInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_UpdateMobilityService",
      "title": "ReplicationProtectedItems_UpdateMobilityService",
      "description": "The operation to update(push update) the installed mobility service software on a replication protected item to the latest available version.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "The name of the fabric containing the protected item."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "The name of the container containing the protected item."
          },
          "replicationProtectedItemName": {
            "type": "string",
            "description": "The name of the protected item on which the agent is to be updated."
          },
          "updateMobilityServiceRequest": {
            "$ref": "#/definitions/UpdateMobilityServiceRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "replicationProtectedItemName",
          "updateMobilityServiceRequest"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItem"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainerMappings_ListByReplicationProtectionContainers",
      "title": "ReplicationProtectionContainerMappings_ListByReplicationProtectionContainers",
      "description": "Lists the protection container mappings for a protection container.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainerMappingCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainerMappings_Purge",
      "title": "ReplicationProtectionContainerMappings_Purge",
      "description": "The operation to purge(force delete) a protection container mapping",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "mappingName": {
            "type": "string",
            "description": "Protection container mapping name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "mappingName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainerMappings_Get",
      "title": "ReplicationProtectionContainerMappings_Get",
      "description": "Gets the details of a protection container mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "mappingName": {
            "type": "string",
            "description": "Protection Container mapping name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "mappingName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainerMapping"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainerMappings_Create",
      "title": "ReplicationProtectionContainerMappings_Create",
      "description": "The operation to create a protection container mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "mappingName": {
            "type": "string",
            "description": "Protection container mapping name."
          },
          "creationInput": {
            "$ref": "#/definitions/CreateProtectionContainerMappingInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "mappingName",
          "creationInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainerMapping"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainerMappings_Delete",
      "title": "ReplicationProtectionContainerMappings_Delete",
      "description": "The operation to delete or remove a protection container mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "mappingName": {
            "type": "string",
            "description": "Protection container mapping name."
          },
          "removalInput": {
            "$ref": "#/definitions/RemoveProtectionContainerMappingInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "mappingName",
          "removalInput"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainers_SwitchProtection",
      "title": "ReplicationProtectionContainers_SwitchProtection",
      "description": "Operation to switch protection from one container to another or one replication provider to another.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Unique fabric name."
          },
          "protectionContainerName": {
            "type": "string",
            "description": "Protection container name."
          },
          "switchInput": {
            "$ref": "#/definitions/SwitchProtectionInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "protectionContainerName",
          "switchInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainer"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryServicesProviders_ListByReplicationFabrics",
      "title": "ReplicationRecoveryServicesProviders_ListByReplicationFabrics",
      "description": "Lists the registered recovery services providers for the specified fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryServicesProviderCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryServicesProviders_Purge",
      "title": "ReplicationRecoveryServicesProviders_Purge",
      "description": "The operation to purge(force delete) a recovery services provider from the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "providerName": {
            "type": "string",
            "description": "Recovery services provider name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "providerName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryServicesProviders_Get",
      "title": "ReplicationRecoveryServicesProviders_Get",
      "description": "Gets the details of registered recovery services provider.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "providerName": {
            "type": "string",
            "description": "Recovery services provider name"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "providerName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryServicesProvider"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryServicesProviders_RefreshProvider",
      "title": "ReplicationRecoveryServicesProviders_RefreshProvider",
      "description": "The operation to refresh the information from the recovery services provider.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "providerName": {
            "type": "string",
            "description": "Recovery services provider name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "providerName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryServicesProvider"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryServicesProviders_Delete",
      "title": "ReplicationRecoveryServicesProviders_Delete",
      "description": "The operation to removes/delete(unregister) a recovery services provider from the vault",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "providerName": {
            "type": "string",
            "description": "Recovery services provider name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "providerName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassifications_ListByReplicationFabrics",
      "title": "ReplicationStorageClassifications_ListByReplicationFabrics",
      "description": "Lists the storage classifications available in the specified fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Site name of interest."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StorageClassificationCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassifications_Get",
      "title": "ReplicationStorageClassifications_Get",
      "description": "Gets the details of the specified storage classification.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "storageClassificationName": {
            "type": "string",
            "description": "Storage classification name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "storageClassificationName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StorageClassification"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassificationMappings_ListByReplicationStorageClassifications",
      "title": "ReplicationStorageClassificationMappings_ListByReplicationStorageClassifications",
      "description": "Lists the storage classification mappings for the fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "storageClassificationName": {
            "type": "string",
            "description": "Storage classfication name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "storageClassificationName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StorageClassificationMappingCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassificationMappings_Delete",
      "title": "ReplicationStorageClassificationMappings_Delete",
      "description": "The operation to delete a storage classification mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "storageClassificationName": {
            "type": "string",
            "description": "Storage classification name."
          },
          "storageClassificationMappingName": {
            "type": "string",
            "description": "Storage classification mapping name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "storageClassificationName",
          "storageClassificationMappingName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassificationMappings_Get",
      "title": "ReplicationStorageClassificationMappings_Get",
      "description": "Gets the details of the specified storage classification mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "storageClassificationName": {
            "type": "string",
            "description": "Storage classification name."
          },
          "storageClassificationMappingName": {
            "type": "string",
            "description": "Storage classification mapping name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "storageClassificationName",
          "storageClassificationMappingName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StorageClassificationMapping"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassificationMappings_Create",
      "title": "ReplicationStorageClassificationMappings_Create",
      "description": "The operation to create a storage classification mapping.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "storageClassificationName": {
            "type": "string",
            "description": "Storage classification name."
          },
          "storageClassificationMappingName": {
            "type": "string",
            "description": "Storage classification mapping name."
          },
          "pairingInput": {
            "$ref": "#/definitions/StorageClassificationMappingInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "storageClassificationName",
          "storageClassificationMappingName",
          "pairingInput"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StorageClassificationMapping"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationvCenters_ListByReplicationFabrics",
      "title": "ReplicationvCenters_ListByReplicationFabrics",
      "description": "Lists the vCenter servers registered in a fabric.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VCenterCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationvCenters_Delete",
      "title": "ReplicationvCenters_Delete",
      "description": "The operation to remove(unregister) a registered vCenter server from the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "vCenterName": {
            "type": "string",
            "description": "vCenter name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "vCenterName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationvCenters_Get",
      "title": "ReplicationvCenters_Get",
      "description": "Gets the details of a registered vCenter server(Add vCenter server.)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "vCenterName": {
            "type": "string",
            "description": "vCenter name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "vCenterName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VCenter"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationvCenters_Update",
      "title": "ReplicationvCenters_Update",
      "description": "The operation to update a registered vCenter.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "vCenterName": {
            "type": "string",
            "description": "vCeneter name"
          },
          "updateVCenterRequest": {
            "$ref": "#/definitions/UpdateVCenterRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "vCenterName",
          "updateVCenterRequest"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VCenter"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationvCenters_Create",
      "title": "ReplicationvCenters_Create",
      "description": "The operation to create a vCenter object..",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "fabricName": {
            "type": "string",
            "description": "Fabric name."
          },
          "vCenterName": {
            "type": "string",
            "description": "vCenter name."
          },
          "addVCenterRequest": {
            "$ref": "#/definitions/AddVCenterRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "fabricName",
          "vCenterName",
          "addVCenterRequest"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VCenter"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationJobs_List",
      "title": "ReplicationJobs_List",
      "description": "Gets the list of Azure Site Recovery Jobs for the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "$filter": {
            "type": "string",
            "description": "OData filter options."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/JobCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationJobs_Export",
      "title": "ReplicationJobs_Export",
      "description": "The operation to export the details of the Azure Site Recovery jobs of the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "jobQueryParameter": {
            "$ref": "#/definitions/JobQueryParameter"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "jobQueryParameter"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Job"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationJobs_Get",
      "title": "ReplicationJobs_Get",
      "description": "Get the details of an Azure Site Recovery job.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "jobName": {
            "type": "string",
            "description": "Job identifier"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "jobName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Job"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationJobs_Cancel",
      "title": "ReplicationJobs_Cancel",
      "description": "The operation to cancel an Azure Site Recovery job.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "jobName": {
            "type": "string",
            "description": "Job indentifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "jobName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Job"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationJobs_Restart",
      "title": "ReplicationJobs_Restart",
      "description": "The operation to restart an Azure Site Recovery job.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "jobName": {
            "type": "string",
            "description": "Job identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "jobName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Job"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationJobs_Resume",
      "title": "ReplicationJobs_Resume",
      "description": "The operation to resume an Azure Site Recovery job",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "jobName": {
            "type": "string",
            "description": "Job identifier."
          },
          "resumeJobParams": {
            "$ref": "#/definitions/ResumeJobParams"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "jobName",
          "resumeJobParams"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Job"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworkMappings_List",
      "title": "ReplicationNetworkMappings_List",
      "description": "Lists all ASR network mappings in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NetworkMappingCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationNetworks_List",
      "title": "ReplicationNetworks_List",
      "description": "Lists the networks available in a vault",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NetworkCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationPolicies_List",
      "title": "ReplicationPolicies_List",
      "description": "Lists the replication policies for a vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/PolicyCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationPolicies_Delete",
      "title": "ReplicationPolicies_Delete",
      "description": "The operation to delete a replication policy.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "policyName": {
            "type": "string",
            "description": "Replication policy name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "policyName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationPolicies_Get",
      "title": "ReplicationPolicies_Get",
      "description": "Gets the details of a replication policy.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "policyName": {
            "type": "string",
            "description": "Replication policy name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "policyName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Policy"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationPolicies_Update",
      "title": "ReplicationPolicies_Update",
      "description": "The operation to update a replication policy.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "policyName": {
            "type": "string",
            "description": "Protection profile Id."
          },
          "input": {
            "$ref": "#/definitions/UpdatePolicyInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "policyName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Policy"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationPolicies_Create",
      "title": "ReplicationPolicies_Create",
      "description": "The operation to create a replication policy",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "policyName": {
            "type": "string",
            "description": "Replication policy name"
          },
          "input": {
            "$ref": "#/definitions/CreatePolicyInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "policyName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Policy"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectedItems_List",
      "title": "ReplicationProtectedItems_List",
      "description": "Gets the list of ASR replication protected items in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "skipToken": {
            "type": "string",
            "description": "The pagination token. Possible values: \"FabricId\" or \"FabricId_CloudId\" or null"
          },
          "$filter": {
            "type": "string",
            "description": "OData filter options."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplicationProtectedItemCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainerMappings_List",
      "title": "ReplicationProtectionContainerMappings_List",
      "description": "Lists the protection container mappings in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainerMappingCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationProtectionContainers_List",
      "title": "ReplicationProtectionContainers_List",
      "description": "Lists the protection containers in a vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ProtectionContainerCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_List",
      "title": "ReplicationRecoveryPlans_List",
      "description": "Lists the recovery plans in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlanCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_Delete",
      "title": "ReplicationRecoveryPlans_Delete",
      "description": "Delete a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_Get",
      "title": "ReplicationRecoveryPlans_Get",
      "description": "Gets the details of the recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Name of the recovery plan."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_Update",
      "title": "ReplicationRecoveryPlans_Update",
      "description": "The operation to update a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          },
          "input": {
            "$ref": "#/definitions/UpdateRecoveryPlanInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_Create",
      "title": "ReplicationRecoveryPlans_Create",
      "description": "The operation to create a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          },
          "input": {
            "$ref": "#/definitions/CreateRecoveryPlanInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_FailoverCommit",
      "title": "ReplicationRecoveryPlans_FailoverCommit",
      "description": "The operation to commit the fail over of a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_PlannedFailover",
      "title": "ReplicationRecoveryPlans_PlannedFailover",
      "description": "The operation to start the planned failover of a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          },
          "input": {
            "$ref": "#/definitions/RecoveryPlanPlannedFailoverInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_Reprotect",
      "title": "ReplicationRecoveryPlans_Reprotect",
      "description": "The operation to reprotect(reverse replicate) a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_TestFailover",
      "title": "ReplicationRecoveryPlans_TestFailover",
      "description": "The operation to start the test failover of a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          },
          "input": {
            "$ref": "#/definitions/RecoveryPlanTestFailoverInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_TestFailoverCleanup",
      "title": "ReplicationRecoveryPlans_TestFailoverCleanup",
      "description": "The operation to cleanup test failover of a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          },
          "input": {
            "$ref": "#/definitions/RecoveryPlanTestFailoverCleanupInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryPlans_UnplannedFailover",
      "title": "ReplicationRecoveryPlans_UnplannedFailover",
      "description": "The operation to start the failover of a recovery plan.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          },
          "recoveryPlanName": {
            "type": "string",
            "description": "Recovery plan name."
          },
          "input": {
            "$ref": "#/definitions/RecoveryPlanUnplannedFailoverInput"
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId",
          "recoveryPlanName",
          "input"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryPlan"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationRecoveryServicesProviders_List",
      "title": "ReplicationRecoveryServicesProviders_List",
      "description": "Lists the registered recovery services providers in the vault",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RecoveryServicesProviderCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassificationMappings_List",
      "title": "ReplicationStorageClassificationMappings_List",
      "description": "Lists the storage classification mappings in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StorageClassificationMappingCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationStorageClassifications_List",
      "title": "ReplicationStorageClassifications_List",
      "description": "Lists the storage classifications in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StorageClassificationCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    },
    {
      "id": "ReplicationvCenters_List",
      "title": "ReplicationvCenters_List",
      "description": "Lists the vCenter servers registered in the vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "resourceName": {
            "type": "string",
            "description": "The name of the recovery services vault."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group where the recovery services vault is present."
          },
          "subscriptionId": {
            "type": "string",
            "description": "The subscription Id."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "resourceName",
          "resourceGroupName",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VCenterCollection"
      },
      "security": {
        "azure_arm_recoveryservicessiterecovery": {
          "integration": "azure_arm_recoveryservicessiterecovery"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "cloud",
    "azure"
  ]
}