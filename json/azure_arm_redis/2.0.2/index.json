{
  "id": "azure_arm_redis",
  "title": "RedisManagementClient",
  "description": "REST API for Azure Redis Cache Service.",
  "security": {
    "azure_arm_redis": {
      "integration": "azure_arm_redis",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "description": "Azure Active Directory OAuth2 Flow.",
        "flow": "implicit",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        },
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/azure_arm_redis.png"
  },
  "actionCount": 8,
  "definitions": {
    "RedisAccessKeys": {
      "description": "Redis cache access keys.",
      "properties": {
        "primaryKey": {
          "description": "The current primary key that clients can use to authenticate with Redis cache.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The current secondary key that clients can use to authenticate with Redis cache.",
          "type": "string"
        }
      }
    },
    "RedisCreateOrUpdateParameters": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Parameters supplied to the CreateOrUpdate Redis operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RedisProperties",
          "description": "Redis cache properties.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ]
    },
    "RedisListKeysResult": {
      "description": "The response of Redis list keys operation.",
      "properties": {
        "primaryKey": {
          "description": "The current primary key that clients can use to authenticate with Redis cache.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "The current secondary key that clients can use to authenticate with Redis cache.",
          "type": "string"
        }
      }
    },
    "RedisListResult": {
      "description": "The response of list Redis operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of locations.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/RedisResource"
          },
          "type": "array"
        }
      }
    },
    "RedisProperties": {
      "description": "Parameters supplied to CreateOrUpdate Redis operation.",
      "properties": {
        "enableNonSslPort": {
          "description": "If the value is true, then the non-SLL Redis server port (6379) will be enabled.",
          "type": "boolean"
        },
        "redisConfiguration": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "All Redis Settings. Few possible keys: rdb-backup-enabled,rdb-storage-connection-string,rdb-backup-frequency,maxmemory-delta,maxmemory-policy,notify-keyspace-events,maxmemory-samples,slowlog-log-slower-than,slowlog-max-len,list-max-ziplist-entries,list-max-ziplist-value,hash-max-ziplist-entries,hash-max-ziplist-value,set-max-intset-entries,zset-max-ziplist-entries,zset-max-ziplist-value etc.",
          "type": "object"
        },
        "redisVersion": {
          "description": "RedisVersion parameter has been deprecated. As such, it is no longer necessary to provide this parameter and any value specified is ignored.",
          "type": "string"
        },
        "shardCount": {
          "description": "The number of shards to be created on a Premium Cluster Cache.",
          "format": "int32",
          "type": "integer"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "What SKU of Redis cache to deploy."
        },
        "staticIP": {
          "description": "Required when deploying a Redis cache inside an existing Azure Virtual Network.",
          "type": "string"
        },
        "subnet": {
          "description": "Required when deploying a Redis cache inside an existing Azure Virtual Network.",
          "type": "string"
        },
        "tenantSettings": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "tenantSettings",
          "type": "object"
        },
        "virtualNetwork": {
          "description": "The exact ARM resource ID of the virtual network to deploy the Redis cache in. Example format: /subscriptions/{subid}/resourceGroups/{resourceGroupName}/Microsoft.ClassicNetwork/VirtualNetworks/vnet1",
          "type": "string"
        }
      },
      "required": [
        "sku"
      ]
    },
    "RedisReadableProperties": {
      "allOf": [
        {
          "$ref": "#/definitions/RedisProperties"
        }
      ],
      "description": "Parameters describing a Redis instance",
      "properties": {
        "hostName": {
          "description": "Redis host name.",
          "type": "string"
        },
        "port": {
          "description": "Redis non-SSL port.",
          "format": "int32",
          "type": "integer"
        },
        "provisioningState": {
          "description": "Redis instance provisioning status.",
          "type": "string"
        },
        "sslPort": {
          "description": "Redis SSL port.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "RedisReadablePropertiesWithAccessKey": {
      "allOf": [
        {
          "$ref": "#/definitions/RedisReadableProperties"
        }
      ],
      "description": "Properties generated only in response to CreateOrUpdate Redis operation.",
      "properties": {
        "accessKeys": {
          "$ref": "#/definitions/RedisAccessKeys",
          "description": "Redis cache access keys."
        }
      }
    },
    "RedisRebootParameters": {
      "description": "Specifies which Redis node(s) to reboot.",
      "properties": {
        "rebootType": {
          "description": "Which Redis node(s) to reboot. Depending on this value data loss is possible.",
          "enum": [
            "PrimaryNode",
            "SecondaryNode",
            "AllNodes"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RebootType"
          }
        },
        "shardId": {
          "description": "If clustering is enabled, the ID of the shared be rebooted.",
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "rebootType"
      ]
    },
    "RedisRegenerateKeyParameters": {
      "description": "Specifies which Redis access keys to reset.",
      "properties": {
        "keyType": {
          "description": "Which Redis access key to reset.",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RedisKeyType"
          }
        }
      },
      "required": [
        "keyType"
      ]
    },
    "RedisResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A single Redis item in List or Get Operation.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RedisReadableProperties",
          "description": "Redis cache properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RedisResourceWithAccessKey": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A Redis item in CreateOrUpdate Operation response.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RedisReadablePropertiesWithAccessKey",
          "description": "Redis cache properties.",
          "x-ms-client-flatten": true
        }
      }
    },
    "Resource": {
      "properties": {
        "id": {
          "description": "Resource ID.",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "Resource name.",
          "readOnly": true,
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Resource type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "Sku": {
      "description": "SKU parameters supplied to the create Redis operation.",
      "properties": {
        "capacity": {
          "description": "What size of Redis cache to deploy. Valid values: for C family (0, 1, 2, 3, 4, 5, 6), for P family (1, 2, 3, 4).",
          "format": "int32",
          "type": "integer"
        },
        "family": {
          "description": "Which family to use. Valid values: (C, P).",
          "enum": [
            "C",
            "P"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SkuFamily"
          }
        },
        "name": {
          "description": "What type of Redis cache to deploy. Valid values: (Basic, Standard, Premium).",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SkuName"
          }
        }
      },
      "required": [
        "name",
        "family",
        "capacity"
      ]
    }
  },
  "actions": [
    {
      "id": "Redis_List",
      "title": "Redis_List",
      "description": "Gets all Redis caches in the specified subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RedisListResult"
      },
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    },
    {
      "id": "Redis_ListByResourceGroup",
      "title": "Redis_ListByResourceGroup",
      "description": "Gets all Redis caches in a resource group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RedisListResult"
      },
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    },
    {
      "id": "Redis_Delete",
      "title": "Redis_Delete",
      "description": "Deletes a Redis cache.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the Redis cache."
          },
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "name",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    },
    {
      "id": "Redis_Get",
      "title": "Redis_Get",
      "description": "Gets a Redis cache (resource description).",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the Redis cache."
          },
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "name",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RedisResource"
      },
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    },
    {
      "id": "Redis_CreateOrUpdate",
      "title": "Redis_CreateOrUpdate",
      "description": "Create a Redis cache, or replace (overwrite/recreate, with potential downtime) an existing cache.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the Redis cache."
          },
          "parameters": {
            "$ref": "#/definitions/RedisCreateOrUpdateParameters"
          },
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "name",
          "parameters",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RedisResourceWithAccessKey"
      },
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    },
    {
      "id": "Redis_ForceReboot",
      "title": "Redis_ForceReboot",
      "description": "Reboot specified Redis node(s). This operation requires write permission to the cache resource. There can be potential data loss.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the Redis cache."
          },
          "parameters": {
            "$ref": "#/definitions/RedisRebootParameters"
          },
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "name",
          "parameters",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    },
    {
      "id": "Redis_ListKeys",
      "title": "Redis_ListKeys",
      "description": "Retrieve a Redis cache's access keys. This operation requires write permission to the cache resource.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the Redis cache."
          },
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "name",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RedisListKeysResult"
      },
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    },
    {
      "id": "Redis_RegenerateKey",
      "title": "Redis_RegenerateKey",
      "description": "Regenerate the access keys for a Redis cache. This operation requires write permission to the cache resource.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the Redis cache."
          },
          "parameters": {
            "$ref": "#/definitions/RedisRegenerateKeyParameters"
          },
          "api-version": {
            "type": "string",
            "description": "Client API Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify the Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "name",
          "parameters",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RedisListKeysResult"
      },
      "security": {
        "azure_arm_redis": {
          "integration": "azure_arm_redis"
        }
      }
    }
  ],
  "tags": [
    "cloud",
    "azure"
  ]
}