{
  "id": "amazonaws_ds",
  "title": "AWS Directory Service",
  "description": "AWS Directory Service\n\nAWS Directory Service is a web service that makes it easy for you to setup and run directories in the AWS cloud, or connect your AWS resources with an existing on-premises Microsoft Active Directory. This guide provides detailed information about AWS Directory Service operations, data types, parameters, and errors. For information about AWS Directory Services features, see [AWS Directory Service](https://aws.amazon.com/directoryservice/) and the [AWS Directory Service Administration Guide](http://docs.aws.amazon.com/directoryservice/latest/admin-guide/what_is.html).\n\n AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms (Java, Ruby, .Net, iOS, Android, etc.). The SDKs provide a convenient way to create programmatic access to AWS Directory Service and other AWS services. For more information about the AWS SDKs, including how to download and install them, see [Tools for Amazon Web Services](http://aws.amazon.com/tools/).",
  "security": {
    "amazonaws_ds": {
      "integration": "amazonaws_ds",
      "accessKeyId": "",
      "secretAccessKey": "",
      "region": "AWS region (if applicable)"
    }
  },
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_ds.jpg"
  },
  "actionCount": 38,
  "definitions": {
    "AccessUrl": {
      "maxLength": 128,
      "minLength": 1,
      "type": "string",
      "title": "AccessUrl"
    },
    "AddIpRoutesRequest": {
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "Identifier (ID) of the directory to which to add the address block."
        },
        "IpRoutes": {
          "$ref": "#/definitions/IpRoutes",
          "description": "IP address blocks, using CIDR format, of the traffic to route. This is often the IP address block of the DNS server used for your on-premises domain."
        },
        "UpdateSecurityGroupForDirectoryControllers": {
          "$ref": "#/definitions/UpdateSecurityGroupForDirectoryControllers",
          "description": "<p>If set to true, updates the inbound and outbound rules of the security group that has the description: \"AWS created security group for <i>directory ID</i> directory controllers.\" Following are the new rules: </p> <p>Inbound:</p> <ul> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 123, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 138, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom UDP Rule, Protocol: UDP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 88, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 135, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 445, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 464, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 636, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 1024-65535, Source: 0.0.0.0/0</p> </li> <li> <p>Type: Custom TCP Rule, Protocol: TCP, Range: 3268-33269, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (UDP), Protocol: UDP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: DNS (TCP), Protocol: TCP, Range: 53, Source: 0.0.0.0/0</p> </li> <li> <p>Type: LDAP, Protocol: TCP, Range: 389, Source: 0.0.0.0/0</p> </li> <li> <p>Type: All ICMP, Protocol: All, Range: N/A, Source: 0.0.0.0/0</p> </li> </ul> <p/> <p>Outbound:</p> <ul> <li> <p>Type: All traffic, Protocol: All, Range: All, Destination: 0.0.0.0/0</p> </li> </ul> <p>These security rules impact an internal network interface that is not exposed publicly.</p>"
        }
      },
      "required": [
        "DirectoryId",
        "IpRoutes"
      ],
      "type": "object",
      "title": "AddIpRoutesRequest"
    },
    "AddIpRoutesResult": {
      "properties": {},
      "type": "object",
      "title": "AddIpRoutesResult"
    },
    "AddTagsToResourceRequest": {
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/ResourceId",
          "description": "Identifier (ID) for the directory to which to add the tag."
        },
        "Tags": {
          "$ref": "#/definitions/Tags",
          "description": "The tags to be assigned to the directory."
        }
      },
      "required": [
        "ResourceId",
        "Tags"
      ],
      "type": "object",
      "title": "AddTagsToResourceRequest"
    },
    "AddTagsToResourceResult": {
      "properties": {},
      "type": "object",
      "title": "AddTagsToResourceResult"
    },
    "AddedDateTime": {
      "format": "date-time",
      "type": "string",
      "title": "AddedDateTime"
    },
    "AliasName": {
      "maxLength": 62,
      "minLength": 1,
      "pattern": "^(?!d-)([\\da-zA-Z]+)([-]*[\\da-zA-Z])*",
      "type": "string",
      "title": "AliasName"
    },
    "Attribute": {
      "description": "Represents a named directory attribute.",
      "properties": {
        "Name": {
          "$ref": "#/definitions/AttributeName",
          "description": "The name of the attribute."
        },
        "Value": {
          "$ref": "#/definitions/AttributeValue",
          "description": "The value of the attribute."
        }
      },
      "type": "object",
      "title": "Attribute"
    },
    "AttributeName": {
      "minLength": 1,
      "type": "string",
      "title": "AttributeName"
    },
    "AttributeValue": {
      "type": "string",
      "title": "AttributeValue"
    },
    "Attributes": {
      "items": {
        "$ref": "#/definitions/Attribute"
      },
      "type": "array",
      "title": "Attributes"
    },
    "AuthenticationFailedException": {
      "description": "An authentication error occurred.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "The textual message for the exception."
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId",
          "description": "The identifier of the request that caused the exception."
        }
      },
      "type": "object",
      "title": "AuthenticationFailedException"
    },
    "AvailabilityZone": {
      "type": "string",
      "title": "AvailabilityZone"
    },
    "AvailabilityZones": {
      "items": {
        "$ref": "#/definitions/AvailabilityZone"
      },
      "type": "array",
      "title": "AvailabilityZones"
    },
    "CancelSchemaExtensionRequest": {
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory whose schema extension will be canceled."
        },
        "SchemaExtensionId": {
          "$ref": "#/definitions/SchemaExtensionId",
          "description": "The identifier of the schema extension that will be canceled."
        }
      },
      "required": [
        "DirectoryId",
        "SchemaExtensionId"
      ],
      "type": "object",
      "title": "CancelSchemaExtensionRequest"
    },
    "CancelSchemaExtensionResult": {
      "properties": {},
      "type": "object",
      "title": "CancelSchemaExtensionResult"
    },
    "CidrIp": {
      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([1-9]|[1-2][0-9]|3[0-2]))$",
      "type": "string",
      "title": "CidrIp"
    },
    "CidrIps": {
      "items": {
        "$ref": "#/definitions/CidrIp"
      },
      "type": "array",
      "title": "CidrIps"
    },
    "ClientException": {
      "description": "A client exception has occurred.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "ClientException"
    },
    "CloudOnlyDirectoriesLimitReached": {
      "type": "boolean",
      "title": "CloudOnlyDirectoriesLimitReached"
    },
    "Computer": {
      "description": "Contains information about a computer account in a directory.",
      "properties": {
        "ComputerAttributes": {
          "$ref": "#/definitions/Attributes",
          "description": "An array of <a>Attribute</a> objects containing the LDAP attributes that belong to the computer account."
        },
        "ComputerId": {
          "$ref": "#/definitions/SID",
          "description": "The identifier of the computer."
        },
        "ComputerName": {
          "$ref": "#/definitions/ComputerName",
          "description": "The computer name."
        }
      },
      "type": "object",
      "title": "Computer"
    },
    "ComputerName": {
      "maxLength": 15,
      "minLength": 1,
      "type": "string",
      "title": "ComputerName"
    },
    "ComputerPassword": {
      "format": "password",
      "maxLength": 64,
      "minLength": 8,
      "pattern": "[\\u0020-\\u00FF]+",
      "type": "string",
      "title": "ComputerPassword"
    },
    "ConditionalForwarder": {
      "description": "Points to a remote domain with which you are setting up a trust relationship. Conditional forwarders are required in order to set up a trust relationship with another domain.",
      "properties": {
        "DnsIpAddrs": {
          "$ref": "#/definitions/DnsIpAddrs",
          "description": "The IP addresses of the remote DNS server associated with RemoteDomainName. This is the IP address of the DNS server that your conditional forwarder points to."
        },
        "RemoteDomainName": {
          "$ref": "#/definitions/RemoteDomainName",
          "description": "The fully qualified domain name (FQDN) of the remote domains pointed to by the conditional forwarder."
        },
        "ReplicationScope": {
          "$ref": "#/definitions/ReplicationScope",
          "description": "The replication scope of the conditional forwarder. The only allowed value is <code>Domain</code>, which will replicate the conditional forwarder to all of the domain controllers for your AWS directory."
        }
      },
      "type": "object",
      "title": "ConditionalForwarder"
    },
    "ConditionalForwarders": {
      "items": {
        "$ref": "#/definitions/ConditionalForwarder"
      },
      "type": "array",
      "title": "ConditionalForwarders"
    },
    "ConnectDirectoryRequest": {
      "description": "Contains the inputs for the <a>ConnectDirectory</a> operation.",
      "properties": {
        "ConnectSettings": {
          "$ref": "#/definitions/DirectoryConnectSettings",
          "description": "A <a>DirectoryConnectSettings</a> object that contains additional information for the operation."
        },
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "A textual description for the directory."
        },
        "Name": {
          "$ref": "#/definitions/DirectoryName",
          "description": "The fully-qualified name of the on-premises directory, such as <code>corp.example.com</code>."
        },
        "Password": {
          "$ref": "#/definitions/ConnectPassword",
          "description": "The password for the on-premises user account."
        },
        "ShortName": {
          "$ref": "#/definitions/DirectoryShortName",
          "description": "The NetBIOS name of the on-premises directory, such as <code>CORP</code>."
        },
        "Size": {
          "$ref": "#/definitions/DirectorySize",
          "description": "The size of the directory."
        }
      },
      "required": [
        "Name",
        "Password",
        "Size",
        "ConnectSettings"
      ],
      "type": "object",
      "title": "ConnectDirectoryRequest"
    },
    "ConnectDirectoryResult": {
      "description": "Contains the results of the <a>ConnectDirectory</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the new directory."
        }
      },
      "type": "object",
      "title": "ConnectDirectoryResult"
    },
    "ConnectPassword": {
      "format": "password",
      "maxLength": 128,
      "minLength": 1,
      "type": "string",
      "title": "ConnectPassword"
    },
    "ConnectedDirectoriesLimitReached": {
      "type": "boolean",
      "title": "ConnectedDirectoriesLimitReached"
    },
    "CreateAliasRequest": {
      "description": "Contains the inputs for the <a>CreateAlias</a> operation.",
      "properties": {
        "Alias": {
          "$ref": "#/definitions/AliasName",
          "description": "<p>The requested alias.</p> <p>The alias must be unique amongst all aliases in AWS. This operation throws an <code>EntityAlreadyExistsException</code> error if the alias already exists.</p>"
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which to create the alias."
        }
      },
      "required": [
        "DirectoryId",
        "Alias"
      ],
      "type": "object",
      "title": "CreateAliasRequest"
    },
    "CreateAliasResult": {
      "description": "Contains the results of the <a>CreateAlias</a> operation.",
      "properties": {
        "Alias": {
          "$ref": "#/definitions/AliasName",
          "description": "The alias for the directory."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory."
        }
      },
      "type": "object",
      "title": "CreateAliasResult"
    },
    "CreateComputerRequest": {
      "description": "Contains the inputs for the <a>CreateComputer</a> operation.",
      "properties": {
        "ComputerAttributes": {
          "$ref": "#/definitions/Attributes",
          "description": "An array of <a>Attribute</a> objects that contain any LDAP attributes to apply to the computer account."
        },
        "ComputerName": {
          "$ref": "#/definitions/ComputerName",
          "description": "The name of the computer account."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory in which to create the computer account."
        },
        "OrganizationalUnitDistinguishedName": {
          "$ref": "#/definitions/OrganizationalUnitDN",
          "description": "The fully-qualified distinguished name of the organizational unit to place the computer account in."
        },
        "Password": {
          "$ref": "#/definitions/ComputerPassword",
          "description": "A one-time password that is used to join the computer to the directory. You should generate a random, strong password to use for this parameter."
        }
      },
      "required": [
        "DirectoryId",
        "ComputerName",
        "Password"
      ],
      "type": "object",
      "title": "CreateComputerRequest"
    },
    "CreateComputerResult": {
      "description": "Contains the results for the <a>CreateComputer</a> operation.",
      "properties": {
        "Computer": {
          "$ref": "#/definitions/Computer",
          "description": "A <a>Computer</a> object that represents the computer account."
        }
      },
      "type": "object",
      "title": "CreateComputerResult"
    },
    "CreateConditionalForwarderRequest": {
      "description": "Initiates the creation of a conditional forwarder for your AWS Directory Service for Microsoft Active Directory. Conditional forwarders are required in order to set up a trust relationship with another domain.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory ID of the AWS directory for which you are creating the conditional forwarder."
        },
        "DnsIpAddrs": {
          "$ref": "#/definitions/DnsIpAddrs",
          "description": "The IP addresses of the remote DNS server associated with RemoteDomainName."
        },
        "RemoteDomainName": {
          "$ref": "#/definitions/RemoteDomainName",
          "description": "The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship."
        }
      },
      "required": [
        "DirectoryId",
        "RemoteDomainName",
        "DnsIpAddrs"
      ],
      "type": "object",
      "title": "CreateConditionalForwarderRequest"
    },
    "CreateConditionalForwarderResult": {
      "description": "The result of a CreateConditinalForwarder request.",
      "properties": {},
      "type": "object",
      "title": "CreateConditionalForwarderResult"
    },
    "CreateDirectoryRequest": {
      "description": "Contains the inputs for the <a>CreateDirectory</a> operation. ",
      "properties": {
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "A textual description for the directory."
        },
        "Name": {
          "$ref": "#/definitions/DirectoryName",
          "description": "The fully qualified name for the directory, such as <code>corp.example.com</code>."
        },
        "Password": {
          "$ref": "#/definitions/Password",
          "description": "The password for the directory administrator. The directory creation process creates a directory administrator account with the username <code>Administrator</code> and this password."
        },
        "ShortName": {
          "$ref": "#/definitions/DirectoryShortName",
          "description": "The short name of the directory, such as <code>CORP</code>."
        },
        "Size": {
          "$ref": "#/definitions/DirectorySize",
          "description": "The size of the directory."
        },
        "VpcSettings": {
          "$ref": "#/definitions/DirectoryVpcSettings",
          "description": "A <a>DirectoryVpcSettings</a> object that contains additional information for the operation."
        }
      },
      "required": [
        "Name",
        "Password",
        "Size"
      ],
      "type": "object",
      "title": "CreateDirectoryRequest"
    },
    "CreateDirectoryResult": {
      "description": "Contains the results of the <a>CreateDirectory</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory that was created."
        }
      },
      "type": "object",
      "title": "CreateDirectoryResult"
    },
    "CreateMicrosoftADRequest": {
      "description": "Creates a Microsoft AD in the AWS cloud.",
      "properties": {
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "A textual description for the directory. This label will appear on the AWS console <code>Directory Details</code> page after the directory is created."
        },
        "Name": {
          "$ref": "#/definitions/DirectoryName",
          "description": "The fully qualified domain name for the directory, such as <code>corp.example.com</code>. This name will resolve inside your VPC only. It does not need to be publicly resolvable."
        },
        "Password": {
          "$ref": "#/definitions/Password",
          "description": "The password for the default administrative user named <code>Admin</code>."
        },
        "ShortName": {
          "$ref": "#/definitions/DirectoryShortName",
          "description": "The NetBIOS name for your domain. A short identifier for your domain, such as <code>CORP</code>. If you don't specify a NetBIOS name, it will default to the first part of your directory DNS. For example, <code>CORP</code> for the directory DNS <code>corp.example.com</code>. "
        },
        "VpcSettings": {
          "$ref": "#/definitions/DirectoryVpcSettings"
        }
      },
      "required": [
        "Name",
        "Password",
        "VpcSettings"
      ],
      "type": "object",
      "title": "CreateMicrosoftADRequest"
    },
    "CreateMicrosoftADResult": {
      "description": "Result of a CreateMicrosoftAD request.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory that was created."
        }
      },
      "type": "object",
      "title": "CreateMicrosoftADResult"
    },
    "CreateSnapshotBeforeSchemaExtension": {
      "type": "boolean",
      "title": "CreateSnapshotBeforeSchemaExtension"
    },
    "CreateSnapshotRequest": {
      "description": "Contains the inputs for the <a>CreateSnapshot</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory of which to take a snapshot."
        },
        "Name": {
          "$ref": "#/definitions/SnapshotName",
          "description": "The descriptive name to apply to the snapshot."
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "CreateSnapshotRequest"
    },
    "CreateSnapshotResult": {
      "description": "Contains the results of the <a>CreateSnapshot</a> operation.",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/SnapshotId",
          "description": "The identifier of the snapshot that was created."
        }
      },
      "type": "object",
      "title": "CreateSnapshotResult"
    },
    "CreateTrustRequest": {
      "description": "<p>AWS Directory Service for Microsoft Active Directory allows you to configure trust relationships. For example, you can establish a trust between your Microsoft AD in the AWS cloud, and your existing on-premises Microsoft Active Directory. This would allow you to provide users and groups access to resources in either domain, with a single set of credentials.</p> <p>This action initiates the creation of the AWS side of a trust relationship between a Microsoft AD in the AWS cloud and an external domain.</p>",
      "properties": {
        "ConditionalForwarderIpAddrs": {
          "$ref": "#/definitions/DnsIpAddrs",
          "description": "The IP addresses of the remote DNS server associated with RemoteDomainName."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The Directory ID of the Microsoft AD in the AWS cloud for which to establish the trust relationship."
        },
        "RemoteDomainName": {
          "$ref": "#/definitions/RemoteDomainName",
          "description": "The Fully Qualified Domain Name (FQDN) of the external domain for which to create the trust relationship."
        },
        "TrustDirection": {
          "$ref": "#/definitions/TrustDirection",
          "description": "The direction of the trust relationship."
        },
        "TrustPassword": {
          "$ref": "#/definitions/TrustPassword",
          "description": "The trust password. The must be the same password that was used when creating the trust relationship on the external domain."
        },
        "TrustType": {
          "$ref": "#/definitions/TrustType",
          "description": "The trust relationship type."
        }
      },
      "required": [
        "DirectoryId",
        "RemoteDomainName",
        "TrustPassword",
        "TrustDirection"
      ],
      "type": "object",
      "title": "CreateTrustRequest"
    },
    "CreateTrustResult": {
      "description": "The result of a CreateTrust request.",
      "properties": {
        "TrustId": {
          "$ref": "#/definitions/TrustId",
          "description": "A unique identifier for the trust relationship that was created."
        }
      },
      "type": "object",
      "title": "CreateTrustResult"
    },
    "CreatedDateTime": {
      "format": "date-time",
      "type": "string",
      "title": "CreatedDateTime"
    },
    "DeleteAssociatedConditionalForwarder": {
      "type": "boolean",
      "title": "DeleteAssociatedConditionalForwarder"
    },
    "DeleteConditionalForwarderRequest": {
      "description": "Deletes a conditional forwarder.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory ID for which you are deleting the conditional forwarder."
        },
        "RemoteDomainName": {
          "$ref": "#/definitions/RemoteDomainName",
          "description": "The fully qualified domain name (FQDN) of the remote domain with which you are deleting the conditional forwarder."
        }
      },
      "required": [
        "DirectoryId",
        "RemoteDomainName"
      ],
      "type": "object",
      "title": "DeleteConditionalForwarderRequest"
    },
    "DeleteConditionalForwarderResult": {
      "description": "The result of a DeleteConditionalForwarder request.",
      "properties": {},
      "type": "object",
      "title": "DeleteConditionalForwarderResult"
    },
    "DeleteDirectoryRequest": {
      "description": "Contains the inputs for the <a>DeleteDirectory</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory to delete."
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "DeleteDirectoryRequest"
    },
    "DeleteDirectoryResult": {
      "description": "Contains the results of the <a>DeleteDirectory</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory identifier."
        }
      },
      "type": "object",
      "title": "DeleteDirectoryResult"
    },
    "DeleteSnapshotRequest": {
      "description": "Contains the inputs for the <a>DeleteSnapshot</a> operation.",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/SnapshotId",
          "description": "The identifier of the directory snapshot to be deleted."
        }
      },
      "required": [
        "SnapshotId"
      ],
      "type": "object",
      "title": "DeleteSnapshotRequest"
    },
    "DeleteSnapshotResult": {
      "description": "Contains the results of the <a>DeleteSnapshot</a> operation.",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/SnapshotId",
          "description": "The identifier of the directory snapshot that was deleted."
        }
      },
      "type": "object",
      "title": "DeleteSnapshotResult"
    },
    "DeleteTrustRequest": {
      "description": "Deletes the local side of an existing trust relationship between the Microsoft AD in the AWS cloud and the external domain.",
      "properties": {
        "DeleteAssociatedConditionalForwarder": {
          "$ref": "#/definitions/DeleteAssociatedConditionalForwarder",
          "description": "Delete a conditional forwarder as part of a DeleteTrustRequest."
        },
        "TrustId": {
          "$ref": "#/definitions/TrustId",
          "description": "The Trust ID of the trust relationship to be deleted."
        }
      },
      "required": [
        "TrustId"
      ],
      "type": "object",
      "title": "DeleteTrustRequest"
    },
    "DeleteTrustResult": {
      "description": "The result of a DeleteTrust request.",
      "properties": {
        "TrustId": {
          "$ref": "#/definitions/TrustId",
          "description": "The Trust ID of the trust relationship that was deleted."
        }
      },
      "type": "object",
      "title": "DeleteTrustResult"
    },
    "DeregisterEventTopicRequest": {
      "description": "Removes the specified directory as a publisher to the specified SNS topic.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The Directory ID to remove as a publisher. This directory will no longer send messages to the specified SNS topic."
        },
        "TopicName": {
          "$ref": "#/definitions/TopicName",
          "description": "The name of the SNS topic from which to remove the directory as a publisher."
        }
      },
      "required": [
        "DirectoryId",
        "TopicName"
      ],
      "type": "object",
      "title": "DeregisterEventTopicRequest"
    },
    "DeregisterEventTopicResult": {
      "description": "The result of a DeregisterEventTopic request.",
      "properties": {},
      "type": "object",
      "title": "DeregisterEventTopicResult"
    },
    "DescribeConditionalForwardersRequest": {
      "description": "Describes a conditional forwarder.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory ID for which to get the list of associated conditional forwarders."
        },
        "RemoteDomainNames": {
          "$ref": "#/definitions/RemoteDomainNames",
          "description": "The fully qualified domain names (FQDN) of the remote domains for which to get the list of associated conditional forwarders. If this member is null, all conditional forwarders are returned."
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "DescribeConditionalForwardersRequest"
    },
    "DescribeConditionalForwardersResult": {
      "description": "The result of a DescribeConditionalForwarder request.",
      "properties": {
        "ConditionalForwarders": {
          "$ref": "#/definitions/ConditionalForwarders",
          "description": "The list of conditional forwarders that have been created."
        }
      },
      "type": "object",
      "title": "DescribeConditionalForwardersResult"
    },
    "DescribeDirectoriesRequest": {
      "description": "Contains the inputs for the <a>DescribeDirectories</a> operation.",
      "properties": {
        "DirectoryIds": {
          "$ref": "#/definitions/DirectoryIds",
          "description": "<p>A list of identifiers of the directories for which to obtain the information. If this member is null, all directories that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>"
        },
        "Limit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The <i>DescribeDirectoriesResult.NextToken</i> value from a previous call to <a>DescribeDirectories</a>. Pass null if this is the first call."
        }
      },
      "type": "object",
      "title": "DescribeDirectoriesRequest"
    },
    "DescribeDirectoriesResult": {
      "description": "Contains the results of the <a>DescribeDirectories</a> operation.",
      "properties": {
        "DirectoryDescriptions": {
          "$ref": "#/definitions/DirectoryDescriptions",
          "description": "<p>The list of <a>DirectoryDescription</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>"
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeDirectories</a> to retrieve the next set of items."
        }
      },
      "type": "object",
      "title": "DescribeDirectoriesResult"
    },
    "DescribeEventTopicsRequest": {
      "description": "Describes event topics.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The Directory ID for which to get the list of associated SNS topics. If this member is null, associations for all Directory IDs are returned."
        },
        "TopicNames": {
          "$ref": "#/definitions/TopicNames",
          "description": "<p>A list of SNS topic names for which to obtain the information. If this member is null, all associations for the specified Directory ID are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>"
        }
      },
      "type": "object",
      "title": "DescribeEventTopicsRequest"
    },
    "DescribeEventTopicsResult": {
      "description": "The result of a DescribeEventTopic request.",
      "properties": {
        "EventTopics": {
          "$ref": "#/definitions/EventTopics",
          "description": "A list of SNS topic names that receive status messages from the specified Directory ID."
        }
      },
      "type": "object",
      "title": "DescribeEventTopicsResult"
    },
    "DescribeSnapshotsRequest": {
      "description": "Contains the inputs for the <a>DescribeSnapshots</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which to retrieve snapshot information."
        },
        "Limit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of objects to return."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The <i>DescribeSnapshotsResult.NextToken</i> value from a previous call to <a>DescribeSnapshots</a>. Pass null if this is the first call."
        },
        "SnapshotIds": {
          "$ref": "#/definitions/SnapshotIds",
          "description": "A list of identifiers of the snapshots to obtain the information for. If this member is null or empty, all snapshots are returned using the <i>Limit</i> and <i>NextToken</i> members."
        }
      },
      "type": "object",
      "title": "DescribeSnapshotsRequest"
    },
    "DescribeSnapshotsResult": {
      "description": "Contains the results of the <a>DescribeSnapshots</a> operation.",
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If not null, more results are available. Pass this value in the <i>NextToken</i> member of a subsequent call to <a>DescribeSnapshots</a>."
        },
        "Snapshots": {
          "$ref": "#/definitions/Snapshots",
          "description": "<p>The list of <a>Snapshot</a> objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>"
        }
      },
      "type": "object",
      "title": "DescribeSnapshotsResult"
    },
    "DescribeTrustsRequest": {
      "description": "Describes the trust relationships for a particular Microsoft AD in the AWS cloud. If no input parameters are are provided, such as directory ID or trust ID, this request describes all the trust relationships.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The Directory ID of the AWS directory that is a part of the requested trust relationship."
        },
        "Limit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of objects to return."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The <i>DescribeTrustsResult.NextToken</i> value from a previous call to <a>DescribeTrusts</a>. Pass null if this is the first call."
        },
        "TrustIds": {
          "$ref": "#/definitions/TrustIds",
          "description": "<p>A list of identifiers of the trust relationships for which to obtain the information. If this member is null, all trust relationships that belong to the current account are returned.</p> <p>An empty list results in an <code>InvalidParameterException</code> being thrown.</p>"
        }
      },
      "type": "object",
      "title": "DescribeTrustsRequest"
    },
    "DescribeTrustsResult": {
      "description": "The result of a DescribeTrust request.",
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>DescribeTrusts</a> to retrieve the next set of items."
        },
        "Trusts": {
          "$ref": "#/definitions/Trusts",
          "description": "<p>The list of Trust objects that were retrieved.</p> <p>It is possible that this list contains less than the number of items specified in the <i>Limit</i> member of the request. This occurs if there are less than the requested number of items left to retrieve, or if the limitations of the operation have been exceeded.</p>"
        }
      },
      "type": "object",
      "title": "DescribeTrustsResult"
    },
    "Description": {
      "maxLength": 128,
      "minLength": 0,
      "pattern": "^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$",
      "type": "string",
      "title": "Description"
    },
    "DirectoryConnectSettings": {
      "description": "Contains information for the <a>ConnectDirectory</a> operation when an AD Connector directory is being created.",
      "properties": {
        "CustomerDnsIps": {
          "$ref": "#/definitions/DnsIpAddrs",
          "description": "A list of one or more IP addresses of DNS servers or domain controllers in the on-premises directory."
        },
        "CustomerUserName": {
          "$ref": "#/definitions/UserName",
          "description": "<p>The username of an account in the on-premises directory that is used to connect to the directory. This account must have the following privileges:</p> <ul> <li> <p>Read users and groups</p> </li> <li> <p>Create computer objects</p> </li> <li> <p>Join computers to the domain</p> </li> </ul>"
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIds",
          "description": "A list of subnet identifiers in the VPC in which the AD Connector is created."
        },
        "VpcId": {
          "$ref": "#/definitions/VpcId",
          "description": "The identifier of the VPC in which the AD Connector is created."
        }
      },
      "required": [
        "VpcId",
        "SubnetIds",
        "CustomerDnsIps",
        "CustomerUserName"
      ],
      "type": "object",
      "title": "DirectoryConnectSettings"
    },
    "DirectoryConnectSettingsDescription": {
      "description": "Contains information about an AD Connector directory.",
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "A list of the Availability Zones that the directory is in."
        },
        "ConnectIps": {
          "$ref": "#/definitions/IpAddrs",
          "description": "The IP addresses of the AD Connector servers."
        },
        "CustomerUserName": {
          "$ref": "#/definitions/UserName",
          "description": "The username of the service account in the on-premises directory."
        },
        "SecurityGroupId": {
          "$ref": "#/definitions/SecurityGroupId",
          "description": "The security group identifier for the AD Connector directory."
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIds",
          "description": "A list of subnet identifiers in the VPC that the AD connector is in."
        },
        "VpcId": {
          "$ref": "#/definitions/VpcId",
          "description": "The identifier of the VPC that the AD Connector is in."
        }
      },
      "type": "object",
      "title": "DirectoryConnectSettingsDescription"
    },
    "DirectoryDescription": {
      "description": "Contains information about an AWS Directory Service directory.",
      "properties": {
        "AccessUrl": {
          "$ref": "#/definitions/AccessUrl",
          "description": "The access URL for the directory, such as <code>http://&lt;alias&gt;.awsapps.com</code>. If no alias has been created for the directory, <code>&lt;alias&gt;</code> is the directory identifier, such as <code>d-XXXXXXXXXX</code>."
        },
        "Alias": {
          "$ref": "#/definitions/AliasName",
          "description": "The alias for the directory. If no alias has been created for the directory, the alias is the directory identifier, such as <code>d-XXXXXXXXXX</code>."
        },
        "ConnectSettings": {
          "$ref": "#/definitions/DirectoryConnectSettingsDescription",
          "description": "A <a>DirectoryConnectSettingsDescription</a> object that contains additional information about an AD Connector directory. This member is only present if the directory is an AD Connector directory."
        },
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "The textual description for the directory."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory identifier."
        },
        "DnsIpAddrs": {
          "$ref": "#/definitions/DnsIpAddrs",
          "description": "The IP addresses of the DNS servers for the directory. For a Simple AD or Microsoft AD directory, these are the IP addresses of the Simple AD or Microsoft AD directory servers. For an AD Connector directory, these are the IP addresses of the DNS servers or domain controllers in the on-premises directory to which the AD Connector is connected."
        },
        "LaunchTime": {
          "$ref": "#/definitions/LaunchTime",
          "description": "Specifies when the directory was created."
        },
        "Name": {
          "$ref": "#/definitions/DirectoryName",
          "description": "The fully-qualified name of the directory."
        },
        "RadiusSettings": {
          "$ref": "#/definitions/RadiusSettings",
          "description": "A <a>RadiusSettings</a> object that contains information about the RADIUS server configured for this directory."
        },
        "RadiusStatus": {
          "$ref": "#/definitions/RadiusStatus",
          "description": "The status of the RADIUS MFA server connection."
        },
        "ShortName": {
          "$ref": "#/definitions/DirectoryShortName",
          "description": "The short name of the directory."
        },
        "Size": {
          "$ref": "#/definitions/DirectorySize",
          "description": "The directory size."
        },
        "SsoEnabled": {
          "$ref": "#/definitions/SsoEnabled",
          "description": "Indicates if single-sign on is enabled for the directory. For more information, see <a>EnableSso</a> and <a>DisableSso</a>."
        },
        "Stage": {
          "$ref": "#/definitions/DirectoryStage",
          "description": "The current stage of the directory."
        },
        "StageLastUpdatedDateTime": {
          "$ref": "#/definitions/LastUpdatedDateTime",
          "description": "The date and time that the stage was last updated."
        },
        "StageReason": {
          "$ref": "#/definitions/StageReason",
          "description": "Additional information about the directory stage."
        },
        "Type": {
          "$ref": "#/definitions/DirectoryType",
          "description": "The directory size."
        },
        "VpcSettings": {
          "$ref": "#/definitions/DirectoryVpcSettingsDescription",
          "description": "A <a>DirectoryVpcSettingsDescription</a> object that contains additional information about a directory. This member is only present if the directory is a Simple AD or Managed AD directory."
        }
      },
      "type": "object",
      "title": "DirectoryDescription"
    },
    "DirectoryDescriptions": {
      "description": "A list of directory descriptions.",
      "items": {
        "$ref": "#/definitions/DirectoryDescription"
      },
      "type": "array",
      "title": "DirectoryDescriptions"
    },
    "DirectoryId": {
      "pattern": "^d-[0-9a-f]{10}$",
      "type": "string",
      "title": "DirectoryId"
    },
    "DirectoryIds": {
      "description": "A list of directory identifiers.",
      "items": {
        "$ref": "#/definitions/DirectoryId"
      },
      "type": "array",
      "title": "DirectoryIds"
    },
    "DirectoryLimitExceededException": {
      "description": "The maximum number of directories in the region has been reached. You can use the <a>GetDirectoryLimits</a> operation to determine your directory limits in the region.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "DirectoryLimitExceededException"
    },
    "DirectoryLimits": {
      "description": "Contains directory limit information for a region.",
      "properties": {
        "CloudOnlyDirectoriesCurrentCount": {
          "$ref": "#/definitions/Limit",
          "description": "The current number of cloud directories in the region."
        },
        "CloudOnlyDirectoriesLimit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of cloud directories allowed in the region."
        },
        "CloudOnlyDirectoriesLimitReached": {
          "$ref": "#/definitions/CloudOnlyDirectoriesLimitReached",
          "description": "Indicates if the cloud directory limit has been reached."
        },
        "CloudOnlyMicrosoftADCurrentCount": {
          "$ref": "#/definitions/Limit",
          "description": "The current number of Microsoft AD directories in the region."
        },
        "CloudOnlyMicrosoftADLimit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of Microsoft AD directories allowed in the region."
        },
        "CloudOnlyMicrosoftADLimitReached": {
          "$ref": "#/definitions/CloudOnlyDirectoriesLimitReached",
          "description": "Indicates if the Microsoft AD directory limit has been reached."
        },
        "ConnectedDirectoriesCurrentCount": {
          "$ref": "#/definitions/Limit",
          "description": "The current number of connected directories in the region."
        },
        "ConnectedDirectoriesLimit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of connected directories allowed in the region."
        },
        "ConnectedDirectoriesLimitReached": {
          "$ref": "#/definitions/ConnectedDirectoriesLimitReached",
          "description": "Indicates if the connected directory limit has been reached."
        }
      },
      "type": "object",
      "title": "DirectoryLimits"
    },
    "DirectoryName": {
      "pattern": "^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+$",
      "type": "string",
      "title": "DirectoryName"
    },
    "DirectoryShortName": {
      "pattern": "^[^\\\\/:*?\\\"\\<\\>|.]+[^\\\\/:*?\\\"<>|]*$",
      "type": "string",
      "title": "DirectoryShortName"
    },
    "DirectorySize": {
      "enum": [
        "Small",
        "Large"
      ],
      "type": "string",
      "title": "DirectorySize"
    },
    "DirectoryStage": {
      "enum": [
        "Requested",
        "Creating",
        "Created",
        "Active",
        "Inoperable",
        "Impaired",
        "Restoring",
        "RestoreFailed",
        "Deleting",
        "Deleted",
        "Failed"
      ],
      "type": "string",
      "title": "DirectoryStage"
    },
    "DirectoryType": {
      "enum": [
        "SimpleAD",
        "ADConnector",
        "MicrosoftAD"
      ],
      "type": "string",
      "title": "DirectoryType"
    },
    "DirectoryUnavailableException": {
      "description": "The specified directory is unavailable or could not be found.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "DirectoryUnavailableException"
    },
    "DirectoryVpcSettings": {
      "description": "Contains VPC information for the <a>CreateDirectory</a> or <a>CreateMicrosoftAD</a> operation.",
      "properties": {
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIds",
          "description": "The identifiers of the subnets for the directory servers. The two subnets must be in different Availability Zones. AWS Directory Service creates a directory server and a DNS server in each of these subnets."
        },
        "VpcId": {
          "$ref": "#/definitions/VpcId",
          "description": "The identifier of the VPC in which to create the directory."
        }
      },
      "required": [
        "VpcId",
        "SubnetIds"
      ],
      "type": "object",
      "title": "DirectoryVpcSettings"
    },
    "DirectoryVpcSettingsDescription": {
      "description": "Contains information about the directory.",
      "properties": {
        "AvailabilityZones": {
          "$ref": "#/definitions/AvailabilityZones",
          "description": "The list of Availability Zones that the directory is in."
        },
        "SecurityGroupId": {
          "$ref": "#/definitions/SecurityGroupId",
          "description": "The security group identifier for the directory. If the directory was created before 8/1/2014, this is the identifier of the directory members security group that was created when the directory was created. If the directory was created after this date, this value is null."
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIds",
          "description": "The identifiers of the subnets for the directory servers."
        },
        "VpcId": {
          "$ref": "#/definitions/VpcId",
          "description": "The identifier of the VPC that the directory is in."
        }
      },
      "type": "object",
      "title": "DirectoryVpcSettingsDescription"
    },
    "DisableRadiusRequest": {
      "description": "Contains the inputs for the <a>DisableRadius</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which to disable MFA."
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "DisableRadiusRequest"
    },
    "DisableRadiusResult": {
      "description": "Contains the results of the <a>DisableRadius</a> operation.",
      "properties": {},
      "type": "object",
      "title": "DisableRadiusResult"
    },
    "DisableSsoRequest": {
      "description": "Contains the inputs for the <a>DisableSso</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which to disable single-sign on."
        },
        "Password": {
          "$ref": "#/definitions/ConnectPassword",
          "description": "The password of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter."
        },
        "UserName": {
          "$ref": "#/definitions/UserName",
          "description": "<p>The username of an alternate account to use to disable single-sign on. This is only used for AD Connector directories. This account must have privileges to remove a service principal name.</p> <p>If the AD Connector service account does not have privileges to remove a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to disable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>"
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "DisableSsoRequest"
    },
    "DisableSsoResult": {
      "description": "Contains the results of the <a>DisableSso</a> operation.",
      "properties": {},
      "type": "object",
      "title": "DisableSsoResult"
    },
    "DnsIpAddrs": {
      "items": {
        "$ref": "#/definitions/IpAddr"
      },
      "type": "array",
      "title": "DnsIpAddrs"
    },
    "EnableRadiusRequest": {
      "description": "Contains the inputs for the <a>EnableRadius</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which to enable MFA."
        },
        "RadiusSettings": {
          "$ref": "#/definitions/RadiusSettings",
          "description": "A <a>RadiusSettings</a> object that contains information about the RADIUS server."
        }
      },
      "required": [
        "DirectoryId",
        "RadiusSettings"
      ],
      "type": "object",
      "title": "EnableRadiusRequest"
    },
    "EnableRadiusResult": {
      "description": "Contains the results of the <a>EnableRadius</a> operation.",
      "properties": {},
      "type": "object",
      "title": "EnableRadiusResult"
    },
    "EnableSsoRequest": {
      "description": "Contains the inputs for the <a>EnableSso</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which to enable single-sign on."
        },
        "Password": {
          "$ref": "#/definitions/ConnectPassword",
          "description": "The password of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. For more information, see the <i>UserName</i> parameter."
        },
        "UserName": {
          "$ref": "#/definitions/UserName",
          "description": "<p>The username of an alternate account to use to enable single-sign on. This is only used for AD Connector directories. This account must have privileges to add a service principal name.</p> <p>If the AD Connector service account does not have privileges to add a service principal name, you can specify an alternate account with the <i>UserName</i> and <i>Password</i> parameters. These credentials are only used to enable single sign-on and are not stored by the service. The AD Connector service account is not changed.</p>"
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "EnableSsoRequest"
    },
    "EnableSsoResult": {
      "description": "Contains the results of the <a>EnableSso</a> operation.",
      "properties": {},
      "type": "object",
      "title": "EnableSsoResult"
    },
    "EndDateTime": {
      "format": "date-time",
      "type": "string",
      "title": "EndDateTime"
    },
    "EntityAlreadyExistsException": {
      "description": "The specified entity already exists.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "EntityAlreadyExistsException"
    },
    "EntityDoesNotExistException": {
      "description": "The specified entity could not be found.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "EntityDoesNotExistException"
    },
    "EventTopic": {
      "description": "Information about SNS topic and AWS Directory Service directory associations.",
      "properties": {
        "CreatedDateTime": {
          "$ref": "#/definitions/CreatedDateTime",
          "description": "The date and time of when you associated your directory with the SNS topic."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The Directory ID of an AWS Directory Service directory that will publish status messages to an SNS topic."
        },
        "Status": {
          "$ref": "#/definitions/TopicStatus",
          "description": "The topic registration status."
        },
        "TopicArn": {
          "$ref": "#/definitions/TopicArn",
          "description": "The SNS topic ARN (Amazon Resource Name)."
        },
        "TopicName": {
          "$ref": "#/definitions/TopicName",
          "description": "The name of an AWS SNS topic the receives status messages from the directory."
        }
      },
      "type": "object",
      "title": "EventTopic"
    },
    "EventTopics": {
      "items": {
        "$ref": "#/definitions/EventTopic"
      },
      "type": "array",
      "title": "EventTopics"
    },
    "ExceptionMessage": {
      "description": "The descriptive message for the exception.",
      "type": "string",
      "title": "ExceptionMessage"
    },
    "GetDirectoryLimitsRequest": {
      "description": "Contains the inputs for the <a>GetDirectoryLimits</a> operation.",
      "properties": {},
      "type": "object",
      "title": "GetDirectoryLimitsRequest"
    },
    "GetDirectoryLimitsResult": {
      "description": "Contains the results of the <a>GetDirectoryLimits</a> operation.",
      "properties": {
        "DirectoryLimits": {
          "$ref": "#/definitions/DirectoryLimits",
          "description": "A <a>DirectoryLimits</a> object that contains the directory limits for the current region."
        }
      },
      "type": "object",
      "title": "GetDirectoryLimitsResult"
    },
    "GetSnapshotLimitsRequest": {
      "description": "Contains the inputs for the <a>GetSnapshotLimits</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "Contains the identifier of the directory to obtain the limits for."
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "GetSnapshotLimitsRequest"
    },
    "GetSnapshotLimitsResult": {
      "description": "Contains the results of the <a>GetSnapshotLimits</a> operation.",
      "properties": {
        "SnapshotLimits": {
          "$ref": "#/definitions/SnapshotLimits",
          "description": "A <a>SnapshotLimits</a> object that contains the manual snapshot limits for the specified directory."
        }
      },
      "type": "object",
      "title": "GetSnapshotLimitsResult"
    },
    "InsufficientPermissionsException": {
      "description": "The account does not have sufficient permission to perform the operation.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "InsufficientPermissionsException"
    },
    "InvalidNextTokenException": {
      "description": "The <i>NextToken</i> value is not valid.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "InvalidNextTokenException"
    },
    "InvalidParameterException": {
      "description": "One or more parameters are not valid.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "InvalidParameterException"
    },
    "IpAddr": {
      "pattern": "^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$",
      "type": "string",
      "title": "IpAddr"
    },
    "IpAddrs": {
      "items": {
        "$ref": "#/definitions/IpAddr"
      },
      "type": "array",
      "title": "IpAddrs"
    },
    "IpRoute": {
      "description": "IP address block. This is often the address block of the DNS server used for your on-premises domain. ",
      "properties": {
        "CidrIp": {
          "$ref": "#/definitions/CidrIp",
          "description": "IP address block using CIDR format, for example 10.0.0.0/24. This is often the address block of the DNS server used for your on-premises domain. For a single IP address use a CIDR address block with /32. For example 10.0.0.0/32."
        },
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "Description of the address block."
        }
      },
      "type": "object",
      "title": "IpRoute"
    },
    "IpRouteInfo": {
      "description": "Information about one or more IP address blocks.",
      "properties": {
        "AddedDateTime": {
          "$ref": "#/definitions/AddedDateTime",
          "description": "The date and time the address block was added to the directory."
        },
        "CidrIp": {
          "$ref": "#/definitions/CidrIp",
          "description": "IP address block in the <a>IpRoute</a>."
        },
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "Description of the <a>IpRouteInfo</a>."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "Identifier (ID) of the directory associated with the IP addresses."
        },
        "IpRouteStatusMsg": {
          "$ref": "#/definitions/IpRouteStatusMsg",
          "description": "The status of the IP address block."
        },
        "IpRouteStatusReason": {
          "$ref": "#/definitions/IpRouteStatusReason",
          "description": "The reason for the IpRouteStatusMsg."
        }
      },
      "type": "object",
      "title": "IpRouteInfo"
    },
    "IpRouteLimitExceededException": {
      "description": "The maximum allowed number of IP addresses was exceeded. The default limit is 100 IP address blocks.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "IpRouteLimitExceededException"
    },
    "IpRouteStatusMsg": {
      "enum": [
        "Adding",
        "Added",
        "Removing",
        "Removed",
        "AddFailed",
        "RemoveFailed"
      ],
      "type": "string",
      "title": "IpRouteStatusMsg"
    },
    "IpRouteStatusReason": {
      "type": "string",
      "title": "IpRouteStatusReason"
    },
    "IpRoutes": {
      "items": {
        "$ref": "#/definitions/IpRoute"
      },
      "type": "array",
      "title": "IpRoutes"
    },
    "IpRoutesInfo": {
      "items": {
        "$ref": "#/definitions/IpRouteInfo"
      },
      "type": "array",
      "title": "IpRoutesInfo"
    },
    "LastUpdatedDateTime": {
      "format": "date-time",
      "type": "string",
      "title": "LastUpdatedDateTime"
    },
    "LaunchTime": {
      "format": "date-time",
      "type": "string",
      "title": "LaunchTime"
    },
    "LdifContent": {
      "maxLength": 500000,
      "minLength": 1,
      "type": "string",
      "title": "LdifContent"
    },
    "Limit": {
      "minimum": 0,
      "type": "integer",
      "title": "Limit"
    },
    "ListIpRoutesRequest": {
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "Identifier (ID) of the directory for which you want to retrieve the IP addresses."
        },
        "Limit": {
          "$ref": "#/definitions/Limit",
          "description": "Maximum number of items to return. If this value is zero, the maximum number of items is specified by the limitations of the operation."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The <i>ListIpRoutes.NextToken</i> value from a previous call to <a>ListIpRoutes</a>. Pass null if this is the first call."
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "ListIpRoutesRequest"
    },
    "ListIpRoutesResult": {
      "properties": {
        "IpRoutesInfo": {
          "$ref": "#/definitions/IpRoutesInfo",
          "description": "A list of <a>IpRoute</a>s."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If not null, more results are available. Pass this value for the <i>NextToken</i> parameter in a subsequent call to <a>ListIpRoutes</a> to retrieve the next set of items."
        }
      },
      "type": "object",
      "title": "ListIpRoutesResult"
    },
    "ListSchemaExtensionsRequest": {
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory from which to retrieve the schema extension information."
        },
        "Limit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of items to return."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The <code>ListSchemaExtensions.NextToken</code> value from a previous call to <code>ListSchemaExtensions</code>. Pass null if this is the first call."
        }
      },
      "required": [
        "DirectoryId"
      ],
      "type": "object",
      "title": "ListSchemaExtensionsRequest"
    },
    "ListSchemaExtensionsResult": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If not null, more results are available. Pass this value for the <code>NextToken</code> parameter in a subsequent call to <code>ListSchemaExtensions</code> to retrieve the next set of items."
        },
        "SchemaExtensionsInfo": {
          "$ref": "#/definitions/SchemaExtensionsInfo",
          "description": "Information about the schema extensions applied to the directory."
        }
      },
      "type": "object",
      "title": "ListSchemaExtensionsResult"
    },
    "ListTagsForResourceRequest": {
      "properties": {
        "Limit": {
          "$ref": "#/definitions/Limit",
          "description": "Reserved for future use."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "Reserved for future use."
        },
        "ResourceId": {
          "$ref": "#/definitions/ResourceId",
          "description": "Identifier (ID) of the directory for which you want to retrieve tags."
        }
      },
      "required": [
        "ResourceId"
      ],
      "type": "object",
      "title": "ListTagsForResourceRequest"
    },
    "ListTagsForResourceResult": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "Reserved for future use."
        },
        "Tags": {
          "$ref": "#/definitions/Tags",
          "description": "List of tags returned by the ListTagsForResource operation."
        }
      },
      "type": "object",
      "title": "ListTagsForResourceResult"
    },
    "ManualSnapshotsLimitReached": {
      "type": "boolean",
      "title": "ManualSnapshotsLimitReached"
    },
    "NextToken": {
      "type": "string",
      "title": "NextToken"
    },
    "OrganizationalUnitDN": {
      "maxLength": 2000,
      "minLength": 1,
      "type": "string",
      "title": "OrganizationalUnitDN"
    },
    "Password": {
      "format": "password",
      "pattern": "(?=^.{8,64}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9\\s])(?=.*[a-z])|(?=.*[^A-Za-z0-9\\s])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9\\s]))^.*",
      "type": "string",
      "title": "Password"
    },
    "PortNumber": {
      "maximum": 65535,
      "minimum": 1025,
      "type": "integer",
      "title": "PortNumber"
    },
    "RadiusAuthenticationProtocol": {
      "enum": [
        "PAP",
        "CHAP",
        "MS-CHAPv1",
        "MS-CHAPv2"
      ],
      "type": "string",
      "title": "RadiusAuthenticationProtocol"
    },
    "RadiusDisplayLabel": {
      "maxLength": 64,
      "minLength": 1,
      "type": "string",
      "title": "RadiusDisplayLabel"
    },
    "RadiusRetries": {
      "maximum": 10,
      "minimum": 0,
      "type": "integer",
      "title": "RadiusRetries"
    },
    "RadiusSettings": {
      "description": "Contains information about a Remote Authentication Dial In User Service (RADIUS) server.",
      "properties": {
        "AuthenticationProtocol": {
          "$ref": "#/definitions/RadiusAuthenticationProtocol",
          "description": "The protocol specified for your RADIUS endpoints."
        },
        "DisplayLabel": {
          "$ref": "#/definitions/RadiusDisplayLabel",
          "description": "Not currently used."
        },
        "RadiusPort": {
          "$ref": "#/definitions/PortNumber",
          "description": "The port that your RADIUS server is using for communications. Your on-premises network must allow inbound traffic over this port from the AWS Directory Service servers."
        },
        "RadiusRetries": {
          "$ref": "#/definitions/RadiusRetries",
          "description": "The maximum number of times that communication with the RADIUS server is attempted."
        },
        "RadiusServers": {
          "$ref": "#/definitions/Servers",
          "description": "An array of strings that contains the IP addresses of the RADIUS server endpoints, or the IP addresses of your RADIUS server load balancer."
        },
        "RadiusTimeout": {
          "$ref": "#/definitions/RadiusTimeout",
          "description": "The amount of time, in seconds, to wait for the RADIUS server to respond."
        },
        "SharedSecret": {
          "$ref": "#/definitions/RadiusSharedSecret",
          "description": "Not currently used."
        },
        "UseSameUsername": {
          "$ref": "#/definitions/UseSameUsername",
          "description": "Not currently used."
        }
      },
      "type": "object",
      "title": "RadiusSettings"
    },
    "RadiusSharedSecret": {
      "format": "password",
      "maxLength": 512,
      "minLength": 8,
      "type": "string",
      "title": "RadiusSharedSecret"
    },
    "RadiusStatus": {
      "enum": [
        "Creating",
        "Completed",
        "Failed"
      ],
      "type": "string",
      "title": "RadiusStatus"
    },
    "RadiusTimeout": {
      "maximum": 20,
      "minimum": 1,
      "type": "integer",
      "title": "RadiusTimeout"
    },
    "RegisterEventTopicRequest": {
      "description": "Registers a new event topic.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The Directory ID that will publish status messages to the SNS topic."
        },
        "TopicName": {
          "$ref": "#/definitions/TopicName",
          "description": "The SNS topic name to which the directory will publish status messages. This SNS topic must be in the same region as the specified Directory ID."
        }
      },
      "required": [
        "DirectoryId",
        "TopicName"
      ],
      "type": "object",
      "title": "RegisterEventTopicRequest"
    },
    "RegisterEventTopicResult": {
      "description": "The result of a RegisterEventTopic request.",
      "properties": {},
      "type": "object",
      "title": "RegisterEventTopicResult"
    },
    "RemoteDomainName": {
      "pattern": "^([a-zA-Z0-9]+[\\\\.-])+([a-zA-Z0-9])+[.]?$",
      "type": "string",
      "title": "RemoteDomainName"
    },
    "RemoteDomainNames": {
      "items": {
        "$ref": "#/definitions/RemoteDomainName"
      },
      "type": "array",
      "title": "RemoteDomainNames"
    },
    "RemoveIpRoutesRequest": {
      "properties": {
        "CidrIps": {
          "$ref": "#/definitions/CidrIps",
          "description": "IP address blocks that you want to remove."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "Identifier (ID) of the directory from which you want to remove the IP addresses."
        }
      },
      "required": [
        "DirectoryId",
        "CidrIps"
      ],
      "type": "object",
      "title": "RemoveIpRoutesRequest"
    },
    "RemoveIpRoutesResult": {
      "properties": {},
      "type": "object",
      "title": "RemoveIpRoutesResult"
    },
    "RemoveTagsFromResourceRequest": {
      "properties": {
        "ResourceId": {
          "$ref": "#/definitions/ResourceId",
          "description": "Identifier (ID) of the directory from which to remove the tag."
        },
        "TagKeys": {
          "$ref": "#/definitions/TagKeys",
          "description": "The tag key (name) of the tag to be removed."
        }
      },
      "required": [
        "ResourceId",
        "TagKeys"
      ],
      "type": "object",
      "title": "RemoveTagsFromResourceRequest"
    },
    "RemoveTagsFromResourceResult": {
      "properties": {},
      "type": "object",
      "title": "RemoveTagsFromResourceResult"
    },
    "ReplicationScope": {
      "enum": [
        "Domain"
      ],
      "type": "string",
      "title": "ReplicationScope"
    },
    "RequestId": {
      "description": "The AWS request identifier.",
      "pattern": "^([A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12})$",
      "type": "string",
      "title": "RequestId"
    },
    "ResourceId": {
      "pattern": "^[d]-[0-9a-f]{10}$",
      "type": "string",
      "title": "ResourceId"
    },
    "RestoreFromSnapshotRequest": {
      "description": "An object representing the inputs for the <a>RestoreFromSnapshot</a> operation.",
      "properties": {
        "SnapshotId": {
          "$ref": "#/definitions/SnapshotId",
          "description": "The identifier of the snapshot to restore from."
        }
      },
      "required": [
        "SnapshotId"
      ],
      "type": "object",
      "title": "RestoreFromSnapshotRequest"
    },
    "RestoreFromSnapshotResult": {
      "description": "Contains the results of the <a>RestoreFromSnapshot</a> operation.",
      "properties": {},
      "type": "object",
      "title": "RestoreFromSnapshotResult"
    },
    "SID": {
      "maxLength": 256,
      "minLength": 1,
      "pattern": "[&\\w+-.@]+",
      "type": "string",
      "title": "SID"
    },
    "SchemaExtensionId": {
      "pattern": "^e-[0-9a-f]{10}$",
      "type": "string",
      "title": "SchemaExtensionId"
    },
    "SchemaExtensionInfo": {
      "description": "Information about a schema extension.",
      "properties": {
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "A description of the schema extension."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory to which the schema extension is applied."
        },
        "EndDateTime": {
          "$ref": "#/definitions/EndDateTime",
          "description": "The date and time that the schema extension was completed."
        },
        "SchemaExtensionId": {
          "$ref": "#/definitions/SchemaExtensionId",
          "description": "The identifier of the schema extension."
        },
        "SchemaExtensionStatus": {
          "$ref": "#/definitions/SchemaExtensionStatus",
          "description": "The current status of the schema extension."
        },
        "SchemaExtensionStatusReason": {
          "$ref": "#/definitions/SchemaExtensionStatusReason",
          "description": "The reason for the <code>SchemaExtensionStatus</code>."
        },
        "StartDateTime": {
          "$ref": "#/definitions/StartDateTime",
          "description": "The date and time that the schema extension started being applied to the directory."
        }
      },
      "type": "object",
      "title": "SchemaExtensionInfo"
    },
    "SchemaExtensionStatus": {
      "enum": [
        "Initializing",
        "CreatingSnapshot",
        "UpdatingSchema",
        "Replicating",
        "CancelInProgress",
        "RollbackInProgress",
        "Cancelled",
        "Failed",
        "Completed"
      ],
      "type": "string",
      "title": "SchemaExtensionStatus"
    },
    "SchemaExtensionStatusReason": {
      "type": "string",
      "title": "SchemaExtensionStatusReason"
    },
    "SchemaExtensionsInfo": {
      "items": {
        "$ref": "#/definitions/SchemaExtensionInfo"
      },
      "type": "array",
      "title": "SchemaExtensionsInfo"
    },
    "SecurityGroupId": {
      "pattern": "^(sg-[0-9a-f]{8})$",
      "type": "string",
      "title": "SecurityGroupId"
    },
    "Server": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string",
      "title": "Server"
    },
    "Servers": {
      "items": {
        "$ref": "#/definitions/Server"
      },
      "type": "array",
      "title": "Servers"
    },
    "ServiceException": {
      "description": "An exception has occurred in AWS Directory Service.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "ServiceException"
    },
    "Snapshot": {
      "description": "Describes a directory snapshot.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory identifier."
        },
        "Name": {
          "$ref": "#/definitions/SnapshotName",
          "description": "The descriptive name of the snapshot."
        },
        "SnapshotId": {
          "$ref": "#/definitions/SnapshotId",
          "description": "The snapshot identifier."
        },
        "StartTime": {
          "$ref": "#/definitions/StartTime",
          "description": "The date and time that the snapshot was taken."
        },
        "Status": {
          "$ref": "#/definitions/SnapshotStatus",
          "description": "The snapshot status."
        },
        "Type": {
          "$ref": "#/definitions/SnapshotType",
          "description": "The snapshot type."
        }
      },
      "type": "object",
      "title": "Snapshot"
    },
    "SnapshotId": {
      "pattern": "^s-[0-9a-f]{10}$",
      "type": "string",
      "title": "SnapshotId"
    },
    "SnapshotIds": {
      "description": "A list of directory snapshot identifiers.",
      "items": {
        "$ref": "#/definitions/SnapshotId"
      },
      "type": "array",
      "title": "SnapshotIds"
    },
    "SnapshotLimitExceededException": {
      "description": "The maximum number of manual snapshots for the directory has been reached. You can use the <a>GetSnapshotLimits</a> operation to determine the snapshot limits for a directory.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "SnapshotLimitExceededException"
    },
    "SnapshotLimits": {
      "description": "Contains manual snapshot limit information for a directory.",
      "properties": {
        "ManualSnapshotsCurrentCount": {
          "$ref": "#/definitions/Limit",
          "description": "The current number of manual snapshots of the directory."
        },
        "ManualSnapshotsLimit": {
          "$ref": "#/definitions/Limit",
          "description": "The maximum number of manual snapshots allowed."
        },
        "ManualSnapshotsLimitReached": {
          "$ref": "#/definitions/ManualSnapshotsLimitReached",
          "description": "Indicates if the manual snapshot limit has been reached."
        }
      },
      "type": "object",
      "title": "SnapshotLimits"
    },
    "SnapshotName": {
      "maxLength": 128,
      "minLength": 0,
      "pattern": "^([a-zA-Z0-9_])[\\\\a-zA-Z0-9_@#%*+=:?./!\\s-]*$",
      "type": "string",
      "title": "SnapshotName"
    },
    "SnapshotStatus": {
      "enum": [
        "Creating",
        "Completed",
        "Failed"
      ],
      "type": "string",
      "title": "SnapshotStatus"
    },
    "SnapshotType": {
      "enum": [
        "Auto",
        "Manual"
      ],
      "type": "string",
      "title": "SnapshotType"
    },
    "Snapshots": {
      "description": "A list of descriptions of directory snapshots.",
      "items": {
        "$ref": "#/definitions/Snapshot"
      },
      "type": "array",
      "title": "Snapshots"
    },
    "SsoEnabled": {
      "type": "boolean",
      "title": "SsoEnabled"
    },
    "StageReason": {
      "type": "string",
      "title": "StageReason"
    },
    "StartDateTime": {
      "format": "date-time",
      "type": "string",
      "title": "StartDateTime"
    },
    "StartSchemaExtensionRequest": {
      "properties": {
        "CreateSnapshotBeforeSchemaExtension": {
          "$ref": "#/definitions/CreateSnapshotBeforeSchemaExtension",
          "description": "If true, creates a snapshot of the directory before applying the schema extension."
        },
        "Description": {
          "$ref": "#/definitions/Description",
          "description": "A description of the schema extension."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which the schema extension will be applied to."
        },
        "LdifContent": {
          "$ref": "#/definitions/LdifContent",
          "description": "The LDIF file represented as a string. To construct the LdifContent string, precede each line as it would be formatted in an ldif file with \\n. See the example request below for more details. The file size can be no larger than 1MB."
        }
      },
      "required": [
        "DirectoryId",
        "CreateSnapshotBeforeSchemaExtension",
        "LdifContent",
        "Description"
      ],
      "type": "object",
      "title": "StartSchemaExtensionRequest"
    },
    "StartSchemaExtensionResult": {
      "properties": {
        "SchemaExtensionId": {
          "$ref": "#/definitions/SchemaExtensionId",
          "description": "The identifier of the schema extension that will be applied."
        }
      },
      "type": "object",
      "title": "StartSchemaExtensionResult"
    },
    "StartTime": {
      "format": "date-time",
      "type": "string",
      "title": "StartTime"
    },
    "StateLastUpdatedDateTime": {
      "format": "date-time",
      "type": "string",
      "title": "StateLastUpdatedDateTime"
    },
    "SubnetId": {
      "pattern": "^(subnet-[0-9a-f]{8})$",
      "type": "string",
      "title": "SubnetId"
    },
    "SubnetIds": {
      "items": {
        "$ref": "#/definitions/SubnetId"
      },
      "type": "array",
      "title": "SubnetIds"
    },
    "Tag": {
      "description": "Metadata assigned to a directory consisting of a key-value pair.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/TagKey",
          "description": "Required name of the tag. The string value can be Unicode characters and cannot be prefixed with \"aws:\". The string can contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
        },
        "Value": {
          "$ref": "#/definitions/TagValue",
          "description": "The optional value of the tag. The string value can be Unicode characters. The string can contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object",
      "title": "Tag"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string",
      "title": "TagKey"
    },
    "TagKeys": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "type": "array",
      "title": "TagKeys"
    },
    "TagLimitExceededException": {
      "description": "The maximum allowed number of tags was exceeded.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "TagLimitExceededException"
    },
    "TagValue": {
      "maxLength": 256,
      "minLength": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string",
      "title": "TagValue"
    },
    "Tags": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array",
      "title": "Tags"
    },
    "TopicArn": {
      "type": "string",
      "title": "TopicArn"
    },
    "TopicName": {
      "maxLength": 256,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9_-]+",
      "type": "string",
      "title": "TopicName"
    },
    "TopicNames": {
      "items": {
        "$ref": "#/definitions/TopicName"
      },
      "type": "array",
      "title": "TopicNames"
    },
    "TopicStatus": {
      "enum": [
        "Registered",
        "Topic not found",
        "Failed",
        "Deleted"
      ],
      "type": "string",
      "title": "TopicStatus"
    },
    "Trust": {
      "description": "Describes a trust relationship between an Microsoft AD in the AWS cloud and an external domain.",
      "properties": {
        "CreatedDateTime": {
          "$ref": "#/definitions/CreatedDateTime",
          "description": "The date and time that the trust relationship was created."
        },
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The Directory ID of the AWS directory involved in the trust relationship."
        },
        "LastUpdatedDateTime": {
          "$ref": "#/definitions/LastUpdatedDateTime",
          "description": "The date and time that the trust relationship was last updated."
        },
        "RemoteDomainName": {
          "$ref": "#/definitions/RemoteDomainName",
          "description": "The Fully Qualified Domain Name (FQDN) of the external domain involved in the trust relationship."
        },
        "StateLastUpdatedDateTime": {
          "$ref": "#/definitions/StateLastUpdatedDateTime",
          "description": "The date and time that the TrustState was last updated."
        },
        "TrustDirection": {
          "$ref": "#/definitions/TrustDirection",
          "description": "The trust relationship direction."
        },
        "TrustId": {
          "$ref": "#/definitions/TrustId",
          "description": "The unique ID of the trust relationship."
        },
        "TrustState": {
          "$ref": "#/definitions/TrustState",
          "description": "The trust relationship state."
        },
        "TrustStateReason": {
          "$ref": "#/definitions/TrustStateReason",
          "description": "The reason for the TrustState."
        },
        "TrustType": {
          "$ref": "#/definitions/TrustType",
          "description": "The trust relationship type."
        }
      },
      "type": "object",
      "title": "Trust"
    },
    "TrustDirection": {
      "enum": [
        "One-Way: Outgoing",
        "One-Way: Incoming",
        "Two-Way"
      ],
      "type": "string",
      "title": "TrustDirection"
    },
    "TrustId": {
      "pattern": "^t-[0-9a-f]{10}$",
      "type": "string",
      "title": "TrustId"
    },
    "TrustIds": {
      "items": {
        "$ref": "#/definitions/TrustId"
      },
      "type": "array",
      "title": "TrustIds"
    },
    "TrustPassword": {
      "format": "password",
      "maxLength": 128,
      "minLength": 1,
      "type": "string",
      "title": "TrustPassword"
    },
    "TrustState": {
      "enum": [
        "Creating",
        "Created",
        "Verifying",
        "VerifyFailed",
        "Verified",
        "Deleting",
        "Deleted",
        "Failed"
      ],
      "type": "string",
      "title": "TrustState"
    },
    "TrustStateReason": {
      "type": "string",
      "title": "TrustStateReason"
    },
    "TrustType": {
      "enum": [
        "Forest"
      ],
      "type": "string",
      "title": "TrustType"
    },
    "Trusts": {
      "items": {
        "$ref": "#/definitions/Trust"
      },
      "type": "array",
      "title": "Trusts"
    },
    "UnsupportedOperationException": {
      "description": "The operation is not supported.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/ExceptionMessage"
        },
        "RequestId": {
          "$ref": "#/definitions/RequestId"
        }
      },
      "type": "object",
      "title": "UnsupportedOperationException"
    },
    "UpdateConditionalForwarderRequest": {
      "description": "Updates a conditional forwarder.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The directory ID of the AWS directory for which to update the conditional forwarder."
        },
        "DnsIpAddrs": {
          "$ref": "#/definitions/DnsIpAddrs",
          "description": "The updated IP addresses of the remote DNS server associated with the conditional forwarder."
        },
        "RemoteDomainName": {
          "$ref": "#/definitions/RemoteDomainName",
          "description": "The fully qualified domain name (FQDN) of the remote domain with which you will set up a trust relationship."
        }
      },
      "required": [
        "DirectoryId",
        "RemoteDomainName",
        "DnsIpAddrs"
      ],
      "type": "object",
      "title": "UpdateConditionalForwarderRequest"
    },
    "UpdateConditionalForwarderResult": {
      "description": "The result of an UpdateConditionalForwarder request.",
      "properties": {},
      "type": "object",
      "title": "UpdateConditionalForwarderResult"
    },
    "UpdateRadiusRequest": {
      "description": "Contains the inputs for the <a>UpdateRadius</a> operation.",
      "properties": {
        "DirectoryId": {
          "$ref": "#/definitions/DirectoryId",
          "description": "The identifier of the directory for which to update the RADIUS server information."
        },
        "RadiusSettings": {
          "$ref": "#/definitions/RadiusSettings",
          "description": "A <a>RadiusSettings</a> object that contains information about the RADIUS server."
        }
      },
      "required": [
        "DirectoryId",
        "RadiusSettings"
      ],
      "type": "object",
      "title": "UpdateRadiusRequest"
    },
    "UpdateRadiusResult": {
      "description": "Contains the results of the <a>UpdateRadius</a> operation.",
      "properties": {},
      "type": "object",
      "title": "UpdateRadiusResult"
    },
    "UpdateSecurityGroupForDirectoryControllers": {
      "type": "boolean",
      "title": "UpdateSecurityGroupForDirectoryControllers"
    },
    "UseSameUsername": {
      "type": "boolean",
      "title": "UseSameUsername"
    },
    "UserName": {
      "minLength": 1,
      "pattern": "[a-zA-Z0-9._-]+",
      "type": "string",
      "title": "UserName"
    },
    "VerifyTrustRequest": {
      "description": "Initiates the verification of an existing trust relationship between a Microsoft AD in the AWS cloud and an external domain.",
      "properties": {
        "TrustId": {
          "$ref": "#/definitions/TrustId",
          "description": "The unique Trust ID of the trust relationship to verify."
        }
      },
      "required": [
        "TrustId"
      ],
      "type": "object",
      "title": "VerifyTrustRequest"
    },
    "VerifyTrustResult": {
      "description": "Result of a VerifyTrust request.",
      "properties": {
        "TrustId": {
          "$ref": "#/definitions/TrustId",
          "description": "The unique Trust ID of the trust relationship that was verified."
        }
      },
      "type": "object",
      "title": "VerifyTrustResult"
    },
    "VpcId": {
      "pattern": "^(vpc-[0-9a-f]{8})$",
      "type": "string",
      "title": "VpcId"
    }
  },
  "actions": [
    {
      "id": "AddIpRoutes",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/AddIpRoutesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/AddIpRoutesResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "AddTagsToResource",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/AddTagsToResourceRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/AddTagsToResourceResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CancelSchemaExtension",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CancelSchemaExtensionRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CancelSchemaExtensionResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "ConnectDirectory",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ConnectDirectoryRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ConnectDirectoryResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CreateAlias",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateAliasRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateAliasResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CreateComputer",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateComputerRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateComputerResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CreateConditionalForwarder",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateConditionalForwarderRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateConditionalForwarderResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CreateDirectory",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateDirectoryRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateDirectoryResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CreateMicrosoftAD",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateMicrosoftADRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateMicrosoftADResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CreateSnapshot",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateSnapshotRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateSnapshotResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "CreateTrust",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateTrustRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateTrustResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DeleteConditionalForwarder",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteConditionalForwarderRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteConditionalForwarderResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DeleteDirectory",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteDirectoryRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteDirectoryResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DeleteSnapshot",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteSnapshotRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteSnapshotResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DeleteTrust",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteTrustRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteTrustResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DeregisterEventTopic",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeregisterEventTopicRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeregisterEventTopicResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DescribeConditionalForwarders",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeConditionalForwardersRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeConditionalForwardersResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DescribeDirectories",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeDirectoriesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeDirectoriesResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DescribeEventTopics",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEventTopicsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEventTopicsResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DescribeSnapshots",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeSnapshotsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeSnapshotsResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DescribeTrusts",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeTrustsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeTrustsResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DisableRadius",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DisableRadiusRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DisableRadiusResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "DisableSso",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DisableSsoRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DisableSsoResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "EnableRadius",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/EnableRadiusRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/EnableRadiusResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "EnableSso",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/EnableSsoRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/EnableSsoResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "GetDirectoryLimits",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetDirectoryLimitsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetDirectoryLimitsResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "GetSnapshotLimits",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetSnapshotLimitsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetSnapshotLimitsResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "ListIpRoutes",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListIpRoutesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListIpRoutesResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "ListSchemaExtensions",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListSchemaExtensionsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListSchemaExtensionsResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "ListTagsForResource",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListTagsForResourceRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTagsForResourceResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "RegisterEventTopic",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RegisterEventTopicRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RegisterEventTopicResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "RemoveIpRoutes",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RemoveIpRoutesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RemoveIpRoutesResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "RemoveTagsFromResource",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RemoveTagsFromResourceRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RemoveTagsFromResourceResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "RestoreFromSnapshot",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RestoreFromSnapshotRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RestoreFromSnapshotResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "StartSchemaExtension",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StartSchemaExtensionRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StartSchemaExtensionResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "UpdateConditionalForwarder",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateConditionalForwarderRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateConditionalForwarderResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "UpdateRadius",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateRadiusRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateRadiusResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    },
    {
      "id": "VerifyTrust",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/VerifyTrustRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VerifyTrustResult"
      },
      "security": {
        "amazonaws_ds": {
          "integration": "amazonaws_ds"
        }
      }
    }
  ],
  "tags": [
    "cloud",
    "aws"
  ]
}