{
  "id": "google_taskqueue",
  "title": "TaskQueue",
  "description": "Accesses a Google App Engine Pull Task Queue over REST.",
  "security": {
    "google_taskqueue": {
      "integration": "google_taskqueue",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 accessCode authentication",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/taskqueue": "Manage your Tasks and Taskqueues",
          "https://www.googleapis.com/auth/taskqueue.consumer": "Consume Tasks from your Taskqueues"
        },
        "tokenUrl": "https://accounts.google.com/o/oauth2/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/google_taskqueue.png"
  },
  "tags": [
    "google"
  ],
  "definitions": {
    "Task": {
      "properties": {
        "enqueueTimestamp": {
          "description": "Time (in seconds since the epoch) at which the task was enqueued.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "description": "Name of the task.",
          "type": "string"
        },
        "kind": {
          "default": "taskqueues#task",
          "description": "The kind of object returned, in this case set to task.",
          "type": "string"
        },
        "leaseTimestamp": {
          "description": "Time (in seconds since the epoch) at which the task lease will expire. This value is 0 if the task isnt currently leased out to a worker.",
          "format": "int64",
          "type": "string"
        },
        "payloadBase64": {
          "description": "A bag of bytes which is the task payload. The payload on the JSON side is always Base64 encoded.",
          "type": "string"
        },
        "queueName": {
          "description": "Name of the queue that the task is in.",
          "type": "string"
        },
        "retry_count": {
          "description": "The number of leases applied to this task.",
          "format": "int32",
          "type": "integer"
        },
        "tag": {
          "description": "Tag for the task, could be used later to lease tasks grouped by a specific tag.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaskQueue": {
      "properties": {
        "acl": {
          "description": "ACLs that are applicable to this TaskQueue object.",
          "properties": {
            "adminEmails": {
              "description": "Email addresses of users who are \"admins\" of the TaskQueue. This means they can control the queue, eg set ACLs for the queue.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "consumerEmails": {
              "description": "Email addresses of users who can \"consume\" tasks from the TaskQueue. This means they can Dequeue and Delete tasks from the queue.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "producerEmails": {
              "description": "Email addresses of users who can \"produce\" tasks into the TaskQueue. This means they can Insert tasks into the queue.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "id": {
          "description": "Name of the taskqueue.",
          "type": "string"
        },
        "kind": {
          "default": "taskqueues#taskqueue",
          "description": "The kind of REST object returned, in this case taskqueue.",
          "type": "string"
        },
        "maxLeases": {
          "description": "The number of times we should lease out tasks before giving up on them. If unset we lease them out forever until a worker deletes the task.",
          "format": "int32",
          "type": "integer"
        },
        "stats": {
          "description": "Statistics for the TaskQueue object in question.",
          "properties": {
            "leasedLastHour": {
              "description": "Number of tasks leased in the last hour.",
              "format": "int64",
              "type": "string"
            },
            "leasedLastMinute": {
              "description": "Number of tasks leased in the last minute.",
              "format": "int64",
              "type": "string"
            },
            "oldestTask": {
              "description": "The timestamp (in seconds since the epoch) of the oldest unfinished task.",
              "format": "int64",
              "type": "string"
            },
            "totalTasks": {
              "description": "Number of tasks in the queue.",
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "Tasks": {
      "properties": {
        "items": {
          "description": "The actual list of tasks returned as a result of the lease operation.",
          "items": {
            "$ref": "#/definitions/Task"
          },
          "type": "array"
        },
        "kind": {
          "default": "taskqueue#tasks",
          "description": "The kind of object returned, a list of tasks.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Tasks2": {
      "properties": {
        "items": {
          "description": "The actual list of tasks currently active in the TaskQueue.",
          "items": {
            "$ref": "#/definitions/Task"
          },
          "type": "array"
        },
        "kind": {
          "default": "taskqueues#tasks",
          "description": "The kind of object returned, a list of tasks.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "oauthCallback",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "oauthRefresh",
      "title": "",
      "description": "",
      "inputSchema": {},
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "taskqueues.get",
      "title": "taskqueues.get",
      "description": "Get detailed information about a TaskQueue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies."
          },
          "taskqueue": {
            "type": "string",
            "description": "The id of the taskqueue to get the properties of."
          },
          "getStats": {
            "type": "boolean",
            "description": "Whether to get stats. Optional."
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TaskQueue"
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "tasks.list",
      "title": "tasks.list",
      "description": "List Tasks in a TaskQueue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies."
          },
          "taskqueue": {
            "type": "string",
            "description": "The id of the taskqueue to list tasks from."
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Tasks2"
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "tasks.insert",
      "title": "tasks.insert",
      "description": "Insert a new task in a TaskQueue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies"
          },
          "taskqueue": {
            "type": "string",
            "description": "The taskqueue to insert the task into"
          },
          "body": {
            "$ref": "#/definitions/Task"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Task"
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "tasks.lease",
      "title": "tasks.lease",
      "description": "Lease 1 or more tasks from a TaskQueue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies."
          },
          "taskqueue": {
            "type": "string",
            "description": "The taskqueue to lease a task from."
          },
          "numTasks": {
            "type": "integer",
            "description": "The number of tasks to lease."
          },
          "leaseSecs": {
            "type": "integer",
            "description": "The lease in seconds."
          },
          "groupByTag": {
            "type": "boolean",
            "description": "When true, all returned tasks will have the same tag"
          },
          "tag": {
            "type": "string",
            "description": "The tag allowed for tasks in the response. Must only be specified if group_by_tag is true. If group_by_tag is true and tag is not specified the tag will be that of the oldest task by eta, i.e. the first available tag"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue",
          "numTasks",
          "leaseSecs"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Tasks"
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "tasks.delete",
      "title": "tasks.delete",
      "description": "Delete a task from a TaskQueue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies."
          },
          "taskqueue": {
            "type": "string",
            "description": "The taskqueue to delete a task from."
          },
          "task": {
            "type": "string",
            "description": "The id of the task to delete."
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue",
          "task"
        ]
      },
      "outputSchema": {},
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "tasks.get",
      "title": "tasks.get",
      "description": "Get a particular task from a TaskQueue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies."
          },
          "taskqueue": {
            "type": "string",
            "description": "The taskqueue in which the task belongs."
          },
          "task": {
            "type": "string",
            "description": "The task to get properties of."
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue",
          "task"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Task"
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "tasks.patch",
      "title": "tasks.patch",
      "description": "Update tasks that are leased out of a TaskQueue. This method supports patch semantics.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies."
          },
          "taskqueue": {
            "type": "string"
          },
          "task": {
            "type": "string"
          },
          "newLeaseSeconds": {
            "type": "integer",
            "description": "The new lease in seconds."
          },
          "body": {
            "$ref": "#/definitions/Task"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue",
          "task",
          "newLeaseSeconds"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Task"
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    },
    {
      "id": "tasks.update",
      "title": "tasks.update",
      "description": "Update tasks that are leased out of a TaskQueue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The project under which the queue lies."
          },
          "taskqueue": {
            "type": "string"
          },
          "task": {
            "type": "string"
          },
          "newLeaseSeconds": {
            "type": "integer",
            "description": "The new lease in seconds."
          },
          "body": {
            "$ref": "#/definitions/Task"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "project",
          "taskqueue",
          "task",
          "newLeaseSeconds"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Task"
      },
      "security": {
        "google_taskqueue": {
          "integration": "google_taskqueue"
        }
      }
    }
  ]
}