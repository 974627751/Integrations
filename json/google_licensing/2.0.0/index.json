{
  "id": "google_licensing",
  "title": "Enterprise License Manager",
  "description": "Views and manages licenses for your domain.",
  "security": {
    "google_licensing": {
      "integration": "google_licensing",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)"
      },
      "oauth": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 accessCode authentication",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/apps.licensing": "View and manage G Suite licenses for your domain"
        },
        "tokenUrl": "https://accounts.google.com/o/oauth2/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
  },
  "definitions": {
    "LicenseAssignment": {
      "description": "Template for LiscenseAssignment Resource",
      "properties": {
        "etags": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "kind": {
          "default": "licensing#licenseAssignment",
          "description": "Identifies the resource as a LicenseAssignment.",
          "type": "string"
        },
        "productId": {
          "description": "Id of the product.",
          "type": "string"
        },
        "productName": {
          "description": "Display Name of the product.",
          "type": "string"
        },
        "selfLink": {
          "description": "Link to this page.",
          "type": "string"
        },
        "skuId": {
          "description": "Id of the sku of the product.",
          "type": "string"
        },
        "skuName": {
          "description": "Display Name of the sku of the product.",
          "type": "string"
        },
        "userId": {
          "description": "Email id of the user.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LicenseAssignmentInsert": {
      "description": "Template for LicenseAssignment Insert request",
      "properties": {
        "userId": {
          "description": "Email id of the user",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LicenseAssignmentList": {
      "description": "LicesnseAssignment List for a given product/sku for a customer.",
      "properties": {
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "items": {
          "description": "The LicenseAssignments in this page of results.",
          "items": {
            "$ref": "#/definitions/LicenseAssignment"
          },
          "type": "array"
        },
        "kind": {
          "default": "licensing#licenseAssignmentList",
          "description": "Identifies the resource as a collection of LicenseAssignments.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "licenseAssignments.insert",
      "title": "licenseAssignments.insert",
      "description": "Assign License.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Name for product"
          },
          "skuId": {
            "type": "string",
            "description": "Name for sku"
          },
          "body": {
            "$ref": "#/definitions/LicenseAssignmentInsert"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LicenseAssignment"
      },
      "security": {
        "google_licensing": {
          "integration": "google_licensing"
        }
      }
    },
    {
      "id": "licenseAssignments.delete",
      "title": "licenseAssignments.delete",
      "description": "Revoke License.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Name for product"
          },
          "skuId": {
            "type": "string",
            "description": "Name for sku"
          },
          "userId": {
            "type": "string",
            "description": "email id or unique Id of the user"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {},
      "security": {
        "google_licensing": {
          "integration": "google_licensing"
        }
      }
    },
    {
      "id": "licenseAssignments.get",
      "title": "licenseAssignments.get",
      "description": "Get license assignment of a particular product and sku for a user",
      "inputSchema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Name for product"
          },
          "skuId": {
            "type": "string",
            "description": "Name for sku"
          },
          "userId": {
            "type": "string",
            "description": "email id or unique Id of the user"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LicenseAssignment"
      },
      "security": {
        "google_licensing": {
          "integration": "google_licensing"
        }
      }
    },
    {
      "id": "licenseAssignments.patch",
      "title": "licenseAssignments.patch",
      "description": "Assign License. This method supports patch semantics.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Name for product"
          },
          "skuId": {
            "type": "string",
            "description": "Name for sku for which license would be revoked"
          },
          "userId": {
            "type": "string",
            "description": "email id or unique Id of the user"
          },
          "body": {
            "$ref": "#/definitions/LicenseAssignment"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LicenseAssignment"
      },
      "security": {
        "google_licensing": {
          "integration": "google_licensing"
        }
      }
    },
    {
      "id": "licenseAssignments.update",
      "title": "licenseAssignments.update",
      "description": "Assign License.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Name for product"
          },
          "skuId": {
            "type": "string",
            "description": "Name for sku for which license would be revoked"
          },
          "userId": {
            "type": "string",
            "description": "email id or unique Id of the user"
          },
          "body": {
            "$ref": "#/definitions/LicenseAssignment"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LicenseAssignment"
      },
      "security": {
        "google_licensing": {
          "integration": "google_licensing"
        }
      }
    },
    {
      "id": "licenseAssignments.listForProductAndSku",
      "title": "licenseAssignments.listForProductAndSku",
      "description": "List license assignments for given product and sku of the customer.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Name for product"
          },
          "skuId": {
            "type": "string",
            "description": "Name for sku"
          },
          "customerId": {
            "type": "string",
            "description": "CustomerId represents the customer for whom licenseassignments are queried"
          },
          "maxResults": {
            "type": "integer",
            "description": "Maximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.",
            "maximum": 1000,
            "minimum": 1
          },
          "pageToken": {
            "type": "string",
            "description": "Token to fetch the next page.Optional. By default server will return first page"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LicenseAssignmentList"
      },
      "security": {
        "google_licensing": {
          "integration": "google_licensing"
        }
      }
    },
    {
      "id": "licenseAssignments.listForProduct",
      "title": "licenseAssignments.listForProduct",
      "description": "List license assignments for given product of the customer.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "Name for product"
          },
          "customerId": {
            "type": "string",
            "description": "CustomerId represents the customer for whom licenseassignments are queried"
          },
          "maxResults": {
            "type": "integer",
            "description": "Maximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.",
            "maximum": 1000,
            "minimum": 1
          },
          "pageToken": {
            "type": "string",
            "description": "Token to fetch the next page.Optional. By default server will return first page"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LicenseAssignmentList"
      },
      "security": {
        "google_licensing": {
          "integration": "google_licensing"
        }
      }
    }
  ]
}