{
  "id": "google_oauth2",
  "title": "Google OAuth2",
  "description": "Obtains end-user authorization grants for use with other Google APIs.",
  "security": {
    "google_oauth2": {
      "integration": "google_oauth2",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 accessCode authentication",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/plus.login": "Know the list of people in your circles, your age range, and language",
          "https://www.googleapis.com/auth/plus.me": "Know who you are on Google",
          "https://www.googleapis.com/auth/userinfo.email": "View your email address",
          "https://www.googleapis.com/auth/userinfo.profile": "View your basic profile info"
        },
        "tokenUrl": "https://accounts.google.com/o/oauth2/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/google_oauth2.png"
  },
  "tags": [
    "google"
  ],
  "definitions": {
    "Jwk": {
      "properties": {
        "keys": {
          "items": {
            "properties": {
              "alg": {
                "default": "RS256",
                "type": "string"
              },
              "e": {
                "type": "string"
              },
              "kid": {
                "type": "string"
              },
              "kty": {
                "default": "RSA",
                "type": "string"
              },
              "n": {
                "type": "string"
              },
              "use": {
                "default": "sig",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Tokeninfo": {
      "properties": {
        "access_type": {
          "description": "The access type granted with this token. It can be offline or online.",
          "type": "string"
        },
        "audience": {
          "description": "Who is the intended audience for this token. In general the same as issued_to.",
          "type": "string"
        },
        "email": {
          "description": "The email address of the user. Present only if the email scope is present in the request.",
          "type": "string"
        },
        "expires_in": {
          "description": "The expiry time of the token, as number of seconds left until expiry.",
          "format": "int32",
          "type": "integer"
        },
        "issued_to": {
          "description": "To whom was the token issued to. In general the same as audience.",
          "type": "string"
        },
        "scope": {
          "description": "The space separated list of scopes granted to this token.",
          "type": "string"
        },
        "token_handle": {
          "description": "The token handle associated with this token.",
          "type": "string"
        },
        "user_id": {
          "description": "The obfuscated user id.",
          "type": "string"
        },
        "verified_email": {
          "description": "Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Userinfoplus": {
      "properties": {
        "email": {
          "description": "The user's email address.",
          "type": "string"
        },
        "family_name": {
          "description": "The user's last name.",
          "type": "string"
        },
        "gender": {
          "description": "The user's gender.",
          "type": "string"
        },
        "given_name": {
          "description": "The user's first name.",
          "type": "string"
        },
        "hd": {
          "description": "The hosted domain e.g. example.com if the user is Google apps user.",
          "type": "string"
        },
        "id": {
          "description": "The obfuscated ID of the user.",
          "type": "string"
        },
        "link": {
          "description": "URL of the profile page.",
          "type": "string"
        },
        "locale": {
          "description": "The user's preferred locale.",
          "type": "string"
        },
        "name": {
          "description": "The user's full name.",
          "type": "string"
        },
        "picture": {
          "description": "URL of the user's picture image.",
          "type": "string"
        },
        "verified_email": {
          "default": true,
          "description": "Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.",
          "type": "boolean"
        }
      },
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "oauthCallback",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_oauth2": {
          "integration": "google_oauth2"
        }
      }
    },
    {
      "id": "oauthRefresh",
      "title": "",
      "description": "",
      "inputSchema": {},
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_oauth2": {
          "integration": "google_oauth2"
        }
      }
    },
    {
      "id": "getCertForOpenIdConnect",
      "title": "getCertForOpenIdConnect",
      "description": "",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Jwk"
      },
      "security": {
        "google_oauth2": {
          "integration": "google_oauth2"
        }
      }
    },
    {
      "id": "tokeninfo",
      "title": "tokeninfo",
      "description": "",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "access_token": {
            "type": "string"
          },
          "id_token": {
            "type": "string"
          },
          "token_handle": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Tokeninfo"
      },
      "security": {
        "google_oauth2": {
          "integration": "google_oauth2"
        }
      }
    },
    {
      "id": "userinfo.get",
      "title": "userinfo.get",
      "description": "",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Userinfoplus"
      },
      "security": {
        "google_oauth2": {
          "integration": "google_oauth2"
        }
      }
    },
    {
      "id": "userinfo.v2.me.get",
      "title": "userinfo.v2.me.get",
      "description": "",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Userinfoplus"
      },
      "security": {
        "google_oauth2": {
          "integration": "google_oauth2"
        }
      }
    }
  ]
}