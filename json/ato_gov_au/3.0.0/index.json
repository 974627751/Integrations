{
  "id": "ato_gov_au",
  "title": "Business Registries",
  "description": "# Introduction The Business Registries API is built on HTTP. The API is RESTful. It has predictable resource URIs. The API is documented in [OpenAPI](https://github.com/OAI/OpenAPI-Specification) format. In addition to the standard OpenAPI syntax we use a few [vendor extensions](https://github.com/Rebilly/ReDoc/blob/master/docs/redoc-vendor-extensions.md). # Overview The following sections describe the resources that make up the Business Registries REST API. ## Current Version By default, all requests to https://api.abr.ato.gov.au receive the `v1` version of the REST API. We encourage you to explicitly request this version via the `Accept` header. Accept: application/vnd.abr-ato.v1+json ## Schema All API access is over HTTPS, and accessed from https://api.abr.ato.gov.au. All data is sent and received as JSON. Blank fields are included. All dates use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: YYYY-MM-DD For example: `2017-07-01` (the 1st of July 2017) All timestamps use the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: YYYY-MM-DDTHH:MM:SSZ For example: `2017-07-01T11:05:06+10:00` ## Timezones Some requests allow for specifying timestamps or generate timestamps with time zone information. We apply the following rules, in order of priority, to determine timezone information for API calls. ### Explicitly provide an ISO 8601 timestamp with timezone information For API calls that allow for a timestamp to be specified, we use that exact timestamp. For example: `2017-07-01T11:05:06+10:00` ## Pagination Information about pagination is provided in the [Link](https://tools.ietf.org/html/rfc5988#page-6) header. For example: Link: ; rel=\"next\", ; rel=\"last\" `rel=\"next\"` states that the next page is `page=2`. This makes sense, since by default, all paginated queries start at page `1`. `rel=\"last\"` provides some more information, stating that the last page of results is on `page 34`. Accordingly, we have 33 more pages of information that we can consume. ## Parameters Many API methods take optional parameters: GET /individuals/1234/addresses/?addressType='Mailing' In this example, the '1234' value is provided for the `:partyId` parameter in the path while `:addressType` is passed in the query string. For POST, PATCH, PUT, and DELETE requests, parameters not included in the URL should be encoded as JSON with a Content-Type of 'application/json'. ## Metadata The API provides **metadata services** that you can use to discover information about the classifcation schemes and values used by the Registry. For example: GET /classifications/roles Sample response: [ { \"id\": \"123e4567-e89b-12d3-a456-426655440001\", \"role\": \"Director\", \"roleDescription\": \"An individual responsible for managing a company's ...\", \"relationship\": \"Directorship\", \"reciprocalRole\": \"Company\", \"reciprocalRoleDescription\": \"An incorporated legal entity.\" }, { ... } ] ## Root Endpoint You can issue a GET request to the root endpoint (also known as the service root) to get all the endpoint categories that the REST API supports: curl https://api.abr.ato.gov.au ## Authentication The Business Registries API supports API Key authentication. When you sign up for an account, you are given your first API key. You can generate additional API keys, and delete API keys (as you may need to rotate your keys in the future). You authenticate to the Business Registries API by providing your secret key in the request header. **Note:** Some requests will return `404 Not Found`, instead of `403 Permission Denied`. This is to prevent the accidental leakage of information to unauthorised users.",
  "security": {},
  "logo": {
    "backgroundColor": "#D3D3D3",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/ato_gov_au.png"
  },
  "actionCount": 74,
  "definitions": {
    "address": {
      "description": "The Address resource.",
      "properties": {
        "city": {
          "description": "The city.",
          "example": "Canberra",
          "type": "string"
        },
        "country": {
          "description": "The country.",
          "example": "Australia",
          "type": "string"
        },
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/addressId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "line1": {
          "description": "The address line 1.",
          "example": "Level 7",
          "type": "string"
        },
        "line2": {
          "description": "The address line 2.",
          "example": "21 Genge Street",
          "type": "string"
        },
        "line3": {
          "description": "The address line 3.",
          "example": "",
          "type": "string"
        },
        "name": {
          "description": "The address name.",
          "example": "Kembery Building",
          "type": "string"
        },
        "postalCode": {
          "description": "The postal code.",
          "example": "2601",
          "type": "string"
        },
        "suburb": {
          "description": "The suburb.",
          "example": "Civic",
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "address"
    },
    "address-type": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "address-type"
    },
    "addressId": {
      "allOf": [
        {
          "$ref": "#/definitions/resourceId"
        },
        {
          "type": "string"
        }
      ],
      "title": "addressId"
    },
    "business-name": {
      "description": "The Business Name resource.",
      "properties": {
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "lifecycleState": {
          "default": "Pending Approval",
          "description": "The business name's lifecycle state.",
          "enum": [
            "Approved",
            "Expired",
            "Issued",
            "Pending Approval",
            "Suspended"
          ],
          "type": "string"
        },
        "name": {
          "description": "The business name.",
          "example": "XYZ Technology Ventures",
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "business-name"
    },
    "business-name-lifecycle-state": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "business-name-lifecycle-state"
    },
    "electronic-address": {
      "description": "The Electronic Address resource.",
      "properties": {
        "areaCode": {
          "description": "The area code, for example, \"02\".",
          "example": "02",
          "type": "string"
        },
        "countryPrefix": {
          "description": "The country prefix, for example, \"61\".",
          "example": "61",
          "type": "string"
        },
        "electronicAddressType": {
          "default": "Landline",
          "description": "The electronic address type.",
          "enum": [
            "Email",
            "Fax",
            "Landline",
            "Mobile",
            "Website"
          ],
          "type": "string"
        },
        "email": {
          "description": "The email address, for example, \"robert.ferguson@ato.gov.au\".",
          "example": "",
          "type": "string"
        },
        "extension": {
          "description": "The extension number, for example, \"4453\".",
          "example": "",
          "type": "string"
        },
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/addressId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "number": {
          "description": "The number, for example, \"62164453\".",
          "example": "62164453",
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "url": {
          "description": "The website address, for example, \"https://ato.gov.au\".",
          "example": "",
          "type": "string"
        }
      },
      "type": "object",
      "title": "electronic-address"
    },
    "electronic-address-type": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "electronic-address-type"
    },
    "error-details": {
      "properties": {
        "code": {
          "description": "The error code.",
          "example": "NullValue",
          "type": "string"
        },
        "message": {
          "description": "The error message.",
          "example": "Family name must not be null",
          "type": "string"
        },
        "target": {
          "description": "The error target.",
          "example": "familyName",
          "type": "string"
        }
      },
      "type": "object",
      "title": "error-details"
    },
    "failed-precondition": {
      "properties": {
        "code": {
          "description": "The error code.",
          "example": "400",
          "type": "string"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/error-details"
          },
          "type": "array"
        },
        "message": {
          "description": "The error message.",
          "example": "Request can not be executed in the current system state",
          "type": "string"
        },
        "status": {
          "description": "The error status.",
          "example": "FAILED_PRECONDITION",
          "type": "string"
        }
      },
      "type": "object",
      "title": "failed-precondition"
    },
    "gender": {
      "description": "The Gender resource.",
      "properties": {
        "gender": {
          "description": "The gender.",
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        }
      },
      "type": "object",
      "title": "gender"
    },
    "individual": {
      "description": "The Individual resource.",
      "properties": {
        "addresses": {
          "items": {
            "$ref": "#/definitions/individual-address"
          },
          "type": "array"
        },
        "dateOfBirth": {
          "description": "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
          "example": "1979-01-13",
          "format": "date",
          "type": "string"
        },
        "electronicAddresses": {
          "items": {
            "$ref": "#/definitions/electronic-address"
          },
          "type": "array"
        },
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "gender": {
          "default": "Male",
          "description": "The individual's gender.",
          "enum": [
            "Female",
            "Male",
            "Not Applicable",
            "Not Known"
          ],
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/partyId"
            }
          ],
          "description": "The party's unique identifier.",
          "readOnly": true
        },
        "names": {
          "items": {
            "$ref": "#/definitions/individual-name"
          },
          "type": "array"
        },
        "placeOfBirth": {
          "description": "The individual's place of birth, for example, `Tamworth`.",
          "example": "Tamworth",
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "dateOfBirth",
        "placeOfBirth"
      ],
      "type": "object",
      "title": "individual"
    },
    "individual-address": {
      "allOf": [
        {
          "$ref": "#/definitions/address"
        },
        {
          "properties": {
            "addressType": {
              "default": "Principal Place of Residence",
              "description": "The address type.",
              "enum": [
                "Mailing",
                "Principal Place of Business",
                "Principal Place of Residence"
              ],
              "type": "string"
            },
            "fromDate": {
              "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
              "example": "1979-01-13T09:05:06+10:00",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "toDate": {
              "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
              "example": "",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "individual-address"
    },
    "individual-name": {
      "description": "The Individual Name resource.",
      "properties": {
        "direction": {
          "default": "left-to-right",
          "description": "The direction used to render the individual's name.",
          "enum": [
            "left-to-right",
            "right-to-left"
          ],
          "type": "string"
        },
        "familyName": {
          "description": "The individual's family name.",
          "example": "Ferguson",
          "type": "string"
        },
        "formalSalutation": {
          "description": "The individual's formal salutation, for example, \"Mr William Smith\".",
          "example": "Mr Robert Ferguson",
          "type": "string"
        },
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "givenName": {
          "description": "The individual's given name.",
          "example": "Robert",
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "informalSalutation": {
          "description": "The individual's informal salutation, for example, \"Bill\".",
          "example": "Rob",
          "type": "string"
        },
        "middleName": {
          "description": "The individual's middle name.",
          "example": "James",
          "type": "string"
        },
        "namePrefix": {
          "default": "Mr",
          "description": "The individual's name prefix.",
          "enum": [
            "Mr",
            "Ms"
          ],
          "type": "string"
        },
        "nameSuffix": {
          "description": "The individual's name suffix, for example, \"Jr\" or \"Sr\".",
          "example": "",
          "type": "string"
        },
        "nameType": {
          "default": "Principal Name",
          "description": "The name type.",
          "enum": [
            "Alias",
            "Principal Name"
          ],
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "individual-name"
    },
    "invalid-argument": {
      "properties": {
        "code": {
          "description": "The error code.",
          "example": "400",
          "type": "string"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/error-details"
          },
          "type": "array"
        },
        "message": {
          "description": "The error message.",
          "example": "The client specified an invalid argument",
          "type": "string"
        },
        "status": {
          "description": "The error status.",
          "example": "INVALID_ARGUMENT",
          "type": "string"
        }
      },
      "type": "object",
      "title": "invalid-argument"
    },
    "legal-entity-type": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "legal-entity-type"
    },
    "license": {
      "description": "The License resource.",
      "properties": {
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "licenseType": {
          "default": "Australian Financial Services License",
          "description": "The license type.",
          "enum": [
            "Australian Financial Services License",
            "License 2B"
          ],
          "type": "string"
        },
        "lifecycleState": {
          "default": "Pending Approval",
          "description": "The business name's lifecycle state.",
          "enum": [
            "Approved",
            "Expired",
            "Issued",
            "Pending Approval",
            "Suspended"
          ],
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "license"
    },
    "license-lifecycle-state": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "license-lifecycle-state"
    },
    "license-type": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "license-type"
    },
    "name-direction": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "name-direction"
    },
    "name-prefix": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "name-prefix"
    },
    "name-type": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "name-type"
    },
    "not-found": {
      "properties": {
        "code": {
          "description": "The error code.",
          "example": "404",
          "type": "string"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/error-details"
          },
          "type": "array"
        },
        "message": {
          "description": "The error message.",
          "example": "The specified resource was not found",
          "type": "string"
        },
        "status": {
          "description": "The error status.",
          "example": "NOT_FOUND",
          "type": "string"
        }
      },
      "type": "object",
      "title": "not-found"
    },
    "organisation": {
      "description": "The Organisation resource.",
      "properties": {
        "addresses": {
          "items": {
            "$ref": "#/definitions/organisation-address"
          },
          "type": "array"
        },
        "electronicAddresses": {
          "items": {
            "$ref": "#/definitions/electronic-address"
          },
          "type": "array"
        },
        "establishmentDate": {
          "description": "The organisation's establishment date, for example, `1928-03-03` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format).",
          "example": "1928-03-03",
          "format": "date",
          "type": "string"
        },
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/partyId"
            }
          ],
          "description": "The party's unique identifier.",
          "readOnly": true
        },
        "legalEntityType": {
          "default": "Company",
          "description": "The organisation's legal entity type.",
          "enum": [
            "Company",
            "Partnership",
            "Trust",
            "Joint Venture"
          ],
          "type": "string"
        },
        "names": {
          "items": {
            "$ref": "#/definitions/organisation-name"
          },
          "type": "array"
        },
        "registeredIdentifiers": {
          "items": {
            "$ref": "#/definitions/registered-identifier"
          },
          "type": "array"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "legalEntityType",
        "establishmentDate"
      ],
      "type": "object",
      "title": "organisation"
    },
    "organisation-address": {
      "allOf": [
        {
          "$ref": "#/definitions/address"
        },
        {
          "properties": {
            "addressType": {
              "default": "Principal Place of Business",
              "description": "The address type.",
              "enum": [
                "Mailing",
                "Principal Place of Business"
              ],
              "type": "string"
            },
            "fromDate": {
              "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
              "example": "1979-01-13T09:05:06+10:00",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            },
            "toDate": {
              "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
              "example": "",
              "format": "date-time",
              "readOnly": true,
              "type": "string"
            }
          },
          "type": "object"
        }
      ],
      "title": "organisation-address"
    },
    "organisation-name": {
      "description": "The Organisation Name resource.",
      "properties": {
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1928-03-03T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "name": {
          "description": "The organisation's name.",
          "example": "321 Technology Ventures",
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "organisation-name"
    },
    "party-role": {
      "description": "The Party Role resource.",
      "properties": {
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "2016-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/roleId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "partyRoleType": {
          "default": "Employee",
          "description": "The party's role type.",
          "enum": [
            "Director",
            "Employee",
            "Member",
            "Partner",
            "Trustee"
          ],
          "type": "string"
        },
        "relatedPartyId": {
          "allOf": [
            {
              "$ref": "#/definitions/partyId"
            }
          ],
          "description": "The related party's unique identifier."
        },
        "relatedPartyRoleType": {
          "default": "Employer",
          "description": "The related party's role type.",
          "enum": [
            "Association",
            "Company",
            "Employer",
            "Organisation",
            "Partnership",
            "Trust"
          ],
          "type": "string"
        },
        "relationshipType": {
          "default": "Employment",
          "description": "The relationship type.",
          "enum": [
            "Directorship",
            "Employment",
            "Membership",
            "Partnership",
            "Trusteeship"
          ],
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "relatedPartyId",
        "relationshipType"
      ],
      "type": "object",
      "title": "party-role"
    },
    "partyId": {
      "allOf": [
        {
          "$ref": "#/definitions/resourceId"
        },
        {
          "type": "string"
        }
      ],
      "title": "partyId"
    },
    "permission-denied": {
      "properties": {
        "code": {
          "description": "The error code.",
          "example": "403",
          "type": "string"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/error-details"
          },
          "type": "array"
        },
        "message": {
          "description": "The error message.",
          "example": "The client does not have sufficient permission",
          "type": "string"
        },
        "status": {
          "description": "The error status.",
          "example": "PERMISSION_DENIED",
          "type": "string"
        }
      },
      "type": "object",
      "title": "permission-denied"
    },
    "registered-identifier": {
      "description": "The Registered Identifier resource.",
      "properties": {
        "fromDate": {
          "description": "The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "1979-01-13T09:05:06+10:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "identifier": {
          "description": "The registered identifier.",
          "example": "123456789",
          "type": "string"
        },
        "identifierType": {
          "default": "ACN",
          "description": "The registered identifier type.",
          "enum": [
            "ACN",
            "ABN"
          ],
          "type": "string"
        },
        "toDate": {
          "description": "The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).",
          "example": "",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "registered-identifier"
    },
    "registered-identifier-type": {
      "allOf": [
        {
          "$ref": "#/definitions/type"
        },
        {
          "type": "object"
        }
      ],
      "title": "registered-identifier-type"
    },
    "resourceId": {
      "description": "The resource ID. Defaults to UUID v4",
      "example": "123e4567-e89b-12d3-a456-426655440000",
      "maxLength": 36,
      "type": "string",
      "title": "resourceId"
    },
    "role": {
      "description": "The Role Type resource.",
      "properties": {
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "reciprocalRole": {
          "description": "The reciprocal role name.",
          "type": "string"
        },
        "reciprocalRoleDescription": {
          "description": "The reciprocal role description.",
          "type": "string"
        },
        "relationship": {
          "description": "The relationship name.",
          "type": "string"
        },
        "role": {
          "description": "The role name.",
          "type": "string"
        },
        "roleDescription": {
          "description": "The role description.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "role"
    },
    "roleId": {
      "allOf": [
        {
          "$ref": "#/definitions/resourceId"
        },
        {
          "type": "string"
        }
      ],
      "title": "roleId"
    },
    "type": {
      "description": "The Type resource.",
      "properties": {
        "description": {
          "description": "The scheme value description.",
          "type": "string"
        },
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/resourceId"
            }
          ],
          "description": "The resource's unique identifier.",
          "readOnly": true
        },
        "name": {
          "description": "The scheme value.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "type"
    },
    "unauthenticated": {
      "properties": {
        "code": {
          "description": "The error code.",
          "example": "401",
          "type": "string"
        },
        "details": {
          "$ref": "#/definitions/error-details"
        },
        "message": {
          "description": "The error message.",
          "example": "Request not authenticated due to missing, invalid, or expired token",
          "type": "string"
        },
        "status": {
          "description": "The error status.",
          "example": "UNAUTHENTICATED",
          "type": "string"
        }
      },
      "type": "object",
      "title": "unauthenticated"
    }
  },
  "actions": [
    {
      "id": "business_names.get",
      "title": "business_names.get",
      "description": "Retrieve a list of business names\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/business-name"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.address_types.get",
      "title": "classifications.address_types.get",
      "description": "Retrieve a list of address types",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "The address at which an individual or organisation receives letters or packages.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Mailing"
          },
          {
            "description": "The main location where work is conducted.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "Principal Place of Business"
          }
        ],
        "items": {
          "$ref": "#/definitions/address-type"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.business_name_lifecycle_states.get",
      "title": "classifications.business_name_lifecycle_states.get",
      "description": "Retrieve a list of business name lifecycle states",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "The Business Name has been approved.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Approved"
          },
          {
            "description": "The Business Name has expired.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "Expired"
          },
          {
            "description": "The Business Name has been issued.",
            "id": "123e4567-e89b-12d3-a456-426655440003",
            "name": "Issued"
          },
          {
            "description": "The Business Name is pending approval.",
            "id": "123e4567-e89b-12d3-a456-426655440004",
            "name": "Pending Approval"
          },
          {
            "description": "The Business Name has been suspended.",
            "id": "123e4567-e89b-12d3-a456-426655440005",
            "name": "Suspended"
          }
        ],
        "items": {
          "$ref": "#/definitions/business-name-lifecycle-state"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.electronic_address_types.get",
      "title": "classifications.electronic_address_types.get",
      "description": "Retrieve a list of electronic address types",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "An address used to send and receive emails.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Email"
          },
          {
            "description": "A number used to send and receive faxes.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "Fax"
          }
        ],
        "items": {
          "$ref": "#/definitions/electronic-address-type"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.genders.get",
      "title": "classifications.genders.get",
      "description": "Retrieve a list of genders",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "gender": "Not Known",
            "id": "123e4567-e89b-12d3-a456-426655440001"
          },
          {
            "gender": "Male",
            "id": "123e4567-e89b-12d3-a456-426655440002"
          },
          {
            "gender": "Female",
            "id": "123e4567-e89b-12d3-a456-426655440003"
          },
          {
            "gender": "Not Applicable",
            "id": "123e4567-e89b-12d3-a456-426655440004"
          }
        ],
        "items": {
          "$ref": "#/definitions/gender"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.legal_entity_types.get",
      "title": "classifications.legal_entity_types.get",
      "description": "Retrieve a list of legal entity types",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "If you operate as a sole trader, you're responsible for all aspects of the business, including any debts the business incurs.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Sole Trader"
          },
          {
            "description": "A partnership is two or more individuals or organisations who do business as partners or receive income jointly.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "Partnership"
          },
          {
            "description": "A joint venture is two or more people or entities who join to do business together for a particular purpose, usually a single project, rather than as an ongoing business.",
            "id": "123e4567-e89b-12d3-a456-426655440003",
            "name": "Joint Venture"
          },
          {
            "description": "A company is a separate legal entity. This means it has the same rights as a natural person and can incur debt, sue and be sued.",
            "id": "123e4567-e89b-12d3-a456-426655440004",
            "name": "Company"
          },
          {
            "description": "A trust is an obligation imposed on a person – the trustee – to hold property or assets (e.g. business assets) for the benefit of others (known as beneficiaries).",
            "id": "123e4567-e89b-12d3-a456-426655440005",
            "name": "Trust"
          }
        ],
        "items": {
          "$ref": "#/definitions/legal-entity-type"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.license_lifecycle_states.get",
      "title": "classifications.license_lifecycle_states.get",
      "description": "Retrieve a list of license lifecycle states",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "The License has been approved.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Approved"
          },
          {
            "description": "The License has expired.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "Expired"
          },
          {
            "description": "The License has been issued.",
            "id": "123e4567-e89b-12d3-a456-426655440003",
            "name": "Issued"
          },
          {
            "description": "The License is pending approval.",
            "id": "123e4567-e89b-12d3-a456-426655440004",
            "name": "Pending Approval"
          },
          {
            "description": "The License has been suspended.",
            "id": "123e4567-e89b-12d3-a456-426655440005",
            "name": "Suspended"
          }
        ],
        "items": {
          "$ref": "#/definitions/license-lifecycle-state"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.license_types.get",
      "title": "classifications.license_types.get",
      "description": "Retrieve a list of license types",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "To conduct a financial services business in Australia, you must have an Australian Financial Services (AFS) licence.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Australian Financial Services License"
          },
          {
            "description": "To conduct a <insert-name-here> business you must have a 2B licence.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "2B License"
          }
        ],
        "items": {
          "$ref": "#/definitions/license-type"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.name_directions.get",
      "title": "classifications.name_directions.get",
      "description": "Retrieve a list of name directions",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "The full name or formal salutation is rendered left to right.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "left-to-right"
          },
          {
            "description": "The full name or formal salutation is rendered right to left.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "right-to-left"
          }
        ],
        "items": {
          "$ref": "#/definitions/name-direction"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.name_prefixes.get",
      "title": "classifications.name_prefixes.get",
      "description": "Retrieve a list of name prefixes",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "A title used before a family name or formal salutation to address a man.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Mr"
          },
          {
            "description": "A title used before a family name or formal salutation to address a woman.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "Ms"
          }
        ],
        "items": {
          "$ref": "#/definitions/name-prefix"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.name_types.get",
      "title": "classifications.name_types.get",
      "description": "Retrieve a list of name types",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "An alternate name used by a party.",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "Alias"
          },
          {
            "description": "The primary name used by a party.",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "Principal Name"
          }
        ],
        "items": {
          "$ref": "#/definitions/name-type"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.registered_identifier_types.get",
      "title": "classifications.registered_identifier_types.get",
      "description": "Retrieve a list of registered identifier types",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "description": "An Australian Business Number (ABN) is a unique eleven-character number issued by the Australian Business Register (ABR).",
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "name": "ABN"
          },
          {
            "description": "An Australian Company Number (ACN) is a unique nine-character number issued by the Australian Securities and Investments Commission (ASIC).",
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "name": "ACN"
          }
        ],
        "items": {
          "$ref": "#/definitions/registered-identifier-type"
        },
        "type": "array"
      }
    },
    {
      "id": "classifications.roles.get",
      "title": "classifications.roles.get",
      "description": "Retrieve a list of roles",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "example": [
          {
            "id": "123e4567-e89b-12d3-a456-426655440001",
            "reciprocalRole": "Company",
            "reciprocalRoleDescription": "An incorporated legal entity.",
            "relationship": "Directorship",
            "role": "Director",
            "roleDescription": "An individual responsible for managing a company's business activities."
          },
          {
            "id": "123e4567-e89b-12d3-a456-426655440002",
            "reciprocalRole": "Employer",
            "reciprocalRoleDescription": "An individual or organisation that employs people.",
            "relationship": "Employment",
            "role": "Employee",
            "roleDescription": "An individual employed for wages or salary."
          }
        ],
        "items": {
          "$ref": "#/definitions/role"
        },
        "type": "array"
      }
    },
    {
      "id": "individuals.get",
      "title": "individuals.get",
      "description": "Retrieve a list of individuals\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "dateOfBirth": {
            "type": "string",
            "description": "The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format)."
          },
          "placeOfBirth": {
            "type": "string",
            "description": "The individual's place of birth, for example, `Tamworth`."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/individual"
        },
        "type": "array"
      }
    },
    {
      "id": "individuals.post",
      "title": "individuals.post",
      "description": "Create an individual\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "body": {
            "$ref": "#/definitions/individual"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/individual"
      }
    },
    {
      "id": "individuals.partyId.delete",
      "title": "individuals.partyId.delete",
      "description": "Delete an individual with the specified identifier\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "individuals.partyId.get",
      "title": "individuals.partyId.get",
      "description": "Retrieve an individual with the specified identifier\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/individual"
      }
    },
    {
      "id": "individuals.partyId.put",
      "title": "individuals.partyId.put",
      "description": "Update an individual\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/individual"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/individual"
      }
    },
    {
      "id": "individuals.partyId.addresses.get",
      "title": "individuals.partyId.addresses.get",
      "description": "Retrieve a list of addresses",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/address"
        },
        "type": "array"
      }
    },
    {
      "id": "individuals.partyId.addresses.post",
      "title": "individuals.partyId.addresses.post",
      "description": "Create an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/address"
      }
    },
    {
      "id": "individuals.partyId.addresses.addressId.delete",
      "title": "individuals.partyId.addresses.addressId.delete",
      "description": "Delete an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "individuals.partyId.addresses.addressId.get",
      "title": "individuals.partyId.addresses.addressId.get",
      "description": "Retrieve an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/address"
      }
    },
    {
      "id": "individuals.partyId.addresses.addressId.put",
      "title": "individuals.partyId.addresses.addressId.put",
      "description": "Update an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/address"
      }
    },
    {
      "id": "individuals.partyId.business_names.get",
      "title": "individuals.partyId.business_names.get",
      "description": "Retrieve a list of business names",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/business-name"
        },
        "type": "array"
      }
    },
    {
      "id": "individuals.partyId.business_names.post",
      "title": "individuals.partyId.business_names.post",
      "description": "Create a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/business-name"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/business-name"
      }
    },
    {
      "id": "individuals.partyId.business_names.productId.delete",
      "title": "individuals.partyId.business_names.productId.delete",
      "description": "Delete a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "individuals.partyId.business_names.productId.get",
      "title": "individuals.partyId.business_names.productId.get",
      "description": "Retrieve a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/business-name"
      }
    },
    {
      "id": "individuals.partyId.business_names.productId.put",
      "title": "individuals.partyId.business_names.productId.put",
      "description": "Update a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/business-name"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/business-name"
      }
    },
    {
      "id": "individuals.partyId.electronic_addresses.get",
      "title": "individuals.partyId.electronic_addresses.get",
      "description": "Retrieve a list of electronic addresses",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/electronic-address"
        },
        "type": "array"
      }
    },
    {
      "id": "individuals.partyId.electronic_addresses.post",
      "title": "individuals.partyId.electronic_addresses.post",
      "description": "Create an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/electronic-address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/electronic-address"
      }
    },
    {
      "id": "individuals.partyId.electronic_addresses.addressId.delete",
      "title": "individuals.partyId.electronic_addresses.addressId.delete",
      "description": "Delete an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "individuals.partyId.electronic_addresses.addressId.get",
      "title": "individuals.partyId.electronic_addresses.addressId.get",
      "description": "Retrieve an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/electronic-address"
      }
    },
    {
      "id": "individuals.partyId.electronic_addresses.addressId.put",
      "title": "individuals.partyId.electronic_addresses.addressId.put",
      "description": "Update an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/electronic-address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/electronic-address"
      }
    },
    {
      "id": "individuals.partyId.licenses.get",
      "title": "individuals.partyId.licenses.get",
      "description": "Retrieve a list of licenses",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/license"
        },
        "type": "array"
      }
    },
    {
      "id": "individuals.partyId.licenses.post",
      "title": "individuals.partyId.licenses.post",
      "description": "Create a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/license"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/license"
      }
    },
    {
      "id": "individuals.partyId.licenses.productId.delete",
      "title": "individuals.partyId.licenses.productId.delete",
      "description": "Delete a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "individuals.partyId.licenses.productId.get",
      "title": "individuals.partyId.licenses.productId.get",
      "description": "Retrieve a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/license"
      }
    },
    {
      "id": "individuals.partyId.licenses.productId.put",
      "title": "individuals.partyId.licenses.productId.put",
      "description": "Update a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/license"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/license"
      }
    },
    {
      "id": "individuals.partyId.roles.get",
      "title": "individuals.partyId.roles.get",
      "description": "Retrieve a list of roles",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/party-role"
        },
        "type": "array"
      }
    },
    {
      "id": "individuals.partyId.roles.post",
      "title": "individuals.partyId.roles.post",
      "description": "Create a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/party-role"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/party-role"
      }
    },
    {
      "id": "individuals.partyId.roles.roleId.delete",
      "title": "individuals.partyId.roles.roleId.delete",
      "description": "Delete a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "roleId": {
            "type": "string",
            "description": "The role identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "roleId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "individuals.partyId.roles.roleId.get",
      "title": "individuals.partyId.roles.roleId.get",
      "description": "Retrieve a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "roleId": {
            "type": "string",
            "description": "The role identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "roleId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/party-role"
      }
    },
    {
      "id": "individuals.partyId.roles.roleId.put",
      "title": "individuals.partyId.roles.roleId.put",
      "description": "Update a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/party-role"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "roleId": {
            "type": "string",
            "description": "The role identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "roleId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/party-role"
      }
    },
    {
      "id": "licenses.get",
      "title": "licenses.get",
      "description": "Retrieve a list of licenses\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/license"
        },
        "type": "array"
      }
    },
    {
      "id": "organisations.get",
      "title": "organisations.get",
      "description": "Retrieve a list of organisations\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "registeredIdentifier": {
            "type": "string",
            "description": "The registered identifier, for example, `ACN` or `ABN`."
          },
          "identifier": {
            "type": "string",
            "description": "The identifier, for example, `123456789`."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/organisation"
        },
        "type": "array"
      }
    },
    {
      "id": "organisations.post",
      "title": "organisations.post",
      "description": "Create an organisation\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "body": {
            "$ref": "#/definitions/organisation"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/organisation"
      }
    },
    {
      "id": "organisations.partyId.delete",
      "title": "organisations.partyId.delete",
      "description": "Delete an organisation with the specified identifier\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "organisations.partyId.get",
      "title": "organisations.partyId.get",
      "description": "Retrieve an organisation with the specified identifier\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/organisation"
      }
    },
    {
      "id": "organisations.partyId.put",
      "title": "organisations.partyId.put",
      "description": "Update an organisation\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/organisation"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/organisation"
      }
    },
    {
      "id": "organisations.partyId.addresses.get",
      "title": "organisations.partyId.addresses.get",
      "description": "Retrieve a list of addresses",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/address"
        },
        "type": "array"
      }
    },
    {
      "id": "organisations.partyId.addresses.post",
      "title": "organisations.partyId.addresses.post",
      "description": "Create an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/address"
      }
    },
    {
      "id": "organisations.partyId.addresses.addressId.delete",
      "title": "organisations.partyId.addresses.addressId.delete",
      "description": "Delete an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "organisations.partyId.addresses.addressId.get",
      "title": "organisations.partyId.addresses.addressId.get",
      "description": "Retrieve an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/address"
      }
    },
    {
      "id": "organisations.partyId.addresses.addressId.put",
      "title": "organisations.partyId.addresses.addressId.put",
      "description": "Update an address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/address"
      }
    },
    {
      "id": "organisations.partyId.business_names.get",
      "title": "organisations.partyId.business_names.get",
      "description": "Retrieve a list of business names",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/business-name"
        },
        "type": "array"
      }
    },
    {
      "id": "organisations.partyId.business_names.post",
      "title": "organisations.partyId.business_names.post",
      "description": "Create a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/business-name"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/business-name"
      }
    },
    {
      "id": "organisations.partyId.business_names.productId.delete",
      "title": "organisations.partyId.business_names.productId.delete",
      "description": "Delete a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "organisations.partyId.business_names.productId.get",
      "title": "organisations.partyId.business_names.productId.get",
      "description": "Retrieve a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/business-name"
      }
    },
    {
      "id": "organisations.partyId.business_names.productId.put",
      "title": "organisations.partyId.business_names.productId.put",
      "description": "Update a business name\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/business-name"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/business-name"
      }
    },
    {
      "id": "organisations.partyId.electronic_addresses.get",
      "title": "organisations.partyId.electronic_addresses.get",
      "description": "Retrieve a list of electronic addresses",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/electronic-address"
        },
        "type": "array"
      }
    },
    {
      "id": "organisations.partyId.electronic_addresses.post",
      "title": "organisations.partyId.electronic_addresses.post",
      "description": "Create an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/electronic-address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/electronic-address"
      }
    },
    {
      "id": "organisations.partyId.electronic_addresses.addressId.delete",
      "title": "organisations.partyId.electronic_addresses.addressId.delete",
      "description": "Delete an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "organisations.partyId.electronic_addresses.addressId.get",
      "title": "organisations.partyId.electronic_addresses.addressId.get",
      "description": "Retrieve an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/electronic-address"
      }
    },
    {
      "id": "organisations.partyId.electronic_addresses.addressId.put",
      "title": "organisations.partyId.electronic_addresses.addressId.put",
      "description": "Update an electronic address\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/electronic-address"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "addressId": {
            "type": "string",
            "description": "The address identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "addressId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/electronic-address"
      }
    },
    {
      "id": "organisations.partyId.licenses.get",
      "title": "organisations.partyId.licenses.get",
      "description": "Retrieve a list of licenses",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/license"
        },
        "type": "array"
      }
    },
    {
      "id": "organisations.partyId.licenses.post",
      "title": "organisations.partyId.licenses.post",
      "description": "Create a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/license"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/license"
      }
    },
    {
      "id": "organisations.partyId.licenses.productId.delete",
      "title": "organisations.partyId.licenses.productId.delete",
      "description": "Delete a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "organisations.partyId.licenses.productId.get",
      "title": "organisations.partyId.licenses.productId.get",
      "description": "Retrieve a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/license"
      }
    },
    {
      "id": "organisations.partyId.licenses.productId.put",
      "title": "organisations.partyId.licenses.productId.put",
      "description": "Update a license\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/license"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "productId": {
            "type": "string",
            "description": "The product identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "productId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/license"
      }
    },
    {
      "id": "organisations.partyId.roles.get",
      "title": "organisations.partyId.roles.get",
      "description": "Retrieve a list of roles",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "items": {
          "$ref": "#/definitions/party-role"
        },
        "type": "array"
      }
    },
    {
      "id": "organisations.partyId.roles.post",
      "title": "organisations.partyId.roles.post",
      "description": "Create a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/party-role"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/party-role"
      }
    },
    {
      "id": "organisations.partyId.roles.roleId.delete",
      "title": "organisations.partyId.roles.roleId.delete",
      "description": "Delete a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "roleId": {
            "type": "string",
            "description": "The role identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "roleId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "organisations.partyId.roles.roleId.get",
      "title": "organisations.partyId.roles.roleId.get",
      "description": "Retrieve a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "roleId": {
            "type": "string",
            "description": "The role identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "apiKey",
          "partyId",
          "roleId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/party-role"
      }
    },
    {
      "id": "organisations.partyId.roles.roleId.put",
      "title": "organisations.partyId.roles.roleId.put",
      "description": "Update a role\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/party-role"
          },
          "apiKey": {
            "type": "string",
            "description": "The API key."
          },
          "partyId": {
            "type": "string",
            "description": "The party identifier."
          },
          "roleId": {
            "type": "string",
            "description": "The role identifier."
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "apiKey",
          "partyId",
          "roleId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/party-role"
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "financial"
  ]
}