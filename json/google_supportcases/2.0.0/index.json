{
  "id": "google_supportcases",
  "title": "Google Support Cases Private",
  "description": "Support Cases API",
  "security": {
    "google_supportcases": {
      "integration": "google_supportcases",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)"
      },
      "oauth": {
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "description": "Oauth 2.0 accessCode authentication",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/cases": "View and manage your Google Support Cases",
          "https://www.googleapis.com/auth/cases.readonly": "View your Google Support Cases",
          "https://www.googleapis.com/auth/supportcontent": "View and manage your support data"
        },
        "tokenUrl": "https://accounts.google.com/o/oauth2/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
  },
  "definitions": {
    "Account": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountLookupTool": {
      "properties": {
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "urlTemplate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountReview": {
      "properties": {
        "reviewKey": {
          "$ref": "#/definitions/ReviewKey"
        },
        "reviewState": {
          "enum": [
            "ASSIGNED",
            "CLOSED",
            "REVIEW_STATE_UNSPECIFIED",
            "UNASSIGNED",
            "UNKNOWN_REVIEW_STATE"
          ],
          "type": "string"
        },
        "reviewType": {
          "enum": [
            "ACCOUNT_REVIEW_TYPE_UNSPECIFIED",
            "AML",
            "BVID_COMPLIANCE_FRAUD",
            "ID_VERIFICATION_UNKNOWN_TYPE",
            "LEGACY_HOLD_REVIEW",
            "OFFLINE_SANCTIONS_COMPLIANCE_FRAUD",
            "ONLINE_SANCTIONS",
            "RISK_FRAUD"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountSignalResult": {
      "properties": {
        "bvidDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "gaiaCheckoutServiceStatus": {
          "enum": [
            "GAIA_ACCOUNT_SERVICE_STATUS_DISABLED",
            "GAIA_ACCOUNT_SERVICE_STATUS_REGISTERED",
            "GAIA_ACCOUNT_SERVICE_STATUS_SUSPENDED",
            "GAIA_ACCOUNT_SERVICE_STATUS_UNSPECIFIED"
          ],
          "type": "string"
        },
        "hasPositiveWalletBalance": {
          "type": "boolean"
        },
        "isVip": {
          "type": "boolean"
        },
        "mostRecentTransactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        },
        "offlineCheckDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "riskDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "sanctionsDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "type": {
          "enum": [
            "ACCOUNT_SIGNAL_TYPE_UNSPECIFIED",
            "CUSTOMER_BVID_DOCS_SUBMISSION_STATUS",
            "CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS",
            "CUSTOMER_RISK_DOCS_SUBMISSION_STATUS",
            "CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS",
            "GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS",
            "HAS_POSITIVE_WALLET_BALANCE",
            "IS_VIP",
            "MOST_RECENT_TRANSACTION_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Action": {
      "properties": {
        "cannedResponses": {
          "$ref": "#/definitions/CannedResponseAction"
        },
        "issueCategories": {
          "$ref": "#/definitions/IssueCategoryAction"
        },
        "nextState": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Action1": {
      "properties": {
        "alertMessage": {
          "type": "string"
        },
        "consultAction": {
          "$ref": "#/definitions/ConsultAction"
        },
        "difmAction": {
          "$ref": "#/definitions/DifmAction"
        },
        "scriptId": {
          "format": "int32",
          "type": "integer"
        },
        "showSummaryAction": {
          "$ref": "#/definitions/ShowSummaryAction"
        },
        "transferAction": {
          "$ref": "#/definitions/TransferAction"
        }
      },
      "type": "object"
    },
    "Address": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressee": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "stateProvinceCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AfterSendSetting": {
      "properties": {
        "stateAfterSend": {
          "enum": [
            "NEEDS_INFO",
            "SOLUTION_OFFERED",
            "UNKNOWN_STATE_AFTER_SEND"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentActivity": {
      "properties": {
        "agentActivityId": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/Assignee"
        },
        "caseId": {
          "type": "string"
        },
        "cohortMetadataCollection": {
          "$ref": "#/definitions/CohortMetadataCollection"
        },
        "description": {
          "type": "string"
        },
        "desktopScreenshareEvent": {
          "$ref": "#/definitions/DesktopScreenshareEvent"
        },
        "mobileScreenshareEvent": {
          "$ref": "#/definitions/MobileScreenshareEvent"
        },
        "phoneCall": {
          "$ref": "#/definitions/PhoneCall"
        },
        "pitch": {
          "$ref": "#/definitions/Pitch"
        },
        "relation": {
          "$ref": "#/definitions/Relation"
        },
        "requestDeviceSignalsEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsEvent"
        },
        "resolutionOpened": {
          "$ref": "#/definitions/ResolutionOpened"
        },
        "startTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentActivitySource": {
      "type": "object"
    },
    "AgentSetting": {
      "properties": {
        "agentSettingId": {
          "type": "string"
        },
        "aliasInfo": {
          "$ref": "#/definitions/AliasInfo"
        },
        "defaultLocale": {
          "type": "string"
        },
        "defaultProductId": {
          "type": "string"
        },
        "employmentInfo": {
          "$ref": "#/definitions/EmploymentInfo"
        },
        "firstName": {
          "type": "string"
        },
        "focusInfo": {
          "$ref": "#/definitions/FocusInfo"
        },
        "includeReassignedInAutoassign": {
          "type": "boolean"
        },
        "languageCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phoneSetting": {
          "$ref": "#/definitions/PhoneSetting"
        },
        "preferredName": {
          "type": "string"
        },
        "sidewinderRole": {
          "$ref": "#/definitions/SidewinderRole"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "DELETED",
            "INACTIVE",
            "UNKNOWN_AGENT_STATUS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentTransfer": {
      "properties": {
        "sourceAgent": {
          "$ref": "#/definitions/Identity"
        },
        "targetAgent": {
          "$ref": "#/definitions/Identity"
        }
      },
      "type": "object"
    },
    "AgentUnreadCasesInfo": {
      "properties": {
        "unreadCasesInfo": {
          "items": {
            "$ref": "#/definitions/UnreadCaseInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AliasInfo": {
      "properties": {
        "externalName": {
          "type": "string"
        },
        "personalAlias": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Answer": {
      "properties": {
        "question": {
          "enum": [
            "DEVICE_TYPE",
            "PURCHASED_APP_NAME",
            "PURCHASED_BOOK_NAME",
            "PURCHASED_VIDEO_NAME",
            "QUESTION_NOT_SET"
          ],
          "type": "string"
        },
        "skipReason": {
          "enum": [
            "DOES_NOT_KNOW",
            "NOT_LISTED",
            "SKIP_REASON_NOT_SET"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AnswerSet": {
      "properties": {
        "customerAnswers": {
          "items": {
            "$ref": "#/definitions/CustomerAnswer"
          },
          "type": "array"
        },
        "questionSetType": {
          "enum": [
            "PAYMENT_METHOD_QUESTION_SET",
            "PHONE_NUMBER_QUESTION_SET",
            "POSTAL_CODE_QUESTION_SET",
            "UNKNOWN_QUESTION_SET_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignCohortsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignCohortsResponse": {
      "properties": {
        "cohorts": {
          "items": {
            "$ref": "#/definitions/Cohort2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AssignRequest": {
      "properties": {
        "assignedByScreenPop": {
          "type": "boolean"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Assignee": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Assignee1": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Assignee2": {
      "properties": {
        "ldap": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attachment": {
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attachment1": {
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentInfo": {
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "contentId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attribute": {
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enumValue": {
          "items": {
            "$ref": "#/definitions/EnumValue"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "valueType": {
          "enum": [
            "BOOL",
            "DOUBLE",
            "ENUM",
            "INT",
            "INT64",
            "STRING",
            "TIMESTAMP",
            "UNKNOWN_VALUE_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attribute1": {
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "#/definitions/Entry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuthenticateRequest": {
      "properties": {
        "agentSsoCookie": {
          "type": "string"
        },
        "answerSets": {
          "items": {
            "$ref": "#/definitions/AnswerSet"
          },
          "type": "array"
        },
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticateResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        },
        "verificationResults": {
          "items": {
            "$ref": "#/definitions/VerificationResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Authentication": {
      "properties": {
        "authenticateTime": {
          "type": "string"
        },
        "channel": {
          "enum": [
            "AGENT",
            "CLICK_TO_CALL",
            "CUF",
            "REALTIME",
            "UNKNOWN_CHANNEL"
          ],
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationBankAccount": {
      "properties": {
        "bankAccountTypeDisplayName": {
          "type": "string"
        },
        "bankAccountTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationCreditCard": {
      "properties": {
        "creditCardDisplayName": {
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationCreditCard1": {
      "properties": {
        "creditCardDisplayName": {
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationInfo": {
      "properties": {
        "status": {
          "enum": [
            "FAILED",
            "SUCCESS",
            "UNKNOWN_AUTH_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationSettings": {
      "properties": {
        "authenticationSupported": {
          "type": "boolean"
        },
        "exemptFromAuthentication": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AutoAssignRequest": {
      "type": "object"
    },
    "AutoAssignResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        },
        "searchName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutocheckResult": {
      "properties": {
        "autocheckId": {
          "type": "string"
        },
        "autocheckTime": {
          "type": "string"
        },
        "descriptionId": {
          "type": "string"
        },
        "scriptId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "AUTOCHECK_STATUS_NOT_SET",
            "ERROR",
            "FAIL",
            "NO",
            "NOT_RUN",
            "PASS",
            "YES"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AvailableQuestion": {
      "properties": {
        "authenticationCreditCards": {
          "items": {
            "$ref": "#/definitions/AuthenticationCreditCard1"
          },
          "type": "array"
        },
        "question": {
          "enum": [
            "BANK_ACCOUNT",
            "CREDIT_CARD",
            "DCB",
            "PAYPAL",
            "PHONE_NUMBER",
            "PLAY_BALANCE",
            "POSTAL_CODE",
            "UNKNOWN_QUESTION",
            "WALLET_BALANCE"
          ],
          "type": "string"
        },
        "questionSources": {
          "items": {
            "$ref": "#/definitions/QuestionSource"
          },
          "type": "array"
        },
        "questionToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankAccount": {
      "properties": {
        "accountSuffix": {
          "type": "string"
        },
        "bankAccountToken": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankAccount1": {
      "properties": {
        "accountNumberSuffix": {
          "type": "string"
        },
        "bankAccountTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankAccountCountry": {
      "properties": {
        "bankAccountToken": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchCreatePitchRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "eventId": {
          "type": "string"
        },
        "opportunityIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pitches": {
          "items": {
            "$ref": "#/definitions/Pitch1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchCreatePitchResponse": {
      "properties": {
        "responses": {
          "items": {
            "$ref": "#/definitions/CreatePitchResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchGetCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchUpdateAttributesRequest": {
      "properties": {
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchUpdateAttributesResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "BlockRequest": {
      "properties": {
        "borgAlertId": {
          "type": "string"
        },
        "buganizerId": {
          "format": "int64",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pcrId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BlockResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "BuildNewEmailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BuildNewEmailResponse": {
      "properties": {
        "emailTemplate": {
          "$ref": "#/definitions/Email"
        },
        "footerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "headerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BuildReplyEmailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "replyType": {
          "enum": [
            "REPLY",
            "REPLY_ALL",
            "UNKNOWN_REPLY_TYPE"
          ],
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BuildReplyEmailResponse": {
      "properties": {
        "emailTemplate": {
          "$ref": "#/definitions/Email"
        }
      },
      "type": "object"
    },
    "Business": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "listingId": {
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CallBackRequest": {
      "type": "object"
    },
    "CallBackResponse": {
      "properties": {
        "callbackStatus": {
          "enum": [
            "AGENT_BUSY",
            "AGENT_HUNG_UP_EARLY",
            "AGENT_NOT_ANSWERED",
            "AGENT_NOT_CONNECTED",
            "AGENT_NOT_LOGGED_IN",
            "AUTHENTICATION_ERROR",
            "CALLBACK_STATUS_UNSPECIFIED",
            "CALL_CONNECTED",
            "CALL_IN_PROGRESS",
            "CUSTOMER_BUSY",
            "CUSTOMER_NOT_ANSWERED",
            "CUSTOMER_NOT_CONNECTED",
            "INTERNAL_ERROR",
            "INVALID_AGENT_SETTING",
            "INVALID_CUSTOMER_NUMBER"
          ],
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "Campaign": {
      "properties": {
        "campaignId": {
          "format": "int64",
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        },
        "rank": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CancelAuthHoldRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelComponentsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "componentTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "revokeAccess": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelComponentsResponse": {
      "properties": {
        "componentTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "result": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelEntitlementRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "entitlementToken": {
          "type": "string"
        },
        "entitlementTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "revokeAccess": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelEntitlementResponse": {
      "properties": {
        "cancelResultInfo": {
          "items": {
            "$ref": "#/definitions/CancelResultInfo"
          },
          "type": "array"
        },
        "entitlementToken": {
          "type": "string"
        },
        "result": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelHardwareOrderRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelHistorySummaryInfo": {
      "properties": {
        "cancelResult": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        },
        "numberOfCancels": {
          "format": "int32",
          "type": "integer"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "revoke": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CancelInfo": {
      "properties": {
        "cancelReason": {
          "enum": [
            "CANCEL_REASON_NOT_SET",
            "INVALID_ADDRESS",
            "OTHER",
            "PAYMENT_ISSUE",
            "USER_INITIATED",
            "USER_REQUESTED"
          ],
          "type": "string"
        },
        "cancelTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelResultInfo": {
      "properties": {
        "entitlementToken": {
          "type": "string"
        },
        "result": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelRmaRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "reason": {
          "enum": [
            "CANCEL_REASON_NOT_SET",
            "CUSTOMER_CHANGED_MIND",
            "FIX_AGENT_ERROR",
            "OTHER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelRmaResponse": {
      "properties": {
        "result": {
          "enum": [
            "CANCEL_RESULT_NOT_SET",
            "SUCCESSFUL",
            "UNSUCCESSFUL_CART_LINK_USED",
            "UNSUCCESSFUL_NOT_PENDING",
            "UNSUCCESSFUL_UNKNOWN"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelSendRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelSubscriptionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "reason": {
          "enum": [
            "CANCEL_REASON_ACCIDENTAL_PURCHASE",
            "CANCEL_REASON_DEFECTIVE",
            "CANCEL_REASON_DID_NOT_RECEIVE",
            "CANCEL_REASON_FRAUD",
            "CANCEL_REASON_FRIENDLY_FRAUD",
            "CANCEL_REASON_REMORSE",
            "CANCEL_REASON_UNSPECIFIED"
          ],
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        }
      },
      "type": "object"
    },
    "CancelSubscriptionResponse": {
      "properties": {
        "cancelRejectionReason": {
          "enum": [
            "CANCEL_REJECTION_REASON_UNSPECIFIED",
            "SUBSCRIPTION_IS_NOT_CANCELLABLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CannedResponse": {
      "properties": {
        "kmsId": {
          "format": "int32",
          "type": "integer"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CHAT",
            "EMAIL",
            "EMAIL_AND_CHAT",
            "UNKNOWN_CHANNEL_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CannedResponse1": {
      "properties": {
        "kmsId": {
          "format": "int32",
          "type": "integer"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CHAT",
            "EMAIL",
            "UNKNOWN_CHANNEL_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CannedResponseAction": {
      "properties": {
        "cannedResponseIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CardLookupCriteria": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "redemptionCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Case": {
      "properties": {
        "agentUpdateTimeMap": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "assignee": {
          "$ref": "#/definitions/Assignee1"
        },
        "attributeMap": {
          "additionalProperties": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "object"
        },
        "caseId": {
          "type": "string"
        },
        "communicationInfo": {
          "$ref": "#/definitions/CommunicationInfo"
        },
        "createTime": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/Source"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "dueByTime": {
          "type": "string"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "relations": {
          "items": {
            "$ref": "#/definitions/Relation1"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        },
        "transitionTime": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        },
        "workflowInfo": {
          "$ref": "#/definitions/WorkflowInfo"
        }
      },
      "type": "object"
    },
    "CaseData": {
      "properties": {
        "assignee": {
          "$ref": "#/definitions/Assignee2"
        },
        "caseId": {
          "type": "string"
        },
        "categories": {
          "items": {
            "$ref": "#/definitions/Category1"
          },
          "type": "array"
        },
        "productName": {
          "type": "string"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CasesReviewKey": {
      "properties": {
        "review3Id": {
          "type": "string"
        },
        "reviewId": {
          "type": "string"
        },
        "targetUnderReview": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CasesTransactionIdentifier": {
      "properties": {
        "orderId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CasesWorkflow": {
      "properties": {
        "hardwareOrderWorkflow": {
          "$ref": "#/definitions/HardwareOrderWorkflow"
        },
        "walletUnauthCharges": {
          "$ref": "#/definitions/UnauthorizedChargesWorkflow"
        }
      },
      "type": "object"
    },
    "Category": {
      "properties": {
        "isBaseline": {
          "type": "boolean"
        },
        "path": {
          "$ref": "#/definitions/Path"
        }
      },
      "type": "object"
    },
    "Category1": {
      "properties": {
        "isBaseline": {
          "type": "boolean"
        },
        "path": {
          "$ref": "#/definitions/Path1"
        }
      },
      "type": "object"
    },
    "Category2": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Category3": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node3"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Category4": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node4"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Category5": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node5"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CategoryInfo": {
      "properties": {
        "children": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        },
        "matchDetail": {
          "$ref": "#/definitions/MatchDetail"
        },
        "name": {
          "type": "string"
        },
        "numChildren": {
          "format": "int32",
          "type": "integer"
        },
        "pathIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "pathNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CategoryPath": {
      "properties": {
        "pathIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CategoryPath1": {
      "properties": {
        "nodes": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ChannelCount": {
      "properties": {
        "channel": {
          "enum": [
            "ADOPTION",
            "CHAT",
            "EMAIL",
            "GOAL",
            "HANGOUT",
            "INCENTIVE",
            "MARKETING_EMAIL",
            "MEETING",
            "NOTE",
            "PHONE",
            "STUB",
            "TRAX",
            "UNKNOWN_EVENT_TYPE",
            "WEB"
          ],
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Charge": {
      "properties": {
        "chargeTime": {
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/TransactionLineItem"
          },
          "type": "array"
        },
        "localizedChargeTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "priceIncludesTax": {
          "type": "boolean"
        },
        "prorated": {
          "type": "boolean"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "Chat": {
      "properties": {
        "chatPools": {
          "items": {
            "$ref": "#/definitions/ChatPool1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Chat1": {
      "properties": {
        "chatPools": {
          "items": {
            "$ref": "#/definitions/ChatPool2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ChatMessage": {
      "properties": {
        "isAgent": {
          "type": "boolean"
        },
        "payload": {
          "type": "string"
        },
        "senderName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatPool": {
      "properties": {
        "chatPoolId": {
          "type": "string"
        },
        "chatPoolName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatPool1": {
      "properties": {
        "chatPoolId": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatPool2": {
      "properties": {
        "chatPoolId": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatTransfer": {
      "properties": {
        "sourceChatPool": {
          "$ref": "#/definitions/ChatPool"
        },
        "targetChatPool": {
          "$ref": "#/definitions/ChatPool"
        }
      },
      "type": "object"
    },
    "CheckRedeemerRequest": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "emailToCheck": {
          "type": "string"
        },
        "redemptionCode": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CheckRedeemerResponse": {
      "properties": {
        "emailToCheck": {
          "type": "string"
        },
        "isRedeemer": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CheckWalletAccountResponse": {
      "properties": {
        "hasValidWalletAccount": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Cohort": {
      "properties": {
        "canonicalName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "treatmentsId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Cohort1": {
      "properties": {
        "canonicalName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayStateRestriction": {
          "enum": [
            "HIDE",
            "NONE",
            "SHOW",
            "UNKNOWN_DISPLAY_STATE_RESTRICTION"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Cohort2": {
      "properties": {
        "canonicalName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayStateRestriction": {
          "enum": [
            "HIDE",
            "NONE",
            "SHOW",
            "UNKNOWN_DISPLAY_STATE_RESTRICTION"
          ],
          "type": "string"
        },
        "formId": {
          "type": "string"
        },
        "helpcenterName": {
          "type": "string"
        },
        "treatmentsId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CohortMetadataCollection": {
      "properties": {
        "cohort": {
          "$ref": "#/definitions/Cohort"
        },
        "formMetadata": {
          "$ref": "#/definitions/FormMetadata"
        }
      },
      "type": "object"
    },
    "Communication": {
      "properties": {
        "allowsCaseSplit": {
          "type": "boolean"
        },
        "attachments": {
          "items": {
            "$ref": "#/definitions/AttachmentInfo"
          },
          "type": "array"
        },
        "authenticationInfo": {
          "$ref": "#/definitions/AuthenticationInfo"
        },
        "caseId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        },
        "consultInfo": {
          "$ref": "#/definitions/ConsultInfo"
        },
        "contentInfo": {
          "$ref": "#/definitions/ContentInfo"
        },
        "draftInfo": {
          "$ref": "#/definitions/DraftInfo"
        },
        "email": {
          "$ref": "#/definitions/Email"
        },
        "escalationInfo": {
          "$ref": "#/definitions/EscalationInfo"
        },
        "form": {
          "$ref": "#/definitions/Form"
        },
        "inResponseTo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "$ref": "#/definitions/Note"
        },
        "phoneInfo": {
          "$ref": "#/definitions/PhoneInfo"
        },
        "realTime": {
          "$ref": "#/definitions/RealTime"
        },
        "recipients": {
          "items": {
            "$ref": "#/definitions/Identity"
          },
          "type": "array"
        },
        "routingInfo": {
          "$ref": "#/definitions/RoutingInfo"
        },
        "sender": {
          "$ref": "#/definitions/Identity"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "subject": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommunicationInfo": {
      "properties": {
        "lastClosedTime": {
          "type": "string"
        },
        "lastCommunicationTime": {
          "type": "string"
        },
        "lastIncomingEmailTime": {
          "type": "string"
        },
        "lastOutgoingCommunicationTime": {
          "type": "string"
        },
        "lastOutgoingEmailTime": {
          "type": "string"
        },
        "numCommunications": {
          "format": "int32",
          "type": "integer"
        },
        "numConsults": {
          "format": "int32",
          "type": "integer"
        },
        "numIncomingEmails": {
          "format": "int32",
          "type": "integer"
        },
        "numOutgoingEmails": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ComponentData": {
      "properties": {
        "components": {
          "items": {
            "$ref": "#/definitions/SubscriptionComponent"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ComponentToken": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConsultAction": {
      "properties": {
        "consultDifm": {
          "$ref": "#/definitions/DifmAction"
        },
        "postConsultAnswerHelpCenter": {
          "type": "string"
        },
        "postConsultAnswerId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConsultInfo": {
      "type": "object"
    },
    "ConsultSettings": {
      "properties": {
        "topCategory": {
          "$ref": "#/definitions/Category2"
        }
      },
      "type": "object"
    },
    "Contact": {
      "properties": {
        "contactName": {
          "type": "string"
        },
        "emailAddress": {
          "$ref": "#/definitions/EmailAddress"
        }
      },
      "type": "object"
    },
    "ContactInfo": {
      "properties": {
        "callbackNumber": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "contactName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContentInfo": {
      "properties": {
        "bodyCrIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "footerCrIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "headerCrIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "helpcenterLinkIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateAgentActivityRequest": {
      "properties": {
        "agentActivity": {
          "$ref": "#/definitions/AgentActivity"
        }
      },
      "type": "object"
    },
    "CreateConsultNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateConsultNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "CreateEmailRequest": {
      "properties": {
        "afterSendSetting": {
          "$ref": "#/definitions/AfterSendSetting"
        },
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "footerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fromAddress": {
          "type": "string"
        },
        "headerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateEmailResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "CreateExchangeWithoutReturnRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "device": {
          "$ref": "#/definitions/LostStolenDevice"
        },
        "shipment": {
          "$ref": "#/definitions/LostStolenShipment"
        },
        "skipAddressValidation": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        },
        "updatedAddress": {
          "$ref": "#/definitions/MailingAddress"
        }
      },
      "type": "object"
    },
    "CreateExchangeWithoutReturnResponse": {
      "properties": {
        "failureType": {
          "enum": [
            "FAILURE_TYPE_NOT_SET",
            "FAILURE_TYPE_UNKNOWN",
            "NOTES_INVALID",
            "PHONE_NUMBER_INVALID",
            "RMA_ALREADY_OPEN_FOR_ASSET",
            "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
            "SHIPPING_ADDRESS_CITY_INVALID",
            "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
            "SHIPPING_ADDRESS_INVALID",
            "SHIPPING_ADDRESS_LINE_1_INVALID",
            "SHIPPING_ADDRESS_LINE_2_INVALID",
            "SHIPPING_ADDRESS_LINE_3_INVALID",
            "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
            "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
            "WALLET_ACCOUNT_REQUIRED"
          ],
          "type": "string"
        },
        "failures": {
          "items": {
            "$ref": "#/definitions/RmaFailure"
          },
          "type": "array"
        },
        "rmaNumber": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateFromHelpCenterDeepLinkRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNewCaseRequest": {
      "type": "object"
    },
    "CreateNewCaseResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "CreateNoteConsultCaseRequest": {
      "properties": {
        "attachments": {
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "formFields": {
          "items": {
            "$ref": "#/definitions/FormField1"
          },
          "type": "array"
        },
        "issueCategory": {
          "$ref": "#/definitions/Category3"
        },
        "subject": {
          "type": "string"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/Category3"
          },
          "type": "array"
        },
        "targetTeamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNoteConsultCaseResponse": {
      "properties": {
        "targetCaseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "noteType": {
          "enum": [
            "PHONE",
            "UNKNOWN_NOTE_TYPE",
            "USER"
          ],
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "CreatePitchResponse": {
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "pitchId": {
          "$ref": "#/definitions/PitchId"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "type": "object"
    },
    "CreateRealTimeConsultCaseRequest": {
      "properties": {
        "attachments": {
          "items": {
            "$ref": "#/definitions/Attachment1"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "chatPoolId": {
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "formFields": {
          "items": {
            "$ref": "#/definitions/FormField2"
          },
          "type": "array"
        },
        "issueCategory": {
          "$ref": "#/definitions/Category4"
        },
        "subject": {
          "type": "string"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/Category4"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateRealTimeConsultCaseResponse": {
      "properties": {
        "targetCaseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateTroubleshooterSessionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "issueId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateWorkflowRequest": {
      "properties": {
        "workflow": {
          "$ref": "#/definitions/CasesWorkflow"
        }
      },
      "type": "object"
    },
    "CreditCard": {
      "properties": {
        "billingName": {
          "type": "string"
        },
        "billingPostalCode": {
          "type": "string"
        },
        "cardNumberSuffix": {
          "type": "string"
        },
        "creditCardToken": {
          "type": "string"
        },
        "creditCardType": {
          "$ref": "#/definitions/CreditCardType"
        }
      },
      "type": "object"
    },
    "CreditCard1": {
      "properties": {
        "creditCardSuffix": {
          "type": "string"
        },
        "creditCardType": {
          "enum": [
            "AMEX",
            "CARTES_BANCAIRES",
            "DISCOVER",
            "JCB",
            "MASTERCARD",
            "UKNOWN_AUTHENTICATION_CARD_TYPE",
            "VISA"
          ],
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditCardType": {
      "properties": {
        "backgroundUrl": {
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Customer": {
      "properties": {
        "attributeMap": {
          "additionalProperties": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "object"
        },
        "authentication": {
          "$ref": "#/definitions/Authentication"
        },
        "cohorts": {
          "items": {
            "$ref": "#/definitions/Cohort1"
          },
          "type": "array"
        },
        "contact": {
          "$ref": "#/definitions/ContactInfo"
        },
        "gaiaAccountStatus": {
          "enum": [
            "ACTIVE",
            "DELETED",
            "DISABLED",
            "INVALID",
            "PURGED",
            "UNKNOWN_GAIA_ACCOUNT_STATUS"
          ],
          "type": "string"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/Timezone"
        }
      },
      "type": "object"
    },
    "CustomerAnswer": {
      "properties": {
        "bankAccount": {
          "$ref": "#/definitions/BankAccount1"
        },
        "creditCard": {
          "$ref": "#/definitions/CreditCard1"
        },
        "dcb": {
          "$ref": "#/definitions/Dcb"
        },
        "paypal": {
          "$ref": "#/definitions/Paypal1"
        },
        "phoneNumber": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "playBalance": {
          "$ref": "#/definitions/Money"
        },
        "postalCode": {
          "type": "string"
        },
        "questionToken": {
          "type": "string"
        },
        "walletBalance": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "CustomerDocsSubmissionStatus": {
      "properties": {
        "hasSubmittedDocs": {
          "type": "boolean"
        },
        "submitTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerIssue": {
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "issueFailures": {
          "items": {
            "$ref": "#/definitions/IssueFailure"
          },
          "type": "array"
        },
        "issueId": {
          "type": "string"
        },
        "issueStatus": {
          "enum": [
            "FAIL",
            "ISSUE_STATUS_UNSPECIFIED",
            "NOT_RUN",
            "PASS"
          ],
          "type": "string"
        },
        "rank": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Date": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Dcb": {
      "properties": {
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeauthenticateRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeauthenticateResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "DedupeRequest": {
      "properties": {
        "duplicateCaseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DedupeResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "DeliveryInfo": {
      "properties": {
        "deliveryStatus": {
          "enum": [
            "FAILED",
            "NOT_SCHEDULED",
            "PENDING",
            "SENT",
            "UNKNOWN_DELIVERY_STATUS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareAcceptEvent": {
      "type": "object"
    },
    "DesktopScreenshareAutoDeclineEvent": {
      "properties": {
        "declineType": {
          "enum": [
            "NOT_SUPPORTED",
            "UNKNOWN_AUTO_DECLINE_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareCancelEvent": {
      "type": "object"
    },
    "DesktopScreenshareCleanupEvent": {
      "type": "object"
    },
    "DesktopScreenshareConnectEvent": {
      "type": "object"
    },
    "DesktopScreenshareDeclineEvent": {
      "type": "object"
    },
    "DesktopScreenshareDisconnectEvent": {
      "type": "object"
    },
    "DesktopScreenshareEndEvent": {
      "properties": {
        "agentEnded": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareEvent": {
      "properties": {
        "acceptEvent": {
          "$ref": "#/definitions/DesktopScreenshareAcceptEvent"
        },
        "autoDeclineEvent": {
          "$ref": "#/definitions/DesktopScreenshareAutoDeclineEvent"
        },
        "cancelEvent": {
          "$ref": "#/definitions/DesktopScreenshareCancelEvent"
        },
        "cleanupEvent": {
          "$ref": "#/definitions/DesktopScreenshareCleanupEvent"
        },
        "connectEvent": {
          "$ref": "#/definitions/DesktopScreenshareConnectEvent"
        },
        "declineEvent": {
          "$ref": "#/definitions/DesktopScreenshareDeclineEvent"
        },
        "disconnectEvent": {
          "$ref": "#/definitions/DesktopScreenshareDisconnectEvent"
        },
        "endEvent": {
          "$ref": "#/definitions/DesktopScreenshareEndEvent"
        },
        "initiateEvent": {
          "$ref": "#/definitions/DesktopScreenshareInitiateEvent"
        },
        "invitationId": {
          "type": "string"
        },
        "inviteEvent": {
          "$ref": "#/definitions/DesktopScreenshareInviteEvent"
        },
        "joinEvent": {
          "$ref": "#/definitions/DesktopScreenshareJoinEvent"
        },
        "leaveEvent": {
          "$ref": "#/definitions/DesktopScreenshareLeaveEvent"
        },
        "receivedEvent": {
          "$ref": "#/definitions/DesktopScreenshareReceivedEvent"
        },
        "revivedEvent": {
          "$ref": "#/definitions/DesktopScreenshareRevivedEvent"
        },
        "startingConnectEvent": {
          "$ref": "#/definitions/DesktopScreenshareStartingConnectEvent"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareInitiateEvent": {
      "properties": {
        "screensharingState": {
          "enum": [
            "SUPPORTED",
            "UNKNOWN",
            "UNKNOWN_SCREENSHARING_STATE",
            "UNSUPPORTED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareInviteEvent": {
      "type": "object"
    },
    "DesktopScreenshareJoinEvent": {
      "properties": {
        "agentJoined": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareLeaveEvent": {
      "properties": {
        "agentLeft": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareReceivedEvent": {
      "type": "object"
    },
    "DesktopScreenshareRevivedEvent": {
      "type": "object"
    },
    "DesktopScreenshareStartingConnectEvent": {
      "type": "object"
    },
    "Device": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "ADVANCED_EXCHANGE",
              "EXCHANGE",
              "EXCHANGE_WITHOUT_RETURN",
              "REPAIR",
              "RETURN",
              "UNKNOWN_ACTION",
              "WARRANTY_REFUND"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "countryOfPurchase": {
          "type": "string"
        },
        "deviceClass": {
          "enum": [
            "CHROMEBOOK",
            "UNKNOWN_DEVICE_CLASS"
          ],
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "doaEndDate": {
          "type": "string"
        },
        "doaExpired": {
          "type": "boolean"
        },
        "exchangeGpn": {
          "type": "string"
        },
        "extendedWarrantyActive": {
          "type": "boolean"
        },
        "extendedWarrantyContractId": {
          "type": "string"
        },
        "extendedWarrantyEndDate": {
          "type": "string"
        },
        "extendedWarrantyExpired": {
          "type": "boolean"
        },
        "gpn": {
          "type": "string"
        },
        "hashedFullDeviceId": {
          "type": "string"
        },
        "noRmaTypeReason": {
          "enum": [
            "CONVERTED_TO_DASH_R",
            "GOOGLE_SHOPPING_EXPRESS",
            "NO_DATA_AVAILABLE",
            "NO_LONGER_SUPPORTED",
            "NO_RMA_REASON_SET",
            "UNKNOWN_NO_RMA_REASON",
            "UNSUPPORTED_3PR_DEVICE",
            "WALK_IN_CENTERS_ONLY"
          ],
          "type": "string"
        },
        "orderNumber": {
          "type": "string"
        },
        "pointOfPurchase": {
          "enum": [
            "BULK_ORDER",
            "EVENT_GIVEAWAY",
            "GOOGLER_GIFT",
            "GOOGLE_PLAY",
            "RETAIL",
            "UNKNOWN_POINT_OF_PURCHASE"
          ],
          "type": "string"
        },
        "purchaseDate": {
          "type": "string"
        },
        "remorseEndDate": {
          "type": "string"
        },
        "remorseExpired": {
          "type": "boolean"
        },
        "replacementDevices": {
          "items": {
            "$ref": "#/definitions/ReplacementDevice"
          },
          "type": "array"
        },
        "rmaTypes": {
          "items": {
            "$ref": "#/definitions/RmaType"
          },
          "type": "array"
        },
        "rmas": {
          "items": {
            "$ref": "#/definitions/DeviceRma"
          },
          "type": "array"
        },
        "shipDate": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "supportedBy3pr": {
          "type": "boolean"
        },
        "warrantyEndDate": {
          "type": "string"
        },
        "warrantyExpired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Device1": {
      "properties": {
        "action": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "RMA_ACTION_NOT_SET",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hashedFullDeviceId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "state": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_STATE_NOT_SET",
            "RMA_SUBMITTED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Device2": {
      "properties": {
        "androidId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "imei": {
          "type": "string"
        },
        "lastUsedTime": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "registrationTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceRma": {
      "properties": {
        "authHold": {
          "type": "boolean"
        },
        "availableFlows": {
          "items": {
            "enum": [
              "GENERATE_PACKING_LABEL",
              "GENERATE_REPLACEMENT_CART_LINK",
              "GENERATE_SHIPPING_LABEL",
              "SUBMIT_RMA",
              "UNKNOWN_FLOW",
              "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "cancelable": {
          "type": "boolean"
        },
        "identifier": {
          "$ref": "#/definitions/RmaIdentifier"
        },
        "state": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_SUBMITTED",
            "UNKNOWN_RMA_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DifmAction": {
      "properties": {
        "difmId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DirectCarrierBilling": {
      "properties": {
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscardDraftRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscardDraftResponse": {
      "type": "object"
    },
    "Docid": {
      "properties": {
        "backend": {
          "type": "string"
        },
        "backendDocid": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANDROID_APK",
            "ANDROID_APP",
            "ANDROID_DEVELOPER",
            "ANDROID_DYNAMIC_MODULE",
            "ANDROID_IN_APP_ITEM",
            "APK",
            "APPS_RECS_TOPIC_METADATA",
            "APPS_TOPIC",
            "BADGE",
            "BADGE_CONTAINER",
            "BOOKS_EDITORIAL_ARTICLE",
            "BOOKS_EXPLORE_ANNOUNCEMENT",
            "BOOKS_EXPLORE_NEWSSTAND_POST",
            "BOOKS_EXPLORE_YOUTUBE_VIDEO",
            "BUNDLE",
            "CHROME_APP",
            "CLUSTER",
            "CONTAINER",
            "DOCUMENT_TYPE_UNSPECIFIED",
            "DYNAMIC_ANDROID_IN_APP_ITEM",
            "DYNAMIC_SUBSCRIPTION",
            "EDITORIAL",
            "ENTERTAINMENT_STORY",
            "HARDWARE",
            "HARDWARE_PROMOTION",
            "HARDWARE_SHIPPING",
            "LINK",
            "MAGAZINE",
            "MAGAZINE_ISSUE",
            "MOVIES_PERSISTED_CLUSTER",
            "MOVIE_PERSON",
            "MUSIC_ACCESS",
            "MUSIC_ADAPTIVE_HOME_CARD_IMAGE",
            "MUSIC_ALBUM",
            "MUSIC_ARTIST",
            "MUSIC_AUDIO_AD",
            "MUSIC_BROWSE_CATEGORY",
            "MUSIC_CONCERT",
            "MUSIC_NOW_MODULE_HEADING",
            "MUSIC_PODCAST_EPISODE",
            "MUSIC_PODCAST_SERIES",
            "MUSIC_SITUATION",
            "MUSIC_SONG",
            "MUSIC_STATION",
            "MUSIC_USER_PLAYLIST",
            "MUSIC_VENUE",
            "NEWS_EDITION",
            "NEWS_ISSUE",
            "OCEAN_AUDIOBOOK",
            "OCEAN_AUTHOR",
            "OCEAN_BOOK",
            "OCEAN_BOOK_SERIES",
            "PERSON",
            "PLAY_BALANCE_TOP_UP",
            "PLAY_STORED_VALUE",
            "STREAM",
            "SUBSCRIPTION",
            "SUGGEST_CONTAINER",
            "TALENT",
            "TOPIC",
            "TV_BROADCASTER",
            "TV_EPISODE",
            "TV_SEASON",
            "TV_SHOW",
            "VETTED_APP_FEATURE",
            "VIDEO_DISTRIBUTOR",
            "VOUCHER",
            "YOUTUBE_MOVIE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftInfo": {
      "properties": {
        "transitionToState": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Duplicate": {
      "properties": {
        "sourceCaseId": {
          "type": "string"
        },
        "targetCaseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EasterEggSettings": {
      "properties": {
        "disableBoostCard": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Email": {
      "properties": {
        "body": {
          "type": "string"
        },
        "deliveryInfo": {
          "$ref": "#/definitions/DeliveryInfo"
        },
        "headers": {
          "$ref": "#/definitions/Headers"
        },
        "isHtml": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "NEW",
            "REPLY",
            "REPLY_ALL",
            "UNKNOWN_EMAIL_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Email1": {
      "properties": {
        "sla": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Email2": {
      "properties": {
        "locale": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sla": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmailAddress": {
      "properties": {
        "type": {
          "enum": [
            "EXTERNAL",
            "PERSONAL_ALIAS",
            "PRODUCT_ALIAS",
            "TEAM_ALIAS",
            "UNKNOWN_EMAIL_ADDRESS_TYPE"
          ],
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmploymentInfo": {
      "properties": {
        "employmentType": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "tvcStaffingPartner": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "type": "object"
    },
    "Entitlement": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "CANCELABLE",
              "ENTITLEMENT_ACTIONS_UNKNOWN",
              "REVOKABLE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "badges": {
          "items": {
            "$ref": "#/definitions/EntitlementBadge"
          },
          "type": "array"
        },
        "billingBackend": {
          "enum": [
            "BILLING",
            "CDP",
            "PAYMENT_BACKEND_UNDEFINED"
          ],
          "type": "string"
        },
        "billingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "cancelTime": {
          "type": "string"
        },
        "componentData": {
          "$ref": "#/definitions/ComponentData"
        },
        "customerTimezone": {
          "type": "string"
        },
        "entitlementToken": {
          "type": "string"
        },
        "hasFuturePayments": {
          "type": "boolean"
        },
        "inFreeTrial": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "isCancelable": {
          "type": "boolean"
        },
        "isRevokable": {
          "type": "boolean"
        },
        "localizedCancelTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedPurchaseTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "name": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        },
        "redSignals": {
          "$ref": "#/definitions/RedSignals"
        },
        "shmoovieSignals": {
          "$ref": "#/definitions/ShmoovieSignals"
        },
        "state": {
          "enum": [
            "ACTIVE_NOT_RENEWING",
            "ACTIVE_RENEWING",
            "ENTITLEMENT_STATE_ERROR",
            "ENTITLEMENT_STATE_UNKNOWN",
            "INACTIVE"
          ],
          "type": "string"
        },
        "unpluggedSignals": {
          "$ref": "#/definitions/UnpluggedSignals"
        },
        "url": {
          "type": "string"
        },
        "utcOffset": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntitlementBadge": {
      "properties": {
        "type": {
          "enum": [
            "FAMILY_HEAD",
            "FAMILY_MEMBER",
            "FREE_TRIAL",
            "GRACE_PERIOD",
            "IN_FREE_TRIAL",
            "IOS",
            "UNDEFINED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntitlementComponent": {
      "properties": {
        "accessExpiryTime": {
          "type": "string"
        },
        "accessStartTime": {
          "type": "string"
        },
        "actions": {
          "items": {
            "enum": [
              "CANCELABLE",
              "ENTITLEMENT_ACTIONS_UNKNOWN",
              "REVOKABLE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "cancelTime": {
          "type": "string"
        },
        "componentToken": {
          "type": "string"
        },
        "entitlementId": {
          "type": "string"
        },
        "hasFuturePayments": {
          "type": "boolean"
        },
        "introductoryPrice": {
          "$ref": "#/definitions/Money"
        },
        "isActive": {
          "type": "boolean"
        },
        "isBasePackage": {
          "type": "boolean"
        },
        "isCancelable": {
          "type": "boolean"
        },
        "isRevokable": {
          "type": "boolean"
        },
        "itemId": {
          "type": "string"
        },
        "lineItemKey": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "localizedAccessExpiryTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedAccessStartTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedCancelTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedTrialEndTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "monthlyPrice": {
          "$ref": "#/definitions/Money"
        },
        "state": {
          "enum": [
            "ACTIVE_NOT_RENEWING",
            "ACTIVE_RENEWING",
            "ENTITLEMENT_STATE_ERROR",
            "ENTITLEMENT_STATE_UNKNOWN",
            "INACTIVE"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "trialEndTime": {
          "type": "string"
        },
        "trialPeriod": {
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object"
    },
    "Entry": {
      "properties": {
        "boolValue": {
          "type": "boolean"
        },
        "doubleValue": {
          "format": "double",
          "type": "number"
        },
        "enumValue": {
          "type": "string"
        },
        "int64Value": {
          "format": "int64",
          "type": "string"
        },
        "intValue": {
          "format": "int32",
          "type": "integer"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "stringValue": {
          "type": "string"
        },
        "timeValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnumValue": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EscalateRequest": {
      "properties": {
        "escalationId": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EscalateResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "EscalateSettings": {
      "type": "object"
    },
    "EscalationInfo": {
      "properties": {
        "agentTransfer": {
          "$ref": "#/definitions/AgentTransfer"
        },
        "chatTransfer": {
          "$ref": "#/definitions/ChatTransfer"
        },
        "escalationTargetName": {
          "type": "string"
        },
        "localeTransfer": {
          "$ref": "#/definitions/LocaleTransfer"
        }
      },
      "type": "object"
    },
    "EscalationTarget": {
      "properties": {
        "chat": {
          "$ref": "#/definitions/Chat"
        },
        "email": {
          "$ref": "#/definitions/Email1"
        },
        "targetId": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtendedWarrantyInfo": {
      "properties": {
        "contractId": {
          "type": "string"
        },
        "lineItemId": {
          "format": "int32",
          "type": "integer"
        },
        "price": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "ExternalToolSettings": {
      "properties": {
        "accountLookupTools": {
          "items": {
            "$ref": "#/definitions/AccountLookupTool"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FinalizeConsultNoteRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FinalizeConsultNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "FinalizeNoteRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FinalizeNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "FinishRequest": {
      "type": "object"
    },
    "FinishResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "FocusInfo": {
      "properties": {
        "profileImageUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Form": {
      "type": "object"
    },
    "FormField": {
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/FormFieldValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormField1": {
      "properties": {
        "formFieldDisplayValues": {
          "items": {
            "$ref": "#/definitions/FormFieldValue1"
          },
          "type": "array"
        },
        "formFieldLabel": {
          "type": "string"
        },
        "formFieldName": {
          "type": "string"
        },
        "formFieldValues": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormField2": {
      "properties": {
        "formFieldDisplayValues": {
          "items": {
            "$ref": "#/definitions/FormFieldValue2"
          },
          "type": "array"
        },
        "formFieldLabel": {
          "type": "string"
        },
        "formFieldName": {
          "type": "string"
        },
        "formFieldValues": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormFieldValue": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FormFieldValue1": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FormFieldValue2": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FormMetadata": {
      "properties": {
        "formFields": {
          "items": {
            "$ref": "#/definitions/FormField"
          },
          "type": "array"
        },
        "formId": {
          "type": "string"
        },
        "helpcenterName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAccountReviewStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "reviewKey": {
          "$ref": "#/definitions/ReviewKey"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAccountReviewStatusResponse": {
      "properties": {
        "reviewAction": {
          "enum": [
            "REVIEW_FIX_ACTION_UNSPECIFIED"
          ],
          "type": "string"
        },
        "reviewKey": {
          "$ref": "#/definitions/ReviewKey"
        },
        "reviewState": {
          "enum": [
            "ASSIGNED",
            "CLOSED",
            "REVIEW_STATE_UNSPECIFIED",
            "UNASSIGNED",
            "UNKNOWN_REVIEW_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAccountSignalsResponse": {
      "properties": {
        "results": {
          "items": {
            "$ref": "#/definitions/AccountSignalResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAgentSearchCountResponse": {
      "properties": {
        "searchCounts": {
          "items": {
            "$ref": "#/definitions/SearchCount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAgentUnreadCasesInfoResponse": {
      "properties": {
        "agentUnreadCasesInfo": {
          "$ref": "#/definitions/AgentUnreadCasesInfo"
        }
      },
      "type": "object"
    },
    "GetAuthenticationCreditCardTypesRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAuthenticationCreditCardTypesResponse": {
      "properties": {
        "authenticationCreditCards": {
          "items": {
            "$ref": "#/definitions/AuthenticationCreditCard"
          },
          "type": "array"
        },
        "creditCardTypes": {
          "items": {
            "enum": [
              "AMEX",
              "CARTES_BANCAIRES",
              "DISCOVER",
              "JCB",
              "MASTERCARD",
              "UKNOWN_AUTHENTICATION_CARD_TYPE",
              "VISA"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAuthenticationQuestionsRequest": {
      "properties": {
        "agentSsoCookie": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAuthenticationQuestionsResponse": {
      "properties": {
        "questionSets": {
          "items": {
            "$ref": "#/definitions/QuestionSet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAuthenticationResultRequest": {
      "properties": {
        "agentSsoCookie": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAuthenticationResultResponse": {
      "properties": {
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetBusinessListingsRequest": {
      "properties": {
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetBusinessListingsResponse": {
      "properties": {
        "listings": {
          "items": {
            "$ref": "#/definitions/Business"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetByDeviceIdResponse": {
      "properties": {
        "device": {
          "$ref": "#/definitions/Device"
        }
      },
      "type": "object"
    },
    "GetCancellationStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCancellationStatusResponse": {
      "properties": {
        "reason": {
          "enum": [
            "CANCEL_REASON_ACCIDENTAL_PURCHASE",
            "CANCEL_REASON_DEFECTIVE",
            "CANCEL_REASON_DID_NOT_RECEIVE",
            "CANCEL_REASON_FRAUD",
            "CANCEL_REASON_FRIENDLY_FRAUD",
            "CANCEL_REASON_REMORSE",
            "CANCEL_REASON_UNSPECIFIED"
          ],
          "type": "string"
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        }
      },
      "type": "object"
    },
    "GetConsultSlaRequest": {
      "properties": {
        "channel": {
          "enum": [
            "NOTE",
            "UNKNOWN_CHANNEL"
          ],
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "dynamicAttributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        },
        "issueCategory": {
          "$ref": "#/definitions/Category5"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/Category5"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetConsultSlaResponse": {
      "properties": {
        "dueByDuration": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCustomerSummaryRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "disableEventHistory": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "historyCutoff": {
          "type": "string"
        },
        "lastNumberDays": {
          "format": "int64",
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "productTypes": {
          "items": {
            "enum": [
              "BUNDLE",
              "LIVE_EVENT",
              "MOVIE",
              "PRODUCT_TYPE_UNKNOWN",
              "RED",
              "SEASON",
              "SHOW",
              "UNPLUGGED"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCustomerSummaryResponse": {
      "properties": {
        "cancelHistory": {
          "items": {
            "$ref": "#/definitions/CancelHistorySummaryInfo"
          },
          "type": "array"
        },
        "entitlements": {
          "items": {
            "$ref": "#/definitions/Entitlement"
          },
          "type": "array"
        },
        "hasOneTimeContentPurchase": {
          "type": "boolean"
        },
        "nextPageToken": {
          "type": "string"
        },
        "offsetFromUtc": {
          "format": "double",
          "type": "number"
        },
        "oneTimeContentPurchaseCount": {
          "format": "int32",
          "type": "integer"
        },
        "refundHistory": {
          "items": {
            "$ref": "#/definitions/RefundHistorySummaryInfo"
          },
          "type": "array"
        },
        "timezone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetEscalationTargetsResponse": {
      "properties": {
        "escalationTargets": {
          "items": {
            "$ref": "#/definitions/EscalationTarget"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetHardwareOrderDetailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetHardwareSignalsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetHardwareSignalsResponse": {
      "properties": {
        "hasStandardExchange": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GetLostStolenEligibilityRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetLostStolenRefundEligibilityRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetMailingAddressRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "isRequiredAction": {
          "type": "boolean"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetMyAssignStreamSearchesResponse": {
      "properties": {
        "searches": {
          "items": {
            "$ref": "#/definitions/Search"
          },
          "type": "array"
        },
        "teams": {
          "items": {
            "$ref": "#/definitions/Team"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetOneTimePurchasesRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetOneTimePurchasesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "purchases": {
          "items": {
            "$ref": "#/definitions/Purchase"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "finskyPurchaseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "locale": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetOrdersResponse": {
      "properties": {
        "orders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetPaymentMethodHijackReviewsStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "reviewKeys": {
          "items": {
            "$ref": "#/definitions/ReviewKey"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetPaymentMethodHijackReviewsStatusResponse": {
      "properties": {
        "allTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "alreadyRefundedTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "chargedBackTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "newlyRefundedTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "notFoundTransactions": {
          "items": {
            "$ref": "#/definitions/PaymentMethodHijackTransaction"
          },
          "type": "array"
        },
        "notRefundedTransactions": {
          "items": {
            "$ref": "#/definitions/PaymentMethodHijackTransaction"
          },
          "type": "array"
        },
        "resolvedTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "reviewAgentLdaps": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reviewKeys": {
          "items": {
            "$ref": "#/definitions/ReviewKey"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "CLOSED",
            "REVIEW_STATE_UNSPECIFIED",
            "UNASSIGNED",
            "UNKNOWN_REVIEW_STATE"
          ],
          "type": "string"
        },
        "underReviewTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetPaymentsInfoRequest": {
      "properties": {
        "agentSso": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetPaymentsInfoResponse": {
      "properties": {
        "paymentsInfo": {
          "$ref": "#/definitions/PaymentsInfo"
        }
      },
      "type": "object"
    },
    "GetPhoneSettingResponse": {
      "properties": {
        "phoneSetting": {
          "$ref": "#/definitions/PhoneSetting"
        }
      },
      "type": "object"
    },
    "GetRefundStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetRefundStatusResponse": {
      "properties": {
        "approvedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "approvedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "escalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "escalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "failedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "failedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "inProgress": {
          "type": "boolean"
        },
        "inProgressOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "inProgressOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "optionalEscalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "optionalEscalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "processLaterOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "processLaterOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "ACCIDENTAL_PURCHASE",
            "DEFECTIVE",
            "DID_NOT_RECEIVE",
            "FRAUD",
            "FRIENDLY_FRAUD",
            "REFUND_REASON_UNSPECIFIED",
            "REMORSE"
          ],
          "type": "string"
        },
        "rejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "rejectedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "sidewinderRejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetReplacementDetailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetRmaOrderDetailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetRoutingTargetsResponse": {
      "properties": {
        "products": {
          "items": {
            "$ref": "#/definitions/Product2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetShippingAddressRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "isRequiredAction": {
          "type": "boolean"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetShippingCustomerNameRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetShippingCustomerPhoneNumberRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetSubscriptionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "subscriptionIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetSubscriptionsResponse": {
      "properties": {
        "subscriptions": {
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GiftCard": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "redemptionDate": {
          "$ref": "#/definitions/Date"
        },
        "redemptionToken": {
          "$ref": "#/definitions/RedemptionToken"
        },
        "status": {
          "enum": [
            "ACTIVATED",
            "CANCELED",
            "CREATED",
            "EXPIRED",
            "GIFT_CARD_STATUS_UNSPECIFIED",
            "REDEEMED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareDiscount": {
      "properties": {
        "description": {
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareId": {
      "properties": {
        "esn": {
          "type": "string"
        },
        "imei": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        },
        "meid": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "unknown": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareOrderDetail": {
      "properties": {
        "hasRefund": {
          "type": "boolean"
        },
        "orderId": {
          "type": "string"
        },
        "orderTime": {
          "type": "string"
        },
        "shipments": {
          "items": {
            "$ref": "#/definitions/HardwareShipment"
          },
          "type": "array"
        },
        "taxAmount": {
          "$ref": "#/definitions/Money"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        },
        "totalAmountExcludingTax": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareOrderLineItem": {
      "properties": {
        "description": {
          "type": "string"
        },
        "discounts": {
          "items": {
            "$ref": "#/definitions/HardwareDiscount"
          },
          "type": "array"
        },
        "extendedWarrantyInfo": {
          "$ref": "#/definitions/ExtendedWarrantyInfo"
        },
        "finskyLineNumber": {
          "format": "int32",
          "type": "integer"
        },
        "hardwareId": {
          "$ref": "#/definitions/HardwareId"
        },
        "hasRefund": {
          "type": "boolean"
        },
        "hashedFullHardwareId": {
          "$ref": "#/definitions/HardwareId"
        },
        "lineItemId": {
          "type": "string"
        },
        "listPrice": {
          "$ref": "#/definitions/Money"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "productSku": {
          "type": "string"
        },
        "rmaInfo": {
          "$ref": "#/definitions/RmaInfo"
        },
        "totalWithDiscountsWithoutTax": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareOrderLineItemRefund": {
      "properties": {
        "description": {
          "type": "string"
        },
        "hardwareId": {
          "$ref": "#/definitions/HardwareId"
        },
        "lineItemId": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "shippingInfo": {
          "$ref": "#/definitions/ShippingInfo"
        }
      },
      "type": "object"
    },
    "HardwareOrderListItem": {
      "properties": {
        "authHold": {
          "type": "boolean"
        },
        "orderId": {
          "type": "string"
        },
        "orderTime": {
          "type": "string"
        },
        "replacement": {
          "type": "boolean"
        },
        "rmaNumber": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareOrderRefund": {
      "type": "object"
    },
    "HardwareOrderWorkflow": {
      "properties": {
        "hardwareShipmentInvestigation": {
          "$ref": "#/definitions/HardwareShipmentInvestigation"
        },
        "state": {
          "enum": [
            "DEFAULT",
            "IN_SHIPPING_SPECIALIST_CONSULT_FOR_LOST_STOLEN",
            "SHIPPING_SPECIALIST_CONSULT_FOR_LOST_STOLEN_COMPLETE",
            "STATE_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareRefund": {
      "properties": {
        "lineItemRefund": {
          "$ref": "#/definitions/HardwareOrderLineItemRefund"
        },
        "orderRefund": {
          "$ref": "#/definitions/HardwareOrderRefund"
        },
        "paymentDetail": {
          "$ref": "#/definitions/PaymentDetail"
        },
        "refundActions": {
          "items": {
            "enum": [
              "REFUND_ACTION_NOT_SET",
              "SEND_REFUND_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "DELIVERY_RETURNED",
            "EXTENDED_WARRANTY_CANCELATION",
            "IN_BOX_ACCESSORIES",
            "LOST_STOLEN",
            "OTHER",
            "PRICE_PROTECTION",
            "REFUND_REASON_NOT_SET",
            "RMA",
            "SHIPPING",
            "TAX_EXEMPT",
            "UNDELIVERABLE"
          ],
          "type": "string"
        },
        "refundRequestTime": {
          "type": "string"
        },
        "refundedTime": {
          "type": "string"
        },
        "shipmentRefund": {
          "$ref": "#/definitions/HardwareShipmentRefund"
        },
        "status": {
          "enum": [
            "REFUNDED",
            "REFUND_ERROR",
            "REFUND_PENDING",
            "REFUND_PENDING_RETURN",
            "REFUND_PENDING_STUCK",
            "STATUS_NOT_SET"
          ],
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareShipment": {
      "properties": {
        "addressLastUpdated": {
          "type": "string"
        },
        "addressUpdateable": {
          "type": "boolean"
        },
        "authHold": {
          "type": "boolean"
        },
        "cancelInfo": {
          "$ref": "#/definitions/CancelInfo"
        },
        "financialStatus": {
          "enum": [
            "ABANDONED",
            "ADDED",
            "APPROVED",
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "CONFIRMED",
            "DENIED",
            "DISBURSED",
            "EXPIRED",
            "FAILED",
            "FINANCIAL_STATUS_NOT_SET",
            "INDETERMINATE",
            "PENDING",
            "REFUNDED",
            "UNAVAILABLE",
            "WAITING_FOR_CLIENT_RETRY"
          ],
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/HardwareOrderLineItem"
          },
          "type": "array"
        },
        "orderActions": {
          "items": {
            "enum": [
              "CANCEL_EXTENDED_WARRANTY",
              "CANCEL_ORDER",
              "ESCALATE_CANCELED",
              "HARDWARE_ORDER_ACTION_NOT_SET",
              "INITIATE_RMA",
              "INVESTIGATE_AUTH_HOLD",
              "INVESTIGATE_CANCELED",
              "INVESTIGATE_GOOGLE_FINANCING",
              "INVESTIGATE_SHIPPING",
              "REJECT_OR_RETURN",
              "REVIEW_REFUND",
              "REVIEW_RMA",
              "REVIEW_RMA_REFUND",
              "SEND_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "paymentDetail": {
          "$ref": "#/definitions/PaymentDetail"
        },
        "shipmentId": {
          "type": "string"
        },
        "shipmentNumber": {
          "format": "int32",
          "type": "integer"
        },
        "shipmentState": {
          "enum": [
            "CANCEL",
            "FC_TRANSFER",
            "HARDWARE_SHIPMENT_STATE_NOT_SET",
            "ON_HOLD_CHARGEABLE",
            "ON_HOLD_QUANTITY",
            "ON_HOLD_WAIT",
            "READY_TO_SHIP",
            "SENT",
            "SHIPPED",
            "SPLIT"
          ],
          "type": "string"
        },
        "shippingInfo": {
          "$ref": "#/definitions/ShippingInfo"
        },
        "state": {
          "enum": [
            "CANCELED",
            "HARDWARE_ORDER_STATE_NOT_SET",
            "PROCESSING",
            "SHIPPED"
          ],
          "type": "string"
        },
        "stuckOrderAlert": {
          "enum": [
            "STUCK_INVENTORY",
            "STUCK_ORDER_ALERT_NOT_SET",
            "STUCK_PAYMENT",
            "STUCK_PROCESSING",
            "STUCK_TRANSIT"
          ],
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareShipmentInvestigation": {
      "properties": {
        "isOrderFromStore": {
          "type": "boolean"
        },
        "issue": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareShipmentRefund": {
      "properties": {
        "shipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Headers": {
      "properties": {
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fromAddress": {
          "type": "string"
        },
        "inReplyTo": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HelpCenterContent": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterContent1": {
      "properties": {
        "contentId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterContent2": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterContent3": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "requirementTypes": {
          "items": {
            "enum": [
              "INTERNET",
              "OPERATE",
              "REQUIREMENT_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "requirementsSnippetId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterDeepLinkSource": {
      "type": "object"
    },
    "Identity": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InitiatePaymentMethodHijackReviewsRequest": {
      "properties": {
        "bankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "caseId": {
          "type": "string"
        },
        "creditCard": {
          "$ref": "#/definitions/CreditCard"
        },
        "dcb": {
          "$ref": "#/definitions/DirectCarrierBilling"
        },
        "instrumentIssuerToken": {
          "type": "string"
        },
        "paypal": {
          "$ref": "#/definitions/Paypal"
        },
        "ssoCookie": {
          "type": "string"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/PaymentMethodHijackTransaction"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InitiatePaymentMethodHijackReviewsResponse": {
      "properties": {
        "result": {
          "enum": [
            "INITIATE_PAYMENT_METHOD_HIJACK_POSSIBLE_ACCOUNT_TAKEOVER",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_CREATED",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_NOT_FOUND",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_NOT_UNIQUE",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_RESOLVED",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_RESULT_UNSPECIFIED"
          ],
          "type": "string"
        },
        "reviewKeys": {
          "items": {
            "$ref": "#/definitions/ReviewKey"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Interaction": {
      "properties": {
        "caseData": {
          "$ref": "#/definitions/CaseData"
        },
        "endTime": {
          "type": "string"
        },
        "eventTypes": {
          "items": {
            "enum": [
              "ADOPTION",
              "CHAT",
              "EMAIL",
              "GOAL",
              "HANGOUT",
              "INCENTIVE",
              "MARKETING_EMAIL",
              "MEETING",
              "NOTE",
              "PHONE",
              "STUB",
              "TRAX",
              "UNKNOWN_EVENT_TYPE",
              "WEB"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "startTime": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InteractionCount": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Issue": {
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        },
        "localeCode": {
          "type": "string"
        },
        "previewText": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "subProducts": {
          "items": {
            "$ref": "#/definitions/Product"
          },
          "type": "array"
        },
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Issue1": {
      "properties": {
        "categoryPath": {
          "type": "string"
        },
        "issueId": {
          "type": "string"
        },
        "partialCategoryPath": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unresolvedDifmId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueCategoryAction": {
      "properties": {
        "issueCategories": {
          "items": {
            "$ref": "#/definitions/CategoryPath1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IssueCategorySettings": {
      "properties": {
        "allowUncategorizedCases": {
          "type": "boolean"
        },
        "categoryRootName": {
          "type": "string"
        },
        "secondaryProductRequirementCategoryId": {
          "type": "string"
        },
        "subProductTopCategories": {
          "items": {
            "$ref": "#/definitions/Category2"
          },
          "type": "array"
        },
        "topCategory": {
          "$ref": "#/definitions/Category2"
        }
      },
      "type": "object"
    },
    "IssueFailure": {
      "properties": {
        "difmId": {
          "type": "string"
        },
        "helpCenterContent": {
          "$ref": "#/definitions/HelpCenterContent1"
        },
        "reason": {
          "type": "string"
        },
        "reasonDescription": {
          "type": "string"
        },
        "supportLinks": {
          "items": {
            "$ref": "#/definitions/SupportLink"
          },
          "type": "array"
        },
        "targetId": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        },
        "targetType": {
          "enum": [
            "TARGET_TYPE_UNSPECIFIED",
            "URL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LineItem": {
      "properties": {
        "description": {
          "type": "string"
        },
        "hardwareId": {
          "type": "string"
        },
        "hashedHardwareId": {
          "type": "string"
        },
        "productSku": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "unmaskedHardwareId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListAgentActivitiesResponse": {
      "properties": {
        "agentActivities": {
          "items": {
            "$ref": "#/definitions/AgentActivity"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListAgentSettingsResponse": {
      "properties": {
        "agentSettings": {
          "items": {
            "$ref": "#/definitions/AgentSetting"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListBankAccountCountriesRequest": {
      "properties": {
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListBankAccountCountriesResponse": {
      "properties": {
        "bankAccountCountries": {
          "items": {
            "$ref": "#/definitions/BankAccountCountry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListBillingAddressesRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListBillingAddressesResponse": {
      "properties": {
        "billingAddresses": {
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListBuyersRemorseCountryCodesResponse": {
      "properties": {
        "countryCodes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCasesByAgentResponse": {
      "properties": {
        "cases": {
          "items": {
            "$ref": "#/definitions/Case"
          },
          "type": "array"
        },
        "pageToken": {
          "type": "string"
        },
        "searchCount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ListChildrenCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCommunicationsResponse": {
      "properties": {
        "communications": {
          "items": {
            "$ref": "#/definitions/Communication"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCreditCardTypesRequest": {
      "properties": {
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListCreditCardTypesResponse": {
      "properties": {
        "creditCardTypes": {
          "items": {
            "$ref": "#/definitions/CreditCardType"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCustomerIssuesResponse": {
      "properties": {
        "customerIssues": {
          "items": {
            "$ref": "#/definitions/CustomerIssue"
          },
          "type": "array"
        },
        "supportLinks": {
          "items": {
            "$ref": "#/definitions/SupportLink"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListDevicesRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListDevicesResponse": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "#/definitions/Device"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListDevicesResponse1": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "#/definitions/Device2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListHardwareOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListHardwareOrdersResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/HardwareOrderListItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListHardwareRefundsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListHardwareRefundsResponse": {
      "properties": {
        "refunds": {
          "items": {
            "$ref": "#/definitions/HardwareRefund"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListInteractionsResponse": {
      "properties": {
        "interactions": {
          "items": {
            "$ref": "#/definitions/Interaction"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListIssuesResponse": {
      "properties": {
        "issues": {
          "items": {
            "$ref": "#/definitions/Issue1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListOpportunitiesResponse": {
      "properties": {
        "eventId": {
          "type": "string"
        },
        "ineligibleReasons": {
          "items": {
            "enum": [
              "CASE_SIGNALS",
              "OTHER",
              "UNKNOWN_INELIGIBLE_REASON"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "opportunities": {
          "items": {
            "$ref": "#/definitions/Opportunity1"
          },
          "type": "array"
        },
        "program": {
          "$ref": "#/definitions/Program1"
        }
      },
      "type": "object"
    },
    "ListOtherDevicesRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListOtherDevicesResponse": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "#/definitions/Device1"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPaymentInstrumentTypeInfosResponse": {
      "properties": {
        "paymentInstrumentTypes": {
          "items": {
            "$ref": "#/definitions/PaymentInstrumentTypeInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListProductsResponse": {
      "properties": {
        "allowedProductIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "products": {
          "items": {
            "$ref": "#/definitions/Product1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPropertiesResponse": {
      "properties": {
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPurchasedAppsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPurchasedAppsResponse": {
      "properties": {
        "apps": {
          "items": {
            "$ref": "#/definitions/PurchasedApp"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPurchasedBooksRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPurchasedBooksResponse": {
      "properties": {
        "books": {
          "items": {
            "$ref": "#/definitions/PurchasedBook"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPurchasedVideosRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPurchasedVideosResponse": {
      "properties": {
        "videos": {
          "items": {
            "$ref": "#/definitions/PurchasedVideo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListRelatedCommunicationsResponse": {
      "properties": {
        "relatedCommunications": {
          "items": {
            "$ref": "#/definitions/RelatedCommunications"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListResolutionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "resolutions": {
          "items": {
            "$ref": "#/definitions/Resolution"
          },
          "type": "array"
        },
        "resultsToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListRmasResponse": {
      "properties": {
        "rmas": {
          "items": {
            "$ref": "#/definitions/Rma"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListSettingsResponse": {
      "properties": {
        "agentSetting": {
          "$ref": "#/definitions/AgentSetting"
        },
        "searchSetting": {
          "$ref": "#/definitions/SearchSetting"
        }
      },
      "type": "object"
    },
    "ListSettingsResponse1": {
      "properties": {
        "allowedProductIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/Settings"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListShippingAddressesRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListShippingAddressesResponse": {
      "properties": {
        "shippingAddresses": {
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListSubscriptionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListSubscriptionsResponse": {
      "properties": {
        "activeSubscriptions": {
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "type": "array"
        },
        "inactiveSubscriptions": {
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTopLevelCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        },
        "consultCategoryInfo": {
          "$ref": "#/definitions/CategoryInfo"
        }
      },
      "type": "object"
    },
    "ListTransactionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "endAmount": {
          "$ref": "#/definitions/Money"
        },
        "endDate": {
          "type": "string"
        },
        "instrumentLastFourCharacters": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queryId": {
          "type": "string"
        },
        "queryIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        },
        "startAmount": {
          "$ref": "#/definitions/Money"
        },
        "startDate": {
          "type": "string"
        },
        "statuses": {
          "items": {
            "enum": [
              "CANCELLED",
              "CHARGED",
              "CHARGED_BACK",
              "DECLINED",
              "OTHER_STATUS",
              "PENDING",
              "REFUNDED",
              "REJECTED",
              "UNKNOWN_WALLET_TRANSACTION_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTransactionsRequest1": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "entitlementToken": {
          "type": "string"
        },
        "entitlementTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "includeUpcomingCharges": {
          "type": "boolean"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "productTypes": {
          "items": {
            "enum": [
              "BUNDLE",
              "LIVE_EVENT",
              "MOVIE",
              "PRODUCT_TYPE_UNKNOWN",
              "RED",
              "SEASON",
              "SHOW",
              "UNPLUGGED"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListTransactionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "results": {
          "items": {
            "$ref": "#/definitions/WalletTransaction"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTransactionsResponse1": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "type": "array"
        },
        "upcomingCharge": {
          "items": {
            "$ref": "#/definitions/Charge"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocaleTransfer": {
      "properties": {
        "sourceLocale": {
          "type": "string"
        },
        "targetLocale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocalizedTimestamp": {
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "utcOffset": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LogDataAccessRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "event": {
          "enum": [
            "CLICK_TO_REVEAL_PHONE_NUMBER",
            "DATA_ACCESS_EVENT_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LogResolutionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "resolutionEvent": {
          "$ref": "#/definitions/ResolutionEvent"
        }
      },
      "type": "object"
    },
    "LogTroubleshooterActivityRequest": {
      "properties": {
        "activity": {
          "$ref": "#/definitions/ResolutionActivity"
        },
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LookupGiftCardRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "lookupCriteria": {
          "$ref": "#/definitions/CardLookupCriteria"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LookupGiftCardResponse": {
      "properties": {
        "giftCard": {
          "$ref": "#/definitions/GiftCard"
        }
      },
      "type": "object"
    },
    "LostStolenDevice": {
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "deviceSku": {
          "type": "string"
        },
        "originalOrderId": {
          "type": "string"
        },
        "originalShipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LostStolenEligibility": {
      "properties": {
        "reasons": {
          "items": {
            "enum": [
              "DEVICE_ACTIVATED",
              "INELIGIBLE_REASON_NOT_SET",
              "TOO_MANY_CLAIMS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LostStolenRefundEligibility": {
      "properties": {
        "isEligible": {
          "type": "boolean"
        },
        "reasons": {
          "items": {
            "enum": [
              "DEVICE_ACTIVATED",
              "INELIGIBLE_REASON_NOT_SET",
              "TOO_MANY_CLAIMS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LostStolenShipment": {
      "properties": {
        "originalOrderId": {
          "type": "string"
        },
        "originalShipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MailingAddress": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressee": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "stateProvinceCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MarkOriginalDeviceReceivedRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MatchDetail": {
      "properties": {
        "matchPairs": {
          "items": {
            "$ref": "#/definitions/MatchPair"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MatchPair": {
      "properties": {
        "matchTypes": {
          "items": {
            "enum": [
              "EXACT",
              "PREFIX",
              "SPELLING_CORRECTION",
              "STEMMING",
              "SYNONYM",
              "UNKNOWN_MATCH_TYPE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "matchedTerm": {
          "type": "string"
        },
        "queryTerm": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MobileScreenshareAcceptEvent": {
      "type": "object"
    },
    "MobileScreenshareAutoDeclineEvent": {
      "properties": {
        "declineType": {
          "enum": [
            "APP_UPDATE",
            "EXISTING_INVITATION",
            "NEWER_INVITATION",
            "SAFE_MODE",
            "UNKNOWN_AUTO_DECLINE_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MobileScreenshareCancelEvent": {
      "type": "object"
    },
    "MobileScreenshareCleanupEvent": {
      "type": "object"
    },
    "MobileScreenshareConnectEvent": {
      "type": "object"
    },
    "MobileScreenshareDeclineEvent": {
      "type": "object"
    },
    "MobileScreenshareDisconnectEvent": {
      "type": "object"
    },
    "MobileScreenshareEndEvent": {
      "properties": {
        "agentEnded": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MobileScreenshareEvent": {
      "properties": {
        "acceptEvent": {
          "$ref": "#/definitions/MobileScreenshareAcceptEvent"
        },
        "autoDeclineEvent": {
          "$ref": "#/definitions/MobileScreenshareAutoDeclineEvent"
        },
        "cancelEvent": {
          "$ref": "#/definitions/MobileScreenshareCancelEvent"
        },
        "cleanupEvent": {
          "$ref": "#/definitions/MobileScreenshareCleanupEvent"
        },
        "connectEvent": {
          "$ref": "#/definitions/MobileScreenshareConnectEvent"
        },
        "declineEvent": {
          "$ref": "#/definitions/MobileScreenshareDeclineEvent"
        },
        "disconnectEvent": {
          "$ref": "#/definitions/MobileScreenshareDisconnectEvent"
        },
        "endEvent": {
          "$ref": "#/definitions/MobileScreenshareEndEvent"
        },
        "initiateEvent": {
          "$ref": "#/definitions/MobileScreenshareInitiateEvent"
        },
        "invitationId": {
          "type": "string"
        },
        "inviteEvent": {
          "$ref": "#/definitions/MobileScreenshareInviteEvent"
        },
        "receivedEvent": {
          "$ref": "#/definitions/MobileScreenshareReceivedEvent"
        },
        "startingConnectEvent": {
          "$ref": "#/definitions/MobileScreenshareStartingConnectEvent"
        }
      },
      "type": "object"
    },
    "MobileScreenshareInitiateEvent": {
      "type": "object"
    },
    "MobileScreenshareInviteEvent": {
      "type": "object"
    },
    "MobileScreenshareReceivedEvent": {
      "type": "object"
    },
    "MobileScreenshareStartingConnectEvent": {
      "type": "object"
    },
    "Money": {
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "nanos": {
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NeedsInfoRequest": {
      "type": "object"
    },
    "NeedsInfoResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Node": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "isInvalid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Node1": {
      "properties": {
        "isValid": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nodeId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node2": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node3": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node4": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node5": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Note": {
      "properties": {
        "author": {
          "$ref": "#/definitions/Identity"
        },
        "inResponseTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "noteType": {
          "enum": [
            "PHONE",
            "RESOLUTION_EVENT",
            "UNKNOWN_NOTE_TYPE",
            "USER"
          ],
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "recipients": {
          "items": {
            "$ref": "#/definitions/Identity"
          },
          "type": "array"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferedSolutionRequest": {
      "properties": {
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferedSolutionResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Opportunity": {
      "properties": {
        "campaignName": {
          "type": "string"
        },
        "opportunityName": {
          "type": "string"
        },
        "opportunityType": {
          "enum": [
            "ACCOUNT_FEATURE_ADOPTION",
            "CAMPAIGN_GOAL",
            "UNKNOWN_OPPORTUNITY_TYPE"
          ],
          "type": "string"
        },
        "points": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Opportunity1": {
      "properties": {
        "campaigns": {
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "type": "array"
        },
        "category": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opportunityType": {
          "enum": [
            "ACCOUNT_FEATURE_ADOPTION",
            "CAMPAIGN_GOAL",
            "UNKNOWN_OPPORTUNITY_TYPE"
          ],
          "type": "string"
        },
        "points": {
          "format": "int32",
          "type": "integer"
        },
        "rank": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Order": {
      "properties": {
        "checkoutOrderId": {
          "type": "string"
        },
        "finskyPurchaseId": {
          "type": "string"
        },
        "isNotRefundable": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "orderItems": {
          "items": {
            "$ref": "#/definitions/OrderItem"
          },
          "type": "array"
        },
        "orderValue": {
          "$ref": "#/definitions/Money"
        },
        "paymentMethod": {
          "enum": [
            "ACCOUNTING",
            "BILLING_ACCOUNT",
            "CARD",
            "CARRIER_BILLING",
            "DIRECT_DEBIT",
            "ELECTRONIC_FUNDS_TRANSFER",
            "GIFT_CARD",
            "MONETIZATION_CHANNEL",
            "PAYMENT_METHOD_UNSPECIFIED",
            "PAYPAL",
            "PROXY_CARD",
            "REDIRECT",
            "STORED_VALUE",
            "TERMS"
          ],
          "type": "string"
        },
        "paymentState": {
          "enum": [
            "ADDED",
            "CANCELLED",
            "CANCELLING",
            "CHARGEABLE",
            "CHARGED",
            "CHARGING",
            "COMPING",
            "CONTESTED",
            "CONTESTING",
            "ONE_SIDED_REFUNDED",
            "ONE_SIDED_REFUNDING",
            "PARTIAL_REFUNDING",
            "PAYMENT_DECLINED",
            "PAYMENT_STATE_UNSPECIFIED",
            "PENDING",
            "REFUNDED",
            "REFUNDING",
            "REJECTED",
            "REVIEW",
            "STUCK",
            "UNRECOVERABLE"
          ],
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        },
        "vertical": {
          "enum": [
            "ANDROID_APPS",
            "BOOKS",
            "COMMERCE",
            "DEVICES",
            "MAGAZINES",
            "MOVIES_AND_TV",
            "MULTI_CONTAINER",
            "MUSIC",
            "VERTICAL_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderItem": {
      "properties": {
        "contentType": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offerType": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "vertical": {
          "enum": [
            "ANDROID_APPS",
            "BOOKS",
            "COMMERCE",
            "DEVICES",
            "MAGAZINES",
            "MOVIES_AND_TV",
            "MULTI_CONTAINER",
            "MUSIC",
            "VERTICAL_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderRefundStatusInfo": {
      "properties": {
        "order": {
          "$ref": "#/definitions/Order"
        },
        "statusMessage": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Path": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Path1": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Path2": {
      "properties": {
        "categoryIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentDetail": {
      "properties": {
        "instrumentDescription": {
          "type": "string"
        },
        "instrumentType": {
          "enum": [
            "BANK_ACCOUNT",
            "BILLING_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "FINANCING",
            "GOOGLE_STANDARD_TOKENIZED",
            "INSTRUMENT_TYPE_NOT_SET",
            "MONETIZATION_CHANNEL",
            "NETBANKING",
            "PAYPAL",
            "STORED_VALUE_CLOSED_LOOP_PLAY",
            "STORED_VALUE_OPEN_LOOP"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentDetail1": {
      "properties": {
        "instrumentDescription": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentInstrumentTypeInfo": {
      "properties": {
        "instrumentDescription": {
          "type": "string"
        },
        "instrumentTypeToken": {
          "type": "string"
        },
        "type": {
          "enum": [
            "BANK_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "OTHER",
            "PAYMENT_METHOD_TYPE_UNSPECIFIED",
            "PAYPAL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodHijackTransaction": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "date": {
          "$ref": "#/definitions/Date"
        }
      },
      "type": "object"
    },
    "PaymentsInfo": {
      "properties": {
        "numPaymentsAccounts": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PaymentsSuggestion": {
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Paypal": {
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Paypal1": {
      "properties": {
        "account": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Period": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "enum": [
            "DAY",
            "MONTH",
            "UNITS_UNKNOWN",
            "YEAR"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneCall": {
      "properties": {
        "callId": {
          "type": "string"
        },
        "countryCode": {
          "format": "int32",
          "type": "integer"
        },
        "obfuscatedLineNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneInfo": {
      "properties": {
        "ucid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneNumber": {
      "properties": {
        "countryCode": {
          "format": "int32",
          "type": "integer"
        },
        "countryCodeSource": {
          "enum": [
            "COUNTRY_CODE_SOURCE_UNSPECIFIED",
            "FROM_DEFAULT_COUNTRY",
            "FROM_NUMBER_WITHOUT_PLUS_SIGN",
            "FROM_NUMBER_WITH_IDD",
            "FROM_NUMBER_WITH_PLUS_SIGN"
          ],
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "isValid": {
          "type": "boolean"
        },
        "lineNumber": {
          "type": "string"
        },
        "nationalNumber": {
          "format": "uint64",
          "type": "string"
        },
        "numberOfLeadingZeros": {
          "format": "int32",
          "type": "integer"
        },
        "preferredDomesticCarrierCode": {
          "type": "string"
        },
        "rawInput": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneSetting": {
      "properties": {
        "agentId": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhysicalMailingAddress": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressee": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "stateProvinceCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Pitch": {
      "properties": {
        "opportunities": {
          "items": {
            "$ref": "#/definitions/Opportunity"
          },
          "type": "array"
        },
        "opportunitiesDisplayType": {
          "enum": [
            "APOLLO",
            "TRADITIONAL",
            "UNKNOWN_OPPORTUNITIES_DISPLAY_TYPE"
          ],
          "type": "string"
        },
        "program": {
          "$ref": "#/definitions/Program"
        },
        "totalPoints": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Pitch1": {
      "properties": {
        "campaignIndex": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "$ref": "#/definitions/PitchId"
        },
        "opportunityIndex": {
          "format": "int32",
          "type": "integer"
        },
        "opportunityType": {
          "enum": [
            "ACCOUNT_FEATURE_ADOPTION",
            "CAMPAIGN_GOAL",
            "UNKNOWN_OPPORTUNITY_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PitchId": {
      "properties": {
        "campaignId": {
          "format": "int64",
          "type": "string"
        },
        "opportunityId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Product": {
      "properties": {
        "agentCategories": {
          "items": {
            "$ref": "#/definitions/Category"
          },
          "type": "array"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "routingCategory": {
          "$ref": "#/definitions/Category"
        }
      },
      "type": "object"
    },
    "Product1": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Product2": {
      "properties": {
        "isPinned": {
          "type": "boolean"
        },
        "locales": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "routingTargets": {
          "items": {
            "$ref": "#/definitions/RoutingTarget"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProductCount": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductTransfer": {
      "properties": {
        "sourceProduct": {
          "$ref": "#/definitions/Product"
        },
        "targetProduct": {
          "$ref": "#/definitions/Product"
        }
      },
      "type": "object"
    },
    "Program": {
      "properties": {
        "programName": {
          "type": "string"
        },
        "targetPoints": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Program1": {
      "properties": {
        "name": {
          "type": "string"
        },
        "targetPoints": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Property": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Purchase": {
      "properties": {
        "accessEndTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "cancelTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "eligibleForSelfServeRefund": {
          "type": "boolean"
        },
        "entitlementToken": {
          "type": "string"
        },
        "isPreorder": {
          "type": "boolean"
        },
        "isRefundable": {
          "type": "boolean"
        },
        "isRefunded": {
          "type": "boolean"
        },
        "isRevokable": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "paymentDescription": {
          "type": "string"
        },
        "paymentMethod": {
          "enum": [
            "BANK_ACCOUNT",
            "BILLING_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "FINANCING",
            "GOOGLE_STANDARD_TOKENIZED",
            "MONETIZATION_CHANNEL",
            "NETBANKING",
            "PAYMENT_METHOD_UNKNOWN",
            "PAYPAL",
            "STORED_VALUE_CLOSED_LOOP_PLAY",
            "STORED_VALUE_OPEN_LOOP"
          ],
          "type": "string"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "purchaseTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "purchaseType": {
          "enum": [
            "PURCHASE",
            "PURCHASE_TYPE_UNKNOWN",
            "RENTAL"
          ],
          "type": "string"
        },
        "qualityCap": {
          "enum": [
            "HD",
            "SD",
            "UHD",
            "UNKNOWN_CAP"
          ],
          "type": "string"
        },
        "source": {
          "enum": [
            "CONTENT_PURCHASE_SOURCE_UNKNOWN",
            "GOOGLE_PLAY",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "transactionAmount": {
          "$ref": "#/definitions/Money"
        },
        "transactionStatus": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "TRANSACTION_STATUS_UNKNOWN"
          ],
          "type": "string"
        },
        "transactionTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "transactionToken": {
          "type": "string"
        },
        "viewTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        }
      },
      "type": "object"
    },
    "PurchasedApp": {
      "properties": {
        "appId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchasedBook": {
      "properties": {
        "bookId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchasedVideo": {
      "properties": {
        "name": {
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        },
        "videoId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuestionSet": {
      "properties": {
        "attemptsRemaining": {
          "format": "int32",
          "type": "integer"
        },
        "authenticationBankAccounts": {
          "items": {
            "$ref": "#/definitions/AuthenticationBankAccount"
          },
          "type": "array"
        },
        "authenticationCreditCards": {
          "items": {
            "$ref": "#/definitions/AuthenticationCreditCard1"
          },
          "type": "array"
        },
        "availableQuestions": {
          "items": {
            "enum": [
              "BANK_ACCOUNT",
              "CREDIT_CARD",
              "DCB",
              "PAYPAL",
              "PHONE_NUMBER",
              "PLAY_BALANCE",
              "POSTAL_CODE",
              "UNKNOWN_QUESTION",
              "WALLET_BALANCE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "questionSetType": {
          "enum": [
            "PAYMENT_METHOD_QUESTION_SET",
            "PHONE_NUMBER_QUESTION_SET",
            "POSTAL_CODE_QUESTION_SET",
            "UNKNOWN_QUESTION_SET_TYPE"
          ],
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/AvailableQuestion"
          },
          "type": "array"
        },
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        },
        "totalNumberOfAttempts": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "QuestionSource": {
      "properties": {
        "questionSourceType": {
          "enum": [
            "FOCUS",
            "PAYMENTS",
            "UNKNOWN_QUESTION_SOURCE_TYPE"
          ],
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuickResponse": {
      "properties": {
        "quickResponseName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReadCaseRequest": {
      "properties": {
        "readTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RealTime": {
      "properties": {
        "attributeMap": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "issue": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/RealTimePool"
        },
        "realTimeEvents": {
          "items": {
            "$ref": "#/definitions/RealTimeEvent"
          },
          "type": "array"
        },
        "requester": {
          "$ref": "#/definitions/Identity"
        }
      },
      "type": "object"
    },
    "RealTimeEvent": {
      "properties": {
        "chatMessage": {
          "$ref": "#/definitions/ChatMessage"
        },
        "createTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RealTimePool": {
      "properties": {
        "poolId": {
          "type": "string"
        },
        "poolName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RealTimeSetting": {
      "properties": {
        "agentSettingId": {
          "type": "string"
        },
        "enableChatQueueSounds": {
          "type": "boolean"
        },
        "enableModalChatNotifications": {
          "type": "boolean"
        },
        "forceChatQueueNotifications": {
          "type": "boolean"
        },
        "gaiaRobotEntityId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "plusPageEntityId": {
          "type": "string"
        },
        "quickResponses": {
          "items": {
            "$ref": "#/definitions/QuickResponse"
          },
          "type": "array"
        },
        "realTimeSettingId": {
          "type": "string"
        },
        "supportIdentityType": {
          "enum": [
            "GAIA_ROBOT",
            "PLUS_PAGE",
            "UNKNOWN_SUPPORT_IDENTITY_TYPE"
          ],
          "type": "string"
        },
        "switchCaseOnChatFocus": {
          "type": "boolean"
        },
        "useSupportIdentity": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RecentlyViewedSource": {
      "type": "object"
    },
    "RedSignals": {
      "properties": {
        "source": {
          "enum": [
            "FAMILY_MEMBER",
            "GOOGLE_PLAY",
            "ITUNES",
            "OTHER",
            "RED_SOURCE_UNKNOWN",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "subscriptionSignals": {
          "$ref": "#/definitions/SubscriptionSignals"
        }
      },
      "type": "object"
    },
    "RedeemGiftCardRequest": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "redemptionToken": {
          "$ref": "#/definitions/RedemptionToken"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RedeemGiftCardResponse": {
      "properties": {
        "amountRedeemed": {
          "$ref": "#/definitions/Money"
        },
        "availableBalance": {
          "$ref": "#/definitions/Money"
        },
        "redemptionStatus": {
          "enum": [
            "CURRENCY_MISMATCH",
            "CUSTOMER_CONTROLS_FORBID",
            "EXCEEDS_BALANCE_LIMITS",
            "MULTIPLE_PAYMENT_ACCOUNTS",
            "NO_STORED_VALUE_INSTRUMENT",
            "REDEMPTION_STATUS_UNSPECIFIED",
            "SUCCESS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RedemptionToken": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundDetail": {
      "properties": {
        "paymentDetail": {
          "$ref": "#/definitions/PaymentDetail1"
        },
        "refundEntries": {
          "items": {
            "$ref": "#/definitions/RefundEntry"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "DELIVERY_RETURNED",
            "EXTENDED_WARRANTY_CANCELATION",
            "IN_BOX_ACCESSORIES",
            "LOST_STOLEN",
            "OTHER",
            "PRICE_PROTECTION",
            "REFUND_REASON_NOT_SET",
            "RMA",
            "SHIPPING",
            "TAX_EXEMPT",
            "UNDELIVERABLE"
          ],
          "type": "string"
        },
        "refundTotal": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "RefundEntry": {
      "properties": {
        "refundAmount": {
          "$ref": "#/definitions/Money"
        },
        "refundDescription": {
          "type": "string"
        },
        "refundRequestTime": {
          "type": "string"
        },
        "refundTime": {
          "type": "string"
        },
        "status": {
          "enum": [
            "REFUNDED",
            "REFUND_ERROR",
            "REFUND_PENDING",
            "REFUND_PENDING_RETURN",
            "REFUND_PENDING_STUCK",
            "STATUS_NOT_SET"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundHardwareOrderRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundHardwareOrderResponse": {
      "properties": {
        "reason": {
          "enum": [
            "FAILURE_REASON_NOT_SET",
            "REQUEST_ALREADY_EXISTS"
          ],
          "type": "string"
        },
        "refundId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundHistorySummaryInfo": {
      "properties": {
        "numberOfRefunds": {
          "format": "int32",
          "type": "integer"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "refundResult": {
          "enum": [
            "ALREADY_REFUNDED",
            "DENIED_CUSTOMER_ABUSE",
            "DENIED_FRAUD",
            "DENIED_REFUND_EXCEEDS_COURTESY_LIMIT",
            "ISSUED",
            "PERMANENT_REFUND_FAILED",
            "REFUND_RESULT_UNKNOWN",
            "REFUND_RETRIABLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "orders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "ACCIDENTAL_PURCHASE",
            "DEFECTIVE",
            "DID_NOT_RECEIVE",
            "FRAUD",
            "FRIENDLY_FRAUD",
            "REFUND_REASON_UNSPECIFIED",
            "REMORSE"
          ],
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundOrdersResponse": {
      "properties": {
        "approvedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "approvedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "escalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "escalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "failedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "failedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "inProgress": {
          "type": "boolean"
        },
        "inProgressOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "inProgressOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "optionalEscalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "optionalEscalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "processLaterOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "processLaterOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "rejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "rejectedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "sidewinderRejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundTransactionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "forceRefund": {
          "type": "boolean"
        },
        "refundRequestEntries": {
          "items": {
            "$ref": "#/definitions/TransactionRefundRequestEntry"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundTransactionsResponse": {
      "properties": {
        "refundStatuses": {
          "items": {
            "$ref": "#/definitions/TransactionRefundResponseStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RelatedCommunications": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "communications": {
          "items": {
            "$ref": "#/definitions/Communication"
          },
          "type": "array"
        },
        "relations": {
          "items": {
            "$ref": "#/definitions/Relation1"
          },
          "type": "array"
        },
        "slaTime": {
          "type": "string"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Relation": {
      "properties": {
        "duplicate": {
          "$ref": "#/definitions/Duplicate"
        }
      },
      "type": "object"
    },
    "Relation1": {
      "properties": {
        "borgAlertId": {
          "type": "string"
        },
        "buganizerId": {
          "format": "int64",
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "legalId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pcrId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceCaseId": {
          "type": "string"
        },
        "sourceCommunicationId": {
          "type": "string"
        },
        "spixerId": {
          "type": "string"
        },
        "state": {
          "enum": [
            "PENDING",
            "RESOLVED",
            "UNKNOWN_RELATION_STATUS"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "BLOCKING",
            "CONSULT",
            "DUPLICATE",
            "SPLIT",
            "UNKNOWN_RELATION_TYPE"
          ],
          "type": "string"
        },
        "walletPaymentMethodHijackReviewIds": {
          "$ref": "#/definitions/WalletPaymentMethodHijackReviewIds"
        },
        "walletSignInReviewIds": {
          "$ref": "#/definitions/WalletSignInReviewIds"
        }
      },
      "type": "object"
    },
    "ReleaseRequest": {
      "type": "object"
    },
    "ReleaseResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "ReplacementDetail": {
      "properties": {
        "shipments": {
          "items": {
            "$ref": "#/definitions/ReplacementShipment"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ReplacementDevice": {
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "countryExceptionEligible": {
          "type": "boolean"
        },
        "device": {
          "type": "string"
        },
        "gpn": {
          "type": "string"
        },
        "rmaType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReplacementShipment": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "INITIATE_RMA",
              "INVESTIGATE_AUTH_HOLD",
              "INVESTIGATE_SHIPPING",
              "REPLACEMENT_SHIPMENT_ACTION_NOT_SET",
              "REVIEW_RMA",
              "SEND_SHIPMENT_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "actualDeliveryTime": {
          "type": "string"
        },
        "actualShipDate": {
          "$ref": "#/definitions/Date"
        },
        "carrierName": {
          "type": "string"
        },
        "estimatedDeliveryEndDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedDeliveryStartDate": {
          "$ref": "#/definitions/Date"
        },
        "isPastEstimatedDeliveryDate": {
          "type": "boolean"
        },
        "lastEventTime": {
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/LineItem"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "DELIVERED",
            "ERROR",
            "IN_TRANSIT",
            "NOT_SHIPPED",
            "REPLACEMENT_SHIPMENT_STATE_NOT_SET",
            "REPLACEMENT_SHIPMENT_STATE_UNKNOWN"
          ],
          "type": "string"
        },
        "trackingNumber": {
          "type": "string"
        },
        "trackingUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestDeviceSignalsAcceptEvent": {
      "properties": {
        "deviceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestDeviceSignalsCancelEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsCleanupEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsDeclineEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsEvent": {
      "properties": {
        "acceptEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsAcceptEvent"
        },
        "cancelEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsCancelEvent"
        },
        "cleanupEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsCleanupEvent"
        },
        "declineEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsDeclineEvent"
        },
        "initiateEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsInitiateEvent"
        },
        "invitationId": {
          "type": "string"
        },
        "inviteEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsInviteEvent"
        },
        "receivedEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsReceivedEvent"
        },
        "timeoutEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsTimeoutEvent"
        }
      },
      "type": "object"
    },
    "RequestDeviceSignalsInitiateEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsInviteEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsReceivedEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsTimeoutEvent": {
      "type": "object"
    },
    "Requirement": {
      "properties": {
        "requirementType": {
          "enum": [
            "INTERNET",
            "OPERATE",
            "REQUIREMENT_NOT_SET"
          ],
          "type": "string"
        },
        "snippetId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Resolution": {
      "properties": {
        "cannedResponse": {
          "$ref": "#/definitions/CannedResponse1"
        },
        "helpCenter": {
          "$ref": "#/definitions/HelpCenterContent2"
        },
        "matchReason": {
          "type": "string"
        },
        "matchTerms": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "postActions": {
          "items": {
            "$ref": "#/definitions/Action"
          },
          "type": "array"
        },
        "preActions": {
          "items": {
            "$ref": "#/definitions/Action"
          },
          "type": "array"
        },
        "score": {
          "format": "int32",
          "type": "integer"
        },
        "snippet": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "troubleshooter": {
          "$ref": "#/definitions/TroubleShooter"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow1"
        }
      },
      "type": "object"
    },
    "Resolution1": {
      "properties": {
        "helpCenterContent": {
          "$ref": "#/definitions/HelpCenterContent3"
        },
        "score": {
          "format": "float",
          "type": "number"
        },
        "status": {
          "enum": [
            "ESCALATED",
            "FAILED",
            "RESOLUTION_STATUS_NOT_SET",
            "SUCCEEDED"
          ],
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResolutionActivity": {
      "properties": {
        "helpCenterArticleId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "ESCALATED",
            "FAILED",
            "RESOLUTION_STATUS_NOT_SET",
            "SUCCEEDED"
          ],
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResolutionEvent": {
      "properties": {
        "articleId": {
          "type": "string"
        },
        "categories": {
          "items": {
            "$ref": "#/definitions/CategoryPath1"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "resolutionId": {
          "type": "string"
        },
        "troubleshooterId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResolutionOpened": {
      "properties": {
        "agentActivitySource": {
          "$ref": "#/definitions/AgentActivitySource"
        },
        "cannedResponse": {
          "$ref": "#/definitions/CannedResponse"
        },
        "deepLinkSource": {
          "$ref": "#/definitions/HelpCenterDeepLinkSource"
        },
        "helpCenterContent": {
          "$ref": "#/definitions/HelpCenterContent"
        },
        "recentlyViewedSource": {
          "$ref": "#/definitions/RecentlyViewedSource"
        },
        "searchSource": {
          "$ref": "#/definitions/ResolutionSearchSource"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        }
      },
      "type": "object"
    },
    "ResolutionSearchSource": {
      "properties": {
        "query": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReviewKey": {
      "properties": {
        "review3Id": {
          "type": "string"
        },
        "reviewId": {
          "type": "string"
        },
        "targetUnderReview": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Rma": {
      "properties": {
        "addressUpdateable": {
          "type": "boolean"
        },
        "bizappSubmitted": {
          "type": "boolean"
        },
        "caseId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "exchangeDeviceName": {
          "type": "string"
        },
        "exchangeGpn": {
          "type": "string"
        },
        "extendedWarrantyClaimId": {
          "type": "string"
        },
        "failureReason": {
          "type": "string"
        },
        "failureType": {
          "enum": [
            "FAILURE_TYPE_NOT_SET",
            "FAILURE_TYPE_UNKNOWN",
            "NOTES_INVALID",
            "PHONE_NUMBER_INVALID",
            "RMA_ALREADY_OPEN_FOR_ASSET",
            "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
            "SHIPPING_ADDRESS_CITY_INVALID",
            "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
            "SHIPPING_ADDRESS_INVALID",
            "SHIPPING_ADDRESS_LINE_1_INVALID",
            "SHIPPING_ADDRESS_LINE_2_INVALID",
            "SHIPPING_ADDRESS_LINE_3_INVALID",
            "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
            "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
            "WALLET_ACCOUNT_REQUIRED"
          ],
          "type": "string"
        },
        "failures": {
          "items": {
            "$ref": "#/definitions/RmaFailure"
          },
          "type": "array"
        },
        "gpn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "orderNumber": {
          "type": "string"
        },
        "packingLabelRequired": {
          "type": "boolean"
        },
        "reasonCodeIdentifier": {
          "type": "string"
        },
        "replacementCartLink": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "rmaCategory": {
          "type": "string"
        },
        "rmaId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "rmaSubcategory": {
          "type": "string"
        },
        "rmaType": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "shippingAddress": {
          "$ref": "#/definitions/MailingAddress"
        },
        "shippingLabelRequired": {
          "type": "boolean"
        },
        "shippingProvider": {
          "enum": [
            "FEDEX",
            "UNKNOWN_SHIPPING_PROVIDER",
            "UPS"
          ],
          "type": "string"
        },
        "shippingTrackingNumber": {
          "type": "string"
        },
        "state": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_SUBMITTED",
            "UNKNOWN_RMA_STATE"
          ],
          "type": "string"
        },
        "submitTime": {
          "type": "string"
        },
        "warrantyException": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaCategory": {
      "properties": {
        "categoryName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "reasonCodes": {
          "items": {
            "$ref": "#/definitions/RmaReasonCode"
          },
          "type": "array"
        },
        "subcategories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RmaDescription": {
      "properties": {
        "notes": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "rmaCategory": {
          "type": "string"
        },
        "rmaSubcategory": {
          "type": "string"
        },
        "rmaType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaDevice": {
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "hashedFullDeviceId": {
          "type": "string"
        },
        "shipmentInfo": {
          "$ref": "#/definitions/ShippingInfo1"
        }
      },
      "type": "object"
    },
    "RmaFailure": {
      "properties": {
        "failureExceptionMessage": {
          "type": "string"
        },
        "failureType": {
          "enum": [
            "FAILURE_TYPE_NOT_SET",
            "FAILURE_TYPE_UNKNOWN",
            "NOTES_INVALID",
            "PHONE_NUMBER_INVALID",
            "RMA_ALREADY_OPEN_FOR_ASSET",
            "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
            "SHIPPING_ADDRESS_CITY_INVALID",
            "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
            "SHIPPING_ADDRESS_INVALID",
            "SHIPPING_ADDRESS_LINE_1_INVALID",
            "SHIPPING_ADDRESS_LINE_2_INVALID",
            "SHIPPING_ADDRESS_LINE_3_INVALID",
            "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
            "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
            "WALLET_ACCOUNT_REQUIRED"
          ],
          "type": "string"
        },
        "validationReason": {
          "enum": [
            "INVALID",
            "TOO_LONG",
            "VALIDATION_FAILURE_NOT_SET"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaIdentifier": {
      "properties": {
        "rmaId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaInfo": {
      "properties": {
        "originalRmaNumber": {
          "type": "string"
        },
        "originalRmaState": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_STATE_NOT_SET",
            "RMA_SUBMITTED"
          ],
          "type": "string"
        },
        "replacementRmaNumber": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "RMA_ACTION_NOT_SET",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaOrderDetail": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "ACTION_NOT_SET",
              "CANCEL_AUTH_HOLD",
              "CANCEL_RMA",
              "MARK_ORIGINAL_DEVICE_RECEIVED_IN_STANDARD_EXCHANGE",
              "OTHER_ACTIONS_REQUIRE_AUTH",
              "REGENERATE_CART_LINK",
              "RESEND_PACKING_LABEL",
              "RESEND_SHIPPING_LABEL",
              "SEND_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "authHold": {
          "type": "boolean"
        },
        "description": {
          "$ref": "#/definitions/RmaDescription"
        },
        "originalDevice": {
          "$ref": "#/definitions/RmaDevice"
        },
        "originalOrderId": {
          "type": "string"
        },
        "originalShipmentId": {
          "type": "string"
        },
        "refundDetails": {
          "$ref": "#/definitions/RefundDetail"
        },
        "replacementDevice": {
          "$ref": "#/definitions/RmaDevice"
        },
        "replacementOrderId": {
          "type": "string"
        },
        "replacementShipmentId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCEL_AUTH_HOLD_PENDING",
            "CLOSED",
            "PENDING_RETURN",
            "RECEIVED_OLD_DEVICE",
            "REFUND_PENDING",
            "RMA_INCOMPLETE",
            "STATUS_NOT_SET",
            "STATUS_UNAVAILABLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaReasonCode": {
      "properties": {
        "id": {
          "type": "string"
        },
        "subcategory": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaType": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "ADVANCED_EXCHANGE",
              "EXCHANGE",
              "EXCHANGE_WITHOUT_RETURN",
              "REPAIR",
              "RETURN",
              "UNKNOWN_ACTION",
              "WARRANTY_REFUND"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "rmaCategories": {
          "items": {
            "$ref": "#/definitions/RmaCategory"
          },
          "type": "array"
        },
        "typeName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RouteRequest": {
      "properties": {
        "locale": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "routingId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RouteResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "RoutingInfo": {
      "properties": {
        "agentTransfer": {
          "$ref": "#/definitions/AgentTransfer"
        },
        "chatTransfer": {
          "$ref": "#/definitions/ChatTransfer"
        },
        "localeTransfer": {
          "$ref": "#/definitions/LocaleTransfer"
        },
        "productTransfer": {
          "$ref": "#/definitions/ProductTransfer"
        },
        "routingTargetName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RoutingTarget": {
      "properties": {
        "chat": {
          "$ref": "#/definitions/Chat1"
        },
        "email": {
          "$ref": "#/definitions/Email2"
        },
        "targetId": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RunRmaStepsRequest": {
      "properties": {
        "action": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "draftMessageId": {
          "type": "string"
        },
        "shippingAddress": {
          "$ref": "#/definitions/MailingAddress"
        },
        "skipAddressValidation": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        },
        "steps": {
          "items": {
            "enum": [
              "GENERATE_PACKING_LABEL_STEP",
              "GENERATE_REPLACEMENT_CART_LINK_STEP",
              "GENERATE_SHIPPING_LABEL_STEP",
              "RMA_RUN_STEP_NOT_SET",
              "UNKNOWN_RMA_STEP",
              "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL_STEP"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RunRmaStepsResponse": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "RunWorkflowRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "draftMessageId": {
          "type": "string"
        },
        "rmaId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "shippingAddress": {
          "$ref": "#/definitions/MailingAddress"
        },
        "ssoCookie": {
          "type": "string"
        },
        "steps": {
          "items": {
            "enum": [
              "GENERATE_PACKING_LABEL",
              "GENERATE_REPLACEMENT_CART_LINK",
              "GENERATE_SHIPPING_LABEL",
              "SUBMIT_RMA",
              "UNKNOWN_FLOW",
              "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RunWorkflowResponse": {
      "properties": {
        "result": {
          "$ref": "#/definitions/WorkflowResult"
        }
      },
      "type": "object"
    },
    "SaveRmaRequest": {
      "properties": {
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "SaveRmaResponse": {
      "properties": {
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "Search": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "searchId": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchAccountReviewsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchAccountReviewsResponse": {
      "properties": {
        "review": {
          "items": {
            "$ref": "#/definitions/AccountReview"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchCount": {
      "properties": {
        "casesType": {
          "enum": [
            "ASSIGNED",
            "UNKNOWN_CASE_TYPE",
            "WAITING"
          ],
          "type": "string"
        },
        "dueByStatus": {
          "enum": [
            "NONE",
            "OVERDUE",
            "UNKNOWN_DUE_BY_STATUS",
            "URGENT"
          ],
          "type": "string"
        },
        "searchCount": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchMultipleCategoryInfosRequest": {
      "properties": {
        "filterConsultCategories": {
          "type": "boolean"
        },
        "maximumResults": {
          "format": "int32",
          "type": "integer"
        },
        "productIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "query": {
          "type": "string"
        },
        "topCategoryPaths": {
          "items": {
            "$ref": "#/definitions/CategoryPath"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "endAmount": {
          "$ref": "#/definitions/Money"
        },
        "endDate": {
          "type": "string"
        },
        "includeFreeOrders": {
          "type": "boolean"
        },
        "instrumentLastFourCharacters": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queryId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "startAmount": {
          "$ref": "#/definitions/Money"
        },
        "startDate": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchOrdersResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "orders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchSetting": {
      "properties": {
        "activeTeamSearches": {
          "items": {
            "$ref": "#/definitions/TeamSearches"
          },
          "type": "array"
        },
        "disabledTeamSearches": {
          "items": {
            "$ref": "#/definitions/TeamSearches"
          },
          "type": "array"
        },
        "enableAssignStream": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SendEmailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "sendDelay": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SendEmailResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "SendRmaRequest": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        },
        "skipAddressValidation": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SendRmaResponse": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "SetCallbackNumberRequest": {
      "properties": {
        "phoneNumber": {
          "$ref": "#/definitions/PhoneNumber"
        }
      },
      "type": "object"
    },
    "SetCallbackNumberResponse": {
      "type": "object"
    },
    "Settings": {
      "properties": {
        "authenticationSettings": {
          "$ref": "#/definitions/AuthenticationSettings"
        },
        "consultSettings": {
          "$ref": "#/definitions/ConsultSettings"
        },
        "displayName": {
          "type": "string"
        },
        "dueTimeCalculationMethod": {
          "enum": [
            "DUE_TIME_CALCULATION_METHOD_NOT_SET",
            "RESOLUTION_TARGET",
            "SLA"
          ],
          "type": "string"
        },
        "easterEggSettings": {
          "$ref": "#/definitions/EasterEggSettings"
        },
        "escalateSettings": {
          "$ref": "#/definitions/EscalateSettings"
        },
        "externalToolSettings": {
          "$ref": "#/definitions/ExternalToolSettings"
        },
        "feedbackProductId": {
          "type": "string"
        },
        "issueCategorySettings": {
          "$ref": "#/definitions/IssueCategorySettings"
        },
        "name": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "supportedLocales": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ShippingAddress": {
      "properties": {
        "address": {
          "$ref": "#/definitions/PhysicalMailingAddress"
        },
        "addressLines": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ShippingCustomerName": {
      "properties": {
        "customerName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingCustomerPhoneNumber": {
      "properties": {
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingInfo": {
      "properties": {
        "actualDeliveryTime": {
          "type": "string"
        },
        "actualShipDate": {
          "$ref": "#/definitions/Date"
        },
        "carrierName": {
          "type": "string"
        },
        "estimatedDeliveryEndDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedDeliveryStartDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedShipDate": {
          "$ref": "#/definitions/Date"
        },
        "isDelivered": {
          "type": "boolean"
        },
        "isPastEstimatedDeliveryDate": {
          "type": "boolean"
        },
        "lastEventTime": {
          "type": "string"
        },
        "shippingType": {
          "enum": [
            "BUDGET_GROUND",
            "GROUND",
            "INTERNATIONAL_PRIORITY",
            "OVERNIGHT",
            "SHIPPING_TYPE_NOT_SET",
            "STANDARD",
            "TWO_DAY_AIR"
          ],
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        },
        "trackingNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingInfo1": {
      "properties": {
        "actualDeliveryTime": {
          "type": "string"
        },
        "actualShipDate": {
          "$ref": "#/definitions/Date"
        },
        "carrierName": {
          "type": "string"
        },
        "estimatedDeliveryEndDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedDeliveryStartDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedShipDate": {
          "$ref": "#/definitions/Date"
        },
        "shipmentState": {
          "enum": [
            "NOT_YET_SHIPPED",
            "SHIPMENT_ERROR",
            "SHIPPED",
            "SHIPPING_INFO_STATE_NOT_SET"
          ],
          "type": "string"
        },
        "trackingNumber": {
          "type": "string"
        },
        "trackingUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShmoovieSignals": {
      "properties": {
        "episode": {
          "type": "string"
        },
        "expireTimeFromPurchaseTime": {
          "type": "string"
        },
        "localizedExpireTimeFromPurchaseTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedRentalExpireTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedRentalStartWatchByTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedRentalStartWatchTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "model": {
          "enum": [
            "PURCHASE",
            "RENTAL",
            "SELLING_MODEL_UNKNOWN"
          ],
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "rentalExpireTime": {
          "type": "string"
        },
        "rentalStartWatchByTime": {
          "type": "string"
        },
        "rentalStartWatchTime": {
          "type": "string"
        },
        "season": {
          "type": "string"
        },
        "source": {
          "enum": [
            "GOOGLE_PLAY",
            "SHMOOVIE_SOURCE_UNKNOWN",
            "YOUTUBE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShowSummaryAction": {
      "properties": {
        "accountInfo": {
          "items": {
            "enum": [
              "ACCOUNT_INFO_UNSPECIFIED",
              "ALERT_REVIEW"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "declinedTxCount": {
          "format": "int32",
          "type": "integer"
        },
        "pendingTxCount": {
          "format": "int32",
          "type": "integer"
        },
        "recentStartTime": {
          "type": "string"
        },
        "rejectedTxCount": {
          "format": "int32",
          "type": "integer"
        },
        "searchContext": {
          "type": "string"
        },
        "transactionNotFoundDifmId": {
          "format": "int32",
          "type": "integer"
        },
        "transactionNotFoundScriptId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SidewinderRole": {
      "properties": {
        "isOnsite": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Source": {
      "properties": {
        "agentEmailAddress": {
          "type": "string"
        },
        "atlasProduct": {
          "type": "string"
        },
        "casesService": {
          "enum": [
            "BACKEND",
            "CHAT",
            "EMAIL_PROCESSOR",
            "FINISHER",
            "OUTBOX_SENDER",
            "QUALITY_REVIEW_SELECTOR",
            "UNKNOWN_CASES_SERVICE",
            "WIPEOUT"
          ],
          "type": "string"
        },
        "externalService": {
          "enum": [
            "CUF",
            "MEDLEY",
            "MOJO",
            "UDS",
            "UNKNOWN_EXTERNAL_SERVICE"
          ],
          "type": "string"
        },
        "robotEmailAddress": {
          "type": "string"
        },
        "routingRuleId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpamRequest": {
      "type": "object"
    },
    "SpamResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "SplitRequest": {
      "properties": {
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SplitResponse": {
      "properties": {
        "sourceCase": {
          "$ref": "#/definitions/Case"
        },
        "targetCase": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "SplitTender": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "instrument": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "UNKNOWN_WALLET_TRANSACTION_STATUS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Status": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "additionalProperties": {},
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "StepResult": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "status": {
          "enum": [
            "FAILED",
            "NOT_PROCESSED",
            "SUCCESSFUL",
            "UNKNOWN_STEP_STATUS"
          ],
          "type": "string"
        },
        "step": {
          "enum": [
            "GENERATE_PACKING_LABEL",
            "GENERATE_REPLACEMENT_CART_LINK",
            "GENERATE_SHIPPING_LABEL",
            "SUBMIT_RMA",
            "UNKNOWN_FLOW",
            "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubmitRmaRequest": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubmitRmaResponse": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "isDraftMessageUpdated": {
          "type": "boolean"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "Subscription": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "billingPeriod": {
          "enum": [
            "BILLING_PERIOD_UNSPECIFIED",
            "DAY",
            "HOUR",
            "MONTH",
            "SEASONAL",
            "SIX_MONTHS",
            "THREE_MONTHS",
            "WEEK",
            "YEAR"
          ],
          "type": "string"
        },
        "cancelDate": {
          "type": "string"
        },
        "docid": {
          "$ref": "#/definitions/Docid"
        },
        "firstChargedDate": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isTrial": {
          "type": "boolean"
        },
        "offerType": {
          "enum": [
            "BUNDLED",
            "GROUP_LICENSE",
            "LICENSE",
            "NONE",
            "OFFER_TYPE_UNSPECIFIED",
            "PREORDER",
            "PURCHASE",
            "PURCHASE_HIGH_DEF",
            "RENTAL",
            "RENTAL_HIGH_DEF",
            "SAMPLE",
            "SUBSCRIPTION",
            "SUBSCRIPTION_CONTENT"
          ],
          "type": "string"
        },
        "paymentDeclinedDate": {
          "type": "string"
        },
        "purchaseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "renewDate": {
          "type": "string"
        },
        "state": {
          "enum": [
            "ACTIVE",
            "CANCELED",
            "EXPIRED",
            "IN_GRACE_PERIOD",
            "SUBSCRIPTION_STATE_UNSPECIFIED"
          ],
          "type": "string"
        },
        "terminateDate": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "vertical": {
          "enum": [
            "ANDROID_APPS",
            "BOOKS",
            "COMMERCE",
            "DEVICES",
            "MAGAZINES",
            "MOVIES_AND_TV",
            "MULTI_CONTAINER",
            "MUSIC",
            "VERTICAL_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionComponent": {
      "properties": {
        "componentData": {
          "$ref": "#/definitions/ComponentData"
        },
        "name": {
          "type": "string"
        },
        "token": {
          "$ref": "#/definitions/ComponentToken"
        }
      },
      "type": "object"
    },
    "SubscriptionSignals": {
      "properties": {
        "featureExpireTime": {
          "type": "string"
        },
        "freeTrialPeriod": {
          "$ref": "#/definitions/Period"
        },
        "introductoryPeriod": {
          "$ref": "#/definitions/Period"
        },
        "introductoryPrice": {
          "$ref": "#/definitions/Money"
        },
        "localizedFeatureExpireTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedNextPaymentTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "nextPaymentTime": {
          "type": "string"
        },
        "pricePerMonth": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "SuggestNewEmailHeadersResponse": {
      "properties": {
        "fromHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "toHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestNoteHeadersResponse": {
      "properties": {
        "fromHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "toHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestPaymentInstrumentIssuerResponse": {
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "#/definitions/PaymentsSuggestion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestReplyEmailHeadersResponse": {
      "properties": {
        "ccHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "fromHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "toHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestResolutionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuggestResolutionsResponse": {
      "properties": {
        "resolutions": {
          "items": {
            "$ref": "#/definitions/SuggestedResolution"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestedResolution": {
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CANNED_RESPONSE",
            "EXTERNAL_HC",
            "INTERNAL_HC",
            "SUGGESTED_RESOLUTION_TYPE_UNSPECIFIED",
            "TROUBLESHOOTER",
            "WORKFLOW"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SummarizeResponse": {
      "properties": {
        "adwordsCid": {
          "type": "boolean"
        },
        "emailAddress": {
          "type": "boolean"
        },
        "summary": {
          "$ref": "#/definitions/Summary"
        }
      },
      "type": "object"
    },
    "Summary": {
      "properties": {
        "casesByChannel": {
          "items": {
            "$ref": "#/definitions/ChannelCount"
          },
          "type": "array"
        },
        "casesByProduct": {
          "items": {
            "$ref": "#/definitions/ProductCount"
          },
          "type": "array"
        },
        "mostRecentClosedCase": {
          "$ref": "#/definitions/Interaction"
        },
        "mostRecentOpenCase": {
          "$ref": "#/definitions/Interaction"
        },
        "openCases": {
          "$ref": "#/definitions/InteractionCount"
        },
        "totalCases": {
          "$ref": "#/definitions/InteractionCount"
        }
      },
      "type": "object"
    },
    "SupportLink": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "linkUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TakeRequest": {
      "type": "object"
    },
    "TakeResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Tax": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "type": {
          "enum": [
            "SALES_TAX",
            "TELECOM_TAX",
            "UNKNOWN_TAX"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Team": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TeamSearches": {
      "properties": {
        "searchIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Timezone": {
      "properties": {
        "utcOffset": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Transaction": {
      "properties": {
        "billingBackend": {
          "enum": [
            "BILLING",
            "CDP",
            "PAYMENT_BACKEND_UNDEFINED"
          ],
          "type": "string"
        },
        "isProratedCharge": {
          "type": "boolean"
        },
        "isRefund": {
          "type": "boolean"
        },
        "isRefundable": {
          "type": "boolean"
        },
        "isRefunded": {
          "type": "boolean"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/TransactionLineItem"
          },
          "type": "array"
        },
        "localizedRefundTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedTransactionTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "name": {
          "type": "string"
        },
        "orderCode": {
          "type": "string"
        },
        "paymentDescription": {
          "type": "string"
        },
        "paymentMethod": {
          "enum": [
            "BANK_ACCOUNT",
            "BILLING_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "FINANCING",
            "GOOGLE_STANDARD_TOKENIZED",
            "MONETIZATION_CHANNEL",
            "NETBANKING",
            "PAYMENT_METHOD_UNKNOWN",
            "PAYPAL",
            "STORED_VALUE_CLOSED_LOOP_PLAY",
            "STORED_VALUE_OPEN_LOOP"
          ],
          "type": "string"
        },
        "refundReason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "refundTime": {
          "type": "string"
        },
        "state": {
          "enum": [
            "TRANSACTION_NOT_REFUNDABLE",
            "TRANSACTION_REFUNDABLE",
            "TRANSACTION_REFUNDED",
            "TRANSACTION_STATE_UNKNOWN"
          ],
          "type": "string"
        },
        "textDescription": {
          "type": "string"
        },
        "transactionAmount": {
          "$ref": "#/definitions/Money"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionStatus": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "TRANSACTION_STATUS_UNKNOWN"
          ],
          "type": "string"
        },
        "transactionTime": {
          "type": "string"
        },
        "transactionToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransactionIdentifier": {
      "properties": {
        "orderId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        },
        "youtubeVideoId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransactionLineItem": {
      "properties": {
        "componentKey": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "lineItemIndex": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "tax": {
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TransactionRefundRequestEntry": {
      "properties": {
        "refundReason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "transactionTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TransactionRefundResponseStatus": {
      "properties": {
        "refundResult": {
          "enum": [
            "ALREADY_REFUNDED",
            "DENIED_CUSTOMER_ABUSE",
            "DENIED_FRAUD",
            "DENIED_REFUND_EXCEEDS_COURTESY_LIMIT",
            "ISSUED",
            "PERMANENT_REFUND_FAILED",
            "REFUND_RESULT_UNKNOWN",
            "REFUND_RETRIABLE"
          ],
          "type": "string"
        },
        "transactionToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransactionsSummary": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TransferAction": {
      "properties": {
        "resolutionId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TransferRequest": {
      "properties": {
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "TroubleShooter": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootAccountRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "searchRecentStartTimestamp": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootAccountResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/Action1"
        }
      },
      "type": "object"
    },
    "TroubleshootIssueRequest": {
      "properties": {
        "answers": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootIssueResponse": {
      "properties": {
        "autocheckResults": {
          "items": {
            "$ref": "#/definitions/AutocheckResult"
          },
          "type": "array"
        },
        "issues": {
          "items": {
            "$ref": "#/definitions/Issue1"
          },
          "type": "array"
        },
        "questions": {
          "items": {
            "enum": [
              "DEVICE_TYPE",
              "PURCHASED_APP_NAME",
              "PURCHASED_BOOK_NAME",
              "PURCHASED_VIDEO_NAME",
              "QUESTION_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "requirements": {
          "items": {
            "$ref": "#/definitions/Requirement"
          },
          "type": "array"
        },
        "resolutions": {
          "items": {
            "$ref": "#/definitions/Resolution1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TroubleshootTransactionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "searchContext": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionIdentifier": {
          "$ref": "#/definitions/TransactionIdentifier"
        },
        "transactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootTransactionResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/Action1"
        }
      },
      "type": "object"
    },
    "TroubleshooterSession": {
      "properties": {
        "autocheckResults": {
          "items": {
            "$ref": "#/definitions/AutocheckResult"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "issueId": {
          "type": "string"
        },
        "questions": {
          "items": {
            "enum": [
              "DEVICE_TYPE",
              "PURCHASED_APP_NAME",
              "PURCHASED_BOOK_NAME",
              "PURCHASED_VIDEO_NAME",
              "QUESTION_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "requirements": {
          "items": {
            "$ref": "#/definitions/Requirement"
          },
          "type": "array"
        },
        "resolutions": {
          "items": {
            "$ref": "#/definitions/Resolution1"
          },
          "type": "array"
        },
        "sessionId": {
          "type": "string"
        },
        "subIssues": {
          "items": {
            "$ref": "#/definitions/Issue1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnassignRequest": {
      "type": "object"
    },
    "UnassignResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UnauthorizedChargesWorkflow": {
      "properties": {
        "paymentMethodHijackReviewKeys": {
          "items": {
            "$ref": "#/definitions/CasesReviewKey"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ACCOUNT_TAKE_OVER_PLAYDC_REFUNDING",
            "CANCELLED",
            "COMPLETED",
            "FRIENDLY_FRAUD_PLAYDC_REFUNDING",
            "INITITIATED",
            "PAYMENT_METHOD_HIJACK_REVIEWING",
            "PAYMENT_METHOD_HIJACK_REVIEW_COMPLETED",
            "STATE_UNSPECIFIED"
          ],
          "type": "string"
        },
        "userTransactionIds": {
          "items": {
            "$ref": "#/definitions/CasesTransactionIdentifier"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnblockRequest": {
      "properties": {
        "borgAlertId": {
          "type": "string"
        },
        "buganizerId": {
          "format": "int64",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pcrId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "UnblockResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UnpluggedSignals": {
      "properties": {
        "components": {
          "items": {
            "$ref": "#/definitions/EntitlementComponent"
          },
          "type": "array"
        },
        "source": {
          "enum": [
            "FAMILY_MEMBER",
            "INDIVIDUAL",
            "ITUNES",
            "OTHER",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "subscriptionSignals": {
          "$ref": "#/definitions/SubscriptionSignals"
        }
      },
      "type": "object"
    },
    "UnreadCaseInfo": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "isAssigned": {
          "type": "boolean"
        },
        "unreadTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnspamRequest": {
      "type": "object"
    },
    "UnspamResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UpdateAccountsRequest": {
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAccountsResponse": {
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAgentCategoriesRequest": {
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/Path2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAgentCategoriesResponse": {
      "properties": {
        "product": {
          "$ref": "#/definitions/Product"
        },
        "subProducts": {
          "items": {
            "$ref": "#/definitions/Product"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAttributesRequest": {
      "properties": {
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAttributesResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UpdateConsultNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateConsultNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "UpdateContactEmailRequest": {
      "properties": {
        "contactEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateContactEmailResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateContactNameRequest": {
      "properties": {
        "contactName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateContactNameResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateCustomerAttributesRequest": {
      "properties": {
        "adwordsExternalCid": {
          "type": "string"
        },
        "adwordsInternalCid": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateCustomerAttributesResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateDisconnectedChannelRequest": {
      "properties": {
        "channel": {
          "enum": [
            "CHANNEL_UNSPECIFIED",
            "CHAT",
            "PHONE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateEligibleProgramRequest": {
      "properties": {
        "programName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateEligibleProgramResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateEmailRequest": {
      "properties": {
        "afterSendSetting": {
          "$ref": "#/definitions/AfterSendSetting"
        },
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "footerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fromAddress": {
          "type": "string"
        },
        "headerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateEmailResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "UpdateLocaleRequest": {
      "properties": {
        "locale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateLocaleResponse": {
      "properties": {
        "issue": {
          "$ref": "#/definitions/Issue"
        }
      },
      "type": "object"
    },
    "UpdateNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "noteType": {
          "enum": [
            "PHONE",
            "UNKNOWN_NOTE_TYPE",
            "USER"
          ],
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "UpdateOwnerResponse": {
      "type": "object"
    },
    "UpdateProductRequest": {
      "properties": {
        "fieldMask": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "product": {
          "$ref": "#/definitions/Product"
        }
      },
      "type": "object"
    },
    "UpdateSummaryRequest": {
      "properties": {
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateSummaryResponse": {
      "properties": {
        "issue": {
          "$ref": "#/definitions/Issue"
        }
      },
      "type": "object"
    },
    "UpdateWorkflowRequest": {
      "properties": {
        "fieldMask": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "workflow": {
          "$ref": "#/definitions/CasesWorkflow"
        }
      },
      "type": "object"
    },
    "ValidateConsultCategory": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/ValidateConsultNode"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ValidateConsultFormRequest": {
      "properties": {
        "consultFormHelpCenterName": {
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "originatingCategory": {
          "$ref": "#/definitions/ValidateConsultCategory"
        },
        "poolId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/ValidateConsultCategory"
          },
          "type": "array"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValidateConsultFormResponse": {
      "properties": {
        "validationErrors": {
          "items": {
            "enum": [
              "CATEGORY",
              "CONSULT_FORM",
              "POOL",
              "TEAM",
              "VALIDATION_ERROR_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ValidateConsultNode": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VerificationResult": {
      "properties": {
        "answerResults": {
          "items": {
            "enum": [
              "FAILED",
              "PASSED",
              "UNABLE_TO_VERIFY",
              "UNKNOWN_ANSWER_RESULT"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "attemptsRemaining": {
          "format": "int32",
          "type": "integer"
        },
        "questionSetType": {
          "enum": [
            "PAYMENT_METHOD_QUESTION_SET",
            "PHONE_NUMBER_QUESTION_SET",
            "POSTAL_CODE_QUESTION_SET",
            "UNKNOWN_QUESTION_SET_TYPE"
          ],
          "type": "string"
        },
        "verificationResults": {
          "items": {
            "$ref": "#/definitions/Status"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VerifyGiftCardRequest": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "partialCode": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VerifyGiftCardResponse": {
      "properties": {
        "redemptionToken": {
          "$ref": "#/definitions/RedemptionToken"
        }
      },
      "type": "object"
    },
    "WaitForConsultRequest": {
      "type": "object"
    },
    "WaitForConsultResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "WalletPaymentMethodHijackReviewIds": {
      "properties": {
        "ids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WalletSignInReviewIds": {
      "properties": {
        "ids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WalletTransaction": {
      "properties": {
        "creationTime": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "instrument": {
          "type": "string"
        },
        "isAuthorizationHold": {
          "type": "boolean"
        },
        "originalAmount": {
          "$ref": "#/definitions/Money"
        },
        "playSubscriptionId": {
          "type": "string"
        },
        "productLinks": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "productVertical": {
          "enum": [
            "DRIVE",
            "FI",
            "HARDWARE",
            "PLAY_APPS",
            "PLAY_BOOKS",
            "PLAY_GIFT_CARDS",
            "PLAY_MOVIES",
            "PLAY_MUSIC",
            "PLAY_NEWSSTAND",
            "PRODUCT_VERTICAL_UNSPECIFIED",
            "UNKNOWN",
            "WALLET_ANDROID_PAY",
            "WALLET_APP",
            "WALLET_HANDS_FREE",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "qualityCap": {
          "enum": [
            "HD",
            "SD",
            "UHD",
            "UNKNOWN_QUALITY",
            "VR"
          ],
          "type": "string"
        },
        "splitTenders": {
          "items": {
            "$ref": "#/definitions/SplitTender"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "UNKNOWN_WALLET_TRANSACTION_STATUS"
          ],
          "type": "string"
        },
        "transactionId": {
          "$ref": "#/definitions/TransactionIdentifier"
        }
      },
      "type": "object"
    },
    "Workflow": {
      "properties": {
        "troubleshooterType": {
          "enum": [
            "NOE",
            "PLAY_APPS",
            "PLAY_PURCHASES",
            "TROUBLESHOOTER_TYPE_NOT_SET"
          ],
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Workflow1": {
      "properties": {
        "checkForDraft": {
          "type": "boolean"
        },
        "troubleshooterType": {
          "enum": [
            "NOE",
            "PLAY_APPS",
            "PLAY_PURCHASES",
            "TROUBLESHOOTER_TYPE_NOT_SET"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowInfo": {
      "properties": {
        "workflowIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowResult": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        },
        "stepResults": {
          "items": {
            "$ref": "#/definitions/StepResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "agentActivities.list",
      "title": "agentActivities.list",
      "description": "Lists an agent activities.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer"
          },
          "pageToken": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListAgentActivitiesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "agentActivities.create",
      "title": "agentActivities.create",
      "description": "Adds an agent activity.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateAgentActivityRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/AgentActivity"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "agentActivities.createFromHelpCenterDeepLink",
      "title": "agentActivities.createFromHelpCenterDeepLink",
      "description": "Creates an agent activity from a help center deep link.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateFromHelpCenterDeepLinkRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/AgentActivity"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "agentSettings.list",
      "title": "agentSettings.list",
      "description": "List all agent settings.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListAgentSettingsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.getAgentUnreadCasesInfo",
      "title": "cases.getAgentUnreadCasesInfo",
      "description": "Gets information about unread cases for the calling agent. Only intended for use by the Cases frontend.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAgentUnreadCasesInfoResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.autoAssign",
      "title": "cases.autoAssign",
      "description": "Auto assign a case to the calling user.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/AutoAssignRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/AutoAssignResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.createNewCase",
      "title": "cases.createNewCase",
      "description": "Creates a new case (Note this is not a true CRUD method as no resource is being passed in).",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateNewCaseRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateNewCaseResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.getAgentSearchCount",
      "title": "cases.getAgentSearchCount",
      "description": "Gets the search count for cases associated with the calling agent, and begin sending Tango notifications when the count changes.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAgentSearchCountResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.listByAgent",
      "title": "cases.listByAgent",
      "description": "Lists cases associated with the agent. Only intended for use by the Cases frontend.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseType": {
            "type": "string",
            "enum": [
              "ASSIGNED",
              "RECENT",
              "UNKNOWN_CASE_TYPE",
              "WAITING"
            ]
          },
          "pageSize": {
            "type": "integer"
          },
          "pageToken": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListCasesByAgentResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.validateConsultForm",
      "title": "cases.validateConsultForm",
      "description": "Validates that consult forms are properly configured.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ValidateConsultFormRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ValidateConsultFormResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "categoryInfos.batchGet",
      "title": "categoryInfos.batchGet",
      "description": "Batch gets category info. (Best effort, returns valid category infos only) Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "names": {
            "type": "array"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/BatchGetCategoryInfosResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "categoryInfos.listTopLevel",
      "title": "categoryInfos.listTopLevel",
      "description": "Lists gKMS top level category info.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTopLevelCategoryInfosResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "categoryInfos.search",
      "title": "categoryInfos.search",
      "description": "Searches category info. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "baselineOnly": {
            "type": "boolean"
          },
          "filterByParentCategoryId": {
            "type": "integer"
          },
          "filterConsultCategories": {
            "type": "boolean"
          },
          "maximumResults": {
            "type": "integer"
          },
          "productIds": {
            "type": "array"
          },
          "query": {
            "type": "string"
          },
          "topCategoryPathNodeIds": {
            "type": "array"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SearchCategoryInfosResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "categoryInfos.searchMultiple",
      "title": "categoryInfos.searchMultiple",
      "description": "Searches multiple category info.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/SearchMultipleCategoryInfosRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SearchCategoryInfosResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.list",
      "title": "communications.list",
      "description": "Lists communications that match the filter.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseIds": {
            "type": "array"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListCommunicationsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.buildNewEmail",
      "title": "communications.buildNewEmail",
      "description": "Builds an email template for the first email on a case.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/BuildNewEmailRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/BuildNewEmailResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.buildReplyEmail",
      "title": "communications.buildReplyEmail",
      "description": "Builds an email template for a reply to an existing email.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/BuildReplyEmailRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/BuildReplyEmailResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.createConsultNote",
      "title": "communications.createConsultNote",
      "description": "Creates a draft note that replies to a consult note.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateConsultNoteRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateConsultNoteResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.createEmail",
      "title": "communications.createEmail",
      "description": "Creates a draft email and adds it to a case.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateEmailRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateEmailResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.createNote",
      "title": "communications.createNote",
      "description": "Creates a note.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateNoteRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateNoteResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.listRelated",
      "title": "communications.listRelated",
      "description": "Lists communications that are related to each other, including the communications on the requested case. Related communications include consult communications from target cases. Currently, only related communications from consult cases are supported.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "contextCaseId": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListRelatedCommunicationsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.suggestReplyEmailHeaders",
      "title": "communications.suggestReplyEmailHeaders",
      "description": "Suggests a set of email headers for an email reply to another email. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "messageId": {
            "type": "string"
          },
          "replyType": {
            "type": "string",
            "enum": [
              "REPLY",
              "REPLY_ALL",
              "UNKNOWN_REPLY_TYPE"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SuggestReplyEmailHeadersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "customerInteractions.list",
      "title": "customerInteractions.list",
      "description": "List customer interactions.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "adwordsCid": {
            "type": "string"
          },
          "caseId": {
            "type": "string"
          },
          "channels": {
            "type": "array"
          },
          "emailAddress": {
            "type": "string"
          },
          "excludeCases": {
            "type": "array"
          },
          "pageSize": {
            "type": "integer"
          },
          "pageToken": {
            "type": "string"
          },
          "products": {
            "type": "array"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListInteractionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "customerInteractions.summarize",
      "title": "customerInteractions.summarize",
      "description": "Summary statistics about the cutomer's interaction history. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "adwordsCid": {
            "type": "string"
          },
          "caseId": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "excludeCases": {
            "type": "array"
          },
          "startTime": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SummarizeResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "customerIssues.list",
      "title": "customerIssues.list",
      "description": "List issues and their resolutions for a customer.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListCustomerIssuesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "devices.list",
      "title": "devices.list",
      "description": "List devices.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "excludeGoogleStoreOrders": {
            "type": "boolean"
          },
          "excludeRmaTypes": {
            "type": "boolean"
          },
          "pageSize": {
            "type": "integer"
          },
          "pageToken": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListDevicesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "devices.getById",
      "title": "devices.getById",
      "description": "Gets the specified device by any device ID.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetByDeviceIdResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "devices.updateOwner",
      "title": "devices.updateOwner",
      "description": "Updates the owner of a device. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "address.addressLine1": {
            "type": "string"
          },
          "address.addressLine2": {
            "type": "string"
          },
          "address.addressLine3": {
            "type": "string"
          },
          "address.addressee": {
            "type": "string"
          },
          "address.city": {
            "type": "string"
          },
          "address.countryCode": {
            "type": "string"
          },
          "address.postalCode": {
            "type": "string"
          },
          "address.stateProvinceCode": {
            "type": "string"
          },
          "deviceId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateOwnerResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "giftCards.checkRedeemer",
      "title": "giftCards.checkRedeemer",
      "description": "If the card is already redeemed by somebody else, customer can try a few users.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CheckRedeemerRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CheckRedeemerResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "giftCards.lookup",
      "title": "giftCards.lookup",
      "description": "Finds a gift card based on its full redemption code or activation number. With full redemption code, returns redemption token on success.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/LookupGiftCardRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LookupGiftCardResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "giftCards.redeem",
      "title": "giftCards.redeem",
      "description": "Redeems a gift card to a customer using the redemption token.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/RedeemGiftCardRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RedeemGiftCardResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "giftCards.verify",
      "title": "giftCards.verify",
      "description": "Verifies ownership of a damaged GC by checking if the activation number and partial redemption code are valid and refers to the same card. Returns the redemption token on success.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/VerifyGiftCardRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/VerifyGiftCardResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "ginlogs.logDataAccess",
      "title": "ginlogs.logDataAccess",
      "description": "Logs data access.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/LogDataAccessRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareAuditor.orders.list",
      "title": "hardwareAuditor.orders.list",
      "description": "Lists hardware orders.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListHardwareOrdersRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListHardwareOrdersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareOrders.hardwareSignals",
      "title": "hardwareOrders.hardwareSignals",
      "description": "Gets hardware signals based on the case and customer.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetHardwareSignalsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetHardwareSignalsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareOrders.list",
      "title": "hardwareOrders.list",
      "description": "Lists hardware orders.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListHardwareOrdersRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListHardwareOrdersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareOrders.listOtherDevices",
      "title": "hardwareOrders.listOtherDevices",
      "description": "Gets a user's devices that are not in the ListHardwareOrders result.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListOtherDevicesRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListOtherDevicesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "opportunities.list",
      "title": "opportunities.list",
      "description": "Lists opportunities.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "agentWhitelistedForApollo": {
            "type": "boolean"
          },
          "caseId": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListOpportunitiesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "opportunities.pitches.batchCreate",
      "title": "opportunities.pitches.batchCreate",
      "description": "Batch creates pitches.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/BatchCreatePitchRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/BatchCreatePitchResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.orders.batchGet",
      "title": "play.digitalContent.orders.batchGet",
      "description": "Get a collection of orders.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetOrdersRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetOrdersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.orders.refund",
      "title": "play.digitalContent.orders.refund",
      "description": "Refund orders.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/RefundOrdersRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RefundOrdersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.orders.search",
      "title": "play.digitalContent.orders.search",
      "description": "Search for orders.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/SearchOrdersRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SearchOrdersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.subscriptions.batchGet",
      "title": "play.digitalContent.subscriptions.batchGet",
      "description": "Get a collection of subscriptions.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetSubscriptionsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetSubscriptionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.subscriptions.cancel",
      "title": "play.digitalContent.subscriptions.cancel",
      "description": "Cancel subscription.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CancelSubscriptionRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CancelSubscriptionResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.subscriptions.getCancellationStatus",
      "title": "play.digitalContent.subscriptions.getCancellationStatus",
      "description": "Get cancellation status.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetCancellationStatusRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetCancellationStatusResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.subscriptions.list",
      "title": "play.digitalContent.subscriptions.list",
      "description": "List subscriptions.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListSubscriptionsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListSubscriptionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "play.digitalContent.getRefundStatus",
      "title": "play.digitalContent.getRefundStatus",
      "description": "Get refund status.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetRefundStatusRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetRefundStatusResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "products.list",
      "title": "products.list",
      "description": "Lists products.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListProductsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "resolutions.list",
      "title": "resolutions.list",
      "description": "Query for resolutions.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "autocompleteResults": {
            "type": "boolean"
          },
          "caseId": {
            "type": "string"
          },
          "pageSize": {
            "type": "integer"
          },
          "pageToken": {
            "type": "string"
          },
          "q": {
            "type": "string"
          },
          "resultsToken": {
            "type": "string"
          },
          "searchSessionId": {
            "type": "string"
          },
          "type": {
            "type": "array"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListResolutionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "resolutions.cohorts.assign",
      "title": "resolutions.cohorts.assign",
      "description": "Query and assign cohorts for this case.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/AssignCohortsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/AssignCohortsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "resolutions.log",
      "title": "resolutions.log",
      "description": "Log a resolution.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/LogResolutionRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "resolutions.suggest",
      "title": "resolutions.suggest",
      "description": "Suggest some resolutions to a case based on provided signals.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/SuggestResolutionsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SuggestResolutionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rma.save",
      "title": "rma.save",
      "description": "Saves (Insert/Update) an RMA.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/SaveRmaRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SaveRmaResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rma.submit",
      "title": "rma.submit",
      "description": "DEPRECATED: Use SendRma instead. Submit an RMA.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/SubmitRmaRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SubmitRmaResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.list",
      "title": "rmas.list",
      "description": "Lists RMAs by Case ID and RMA state",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "RMA_CANCELLED",
              "RMA_COMPLETED",
              "RMA_INCOMPLETE",
              "RMA_PENDING",
              "RMA_SUBMITTED",
              "UNKNOWN_RMA_STATE"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListRmasResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.createExchangeWithoutReturn",
      "title": "rmas.createExchangeWithoutReturn",
      "description": "Sends merchandise without expecting a return.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateExchangeWithoutReturnRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateExchangeWithoutReturnResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.listBuyersRemorseCountryCodes",
      "title": "rmas.listBuyersRemorseCountryCodes",
      "description": "Lists two-character country codes valid for Buyer's Remorse RMAs.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListBuyersRemorseCountryCodesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.runWorkflow",
      "title": "rmas.runWorkflow",
      "description": "DEPRECATED: Use RunRmaSteps instead. Run the given workflow for an RMA.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/RunWorkflowRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RunWorkflowResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.send",
      "title": "rmas.send",
      "description": "Initiates a new RMA.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/SendRmaRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SendRmaResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "teams.getMyAssignStreamSearches",
      "title": "teams.getMyAssignStreamSearches",
      "description": "Gets assign-stream-enabled searches associated with the agent.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetMyAssignStreamSearchesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.create",
      "title": "troubleshooterSessions.create",
      "description": "Start a new troubleshooter session.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateTroubleshooterSessionRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TroubleshooterSession"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.listDevices",
      "title": "troubleshooterSessions.listDevices",
      "description": "Lists devices on a customer's account.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListDevicesRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListDevicesResponse1"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.listIssues",
      "title": "troubleshooterSessions.listIssues",
      "description": "Lists issues.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "issueId": {
            "type": "string"
          },
          "troubleshooterType": {
            "type": "string",
            "enum": [
              "NOE",
              "PLAY_APPS",
              "PLAY_PURCHASES",
              "TROUBLESHOOTER_TYPE_NOT_SET"
            ]
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListIssuesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.listPurchasedApps",
      "title": "troubleshooterSessions.listPurchasedApps",
      "description": "Lists purchased apps on a customer's account.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListPurchasedAppsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListPurchasedAppsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.listPurchasedBooks",
      "title": "troubleshooterSessions.listPurchasedBooks",
      "description": "Lists purchased books on a customer's account.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListPurchasedBooksRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListPurchasedBooksResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.listPurchasedVideos",
      "title": "troubleshooterSessions.listPurchasedVideos",
      "description": "Lists purchased videos on a customer's account.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListPurchasedVideosRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListPurchasedVideosResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.accounts.paymentInstruments.getHijackReviewsStatus",
      "title": "wallets.accounts.paymentInstruments.getHijackReviewsStatus",
      "description": "Retrieve status for Payment Method Hijack (PMH) reviews. This is a POST API because it takes in a sso_ticket.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetPaymentMethodHijackReviewsStatusRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetPaymentMethodHijackReviewsStatusResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.accounts.paymentInstruments.initiateHijackReviews",
      "title": "wallets.accounts.paymentInstruments.initiateHijackReviews",
      "description": "Initiate Payment Method Hijack (PMH) reviews.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/InitiatePaymentMethodHijackReviewsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/InitiatePaymentMethodHijackReviewsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.accounts.getPaymentsInfo",
      "title": "wallets.accounts.getPaymentsInfo",
      "description": "Fetches Payments info, such as number of Payments accounts for the user.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetPaymentsInfoRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetPaymentsInfoResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.accounts.getReviewStatus",
      "title": "wallets.accounts.getReviewStatus",
      "description": "Fetches the review status of a wallet account. This is a POST API because it takes in a sso_ticket.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetAccountReviewStatusRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAccountReviewStatusResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.accounts.getSignals",
      "title": "wallets.accounts.getSignals",
      "description": "Fetches Wallet account signals for troubleshooting Wallet issues.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "accountSignals": {
            "type": "array"
          },
          "caseId": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAccountSignalsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.accounts.searchReviews",
      "title": "wallets.accounts.searchReviews",
      "description": "Initiates a review on the Wallet account. This is a POST API because it takes in a sso_ticket. This API could lead to a review escalation (increase in priority).",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/SearchAccountReviewsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SearchAccountReviewsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.bankAccountCountries",
      "title": "wallets.bankAccountCountries",
      "description": "List supported Bank Account countries. Initially will only return supported Bank Account countries for Payment Method Hijacks (PMH). This is a POST API because it takes in a sso_ticket.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListBankAccountCountriesRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListBankAccountCountriesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.creditCardTypes",
      "title": "wallets.creditCardTypes",
      "description": "List supported Credit Card types. Initially will only return supported credit cards for Payment Method Hijacks (PMH). This is a POST API because it takes in a sso_ticket.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListCreditCardTypesRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListCreditCardTypesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.paymentInstrumentTypeInfos.list",
      "title": "wallets.paymentInstrumentTypeInfos.list",
      "description": "List supported payment instrument types. This API is not customer contextual.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListPaymentInstrumentTypeInfosResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.paymentInstruments.suggestIssuer",
      "title": "wallets.paymentInstruments.suggestIssuer",
      "description": "Fetches suggestions for payment(credit card, bank, direct carrier billing) issuers.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "caseId": {
            "type": "string"
          },
          "includeDescription": {
            "type": "boolean"
          },
          "instrumentTypeToken": {
            "type": "string"
          },
          "searchKey": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SuggestPaymentInstrumentIssuerResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.transactions",
      "title": "wallets.transactions",
      "description": "Query for transactions.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListTransactionsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTransactionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.troubleshootAccount",
      "title": "wallets.troubleshootAccount",
      "description": "Troubleshoots a Wallet account for issues.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/TroubleshootAccountRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TroubleshootAccountResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "wallets.troubleshootTransaction",
      "title": "wallets.troubleshootTransaction",
      "description": "Troubleshoots a Wallet transaction for issues.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/TroubleshootTransactionRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TroubleshootTransactionResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "youtube.components.cancel",
      "title": "youtube.components.cancel",
      "description": "Cancel/Downgrade component(s).",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CancelComponentsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CancelComponentsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "youtube.entitlements.cancel",
      "title": "youtube.entitlements.cancel",
      "description": "Cancel entitlement.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/CancelEntitlementRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CancelEntitlementResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "youtube.onetimepurchases",
      "title": "youtube.onetimepurchases",
      "description": "Gets a list of one time purchases.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetOneTimePurchasesRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetOneTimePurchasesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "youtube.summary",
      "title": "youtube.summary",
      "description": "Get Customer Summary Information for entitlements and refund history.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/GetCustomerSummaryRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetCustomerSummaryResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "youtube.transactions.listByEntitlements",
      "title": "youtube.transactions.listByEntitlements",
      "description": "Get all transactions for entitlements.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/ListTransactionsRequest1"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTransactionsResponse1"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "youtube.transactions.refund",
      "title": "youtube.transactions.refund",
      "description": "Refund a batch of transactions.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "body": {
            "$ref": "#/definitions/RefundTransactionsRequest"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RefundTransactionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.attachments.delete",
      "title": "communications.attachments.delete",
      "description": "Deletes an attachment from a draft.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.get",
      "title": "rmas.get",
      "description": "Gets the specified RMA.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "caseId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Rma"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.workflows.post",
      "title": "cases.workflows.post",
      "description": "Creates a new workflow state on a case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateWorkflowRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CasesWorkflow"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.issue.updateProduct",
      "title": "cases.issue.updateProduct",
      "description": "Updates product for the specified case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateProductRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Product"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.billingAddresses",
      "title": "cases.customer.billingAddresses",
      "description": "Lists customer billing addresses. Only intended for use by the Cases frontend.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/ListBillingAddressesRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListBillingAddressesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.shippingAddresses",
      "title": "cases.customer.shippingAddresses",
      "description": "Lists customer shipping addresses. Only intended for use by the Cases frontend.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/ListShippingAddressesRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListShippingAddressesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "categoryInfos.properties.list",
      "title": "categoryInfos.properties.list",
      "description": "Lists all properties associated with a category info.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListPropertiesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareShipments.refunds",
      "title": "hardwareShipments.refunds",
      "description": "Lists refunds for a hardware order. Get by shipmentId: /v2/hardwareShipments/:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/ListHardwareRefundsRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListHardwareRefundsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.waitForConsult",
      "title": "cases.waitForConsult",
      "description": "Sets a case with an active consult case to IN_CONSULT state.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/WaitForConsultRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/WaitForConsultResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.assign",
      "title": "cases.assign",
      "description": "Assigns the specified case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/AssignRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/AssignResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.authenticate",
      "title": "cases.customer.authenticate",
      "description": "Authenticates a customer for a case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/AuthenticateRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/AuthenticateResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.attributes.batchUpdate",
      "title": "cases.attributes.batchUpdate",
      "description": "Updates attributes for a case in batch.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/BatchUpdateAttributesRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/BatchUpdateAttributesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.block",
      "title": "cases.block",
      "description": "Indicate the specified case is blocked by a bug/case/legal order, etc.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/BlockRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/BlockResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.callBack",
      "title": "cases.callBack",
      "description": "Makes a callback. Deauthenticates customer.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CallBackRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CallBackResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.cancel",
      "title": "rmas.cancel",
      "description": "Cancel an RMA.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CancelRmaRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CancelRmaResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.cancelAuthHold",
      "title": "rmas.cancelAuthHold",
      "description": "Cancels an auth hold for an advanced exchange RMA.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CancelAuthHoldRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.cancelSend",
      "title": "communications.cancelSend",
      "description": "Cancel a pending send (for email only).",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CancelSendRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.checkWalletAccount",
      "title": "cases.customer.checkWalletAccount",
      "description": "Check if a customer has a valid Wallet account. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CheckWalletAccountResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.createNoteConsult",
      "title": "cases.createNoteConsult",
      "description": "Creates a consult case via note channel for this case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateNoteConsultCaseRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateNoteConsultCaseResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.createRealTimeConsult",
      "title": "cases.createRealTimeConsult",
      "description": "Creates a consult case via RealTime channel for this case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/CreateRealTimeConsultCaseRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateRealTimeConsultCaseResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.deauthenticate",
      "title": "cases.customer.deauthenticate",
      "description": "Deauthenticates a customer for a case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/DeauthenticateRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/DeauthenticateResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.dedupe",
      "title": "cases.dedupe",
      "description": "Deduplicates a case by closing duplicates cases.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/DedupeRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/DedupeResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.discardDraft",
      "title": "communications.discardDraft",
      "description": "Discards a draft communication.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/DiscardDraftRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/DiscardDraftResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.escalate",
      "title": "cases.escalate",
      "description": "Escalates a case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/EscalateRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/EscalateResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.finalizeConsultNote",
      "title": "communications.finalizeConsultNote",
      "description": "Finalizes and sends a draft note for a consult case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/FinalizeConsultNoteRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/FinalizeConsultNoteResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.finalizeNote",
      "title": "communications.finalizeNote",
      "description": "Finalize a note (a note cannot be updated after it is finalized).",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/FinalizeNoteRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/FinalizeNoteResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.finish",
      "title": "cases.finish",
      "description": "Sets the specified case to the finished state and triggers other finisher related workflows.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/FinishRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/FinishResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.getAuthenticationCreditCardTypes",
      "title": "cases.customer.getAuthenticationCreditCardTypes",
      "description": "Get credit card types for authentication.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetAuthenticationCreditCardTypesRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAuthenticationCreditCardTypesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.getAuthenticationQuestions",
      "title": "cases.customer.getAuthenticationQuestions",
      "description": "Get authentication options for a customer for a case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetAuthenticationQuestionsRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAuthenticationQuestionsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.getAuthenticationResult",
      "title": "cases.customer.getAuthenticationResult",
      "description": "Get authentication status for a customer of a case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetAuthenticationResultRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAuthenticationResultResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.getBusinessListings",
      "title": "cases.customer.getBusinessListings",
      "description": "Gets the business listings for a customer.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetBusinessListingsRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetBusinessListingsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.getConsultSla",
      "title": "cases.getConsultSla",
      "description": "Calculates the SLA due by time that a new consult case would have.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetConsultSlaRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetConsultSlaResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareOrders.getDetail",
      "title": "hardwareOrders.getDetail",
      "description": "Gets detail for a hardware order.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetHardwareOrderDetailRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/HardwareOrderDetail"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "products.getEscalationTargets",
      "title": "products.getEscalationTargets",
      "description": "Gets the available escalation targets.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetEscalationTargetsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.getLostStolenEligibility",
      "title": "rmas.getLostStolenEligibility",
      "description": "Determines the eligibility of a lost/stolen RMA.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetLostStolenEligibilityRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LostStolenEligibility"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareShipments.getLostStolenRefundEligibility",
      "title": "hardwareShipments.getLostStolenRefundEligibility",
      "description": "Gets lost stolen refund eligibility for account Get by shipmentId: /v2/hardwareShipments/:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetLostStolenRefundEligibilityRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/LostStolenRefundEligibility"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.getMailingAddress",
      "title": "rmas.getMailingAddress",
      "description": "Get mailing address for an RMA",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetMailingAddressRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/MailingAddress"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.getOrderDetail",
      "title": "rmas.getOrderDetail",
      "description": "Gets an RMA's order detail.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetRmaOrderDetailRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RmaOrderDetail"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.getReplacementDetail",
      "title": "rmas.getReplacementDetail",
      "description": "Get details for a replacement device that is not associated with an order.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetReplacementDetailRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ReplacementDetail"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "products.getRoutingTargets",
      "title": "products.getRoutingTargets",
      "description": "Gets the available routing targets.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/GetRoutingTargetsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareShipments.getShippingAddress",
      "title": "hardwareShipments.getShippingAddress",
      "description": "--------- Begin of shipment Id based calls ----------------- Gets shipping address for a purchase Get by shipmentId: /v2/hardwareShipments/:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetShippingAddressRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ShippingAddress"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareShipments.getShippingCustomerName",
      "title": "hardwareShipments.getShippingCustomerName",
      "description": "Gets the shipping customer name for a hardware order Get by shipmentId: /v2/hardwareShipments/:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetShippingCustomerNameRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ShippingCustomerName"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareShipments.getShippingCustomerPhoneNumber",
      "title": "hardwareShipments.getShippingCustomerPhoneNumber",
      "description": "Gets the shipping customer phone number for a hardware order Get by shipmentId: /v2/hardwareShipments/:",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/GetShippingCustomerPhoneNumberRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ShippingCustomerPhoneNumber"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "categoryInfos.listChildren",
      "title": "categoryInfos.listChildren",
      "description": "Lists children category info.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListChildrenCategoryInfosResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "products.listSettings",
      "title": "products.listSettings",
      "description": "Lists product settings for an agent.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "requestedSettingTypes": {
            "type": "array"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ListSettingsResponse1"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.log",
      "title": "troubleshooterSessions.log",
      "description": "Log troubleshooter activity.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/LogTroubleshooterActivityRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.markOriginalDeviceReceived",
      "title": "rmas.markOriginalDeviceReceived",
      "description": "Marks an original device as received in a Standard Exchange.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/MarkOriginalDeviceReceivedRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.needsInfo",
      "title": "cases.needsInfo",
      "description": "Sets the specified case to the needs info state.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/NeedsInfoRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/NeedsInfoResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.offeredSolution",
      "title": "cases.offeredSolution",
      "description": "Sets the specified case to the solution offered state indicating that a previous communication was a \"solution\".",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/OfferedSolutionRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/OfferedSolutionResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.read",
      "title": "cases.read",
      "description": "Marks a case as read by the calling agent if they are the assignee.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/ReadCaseRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "hardwareShipments.refund",
      "title": "hardwareShipments.refund",
      "description": "Refunds a hardware shipment by shipment id.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/RefundHardwareOrderRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RefundHardwareOrderResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.release",
      "title": "cases.release",
      "description": "Unassigns the specified case from the gaia user associated with this call.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/ReleaseRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/ReleaseResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.route",
      "title": "cases.route",
      "description": "Routes the specified case to another product or team.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/RouteRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RouteResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "rmas.runRmaSteps",
      "title": "rmas.runRmaSteps",
      "description": "Run the given RMA workflow steps.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/RunRmaStepsRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/RunRmaStepsResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.send",
      "title": "communications.send",
      "description": "Sends a draft email. This finalizes the email.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SendEmailRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SendEmailResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.spam",
      "title": "cases.spam",
      "description": "Marks the specified case as spam.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SpamRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SpamResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.split",
      "title": "cases.split",
      "description": "Move a case's communication into a new case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/SplitRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SplitResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.suggestNewEmailHeaders",
      "title": "cases.suggestNewEmailHeaders",
      "description": "Suggests a set of headers (like from aliases) for a new email on a case. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SuggestNewEmailHeadersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.suggestNoteHeaders",
      "title": "cases.suggestNoteHeaders",
      "description": "Suggests a set of headers (like from aliases) for a note Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
      "inputSchema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/SuggestNoteHeadersResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.take",
      "title": "cases.take",
      "description": "Assigns the specified case to the gaia user associated with this call.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/TakeRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TakeResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.transfer",
      "title": "cases.transfer",
      "description": "Transfers the specified case from the gaia user associated with this call to another user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/TransferRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TransferResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "troubleshooterSessions.troubleshootIssue",
      "title": "troubleshooterSessions.troubleshootIssue",
      "description": "Troubleshoot issue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/TroubleshootIssueRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/TroubleshootIssueResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.unassign",
      "title": "cases.unassign",
      "description": "Unassigns the specified case from its current assignee. Note that this also moves the case to the UNASSIGNED state.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UnassignRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UnassignResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.unblock",
      "title": "cases.unblock",
      "description": "Indicate the specified case is no longer blocked by a bug/case/ legal order, etc.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UnblockRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UnblockResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.unspam",
      "title": "cases.unspam",
      "description": "Unmark the specified case as spam.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UnspamRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UnspamResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.attributes.update",
      "title": "cases.attributes.update",
      "description": "Updates attributes for the specified case. Note: This call adds the attributes that are not present on the case to the case. If attribute is already present on the case, the value is replaced.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateAttributesRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateAttributesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.workflows.update",
      "title": "cases.workflows.update",
      "description": "Updates workflow state.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateWorkflowRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/CasesWorkflow"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.issue.product.updateAgentCategories",
      "title": "cases.issue.product.updateAgentCategories",
      "description": "Updates agent categories for the specified case. Note: This call replaces categories on the case by new categories passed in the request.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateAgentCategoriesRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateAgentCategoriesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.updateConsultNote",
      "title": "communications.updateConsultNote",
      "description": "Updates a draft consult note with new content.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateConsultNoteRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateConsultNoteResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.updateContactEmail",
      "title": "cases.customer.updateContactEmail",
      "description": "Updates contact email for the specified case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateContactEmailRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateContactEmailResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.updateContactName",
      "title": "cases.customer.updateContactName",
      "description": "Updates contact name for the specified case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateContactNameRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateContactNameResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.customer.updateCustomerAttributes",
      "title": "cases.customer.updateCustomerAttributes",
      "description": "Updates customer attributes for the specified case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateCustomerAttributesRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateCustomerAttributesResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.updateDisconnectedChannel",
      "title": "cases.updateDisconnectedChannel",
      "description": "Updates disconnected channel for the specified case.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateDisconnectedChannelRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Empty"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.updateEligibleProgram",
      "title": "cases.updateEligibleProgram",
      "description": "Update customer attributes indicating eligibility for opportunities.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateEligibleProgramRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateEligibleProgramResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.updateEmail",
      "title": "communications.updateEmail",
      "description": "Updates a draft email.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateEmailRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateEmailResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.issue.updateLocale",
      "title": "cases.issue.updateLocale",
      "description": "Updates the case's issue locale.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateLocaleRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateLocaleResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "communications.updateNote",
      "title": "communications.updateNote",
      "description": "Updates a draft note.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateNoteRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateNoteResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    },
    {
      "id": "cases.issue.updateSummary",
      "title": "cases.issue.updateSummary",
      "description": "Updates case's issue summary.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/UpdateSummaryRequest"
          },
          "name": {
            "type": "string"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateSummaryResponse"
      },
      "security": {
        "google_supportcases": {
          "integration": "google_supportcases"
        }
      }
    }
  ]
}