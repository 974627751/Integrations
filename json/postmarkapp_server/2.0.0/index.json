{
  "id": "postmarkapp_server",
  "title": "Postmark",
  "description": "Postmark makes sending and receiving email\nincredibly easy.\n",
  "security": {},
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/postmarkapp_server.jpg"
  },
  "actionCount": 47,
  "definitions": {
    "Attachment": {
      "description": "An attachment for an email message.",
      "properties": {
        "Content": {
          "type": "string"
        },
        "ContentID": {
          "type": "string"
        },
        "ContentType": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "title": "Attachment"
    },
    "AttachmentCollection": {
      "items": {
        "$ref": "#/definitions/Attachment"
      },
      "type": "array",
      "title": "AttachmentCollection"
    },
    "BounceActivationResponse": {
      "properties": {
        "Bounce": {
          "$ref": "#/definitions/BounceInfoResponse"
        },
        "Message": {
          "type": "string"
        }
      },
      "title": "BounceActivationResponse"
    },
    "BounceCountElement": {
      "properties": {
        "Count": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "title": "BounceCountElement"
    },
    "BounceDumpResponse": {
      "properties": {
        "Body": {
          "description": "Raw source of bounce. If no dump is available this will return an empty string.",
          "type": "string"
        }
      },
      "title": "BounceDumpResponse"
    },
    "BounceInfoResponse": {
      "properties": {
        "BouncedAt": {
          "format": "date-time",
          "type": "string"
        },
        "CanActivate": {
          "type": "boolean"
        },
        "Content": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Details": {
          "type": "string"
        },
        "DumpAvailable": {
          "type": "boolean"
        },
        "Email": {
          "format": "email",
          "type": "string"
        },
        "ID": {
          "type": "string"
        },
        "Inactive": {
          "type": "boolean"
        },
        "MessageID": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "TypeCode": {
          "type": "integer"
        }
      },
      "title": "BounceInfoResponse"
    },
    "BounceSearchResponse": {
      "description": "",
      "properties": {
        "Bounces": {
          "items": {
            "$ref": "#/definitions/BounceInfoResponse"
          },
          "type": "array"
        },
        "TotalCount": {
          "type": "integer"
        }
      },
      "title": "BounceSearchResponse"
    },
    "CreateInboundRuleRequest": {
      "description": "",
      "properties": {
        "Rule": {
          "format": "email",
          "type": "string"
        }
      },
      "title": "CreateInboundRuleRequest"
    },
    "CreateTemplateRequest": {
      "description": "The contents required for creating a new template.",
      "properties": {
        "HtmlBody": {
          "description": "The HTML template definition for this Template.",
          "type": "string"
        },
        "Name": {
          "description": "The friendly display name for the template.",
          "type": "string"
        },
        "Subject": {
          "description": "The Subject template definition for this Template.",
          "type": "string"
        },
        "TextBody": {
          "description": "The Text template definition for this Template.",
          "type": "string"
        }
      },
      "required": [
        "Name",
        "Subject"
      ],
      "title": "CreateTemplateRequest"
    },
    "DeliveryStatsResponse": {
      "description": "",
      "properties": {
        "Bounces": {
          "items": {
            "$ref": "#/definitions/BounceCountElement"
          },
          "type": "array"
        },
        "InactiveMails": {
          "type": "integer"
        }
      },
      "title": "DeliveryStatsResponse"
    },
    "DynamicResponse": {
      "description": "The properties of this object will vary based request parameters.",
      "title": "DynamicResponse"
    },
    "EditServerConfigurationRequest": {
      "properties": {
        "BounceHookUrl": {
          "type": "string"
        },
        "Color": {
          "enum": [
            "purple",
            "blue",
            "turqoise",
            "green",
            "red",
            "yellow",
            "grey"
          ],
          "type": "string"
        },
        "DeliveryHookUrl": {
          "type": "string"
        },
        "InboundDomain": {
          "type": "string"
        },
        "InboundHookUrl": {
          "type": "string"
        },
        "InboundSpamThreshold": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "OpenHookUrl": {
          "type": "string"
        },
        "PostFirstOpenOnly": {
          "type": "boolean"
        },
        "RawEmailEnabled": {
          "type": "boolean"
        },
        "SmtpApiActivated": {
          "type": "boolean"
        },
        "TrackLinks": {
          "enum": [
            "None",
            "HtmlAndText",
            "HtmlOnly",
            "TextOnly"
          ],
          "type": "string"
        },
        "TrackOpens": {
          "type": "boolean"
        }
      },
      "title": "EditServerConfigurationRequest"
    },
    "EditTagTriggerRequest": {
      "description": "",
      "properties": {
        "MatchName": {
          "type": "string"
        },
        "TrackOpens": {
          "type": "boolean"
        }
      },
      "title": "EditTagTriggerRequest"
    },
    "EditTemplateRequest": {
      "description": "The contents required for creating a new template.",
      "properties": {
        "HtmlBody": {
          "description": "The HTML template definition for this Template.",
          "type": "string"
        },
        "Name": {
          "description": "The friendly display name for the template.",
          "type": "string"
        },
        "Subject": {
          "description": "The Subject template definition for this Template.",
          "type": "string"
        },
        "TemplateId": {
          "description": "The ID for the template you wish to modify.",
          "type": "integer"
        },
        "TextBody": {
          "description": "The Text template definition for this Template.",
          "type": "string"
        }
      },
      "required": [
        "TemplateId"
      ],
      "title": "EditTemplateRequest"
    },
    "EmailNameAddressPair": {
      "description": "",
      "properties": {
        "Email": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        }
      },
      "title": "EmailNameAddressPair"
    },
    "EmailWithTemplateRequest": {
      "properties": {
        "Bcc": {
          "type": "string"
        },
        "From": {
          "type": "string"
        },
        "InlineCss": {
          "default": true,
          "type": "boolean"
        },
        "ReplyTo": {
          "type": "string"
        },
        "TemplateId": {
          "type": "integer"
        },
        "TemplateModel": {
          "type": "object"
        },
        "To": {
          "type": "string"
        },
        "TrackLinks": {
          "description": "Replace links in content to enable \"click tracking\" stats. Default is 'null', which uses the server's LinkTracking setting'.",
          "enum": [
            "None",
            "HtmlAndText",
            "HtmlOnly",
            "TextOnly"
          ],
          "type": "string"
        },
        "TrackOpens": {
          "description": "Activate open tracking for this email.",
          "type": "boolean"
        }
      },
      "title": "EmailWithTemplateRequest"
    },
    "ExtendedMessageOpenEventInformation": {
      "description": "",
      "properties": {
        "Client": {
          "description": "",
          "properties": {
            "Company": {
              "type": "string"
            },
            "Family": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          }
        },
        "FirstOpen": {
          "type": "boolean"
        },
        "Geo": {
          "properties": {
            "City": {
              "type": "string"
            },
            "Coords": {
              "type": "string"
            },
            "Country": {
              "type": "string"
            },
            "CountryISOCode": {
              "type": "string"
            },
            "IP": {
              "type": "string"
            },
            "Region": {
              "type": "string"
            },
            "RegionISOCode": {
              "type": "string"
            },
            "Zip": {
              "type": "string"
            }
          }
        },
        "MessageID": {
          "type": "string"
        },
        "OS": {
          "properties": {
            "Company": {
              "type": "string"
            },
            "Family": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          }
        },
        "Platform": {
          "type": "string"
        },
        "ReadSeconds": {
          "type": "string"
        },
        "ReceivedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Recipient": {
          "format": "email",
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "UserAgent": {
          "type": "string"
        }
      },
      "title": "ExtendedMessageOpenEventInformation"
    },
    "HeaderCollection": {
      "items": {
        "$ref": "#/definitions/MessageHeader"
      },
      "type": "array",
      "title": "HeaderCollection"
    },
    "InboundMessageDetail": {
      "description": "",
      "properties": {
        "Attachments": {
          "$ref": "#/definitions/AttachmentCollection"
        },
        "Cc": {
          "type": "string"
        },
        "CcFull": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "Date": {
          "type": "string"
        },
        "From": {
          "type": "string"
        },
        "FromFull": {
          "description": "",
          "properties": {
            "Email": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          }
        },
        "FromName": {
          "type": "string"
        },
        "MailboxHash": {
          "type": "string"
        },
        "MessageID": {
          "type": "string"
        },
        "OriginalRecipient": {
          "type": "string"
        },
        "ReplyTo": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "To": {
          "type": "string"
        },
        "ToFull": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        }
      },
      "title": "InboundMessageDetail"
    },
    "InboundMessageFullDetailsResponse": {
      "properties": {
        "Attachments": {
          "$ref": "#/definitions/AttachmentCollection"
        },
        "BlockedReason": {
          "type": "string"
        },
        "Cc": {
          "type": "string"
        },
        "CcFull": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "Date": {
          "type": "string"
        },
        "From": {
          "type": "string"
        },
        "FromFull": {
          "description": "",
          "properties": {
            "Email": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          }
        },
        "FromName": {
          "type": "string"
        },
        "Headers": {
          "$ref": "#/definitions/HeaderCollection"
        },
        "HtmlBody": {
          "type": "string"
        },
        "MailboxHash": {
          "type": "string"
        },
        "MessageID": {
          "type": "string"
        },
        "OriginalRecipient": {
          "type": "string"
        },
        "ReplyTo": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "TextBody": {
          "type": "string"
        },
        "To": {
          "type": "string"
        },
        "ToFull": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        }
      },
      "title": "InboundMessageFullDetailsResponse"
    },
    "InboundSearchResponse": {
      "description": "",
      "properties": {
        "InboundMessages": {
          "items": {
            "$ref": "#/definitions/InboundMessageDetail"
          },
          "type": "array"
        },
        "TotalCount": {
          "type": "integer"
        }
      },
      "title": "InboundSearchResponse"
    },
    "MessageEventDetails": {
      "description": "",
      "properties": {
        "Details": {
          "properties": {
            "BounceID": {
              "type": "string"
            },
            "DeliveryMessage": {
              "type": "string"
            },
            "DestinationIP": {
              "type": "string"
            },
            "DestinationServer": {
              "type": "string"
            },
            "Summary": {
              "type": "string"
            }
          }
        },
        "ReceivedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Recipient": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "title": "MessageEventDetails"
    },
    "MessageHeader": {
      "description": "A single header for an email message.",
      "properties": {
        "Name": {
          "description": "The header's name.",
          "type": "string"
        },
        "Value": {
          "description": "The header's value.",
          "type": "string"
        }
      },
      "title": "MessageHeader"
    },
    "MessageOpenSearchResponse": {
      "properties": {
        "Opens": {
          "items": {
            "$ref": "#/definitions/ExtendedMessageOpenEventInformation"
          },
          "type": "array"
        },
        "TotalCount": {
          "type": "integer"
        }
      },
      "title": "MessageOpenSearchResponse"
    },
    "OutboundMessageDetail": {
      "description": "",
      "properties": {
        "Attachments": {
          "$ref": "#/definitions/AttachmentCollection"
        },
        "Bcc": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "Cc": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "From": {
          "type": "string"
        },
        "MessageID": {
          "type": "string"
        },
        "ReceivedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Recipients": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Status": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "To": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "TrackLinks": {
          "enum": [
            "None",
            "HtmlAndText",
            "HtmlOnly",
            "TextOnly"
          ],
          "type": "string"
        },
        "TrackOpens": {
          "type": "boolean"
        }
      },
      "title": "OutboundMessageDetail"
    },
    "OutboundMessageDetailsResponse": {
      "properties": {
        "Attachments": {
          "$ref": "#/definitions/AttachmentCollection"
        },
        "Bcc": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "Body": {
          "type": "string"
        },
        "Cc": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "From": {
          "type": "string"
        },
        "HtmlBody": {
          "type": "string"
        },
        "MessageEvents": {
          "items": {
            "$ref": "#/definitions/MessageEventDetails"
          },
          "type": "array"
        },
        "MessageID": {
          "type": "string"
        },
        "ReceivedAt": {
          "format": "date-time",
          "type": "string"
        },
        "Recipients": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "Status": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        },
        "Tag": {
          "type": "string"
        },
        "TextBody": {
          "type": "string"
        },
        "To": {
          "items": {
            "$ref": "#/definitions/EmailNameAddressPair"
          },
          "type": "array"
        },
        "TrackLinks": {
          "enum": [
            "None",
            "HtmlAndText",
            "HtmlOnly",
            "TextOnly"
          ],
          "type": "string"
        },
        "TrackOpens": {
          "type": "boolean"
        }
      },
      "title": "OutboundMessageDetailsResponse"
    },
    "OutboundMessageDumpResponse": {
      "properties": {
        "Body": {
          "description": "Raw source of message. If no dump is available this will return an empty string.",
          "type": "string"
        }
      },
      "title": "OutboundMessageDumpResponse"
    },
    "OutboundOverviewStatsResponse": {
      "description": "",
      "properties": {
        "BounceRate": {
          "type": "integer"
        },
        "Bounced": {
          "type": "integer"
        },
        "Opens": {
          "type": "integer"
        },
        "SMTPAPIErrors": {
          "type": "integer"
        },
        "Sent": {
          "type": "integer"
        },
        "SpamComplaints": {
          "type": "integer"
        },
        "SpamComplaintsRate": {
          "type": "integer"
        },
        "TotalClicks": {
          "type": "integer"
        },
        "TotalTrackedLinksSent": {
          "type": "integer"
        },
        "Tracked": {
          "type": "integer"
        },
        "UniqueLinksClicked": {
          "type": "integer"
        },
        "UniqueOpens": {
          "type": "integer"
        },
        "WithClientRecorded": {
          "type": "integer"
        },
        "WithLinkTracking": {
          "type": "integer"
        },
        "WithOpenTracking": {
          "type": "integer"
        },
        "WithPlatformRecorded": {
          "type": "integer"
        },
        "WithReadTimeRecorded": {
          "type": "integer"
        }
      },
      "title": "OutboundOverviewStatsResponse"
    },
    "OutboundSearchResponse": {
      "description": "",
      "properties": {
        "Messages": {
          "items": {
            "$ref": "#/definitions/OutboundMessageDetail"
          },
          "type": "array"
        },
        "TotalCount": {
          "type": "integer"
        }
      },
      "title": "OutboundSearchResponse"
    },
    "SendEmailBatchRequest": {
      "items": {
        "$ref": "#/definitions/SendEmailRequest"
      },
      "type": "array",
      "title": "SendEmailBatchRequest"
    },
    "SendEmailBatchResponse": {
      "items": {
        "$ref": "#/definitions/SendEmailResponse"
      },
      "type": "array",
      "title": "SendEmailBatchResponse"
    },
    "SendEmailRequest": {
      "properties": {
        "Attachments": {
          "$ref": "#/definitions/AttachmentCollection"
        },
        "Bcc": {
          "description": "Bcc recipient email address. Multiple addresses are comma seperated. Max 50.",
          "type": "string"
        },
        "Cc": {
          "description": "Recipient email address. Multiple addresses are comma seperated. Max 50.",
          "type": "string"
        },
        "From": {
          "description": "The sender email address. Must have a registered and confirmed Sender Signature.",
          "type": "string"
        },
        "Headers": {
          "$ref": "#/definitions/HeaderCollection"
        },
        "HtmlBody": {
          "description": "If no TextBody specified HTML email message",
          "type": "string"
        },
        "ReplyTo": {
          "description": "Reply To override email address. Defaults to the Reply To set in the sender signature.",
          "type": "string"
        },
        "Subject": {
          "description": "Email Subject",
          "type": "string"
        },
        "Tag": {
          "description": "Email tag that allows you to categorize outgoing emails and get detailed statistics.",
          "type": "string"
        },
        "TextBody": {
          "description": "If no HtmlBody specified Plain text email message",
          "type": "string"
        },
        "To": {
          "description": "Recipient email address. Multiple addresses are comma seperated. Max 50.",
          "type": "string"
        },
        "TrackLinks": {
          "description": "Replace links in content to enable \"click tracking\" stats. Default is 'null', which uses the server's LinkTracking setting'.",
          "enum": [
            "None",
            "HtmlAndText",
            "HtmlOnly",
            "TextOnly"
          ],
          "type": "string"
        },
        "TrackOpens": {
          "description": "Activate open tracking for this email.",
          "type": "boolean"
        }
      },
      "title": "SendEmailRequest"
    },
    "SendEmailResponse": {
      "description": "The standard response when a postmark message is sent",
      "properties": {
        "ErrorCode": {
          "type": "integer"
        },
        "Message": {
          "type": "string"
        },
        "MessageID": {
          "type": "string"
        },
        "SubmittedAt": {
          "format": "date-time",
          "type": "string"
        },
        "To": {
          "type": "string"
        }
      },
      "title": "SendEmailResponse"
    },
    "SentCountsResponse": {
      "description": "The result of a get sent counts operation.",
      "properties": {
        "Days": {
          "items": {
            "properties": {
              "Date": {
                "type": "string"
              },
              "Sent": {
                "type": "integer"
              }
            }
          },
          "type": "array"
        },
        "Sent": {
          "type": "integer"
        }
      },
      "title": "SentCountsResponse"
    },
    "ServerConfigurationResponse": {
      "properties": {
        "ApiTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "BounceHookUrl": {
          "type": "string"
        },
        "Color": {
          "enum": [
            "purple",
            "blue",
            "turqoise",
            "green",
            "red",
            "yellow",
            "grey"
          ],
          "type": "string"
        },
        "DeliveryHookUrl": {
          "type": "string"
        },
        "ID": {
          "type": "integer"
        },
        "InboundAddress": {
          "format": "email",
          "type": "string"
        },
        "InboundDomain": {
          "type": "string"
        },
        "InboundHash": {
          "type": "string"
        },
        "InboundHookUrl": {
          "type": "string"
        },
        "InboundSpamThreshold": {
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "OpenHookUrl": {
          "type": "string"
        },
        "PostFirstOpenOnly": {
          "type": "boolean"
        },
        "RawEmailEnabled": {
          "type": "boolean"
        },
        "ServerLink": {
          "type": "string"
        },
        "SmtpApiActivated": {
          "type": "boolean"
        },
        "TrackLinks": {
          "enum": [
            "None",
            "HtmlAndText",
            "HtmlOnly",
            "TextOnly"
          ],
          "type": "string"
        },
        "TrackOpens": {
          "type": "boolean"
        }
      },
      "title": "ServerConfigurationResponse"
    },
    "StandardPostmarkResponse": {
      "description": "A Postmark API error.",
      "properties": {
        "ErrorCode": {
          "type": "integer"
        },
        "Message": {
          "type": "string"
        }
      },
      "title": "StandardPostmarkResponse"
    },
    "TemplateDetailResponse": {
      "properties": {
        "Active": {
          "description": "Indicates that this template may be used for sending email.",
          "type": "boolean"
        },
        "AssociatedServerId": {
          "description": "The ID of the Server with which this template is associated.",
          "type": "integer"
        },
        "HtmlBody": {
          "description": "The content to use for the HtmlBody when this template is used to send email.",
          "type": "string"
        },
        "Name": {
          "description": "The display name for the template.",
          "type": "string"
        },
        "Subject": {
          "description": "The content to use for the Subject when this template is used to send email.",
          "type": "string"
        },
        "TemplateID": {
          "description": "The ID associated with the template.",
          "type": "integer"
        },
        "TextBody": {
          "description": "The content to use for the TextBody when this template is used to send email.",
          "type": "string"
        }
      },
      "title": "TemplateDetailResponse"
    },
    "TemplateListingResponse": {
      "properties": {
        "Templates API": {
          "description": "Basic information for each Template returned from the query.",
          "items": {
            "$ref": "#/definitions/TemplateRecordResponse"
          },
          "type": "array"
        },
        "TotalCount": {
          "description": "The total number of Templates API associated with this server.",
          "type": "number"
        }
      },
      "title": "TemplateListingResponse"
    },
    "TemplateRecordResponse": {
      "properties": {
        "Active": {
          "description": "True if this template is currently available for use.",
          "type": "boolean"
        },
        "Name": {
          "description": "The display name for this template.",
          "type": "string"
        },
        "TemplateId": {
          "description": "The associated ID for this template.",
          "format": "int",
          "type": "number"
        }
      },
      "title": "TemplateRecordResponse"
    },
    "TemplateValidationError": {
      "properties": {
        "CharacterPosition": {
          "type": "integer"
        },
        "Line": {
          "type": "integer"
        },
        "Message": {
          "type": "string"
        }
      },
      "title": "TemplateValidationError"
    },
    "TemplateValidationRequest": {
      "properties": {
        "HtmlBody": {
          "description": "The html body content to validate. Must be specified if Subject or\nTextBody are not. See our template language documentation for more\ninformation on the syntax for this field.\n",
          "type": "string"
        },
        "InlineCssForHtmlTestRender": {
          "default": true,
          "description": "When HtmlBody is specified, the test render will have style blocks\ninlined as style attributes on matching html elements. You may disable\nthe css inlining behavior by passing false for this parameter.\n",
          "type": "boolean"
        },
        "Subject": {
          "description": "The subject content to validate. Must be specified if HtmlBody or\nTextBody are not. See our template language documentation for more\ninformation on the syntax for this field.\n",
          "type": "string"
        },
        "TextBody": {
          "description": "The text body content to validate. Must be specified if HtmlBody or\nSubject are not. See our template language documentation for more\ninformation on the syntax for this field.\n",
          "type": "string"
        },
        "TextRenderModel": {
          "description": "The model to be used when rendering test content.",
          "type": "object"
        }
      },
      "title": "TemplateValidationRequest"
    },
    "TemplateValidationResponse": {
      "properties": {
        "AllContentIsValid": {
          "type": "boolean"
        },
        "HtmlBody": {
          "$ref": "#/definitions/TemplateValidationResult"
        },
        "Subject": {
          "$ref": "#/definitions/TemplateValidationResult"
        },
        "SuggestedTemplateModel": {
          "type": "object"
        },
        "TextBody": {
          "$ref": "#/definitions/TemplateValidationResult"
        }
      },
      "title": "TemplateValidationResponse"
    },
    "TemplateValidationResult": {
      "properties": {
        "ContentIsValid": {
          "type": "boolean"
        },
        "RenderedContent": {
          "type": "string"
        },
        "ValidationErrors": {
          "items": {
            "$ref": "#/definitions/TemplateValidationError"
          },
          "type": "array"
        }
      },
      "title": "TemplateValidationResult"
    }
  },
  "actions": [
    {
      "id": "getBounces",
      "title": "getBounces",
      "description": "Get bounces",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "count": {
            "type": "integer",
            "description": "Number of bounces to return per request. Max 500.",
            "maximum": 500
          },
          "offset": {
            "type": "integer",
            "description": "Number of bounces to skip."
          },
          "type": {
            "type": "string",
            "description": "Filter by type of bounce",
            "enum": [
              "HardBounce",
              "Transient",
              "Unsubscribe",
              "Subscribe",
              "AutoResponder",
              "AddressChange",
              "DnsError",
              "SpamNotification",
              "OpenRelayTest",
              "Unknown",
              "SoftBounce",
              "VirusNotification",
              "MailFrontier Matador.",
              "BadEmailAddress",
              "SpamComplaint",
              "ManuallyDeactivated",
              "Unconfirmed",
              "Blocked",
              "SMTPApiError",
              "InboundError",
              "DMARCPolicy",
              "TemplateRenderingFailed"
            ]
          },
          "inactive": {
            "type": "boolean",
            "description": "Filter by emails that were deactivated by Postmark due to the bounce. Set to true or false. If this isn't specified it will return both active and inactive."
          },
          "emailFilter": {
            "type": "string",
            "format": "email",
            "description": "Filter by email address"
          },
          "messageID": {
            "type": "string",
            "description": "Filter by messageID"
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter messages up to the date specified. e.g. `2014-02-01`"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter messages starting from the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "count",
          "offset"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/BounceSearchResponse"
      }
    },
    {
      "id": "getBouncedTags",
      "title": "getBouncedTags",
      "description": "Get bounced tags",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    {
      "id": "getSingleBounce",
      "title": "getSingleBounce",
      "description": "Get a single bounce",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "bounceid": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the bounce to retrieve."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "bounceid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/BounceInfoResponse"
      }
    },
    {
      "id": "activateBounce",
      "title": "activateBounce",
      "description": "Activate a bounce",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "bounceid": {
            "type": "integer",
            "format": "int64",
            "description": "The ID of the Bounce to activate."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "bounceid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/BounceActivationResponse"
      }
    },
    {
      "id": "bounces.bounceid.dump.get",
      "title": "bounces.bounceid.dump.get",
      "description": "Get bounce dump",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "bounceid": {
            "type": "integer",
            "format": "int64",
            "description": "The ID for the bounce dump to retrieve."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "bounceid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/BounceDumpResponse"
      }
    },
    {
      "id": "getDeliveryStats",
      "title": "getDeliveryStats",
      "description": "Get delivery stats",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeliveryStatsResponse"
      }
    },
    {
      "id": "sendEmail",
      "title": "sendEmail",
      "description": "Send a single email",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/SendEmailRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/SendEmailResponse"
      }
    },
    {
      "id": "sendEmailBatch",
      "title": "sendEmailBatch",
      "description": "Send a batch of emails",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/SendEmailBatchRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/SendEmailBatchResponse"
      }
    },
    {
      "id": "sendEmailWithTemplate",
      "title": "sendEmailWithTemplate",
      "description": "Send an email using a Template",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/EmailWithTemplateRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/SendEmailResponse"
      }
    },
    {
      "id": "searchInboundMessages",
      "title": "searchInboundMessages",
      "description": "Inbound message search",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "count": {
            "type": "integer",
            "description": "Number of messages to return per request. Max 500."
          },
          "offset": {
            "type": "integer",
            "description": "Number of messages to skip"
          },
          "recipient": {
            "type": "string",
            "format": "email",
            "description": "Filter by the user who was receiving the email"
          },
          "fromemail": {
            "type": "string",
            "format": "email",
            "description": "Filter by the sender email address"
          },
          "subject": {
            "type": "string",
            "description": "Filter by email subject"
          },
          "mailboxhash": {
            "type": "string",
            "description": "Filter by mailboxhash"
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "status": {
            "type": "string",
            "description": "Filter by status (`blocked`, `processed`, `queued`, `failed`, `scheduled`)",
            "enum": [
              "blocked",
              "processed",
              "queued",
              "failed",
              "scheduled"
            ]
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter messages up to the date specified. e.g. `2014-02-01`"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter messages starting from the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "count",
          "offset"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/InboundSearchResponse"
      }
    },
    {
      "id": "bypassRulesForInboundMessage",
      "title": "bypassRulesForInboundMessage",
      "description": "Bypass rules for a blocked inbound message",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "messageid": {
            "type": "string",
            "description": "The ID of the message which should bypass inbound rules."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "messageid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StandardPostmarkResponse"
      }
    },
    {
      "id": "getInboundMessageDetails",
      "title": "getInboundMessageDetails",
      "description": "Inbound message details",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "messageid": {
            "type": "string",
            "description": "The ID of the message for which to details will be retrieved."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "messageid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/InboundMessageFullDetailsResponse"
      }
    },
    {
      "id": "retryInboundMessageProcessing",
      "title": "retryInboundMessageProcessing",
      "description": "Retry a failed inbound message for processing",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "messageid": {
            "type": "string",
            "description": "The ID of the inbound message on which we should retry processing."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "messageid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StandardPostmarkResponse"
      }
    },
    {
      "id": "searchOutboundMessages",
      "title": "searchOutboundMessages",
      "description": "Outbound message search",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "count": {
            "type": "integer",
            "description": "Number of messages to return per request. Max 500."
          },
          "offset": {
            "type": "integer",
            "description": "Number of messages to skip"
          },
          "recipient": {
            "type": "string",
            "format": "email",
            "description": "Filter by the user who was receiving the email"
          },
          "fromemail": {
            "type": "string",
            "format": "email",
            "description": "Filter by the sender email address"
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "status": {
            "type": "string",
            "description": "Filter by status (`queued` or `sent`)",
            "enum": [
              "queued",
              "sent"
            ]
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter messages up to the date specified. e.g. `2014-02-01`"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter messages starting from the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "count",
          "offset"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/OutboundSearchResponse"
      }
    },
    {
      "id": "searchOpensForOutboundMessages",
      "title": "searchOpensForOutboundMessages",
      "description": "Opens for a single message",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "count": {
            "type": "integer",
            "description": "Number of message opens to return per request. Max 500."
          },
          "offset": {
            "type": "integer",
            "description": "Number of messages to skip"
          },
          "recipient": {
            "type": "string",
            "description": "Filter by To, Cc, Bcc"
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "client_name": {
            "type": "string",
            "description": "Filter by client name, i.e. Outlook, Gmail"
          },
          "client_company": {
            "type": "string",
            "description": "Filter by company, i.e. Microsoft, Apple, Google"
          },
          "client_family": {
            "type": "string",
            "description": "Filter by client family, i.e. OS X, Chrome"
          },
          "os_name": {
            "type": "string",
            "description": "Filter by full OS name and specific version, i.e. OS X 10.9 Mavericks, Windows 7"
          },
          "os_family": {
            "type": "string",
            "description": "Filter by kind of OS used without specific version, i.e. OS X, Windows"
          },
          "os_company": {
            "type": "string",
            "description": "Filter by company which produced the OS, i.e. Apple Computer, Inc., Microsoft Corporation"
          },
          "platform": {
            "type": "string",
            "description": "Filter by platform, i.e. webmail, desktop, mobile"
          },
          "country": {
            "type": "string",
            "description": "Filter by country messages were opened in, i.e. Denmark, Russia"
          },
          "region": {
            "type": "string",
            "description": "Filter by full name of region messages were opened in, i.e. Moscow, New York"
          },
          "city": {
            "type": "string",
            "description": "Filter by full name of region messages were opened in, i.e. Moscow, New York"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "count",
          "offset"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/MessageOpenSearchResponse"
      }
    },
    {
      "id": "getOpensForSingleOutboundMessage",
      "title": "getOpensForSingleOutboundMessage",
      "description": "Retrieve Message Opens",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "messageid": {
            "type": "string",
            "description": "The ID of the Outbound Message for which open statistics should be retrieved."
          },
          "count": {
            "type": "integer",
            "description": "Number of message opens to return per request. Max 500.",
            "maximum": 500,
            "minimum": 1
          },
          "offset": {
            "type": "integer",
            "description": "Number of messages to skip.",
            "minimum": 0
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "messageid",
          "count",
          "offset"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/MessageOpenSearchResponse"
      }
    },
    {
      "id": "getOutboundMessageDetails",
      "title": "getOutboundMessageDetails",
      "description": "Outbound message details",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "messageid": {
            "type": "string",
            "description": "The ID of the message for which to retrieve details."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "messageid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/OutboundMessageDetailsResponse"
      }
    },
    {
      "id": "getOutboundMessageDump",
      "title": "getOutboundMessageDump",
      "description": "Outbound message dump",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "messageid": {
            "type": "string",
            "description": "The ID of the message for which to retrieve a dump."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "messageid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/OutboundMessageDumpResponse"
      }
    },
    {
      "id": "getCurrentServerConfiguration",
      "title": "getCurrentServerConfiguration",
      "description": "Get Server Configuration",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ServerConfigurationResponse"
      }
    },
    {
      "id": "editCurrentServerConfiguration",
      "title": "editCurrentServerConfiguration",
      "description": "Edit Server Configuration",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/EditServerConfigurationRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ServerConfigurationResponse"
      }
    },
    {
      "id": "getOutboundOverviewStatistics",
      "title": "getOutboundOverviewStatistics",
      "description": "Get outbound overview",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/OutboundOverviewStatsResponse"
      }
    },
    {
      "id": "getBounceCounts",
      "title": "getBounceCounts",
      "description": "Get bounce counts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "Days": {
            "items": {
              "properties": {
                "Date": {
                  "type": "string"
                },
                "HardBounce": {
                  "type": "integer"
                },
                "SMTPApiError": {
                  "type": "integer"
                },
                "SoftBounce": {
                  "type": "integer"
                },
                "Transient": {
                  "type": "integer"
                }
              }
            },
            "type": "array"
          },
          "HardBounce": {
            "type": "integer"
          },
          "SMTPApiError": {
            "type": "integer"
          },
          "SoftBounce": {
            "type": "integer"
          },
          "Transient": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "getOutboundClickCounts",
      "title": "getOutboundClickCounts",
      "description": "Get click counts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DynamicResponse"
      }
    },
    {
      "id": "getOutboundClickCountsByBrowserFamily",
      "title": "getOutboundClickCountsByBrowserFamily",
      "description": "Get browser usage by family",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "type": "object"
      }
    },
    {
      "id": "getOutboundClickCountsByLocation",
      "title": "getOutboundClickCountsByLocation",
      "description": "Get clicks by body location",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DynamicResponse"
      }
    },
    {
      "id": "getOutboundClickCountsByPlatform",
      "title": "getOutboundClickCountsByPlatform",
      "description": "Get browser plaform usage",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DynamicResponse"
      }
    },
    {
      "id": "getOutboundOpenCounts",
      "title": "getOutboundOpenCounts",
      "description": "Get email open counts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "Days": {
            "items": {
              "properties": {
                "Date": {
                  "type": "string"
                },
                "Opens": {
                  "type": "integer"
                },
                "Unique": {
                  "type": "integer"
                }
              }
            },
            "type": "array"
          },
          "Opens": {
            "type": "integer"
          },
          "Unique": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "getOutboundOpenCountsByEmailClient",
      "title": "getOutboundOpenCountsByEmailClient",
      "description": "Get email client usage",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "Days": {
            "items": {
              "$ref": "#/definitions/DynamicResponse"
            },
            "type": "array"
          },
          "Desktop": {
            "type": "integer"
          },
          "Mobile": {
            "type": "integer"
          },
          "Unknown": {
            "type": "integer"
          },
          "WebMail": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "getOutboundOpenCountsByPlatform",
      "title": "getOutboundOpenCountsByPlatform",
      "description": "Get email platform usage",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "Days": {
            "items": {
              "properties": {
                "Date": {
                  "type": "string"
                },
                "Desktop": {
                  "type": "integer"
                },
                "Mobile": {
                  "type": "integer"
                },
                "Unknown": {
                  "type": "integer"
                },
                "WebMail": {
                  "type": "integer"
                }
              }
            },
            "type": "array"
          },
          "Desktop": {
            "type": "integer"
          },
          "Mobile": {
            "type": "integer"
          },
          "Unknown": {
            "type": "integer"
          },
          "WebMail": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "getOutboundOpenCountsByReadingTime",
      "title": "getOutboundOpenCountsByReadingTime",
      "description": "Get email read times",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DynamicResponse"
      }
    },
    {
      "id": "getSentCounts",
      "title": "getSentCounts",
      "description": "Get sent counts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/SentCountsResponse"
      }
    },
    {
      "id": "getSpamComplaints",
      "title": "getSpamComplaints",
      "description": "Get spam complaints",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats up to the date specified. e.g. `2014-02-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "Days": {
            "items": {
              "properties": {
                "Date": {
                  "type": "string"
                },
                "SpamComplaint": {
                  "type": "integer"
                }
              }
            },
            "type": "array"
          },
          "SpamComplaint": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "getTrackedEmailCounts",
      "title": "getTrackedEmailCounts",
      "description": "Get tracked email counts",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "tag": {
            "type": "string",
            "description": "Filter by tag"
          },
          "fromdate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          },
          "todate": {
            "type": "string",
            "format": "date",
            "description": "Filter stats starting from the date specified. e.g. `2014-01-01`"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "Days": {
            "items": {
              "properties": {
                "Date": {
                  "type": "string"
                },
                "Tracked": {
                  "type": "integer"
                }
              }
            },
            "type": "array"
          },
          "Tracked": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "listTemplates",
      "title": "listTemplates",
      "description": "Get the Templates associated with this Server",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "Count": {
            "type": "number",
            "format": "int",
            "description": "The number of Templates to return"
          },
          "Offset": {
            "type": "number",
            "format": "int",
            "description": "The number of Templates to \"skip\" before returning results."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "Count",
          "Offset"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TemplateListingResponse"
      }
    },
    {
      "id": "templates.post",
      "title": "templates.post",
      "description": "Create a Template",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/CreateTemplateRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TemplateRecordResponse"
      }
    },
    {
      "id": "testTemplateContent",
      "title": "testTemplateContent",
      "description": "Test Template Content",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/TemplateValidationRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TemplateValidationResponse"
      }
    },
    {
      "id": "deleteTemplate",
      "title": "deleteTemplate",
      "description": "Delete a Template",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "templateid": {
            "type": "integer",
            "description": "The ID for the Template you wish to delete."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "templateid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TemplateDetailResponse"
      }
    },
    {
      "id": "getSingleTemplate",
      "title": "getSingleTemplate",
      "description": "Get a Template",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "templateid": {
            "type": "integer",
            "description": "The ID for the Template you wish to retrieve."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "templateid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TemplateDetailResponse"
      }
    },
    {
      "id": "updateTemplate",
      "title": "updateTemplate",
      "description": "Update a Template",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "templateid": {
            "type": "integer",
            "description": "The ID for the Template you wish to update."
          },
          "body": {
            "$ref": "#/definitions/EditTemplateRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "templateid",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TemplateRecordResponse"
      }
    },
    {
      "id": "listInboundRules",
      "title": "listInboundRules",
      "description": "List inbound rule triggers",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "count": {
            "type": "integer",
            "description": "Number of records to return per request."
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "count",
          "offset"
        ]
      },
      "outputSchema": {
        "properties": {
          "InboundRules": {
            "items": {
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "Rule": {
                  "format": "email",
                  "type": "string"
                }
              }
            },
            "type": "array"
          },
          "TotalCount": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "createInboundRule",
      "title": "createInboundRule",
      "description": "Create an inbound rule trigger",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/CreateInboundRuleRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "ID": {
            "type": "integer"
          },
          "Rule": {
            "type": "string"
          }
        }
      }
    },
    {
      "id": "deleteInboundRule",
      "title": "deleteInboundRule",
      "description": "Delete a single trigger",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "triggerid": {
            "type": "integer",
            "description": "The ID of the Inbound Rule that should be deleted."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "triggerid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StandardPostmarkResponse"
      }
    },
    {
      "id": "searcgTagTriggers",
      "title": "searcgTagTriggers",
      "description": "Search triggers",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "count": {
            "type": "integer",
            "description": "Number of records to return per request."
          },
          "offset": {
            "type": "integer",
            "description": "Number of records to skip."
          },
          "match_name": {
            "type": "string",
            "description": "Filter by delivery tag"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "count",
          "offset"
        ]
      },
      "outputSchema": {
        "properties": {
          "Tags": {
            "items": {
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "MatchName": {
                  "type": "string"
                },
                "TrackOpens": {
                  "type": "boolean"
                }
              }
            },
            "type": "array"
          },
          "TotalCount": {
            "type": "integer"
          }
        }
      }
    },
    {
      "id": "createTagTrigger",
      "title": "createTagTrigger",
      "description": "Create a trigger for a tag",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "body": {
            "$ref": "#/definitions/EditTagTriggerRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token"
        ]
      },
      "outputSchema": {
        "properties": {
          "ID": {
            "type": "integer"
          },
          "MatchName": {
            "type": "string"
          },
          "TrackOpens": {
            "type": "boolean"
          }
        }
      }
    },
    {
      "id": "deleteTagTrigger",
      "title": "deleteTagTrigger",
      "description": "Delete a single trigger",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "triggerid": {
            "type": "integer",
            "description": "The ID for the Tag Trigger that should be deleted."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "triggerid"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StandardPostmarkResponse"
      }
    },
    {
      "id": "getSingleTagTrigger",
      "title": "getSingleTagTrigger",
      "description": "Get a single trigger",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "triggerid": {
            "type": "integer",
            "description": "The ID for the Tag Trigger for which data should be retrieved."
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "triggerid"
        ]
      },
      "outputSchema": {
        "properties": {
          "ID": {
            "type": "integer"
          },
          "MatchName": {
            "type": "string"
          },
          "TrackOpens": {
            "type": "boolean"
          }
        }
      }
    },
    {
      "id": "editTagTrigger",
      "title": "editTagTrigger",
      "description": "Edit a single trigger",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-Postmark-Server-Token": {
            "type": "string",
            "description": "The token associated with the Server on which this request will operate."
          },
          "triggerid": {
            "type": "integer",
            "description": "The ID of the Tag Trigger that should be modified by this request."
          },
          "body": {
            "$ref": "#/definitions/EditTagTriggerRequest"
          }
        },
        "additionalProperties": false,
        "required": [
          "X-Postmark-Server-Token",
          "triggerid"
        ]
      },
      "outputSchema": {
        "properties": {
          "ID": {
            "type": "integer"
          },
          "MatchName": {
            "type": "string"
          },
          "TrackOpens": {
            "type": "boolean"
          }
        }
      }
    }
  ],
  "tags": [
    "email"
  ]
}