{
  "id": "google_groupsmigration",
  "title": "Groups Migration",
  "description": "Groups Migration Api.",
  "security": {
    "google_groupsmigration": {
      "integration": "google_groupsmigration",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "type": "oauth2",
        "flow": "accessCode",
        "scopes": {
          "https://www.googleapis.com/auth/apps.groups.migration": "Manage messages in groups on your domain"
        },
        "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
        "tokenUrl": "https://www.googleapis.com/oauth2/v4/token",
        "description": "Allows offline access using a refresh_token"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/google_groupsmigration.png"
  },
  "actionCount": 3,
  "definitions": {
    "Groups": {
      "description": "JSON response template for groups migration API.",
      "properties": {
        "kind": {
          "default": "groupsmigration#groups",
          "description": "The kind of insert resource this is.",
          "type": "string"
        },
        "responseCode": {
          "description": "The status of the insert request.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Groups"
    }
  },
  "actions": [
    {
      "id": "oauthCallback",
      "title": "",
      "description": "Exchange the code passed to your redirect URI for an access_token",
      "inputSchema": {
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_groupsmigration": {
          "integration": "google_groupsmigration"
        }
      }
    },
    {
      "id": "oauthRefresh",
      "title": "",
      "description": "Exchange a refresh_token for an access_token",
      "inputSchema": {},
      "outputSchema": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "google_groupsmigration": {
          "integration": "google_groupsmigration"
        }
      }
    },
    {
      "id": "archive.insert",
      "title": "archive.insert",
      "description": "Inserts a new mail into the archive of the Google group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "string",
            "description": "The group ID"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ],
            "default": "json"
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks.",
            "default": true
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false,
        "required": [
          "groupId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Groups"
      },
      "security": {
        "google_groupsmigration": {
          "integration": "google_groupsmigration"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "cloud",
    "google"
  ]
}