{
  "id": "azure_arm_keyvault",
  "title": "KeyVaultManagementClient",
  "description": "The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.",
  "security": {},
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/azure_arm_keyvault.png"
  },
  "actionCount": 5,
  "definitions": {
    "AccessPolicyEntry": {
      "description": "An identity that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
      "properties": {
        "applicationId": {
          "description": " Application ID of the client making request on behalf of a principal",
          "format": "uuid",
          "type": "string"
        },
        "objectId": {
          "description": "The object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies.",
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/Permissions",
          "description": "Permissions the identity has for keys, secrets and certificates."
        },
        "tenantId": {
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
          "format": "uuid",
          "type": "string"
        }
      },
      "required": [
        "tenantId",
        "objectId",
        "permissions"
      ],
      "title": "AccessPolicyEntry"
    },
    "Permissions": {
      "description": "Permissions the identity has for keys, secrets and certificates.",
      "properties": {
        "certificates": {
          "description": "Permissions to certificates",
          "items": {
            "enum": [
              "all",
              "get",
              "list",
              "delete",
              "create",
              "import",
              "update",
              "managecontacts",
              "getissuers",
              "listissuers",
              "setissuers",
              "deleteissuers",
              "manageissuers",
              "recover",
              "purge"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "CertificatePermissions"
            }
          },
          "type": "array"
        },
        "keys": {
          "description": "Permissions to keys",
          "items": {
            "enum": [
              "all",
              "encrypt",
              "decrypt",
              "wrapKey",
              "unwrapKey",
              "sign",
              "verify",
              "get",
              "list",
              "create",
              "update",
              "import",
              "delete",
              "backup",
              "restore",
              "recover",
              "purge"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "KeyPermissions"
            }
          },
          "type": "array"
        },
        "secrets": {
          "description": "Permissions to secrets",
          "items": {
            "enum": [
              "all",
              "get",
              "list",
              "set",
              "delete",
              "backup",
              "restore",
              "recover",
              "purge"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": true,
              "name": "SecretPermissions"
            }
          },
          "type": "array"
        }
      },
      "title": "Permissions"
    },
    "Resource": {
      "description": "Key Vault resource",
      "properties": {
        "id": {
          "description": "The Azure Resource Manager resource ID for the key vault.",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "The supported Azure location where the key vault should be created.",
          "type": "string"
        },
        "name": {
          "description": "The name of the key vault.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key vault. ",
          "type": "object"
        },
        "type": {
          "description": "The resource type of the key vault.",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "location",
        "name"
      ],
      "x-ms-azure-resource": true,
      "title": "Resource"
    },
    "ResourceListResult": {
      "description": "List of vault resources.",
      "properties": {
        "nextLink": {
          "description": "Gets the URL to get the next set of vault resources.",
          "type": "string"
        },
        "value": {
          "description": "Gets the list of vault resources.",
          "items": {
            "$ref": "#/definitions/Resource"
          },
          "type": "array"
        }
      },
      "title": "ResourceListResult"
    },
    "Sku": {
      "description": "SKU details",
      "properties": {
        "family": {
          "description": "SKU family name",
          "enum": [
            "A"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SkuFamily"
          }
        },
        "name": {
          "description": "SKU name to specify whether the key vault is a standard vault or a premium vault.",
          "enum": [
            "standard",
            "premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "SkuName"
          }
        }
      },
      "required": [
        "name",
        "family"
      ],
      "title": "Sku"
    },
    "Vault": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Resource information with extended details.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VaultProperties",
          "description": "Properties of the vault"
        }
      },
      "required": [
        "properties"
      ],
      "title": "Vault"
    },
    "VaultCreateOrUpdateParameters": {
      "description": "Parameters for creating or updating a vault",
      "properties": {
        "location": {
          "description": "The supported Azure location where the key vault should be created.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/VaultProperties",
          "description": "Properties of the vault"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags that will be assigned to the key vault. ",
          "type": "object"
        }
      },
      "required": [
        "location",
        "properties"
      ],
      "x-ms-azure-resource": true,
      "title": "VaultCreateOrUpdateParameters"
    },
    "VaultListResult": {
      "description": "List of vaults",
      "properties": {
        "nextLink": {
          "description": "Gets or sets the URL to get the next set of vaults.",
          "type": "string"
        },
        "value": {
          "description": "Gets or sets the list of vaults.",
          "items": {
            "$ref": "#/definitions/Vault"
          },
          "type": "array"
        }
      },
      "title": "VaultListResult"
    },
    "VaultProperties": {
      "description": "Properties of the vault",
      "properties": {
        "accessPolicies": {
          "description": "An array of 0 to 16 identities that have access to the key vault. All identities in the array must use the same tenant ID as the key vault's tenant ID.",
          "items": {
            "$ref": "#/definitions/AccessPolicyEntry"
          },
          "maxItems": 16,
          "type": "array"
        },
        "enableSoftDelete": {
          "description": "Property to specify whether the 'soft delete' functionality is enabled for this key vault.",
          "type": "boolean"
        },
        "enabledForDeployment": {
          "description": "Property to specify whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault.",
          "type": "boolean"
        },
        "enabledForDiskEncryption": {
          "description": "Property to specify whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys.",
          "type": "boolean"
        },
        "enabledForTemplateDeployment": {
          "description": "Property to specify whether Azure Resource Manager is permitted to retrieve secrets from the key vault.",
          "type": "boolean"
        },
        "sku": {
          "$ref": "#/definitions/Sku",
          "description": "SKU details"
        },
        "tenantId": {
          "description": "The Azure Active Directory tenant ID that should be used for authenticating requests to the key vault.",
          "format": "uuid",
          "type": "string"
        },
        "vaultUri": {
          "description": "The URI of the vault for performing operations on keys and secrets.",
          "type": "string"
        }
      },
      "required": [
        "tenantId",
        "sku",
        "accessPolicies"
      ],
      "title": "VaultProperties"
    }
  },
  "actions": [
    {
      "id": "Vaults_ListByResourceGroup",
      "title": "Vaults_ListByResourceGroup",
      "description": "The List operation gets information about the vaults associated with the subscription and within the specified resource group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VaultListResult"
      }
    },
    {
      "id": "Vaults_Delete",
      "title": "Vaults_Delete",
      "description": "Deletes the specified Azure key vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          "vaultName": {
            "type": "string",
            "description": "The name of the vault to delete"
          },
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "vaultName",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "Vaults_Get",
      "title": "Vaults_Get",
      "description": "Gets the specified Azure key vault.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the Resource Group to which the vault belongs."
          },
          "vaultName": {
            "type": "string",
            "description": "The name of the vault."
          },
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "vaultName",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Vault"
      }
    },
    {
      "id": "Vaults_CreateOrUpdate",
      "title": "Vaults_CreateOrUpdate",
      "description": "Create or update a key vault in the specified subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the Resource Group to which the server belongs."
          },
          "vaultName": {
            "type": "string",
            "description": "Name of the vault",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          "api-version": {
            "type": "string",
            "description": "Client Api Version."
          },
          "parameters": {
            "$ref": "#/definitions/VaultCreateOrUpdateParameters"
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "resourceGroupName",
          "vaultName",
          "api-version",
          "parameters",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Vault"
      }
    },
    {
      "id": "Vaults_List",
      "title": "Vaults_List",
      "description": "The List operation gets information about the vaults associated with the subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "$filter": {
            "type": "string",
            "description": "The filter to apply on the operation.",
            "enum": [
              "resourceType eq 'Microsoft.KeyVault/vaults'"
            ]
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "Maximum number of results to return."
          },
          "api-version": {
            "type": "string",
            "description": "Azure Resource Manager Api Version.",
            "enum": [
              "2015-11-01"
            ]
          },
          "subscriptionId": {
            "type": "string",
            "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
          }
        },
        "additionalProperties": false,
        "required": [
          "$filter",
          "api-version",
          "subscriptionId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResourceListResult"
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "developer tools",
    "cloud",
    "security",
    "azure"
  ]
}