{
  "id": "azure_arm_devtestlabs",
  "title": "DevTestLabsClient",
  "description": "The DevTest Labs Client.",
  "security": {
    "azure_arm_devtestlabs": {
      "integration": "azure_arm_devtestlabs",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "description": "OAuth2 Implicit Grant",
        "flow": "implicit",
        "scopes": {
          "user_impersonation": "Access Microsoft Azure"
        },
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/azure_arm_devtestlabs.png"
  },
  "actionCount": 105,
  "definitions": {
    "ApplicableSchedule": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicableScheduleProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "ApplicableSchedule"
    },
    "ApplicableScheduleFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Schedules applicable to a virtual machine. The schedules may have been defined on a VM or on lab level.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ApplicableSchedulePropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "ApplicableScheduleFragment"
    },
    "ApplicableScheduleProperties": {
      "description": "Properties of a schedules applicable to a virtual machine.",
      "properties": {
        "labVmsShutdown": {
          "$ref": "#/definitions/Schedule",
          "description": "The auto-shutdown schedule, if one has been set at the lab or lab resource level."
        },
        "labVmsStartup": {
          "$ref": "#/definitions/Schedule",
          "description": "The auto-startup schedule, if one has been set at the lab or lab resource level."
        }
      },
      "type": "object",
      "title": "ApplicableScheduleProperties"
    },
    "ApplicableSchedulePropertiesFragment": {
      "description": "Properties of a schedules applicable to a virtual machine.",
      "properties": {
        "labVmsShutdown": {
          "$ref": "#/definitions/ScheduleFragment",
          "description": "The auto-shutdown schedule, if one has been set at the lab or lab resource level."
        },
        "labVmsStartup": {
          "$ref": "#/definitions/ScheduleFragment",
          "description": "The auto-startup schedule, if one has been set at the lab or lab resource level."
        }
      },
      "type": "object",
      "title": "ApplicableSchedulePropertiesFragment"
    },
    "ApplyArtifactsRequest": {
      "description": "Request body for applying artifacts to a virtual machine.",
      "properties": {
        "artifacts": {
          "description": "The list of artifacts to apply.",
          "items": {
            "$ref": "#/definitions/ArtifactInstallProperties"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ApplyArtifactsRequest"
    },
    "ArmTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "An Azure Resource Manager template.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArmTemplateProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "ArmTemplate"
    },
    "ArmTemplateInfo": {
      "description": "Information about a generated ARM template.",
      "properties": {
        "parameters": {
          "description": "The parameters of the ARM template.",
          "type": "object"
        },
        "template": {
          "description": "The template's contents.",
          "type": "object"
        }
      },
      "type": "object",
      "title": "ArmTemplateInfo"
    },
    "ArmTemplateParameterProperties": {
      "description": "Properties of an Azure Resource Manager template parameter.",
      "properties": {
        "name": {
          "description": "The name of the template parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value of the template parameter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArmTemplateParameterProperties"
    },
    "ArmTemplateProperties": {
      "description": "Properties of an Azure Resource Manager template.",
      "properties": {
        "contents": {
          "description": "The contents of the ARM template.",
          "readOnly": true,
          "type": "object"
        },
        "createdDate": {
          "description": "The creation date of the armTemplate.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the ARM template.",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the ARM template.",
          "readOnly": true,
          "type": "string"
        },
        "icon": {
          "description": "The URI to the icon of the ARM template.",
          "readOnly": true,
          "type": "string"
        },
        "parametersValueFilesInfo": {
          "description": "File name and parameter values information from all azuredeploy.*.parameters.json for the ARM template.",
          "items": {
            "$ref": "#/definitions/ParametersValueFileInfo"
          },
          "readOnly": true,
          "type": "array"
        },
        "publisher": {
          "description": "The publisher of the ARM template.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArmTemplateProperties"
    },
    "Artifact": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "An artifact.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArtifactProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "Artifact"
    },
    "ArtifactDeploymentStatusProperties": {
      "description": "Properties of an artifact deployment.",
      "properties": {
        "artifactsApplied": {
          "description": "The total count of the artifacts that were successfully applied.",
          "format": "int32",
          "type": "integer"
        },
        "deploymentStatus": {
          "description": "The deployment status of the artifact.",
          "type": "string"
        },
        "totalArtifacts": {
          "description": "The total count of the artifacts that were tentatively applied.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "ArtifactDeploymentStatusProperties"
    },
    "ArtifactDeploymentStatusPropertiesFragment": {
      "description": "Properties of an artifact deployment.",
      "properties": {
        "artifactsApplied": {
          "description": "The total count of the artifacts that were successfully applied.",
          "format": "int32",
          "type": "integer"
        },
        "deploymentStatus": {
          "description": "The deployment status of the artifact.",
          "type": "string"
        },
        "totalArtifacts": {
          "description": "The total count of the artifacts that were tentatively applied.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "ArtifactDeploymentStatusPropertiesFragment"
    },
    "ArtifactInstallProperties": {
      "description": "Properties of an artifact.",
      "properties": {
        "artifactId": {
          "description": "The artifact's identifier.",
          "type": "string"
        },
        "deploymentStatusMessage": {
          "description": "The status message from the deployment.",
          "type": "string"
        },
        "installTime": {
          "description": "The time that the artifact starts to install on the virtual machine.",
          "format": "date-time",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters of the artifact.",
          "items": {
            "$ref": "#/definitions/ArtifactParameterProperties"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the artifact.",
          "type": "string"
        },
        "vmExtensionStatusMessage": {
          "description": "The status message from the virtual machine extension.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArtifactInstallProperties"
    },
    "ArtifactInstallPropertiesFragment": {
      "description": "Properties of an artifact.",
      "properties": {
        "artifactId": {
          "description": "The artifact's identifier.",
          "type": "string"
        },
        "deploymentStatusMessage": {
          "description": "The status message from the deployment.",
          "type": "string"
        },
        "installTime": {
          "description": "The time that the artifact starts to install on the virtual machine.",
          "format": "date-time",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters of the artifact.",
          "items": {
            "$ref": "#/definitions/ArtifactParameterPropertiesFragment"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the artifact.",
          "type": "string"
        },
        "vmExtensionStatusMessage": {
          "description": "The status message from the virtual machine extension.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArtifactInstallPropertiesFragment"
    },
    "ArtifactParameterProperties": {
      "description": "Properties of an artifact parameter.",
      "properties": {
        "name": {
          "description": "The name of the artifact parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value of the artifact parameter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArtifactParameterProperties"
    },
    "ArtifactParameterPropertiesFragment": {
      "description": "Properties of an artifact parameter.",
      "properties": {
        "name": {
          "description": "The name of the artifact parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value of the artifact parameter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArtifactParameterPropertiesFragment"
    },
    "ArtifactProperties": {
      "description": "Properties of an artifact.",
      "properties": {
        "createdDate": {
          "description": "The artifact's creation date.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The artifact's description.",
          "readOnly": true,
          "type": "string"
        },
        "filePath": {
          "description": "The file path to the artifact.",
          "readOnly": true,
          "type": "string"
        },
        "icon": {
          "description": "The URI to the artifact icon.",
          "readOnly": true,
          "type": "string"
        },
        "parameters": {
          "description": "The artifact's parameters.",
          "readOnly": true,
          "type": "object"
        },
        "publisher": {
          "description": "The artifact's publisher.",
          "readOnly": true,
          "type": "string"
        },
        "targetOsType": {
          "description": "The artifact's target OS.",
          "readOnly": true,
          "type": "string"
        },
        "title": {
          "description": "The artifact's title.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArtifactProperties"
    },
    "ArtifactSource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Properties of an artifact source.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArtifactSourceProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "ArtifactSource"
    },
    "ArtifactSourceFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Properties of an artifact source.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ArtifactSourcePropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "ArtifactSourceFragment"
    },
    "ArtifactSourceProperties": {
      "description": "Properties of an artifact source.",
      "properties": {
        "armTemplateFolderPath": {
          "description": "The folder containing Azure Resource Manager templates.",
          "type": "string"
        },
        "branchRef": {
          "description": "The artifact source's branch reference.",
          "type": "string"
        },
        "createdDate": {
          "description": "The artifact source's creation date.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "The artifact source's display name.",
          "type": "string"
        },
        "folderPath": {
          "description": "The folder containing artifacts.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "securityToken": {
          "description": "The security token to authenticate to the artifact source.",
          "type": "string"
        },
        "sourceType": {
          "description": "The artifact source's type.",
          "enum": [
            "VsoGit",
            "GitHub"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SourceControlType"
          }
        },
        "status": {
          "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "EnableStatus"
          }
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "uri": {
          "description": "The artifact source's URI.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArtifactSourceProperties"
    },
    "ArtifactSourcePropertiesFragment": {
      "description": "Properties of an artifact source.",
      "properties": {
        "armTemplateFolderPath": {
          "description": "The folder containing Azure Resource Manager templates.",
          "type": "string"
        },
        "branchRef": {
          "description": "The artifact source's branch reference.",
          "type": "string"
        },
        "displayName": {
          "description": "The artifact source's display name.",
          "type": "string"
        },
        "folderPath": {
          "description": "The folder containing artifacts.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "securityToken": {
          "description": "The security token to authenticate to the artifact source.",
          "type": "string"
        },
        "sourceType": {
          "description": "The artifact source's type.",
          "enum": [
            "VsoGit",
            "GitHub"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SourceControlType"
          }
        },
        "status": {
          "description": "Indicates if the artifact source is enabled (values: Enabled, Disabled).",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "EnableStatus"
          }
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "uri": {
          "description": "The artifact source's URI.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ArtifactSourcePropertiesFragment"
    },
    "AttachDiskProperties": {
      "description": "Properties of the disk to attach.",
      "properties": {
        "leasedByLabVmId": {
          "description": "The resource ID of the Lab virtual machine to which the disk is attached.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "AttachDiskProperties"
    },
    "AttachNewDataDiskOptions": {
      "description": "Properties to attach new disk to the Virtual Machine.",
      "properties": {
        "diskName": {
          "description": "The name of the disk to be attached.",
          "type": "string"
        },
        "diskSizeGiB": {
          "description": "Size of the disk to be attached in GibiBytes.",
          "format": "int32",
          "type": "integer"
        },
        "diskType": {
          "description": "The storage type for the disk (i.e. Standard, Premium).",
          "enum": [
            "Standard",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "StorageType"
          }
        }
      },
      "type": "object",
      "title": "AttachNewDataDiskOptions"
    },
    "BulkCreationParameters": {
      "description": "Parameters for creating multiple virtual machines as a single action.",
      "properties": {
        "instanceCount": {
          "description": "The number of virtual machine instances to create.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "BulkCreationParameters"
    },
    "CloudError": {
      "description": "Error from a REST request.",
      "properties": {
        "error": {
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "type": "object",
      "x-ms-external": true,
      "title": "CloudError"
    },
    "CloudErrorBody": {
      "description": "Body of an error from a REST request.",
      "properties": {
        "code": {
          "type": "string"
        },
        "details": {
          "description": "Inner errors.",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-external": true,
      "title": "CloudErrorBody"
    },
    "ComputeDataDisk": {
      "description": "A data disks attached to a virtual machine.",
      "properties": {
        "diskSizeGiB": {
          "description": "Gets data disk size in GiB.",
          "format": "int32",
          "type": "integer"
        },
        "diskUri": {
          "description": "When backed by a blob, the URI of underlying blob.",
          "type": "string"
        },
        "managedDiskId": {
          "description": "When backed by managed disk, this is the ID of the compute disk resource.",
          "type": "string"
        },
        "name": {
          "description": "Gets data disk name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ComputeDataDisk"
    },
    "ComputeDataDiskFragment": {
      "description": "A data disks attached to a virtual machine.",
      "properties": {
        "diskSizeGiB": {
          "description": "Gets data disk size in GiB.",
          "format": "int32",
          "type": "integer"
        },
        "diskUri": {
          "description": "When backed by a blob, the URI of underlying blob.",
          "type": "string"
        },
        "managedDiskId": {
          "description": "When backed by managed disk, this is the ID of the compute disk resource.",
          "type": "string"
        },
        "name": {
          "description": "Gets data disk name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ComputeDataDiskFragment"
    },
    "ComputeVmInstanceViewStatus": {
      "description": "Status information about a virtual machine.",
      "properties": {
        "code": {
          "description": "Gets the status Code.",
          "type": "string"
        },
        "displayStatus": {
          "description": "Gets the short localizable label for the status.",
          "type": "string"
        },
        "message": {
          "description": "Gets the message associated with the status.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ComputeVmInstanceViewStatus"
    },
    "ComputeVmInstanceViewStatusFragment": {
      "description": "Status information about a virtual machine.",
      "properties": {
        "code": {
          "description": "Gets the status Code.",
          "type": "string"
        },
        "displayStatus": {
          "description": "Gets the short localizable label for the status.",
          "type": "string"
        },
        "message": {
          "description": "Gets the message associated with the status.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ComputeVmInstanceViewStatusFragment"
    },
    "ComputeVmProperties": {
      "description": "Properties of a virtual machine returned by the Microsoft.Compute API.",
      "properties": {
        "dataDiskIds": {
          "description": "Gets data disks blob uri for the virtual machine.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataDisks": {
          "description": "Gets all data disks attached to the virtual machine.",
          "items": {
            "$ref": "#/definitions/ComputeDataDisk"
          },
          "type": "array"
        },
        "networkInterfaceId": {
          "description": "Gets the network interface ID of the virtual machine.",
          "type": "string"
        },
        "osDiskId": {
          "description": "Gets OS disk blob uri for the virtual machine.",
          "type": "string"
        },
        "osType": {
          "description": "Gets the OS type of the virtual machine.",
          "type": "string"
        },
        "statuses": {
          "description": "Gets the statuses of the virtual machine.",
          "items": {
            "$ref": "#/definitions/ComputeVmInstanceViewStatus"
          },
          "type": "array"
        },
        "vmSize": {
          "description": "Gets the size of the virtual machine.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ComputeVmProperties"
    },
    "ComputeVmPropertiesFragment": {
      "description": "Properties of a virtual machine returned by the Microsoft.Compute API.",
      "properties": {
        "dataDiskIds": {
          "description": "Gets data disks blob uri for the virtual machine.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataDisks": {
          "description": "Gets all data disks attached to the virtual machine.",
          "items": {
            "$ref": "#/definitions/ComputeDataDiskFragment"
          },
          "type": "array"
        },
        "networkInterfaceId": {
          "description": "Gets the network interface ID of the virtual machine.",
          "type": "string"
        },
        "osDiskId": {
          "description": "Gets OS disk blob uri for the virtual machine.",
          "type": "string"
        },
        "osType": {
          "description": "Gets the OS type of the virtual machine.",
          "type": "string"
        },
        "statuses": {
          "description": "Gets the statuses of the virtual machine.",
          "items": {
            "$ref": "#/definitions/ComputeVmInstanceViewStatusFragment"
          },
          "type": "array"
        },
        "vmSize": {
          "description": "Gets the size of the virtual machine.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ComputeVmPropertiesFragment"
    },
    "CostThresholdProperties": {
      "description": "Properties of a cost threshold item.",
      "properties": {
        "NotificationSent": {
          "description": "Indicates the datetime when notifications were last sent for this threshold.",
          "type": "string"
        },
        "displayOnChart": {
          "description": "Indicates whether this threshold will be displayed on cost charts.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CostThresholdStatus"
          }
        },
        "percentageThreshold": {
          "$ref": "#/definitions/PercentageCostThresholdProperties",
          "description": "The value of the percentage cost threshold."
        },
        "sendNotificationWhenExceeded": {
          "description": "Indicates whether notifications will be sent when this threshold is exceeded.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CostThresholdStatus"
          }
        },
        "thresholdId": {
          "description": "The ID of the cost threshold item.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "CostThresholdProperties"
    },
    "CustomImage": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A custom image.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/CustomImageProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "CustomImage"
    },
    "CustomImageProperties": {
      "description": "Properties of a custom image.",
      "properties": {
        "author": {
          "description": "The author of the custom image.",
          "type": "string"
        },
        "creationDate": {
          "description": "The creation date of the custom image.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the custom image.",
          "type": "string"
        },
        "managedImageId": {
          "description": "The Managed Image Id backing the custom image.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "vhd": {
          "$ref": "#/definitions/CustomImagePropertiesCustom",
          "description": "The VHD from which the image is to be created."
        },
        "vm": {
          "$ref": "#/definitions/CustomImagePropertiesFromVm",
          "description": "The virtual machine from which the image is to be created."
        }
      },
      "type": "object",
      "title": "CustomImageProperties"
    },
    "CustomImagePropertiesCustom": {
      "description": "Properties for creating a custom image from a VHD.",
      "properties": {
        "imageName": {
          "description": "The image name.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the custom image (i.e. Windows, Linux)",
          "enum": [
            "Windows",
            "Linux",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CustomImageOsType"
          }
        },
        "sysPrep": {
          "description": "Indicates whether sysprep has been run on the VHD.",
          "type": "boolean"
        }
      },
      "required": [
        "osType"
      ],
      "type": "object",
      "title": "CustomImagePropertiesCustom"
    },
    "CustomImagePropertiesFromVm": {
      "description": "Properties for creating a custom image from a virtual machine.",
      "properties": {
        "linuxOsInfo": {
          "$ref": "#/definitions/LinuxOsInfo",
          "description": "The Linux OS information of the VM."
        },
        "sourceVmId": {
          "description": "The source vm identifier.",
          "type": "string"
        },
        "windowsOsInfo": {
          "$ref": "#/definitions/WindowsOsInfo",
          "description": "The Windows OS information of the VM."
        }
      },
      "type": "object",
      "title": "CustomImagePropertiesFromVm"
    },
    "DataDiskProperties": {
      "description": "Request body for adding a new or existing data disk to a virtual machine.",
      "properties": {
        "attachNewDataDiskOptions": {
          "$ref": "#/definitions/AttachNewDataDiskOptions",
          "description": "Specifies options to attach a new disk to the virtual machine."
        },
        "existingLabDiskId": {
          "description": "Specifies the existing lab disk id to attach to virtual machine.",
          "type": "string"
        },
        "hostCaching": {
          "description": "Caching option for a data disk (i.e. None, ReadOnly, ReadWrite).",
          "enum": [
            "None",
            "ReadOnly",
            "ReadWrite"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "HostCachingOptions"
          }
        }
      },
      "type": "object",
      "title": "DataDiskProperties"
    },
    "DayDetails": {
      "description": "Properties of a daily schedule.",
      "properties": {
        "time": {
          "description": "The time of day the schedule will occur.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DayDetails"
    },
    "DayDetailsFragment": {
      "description": "Properties of a daily schedule.",
      "properties": {
        "time": {
          "description": "The time of day the schedule will occur.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DayDetailsFragment"
    },
    "DetachDataDiskProperties": {
      "description": "Request body for detaching data disk from a virtual machine.",
      "properties": {
        "existingLabDiskId": {
          "description": "Specifies the disk resource ID to detach from virtual machine.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DetachDataDiskProperties"
    },
    "DetachDiskProperties": {
      "description": "Properties of the disk to detach.",
      "properties": {
        "leasedByLabVmId": {
          "description": "The resource ID of the Lab VM to which the disk is attached.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DetachDiskProperties"
    },
    "Disk": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A Disk.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DiskProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "Disk"
    },
    "DiskProperties": {
      "description": "Properties of a disk.",
      "properties": {
        "createdDate": {
          "description": "The creation date of the disk.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "diskBlobName": {
          "description": "When backed by a blob, the name of the VHD blob without extension.",
          "type": "string"
        },
        "diskSizeGiB": {
          "description": "The size of the disk in GibiBytes.",
          "format": "int32",
          "type": "integer"
        },
        "diskType": {
          "description": "The storage type for the disk (i.e. Standard, Premium).",
          "enum": [
            "Standard",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "StorageType"
          }
        },
        "diskUri": {
          "description": "When backed by a blob, the URI of underlying blob.",
          "type": "string"
        },
        "hostCaching": {
          "description": "The host caching policy of the disk (i.e. None, ReadOnly, ReadWrite).",
          "type": "string"
        },
        "leasedByLabVmId": {
          "description": "The resource ID of the VM to which this disk is leased.",
          "type": "string"
        },
        "managedDiskId": {
          "description": "When backed by managed disk, this is the ID of the compute disk resource.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "DiskProperties"
    },
    "DtlEnvironment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "An environment, which is essentially an ARM template deployment.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/EnvironmentProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "DtlEnvironment"
    },
    "EnvironmentDeploymentProperties": {
      "description": "Properties of an environment deployment.",
      "properties": {
        "armTemplateId": {
          "description": "The Azure Resource Manager template's identifier.",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters of the Azure Resource Manager template.",
          "items": {
            "$ref": "#/definitions/ArmTemplateParameterProperties"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "EnvironmentDeploymentProperties"
    },
    "EnvironmentProperties": {
      "description": "Properties of an environment.",
      "properties": {
        "armTemplateDisplayName": {
          "description": "The display name of the Azure Resource Manager template that produced the environment.",
          "type": "string"
        },
        "createdByUser": {
          "description": "The creator of the environment.",
          "readOnly": true,
          "type": "string"
        },
        "deploymentProperties": {
          "$ref": "#/definitions/EnvironmentDeploymentProperties",
          "description": "The deployment properties of the environment."
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "resourceGroupId": {
          "description": "The identifier of the resource group containing the environment's resources.",
          "readOnly": true,
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "EnvironmentProperties"
    },
    "EvaluatePoliciesProperties": {
      "description": "Properties for evaluating a policy set.",
      "properties": {
        "factData": {
          "description": "The fact data.",
          "type": "string"
        },
        "factName": {
          "description": "The fact name.",
          "type": "string"
        },
        "valueOffset": {
          "description": "The value offset.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "EvaluatePoliciesProperties"
    },
    "EvaluatePoliciesRequest": {
      "description": "Request body for evaluating a policy set.",
      "properties": {
        "policies": {
          "description": "Policies to evaluate.",
          "items": {
            "$ref": "#/definitions/EvaluatePoliciesProperties"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "EvaluatePoliciesRequest"
    },
    "EvaluatePoliciesResponse": {
      "description": "Response body for evaluating a policy set.",
      "properties": {
        "results": {
          "description": "Results of evaluating a policy set.",
          "items": {
            "$ref": "#/definitions/PolicySetResult"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "EvaluatePoliciesResponse"
    },
    "Event": {
      "description": "An event to be notified for.",
      "properties": {
        "eventName": {
          "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
          "enum": [
            "AutoShutdown",
            "Cost"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NotificationChannelEventType"
          }
        }
      },
      "type": "object",
      "title": "Event"
    },
    "EventFragment": {
      "description": "An event to be notified for.",
      "properties": {
        "eventName": {
          "description": "The event type for which this notification is enabled (i.e. AutoShutdown, Cost)",
          "enum": [
            "AutoShutdown",
            "Cost"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NotificationChannelEventType"
          }
        }
      },
      "type": "object",
      "title": "EventFragment"
    },
    "ExportResourceUsageParameters": {
      "description": "The parameters of the export operation.",
      "properties": {
        "blobStorageAbsoluteSasUri": {
          "description": "The blob storage absolute sas uri with write permission to the container which the usage data needs to be uploaded to.",
          "type": "string"
        },
        "usageStartDate": {
          "description": "The start time of the usage. If not provided, usage will be reported since the beginning of data collection.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ExportResourceUsageParameters"
    },
    "ExternalSubnet": {
      "description": "Subnet information as returned by the Microsoft.Network API.",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ExternalSubnet"
    },
    "ExternalSubnetFragment": {
      "description": "Subnet information as returned by the Microsoft.Network API.",
      "properties": {
        "id": {
          "description": "Gets or sets the identifier.",
          "type": "string"
        },
        "name": {
          "description": "Gets or sets the name.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ExternalSubnetFragment"
    },
    "Formula": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A formula for creating a VM, specifying an image base and other parameters",
      "properties": {
        "properties": {
          "$ref": "#/definitions/FormulaProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "Formula"
    },
    "FormulaProperties": {
      "description": "Properties of a formula.",
      "properties": {
        "author": {
          "description": "The author of the formula.",
          "type": "string"
        },
        "creationDate": {
          "description": "The creation date of the formula.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the formula.",
          "type": "string"
        },
        "formulaContent": {
          "$ref": "#/definitions/LabVirtualMachineCreationParameter",
          "description": "The content of the formula."
        },
        "osType": {
          "description": "The OS type of the formula.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "vm": {
          "$ref": "#/definitions/FormulaPropertiesFromVm",
          "description": "Information about a VM from which a formula is to be created."
        }
      },
      "type": "object",
      "title": "FormulaProperties"
    },
    "FormulaPropertiesFromVm": {
      "description": "Information about a VM from which a formula is to be created.",
      "properties": {
        "labVmId": {
          "description": "The identifier of the VM from which a formula is to be created.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "FormulaPropertiesFromVm"
    },
    "GalleryImage": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A gallery image.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/GalleryImageProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "GalleryImage"
    },
    "GalleryImageProperties": {
      "description": "Properties of a gallery image.",
      "properties": {
        "author": {
          "description": "The author of the gallery image.",
          "type": "string"
        },
        "createdDate": {
          "description": "The creation date of the gallery image.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the gallery image.",
          "type": "string"
        },
        "enabled": {
          "description": "Indicates whether this gallery image is enabled.",
          "type": "boolean"
        },
        "icon": {
          "description": "The icon of the gallery image.",
          "type": "string"
        },
        "imageReference": {
          "$ref": "#/definitions/GalleryImageReference",
          "description": "The image reference of the gallery image."
        }
      },
      "type": "object",
      "title": "GalleryImageProperties"
    },
    "GalleryImageReference": {
      "description": "The reference information for an Azure Marketplace image.",
      "properties": {
        "offer": {
          "description": "The offer of the gallery image.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the gallery image.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the gallery image.",
          "type": "string"
        },
        "sku": {
          "description": "The SKU of the gallery image.",
          "type": "string"
        },
        "version": {
          "description": "The version of the gallery image.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "GalleryImageReference"
    },
    "GalleryImageReferenceFragment": {
      "description": "The reference information for an Azure Marketplace image.",
      "properties": {
        "offer": {
          "description": "The offer of the gallery image.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the gallery image.",
          "type": "string"
        },
        "publisher": {
          "description": "The publisher of the gallery image.",
          "type": "string"
        },
        "sku": {
          "description": "The SKU of the gallery image.",
          "type": "string"
        },
        "version": {
          "description": "The version of the gallery image.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "GalleryImageReferenceFragment"
    },
    "GenerateArmTemplateRequest": {
      "description": "Parameters for generating an ARM template for deploying artifacts.",
      "properties": {
        "fileUploadOptions": {
          "description": "Options for uploading the files for the artifact. UploadFilesAndGenerateSasTokens is the default value.",
          "enum": [
            "UploadFilesAndGenerateSasTokens",
            "None"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "FileUploadOptions"
          }
        },
        "location": {
          "description": "The location of the virtual machine.",
          "type": "string"
        },
        "parameters": {
          "description": "The parameters of the ARM template.",
          "items": {
            "$ref": "#/definitions/ParameterInfo"
          },
          "type": "array"
        },
        "virtualMachineName": {
          "description": "The resource name of the virtual machine.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "GenerateArmTemplateRequest"
    },
    "GenerateUploadUriParameter": {
      "description": "Properties for generating an upload URI.",
      "properties": {
        "blobName": {
          "description": "The blob name of the upload URI.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "GenerateUploadUriParameter"
    },
    "GenerateUploadUriResponse": {
      "description": "Reponse body for generating an upload URI.",
      "properties": {
        "uploadUri": {
          "description": "The upload URI for the VHD.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "GenerateUploadUriResponse"
    },
    "HourDetails": {
      "description": "Properties of an hourly schedule.",
      "properties": {
        "minute": {
          "description": "Minutes of the hour the schedule will run.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "HourDetails"
    },
    "HourDetailsFragment": {
      "description": "Properties of an hourly schedule.",
      "properties": {
        "minute": {
          "description": "Minutes of the hour the schedule will run.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "HourDetailsFragment"
    },
    "IdentityProperties": {
      "description": "IdentityProperties",
      "properties": {
        "clientSecretUrl": {
          "description": "The client secret URL of the identity.",
          "type": "string"
        },
        "principalId": {
          "description": "The principal id of resource identity.",
          "type": "string"
        },
        "tenantId": {
          "description": "The tenant identifier of resource.",
          "type": "string"
        },
        "type": {
          "description": "Managed identity.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "IdentityProperties"
    },
    "InboundNatRule": {
      "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
      "properties": {
        "backendPort": {
          "description": "The port to which the external traffic will be redirected.",
          "format": "int32",
          "type": "integer"
        },
        "frontendPort": {
          "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.",
          "format": "int32",
          "type": "integer"
        },
        "transportProtocol": {
          "description": "The transport protocol for the endpoint.",
          "enum": [
            "Tcp",
            "Udp"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TransportProtocol"
          }
        }
      },
      "type": "object",
      "title": "InboundNatRule"
    },
    "InboundNatRuleFragment": {
      "description": "A rule for NAT - exposing a VM's port (backendPort) on the public IP address using a load balancer.",
      "properties": {
        "backendPort": {
          "description": "The port to which the external traffic will be redirected.",
          "format": "int32",
          "type": "integer"
        },
        "frontendPort": {
          "description": "The external endpoint port of the inbound connection. Possible values range between 1 and 65535, inclusive. If unspecified, a value will be allocated automatically.",
          "format": "int32",
          "type": "integer"
        },
        "transportProtocol": {
          "description": "The transport protocol for the endpoint.",
          "enum": [
            "Tcp",
            "Udp"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TransportProtocol"
          }
        }
      },
      "type": "object",
      "title": "InboundNatRuleFragment"
    },
    "Lab": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A lab.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "Lab"
    },
    "LabCost": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A cost item.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabCostProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "LabCost"
    },
    "LabCostDetailsProperties": {
      "description": "The properties of a lab cost item.",
      "properties": {
        "cost": {
          "description": "The cost component of the cost item.",
          "format": "double",
          "type": "number"
        },
        "costType": {
          "description": "The type of the cost.",
          "enum": [
            "Unavailable",
            "Reported",
            "Projected"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CostType"
          }
        },
        "date": {
          "description": "The date of the cost item.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object",
      "title": "LabCostDetailsProperties"
    },
    "LabCostProperties": {
      "description": "Properties of a cost item.",
      "properties": {
        "createdDate": {
          "description": "The creation date of the cost.",
          "format": "date-time",
          "type": "string"
        },
        "currencyCode": {
          "description": "The currency code of the cost.",
          "type": "string"
        },
        "endDateTime": {
          "description": "The end time of the cost data.",
          "format": "date-time",
          "type": "string"
        },
        "labCostDetails": {
          "description": "The lab cost details component of the cost data.",
          "items": {
            "$ref": "#/definitions/LabCostDetailsProperties"
          },
          "readOnly": true,
          "type": "array"
        },
        "labCostSummary": {
          "$ref": "#/definitions/LabCostSummaryProperties",
          "description": "The lab cost summary component of the cost data.",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "resourceCosts": {
          "description": "The resource cost component of the cost data.",
          "items": {
            "$ref": "#/definitions/LabResourceCostProperties"
          },
          "readOnly": true,
          "type": "array"
        },
        "startDateTime": {
          "description": "The start time of the cost data.",
          "format": "date-time",
          "type": "string"
        },
        "targetCost": {
          "$ref": "#/definitions/TargetCostProperties",
          "description": "The target cost properties"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "LabCostProperties"
    },
    "LabCostSummaryProperties": {
      "description": "The properties of the cost summary.",
      "properties": {
        "estimatedLabCost": {
          "description": "The cost component of the cost item.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "title": "LabCostSummaryProperties"
    },
    "LabFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A lab.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabPropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "LabFragment"
    },
    "LabProperties": {
      "description": "Properties of a lab.",
      "properties": {
        "artifactsStorageAccount": {
          "description": "The lab's artifact storage account.",
          "readOnly": true,
          "type": "string"
        },
        "createdDate": {
          "description": "The creation date of the lab.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "defaultPremiumStorageAccount": {
          "description": "The lab's default premium storage account.",
          "readOnly": true,
          "type": "string"
        },
        "defaultStorageAccount": {
          "description": "The lab's default storage account.",
          "readOnly": true,
          "type": "string"
        },
        "labStorageType": {
          "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
          "enum": [
            "Standard",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "StorageType"
          }
        },
        "premiumDataDiskStorageAccount": {
          "description": "The lab's premium data disk storage account.",
          "readOnly": true,
          "type": "string"
        },
        "premiumDataDisks": {
          "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PremiumDataDisk"
          }
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "vaultName": {
          "description": "The lab's Key vault.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "title": "LabProperties"
    },
    "LabPropertiesFragment": {
      "description": "Properties of a lab.",
      "properties": {
        "labStorageType": {
          "description": "Type of storage used by the lab. It can be either Premium or Standard. Default is Premium.",
          "enum": [
            "Standard",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "StorageType"
          }
        },
        "premiumDataDisks": {
          "description": "The setting to enable usage of premium data disks.\r\nWhen its value is 'Enabled', creation of standard or premium data disks is allowed.\r\nWhen its value is 'Disabled', only creation of standard data disks is allowed.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PremiumDataDisk"
          }
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "LabPropertiesFragment"
    },
    "LabResourceCostProperties": {
      "description": "The properties of a resource cost item.",
      "properties": {
        "externalResourceId": {
          "description": "The ID of the external resource",
          "type": "string"
        },
        "resourceCost": {
          "description": "The cost component of the resource cost item.",
          "format": "double",
          "type": "number"
        },
        "resourceId": {
          "description": "The ID of the resource",
          "type": "string"
        },
        "resourceOwner": {
          "description": "The owner of the resource (ex. janedoe@microsoft.com)",
          "type": "string"
        },
        "resourcePricingTier": {
          "description": "The category of the resource (ex. Premium_LRS, Standard_DS1)",
          "type": "string"
        },
        "resourceStatus": {
          "description": "The status of the resource (ex. Active)",
          "type": "string"
        },
        "resourceType": {
          "description": "The logical resource type (ex. virtualmachine, storageaccount)",
          "type": "string"
        },
        "resourceUId": {
          "description": "The unique identifier of the resource.",
          "type": "string"
        },
        "resourcename": {
          "description": "The name of the resource.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "LabResourceCostProperties"
    },
    "LabVhd": {
      "description": "Properties of a VHD in the lab.",
      "properties": {
        "id": {
          "description": "The URI to the VHD.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "LabVhd"
    },
    "LabVirtualMachine": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A virtual machine.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabVirtualMachineProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "LabVirtualMachine"
    },
    "LabVirtualMachineCreationParameter": {
      "description": "Properties for creating a virtual machine.",
      "properties": {
        "location": {
          "description": "The location of the new virtual machine or environment",
          "type": "string"
        },
        "name": {
          "description": "The name of the virtual machine or environment",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/LabVirtualMachineCreationParameterProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the resource.",
          "type": "object"
        }
      },
      "type": "object",
      "title": "LabVirtualMachineCreationParameter"
    },
    "LabVirtualMachineCreationParameterProperties": {
      "description": "Properties for virtual machine creation.",
      "properties": {
        "allowClaim": {
          "description": "Indicates whether another user can take ownership of the virtual machine",
          "type": "boolean"
        },
        "applicableSchedule": {
          "$ref": "#/definitions/ApplicableSchedule",
          "description": "The applicable schedule for the virtual machine."
        },
        "artifactDeploymentStatus": {
          "$ref": "#/definitions/ArtifactDeploymentStatusProperties",
          "description": "The artifact deployment status for the virtual machine."
        },
        "artifacts": {
          "description": "The artifacts to be installed on the virtual machine.",
          "items": {
            "$ref": "#/definitions/ArtifactInstallProperties"
          },
          "type": "array"
        },
        "bulkCreationParameters": {
          "$ref": "#/definitions/BulkCreationParameters",
          "description": "The number of virtual machine instances to create."
        },
        "computeVm": {
          "$ref": "#/definitions/ComputeVmProperties",
          "description": "The compute virtual machine properties."
        },
        "createdByUser": {
          "description": "The email address of creator of the virtual machine.",
          "type": "string"
        },
        "createdByUserId": {
          "description": "The object identifier of the creator of the virtual machine.",
          "type": "string"
        },
        "createdDate": {
          "description": "The creation date of the virtual machine.",
          "format": "date-time",
          "type": "string"
        },
        "customImageId": {
          "description": "The custom image identifier of the virtual machine.",
          "type": "string"
        },
        "disallowPublicIpAddress": {
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "type": "boolean"
        },
        "environmentId": {
          "description": "The resource ID of the environment that contains this virtual machine, if any.",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date for VM.",
          "format": "date-time",
          "type": "string"
        },
        "fqdn": {
          "description": "The fully-qualified domain name of the virtual machine.",
          "type": "string"
        },
        "galleryImageReference": {
          "$ref": "#/definitions/GalleryImageReference",
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine."
        },
        "isAuthenticationWithSshKey": {
          "description": "Indicates whether this virtual machine uses an SSH key for authentication.",
          "type": "boolean"
        },
        "labSubnetName": {
          "description": "The lab subnet name of the virtual machine.",
          "type": "string"
        },
        "labVirtualNetworkId": {
          "description": "The lab virtual network identifier of the virtual machine.",
          "type": "string"
        },
        "networkInterface": {
          "$ref": "#/definitions/NetworkInterfaceProperties",
          "description": "The network interface properties."
        },
        "notes": {
          "description": "The notes of the virtual machine.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the virtual machine.",
          "type": "string"
        },
        "ownerObjectId": {
          "description": "The object identifier of the owner of the virtual machine.",
          "type": "string"
        },
        "ownerUserPrincipalName": {
          "description": "The user principal name of the virtual machine owner.",
          "type": "string"
        },
        "password": {
          "description": "The password of the virtual machine administrator.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "size": {
          "description": "The size of the virtual machine.",
          "type": "string"
        },
        "sshKey": {
          "description": "The SSH key of the virtual machine administrator.",
          "type": "string"
        },
        "storageType": {
          "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "userName": {
          "description": "The user name of the virtual machine.",
          "type": "string"
        },
        "virtualMachineCreationSource": {
          "description": "Tells source of creation of lab virtual machine. Output property only.",
          "enum": [
            "FromCustomImage",
            "FromGalleryImage"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachineCreationSource"
          }
        }
      },
      "type": "object",
      "title": "LabVirtualMachineCreationParameterProperties"
    },
    "LabVirtualMachineFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A virtual machine.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LabVirtualMachinePropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "LabVirtualMachineFragment"
    },
    "LabVirtualMachineProperties": {
      "description": "Properties of a virtual machine.",
      "properties": {
        "allowClaim": {
          "description": "Indicates whether another user can take ownership of the virtual machine",
          "type": "boolean"
        },
        "applicableSchedule": {
          "$ref": "#/definitions/ApplicableSchedule",
          "description": "The applicable schedule for the virtual machine."
        },
        "artifactDeploymentStatus": {
          "$ref": "#/definitions/ArtifactDeploymentStatusProperties",
          "description": "The artifact deployment status for the virtual machine."
        },
        "artifacts": {
          "description": "The artifacts to be installed on the virtual machine.",
          "items": {
            "$ref": "#/definitions/ArtifactInstallProperties"
          },
          "type": "array"
        },
        "computeId": {
          "description": "The resource identifier (Microsoft.Compute) of the virtual machine.",
          "readOnly": true,
          "type": "string"
        },
        "computeVm": {
          "$ref": "#/definitions/ComputeVmProperties",
          "description": "The compute virtual machine properties."
        },
        "createdByUser": {
          "description": "The email address of creator of the virtual machine.",
          "type": "string"
        },
        "createdByUserId": {
          "description": "The object identifier of the creator of the virtual machine.",
          "type": "string"
        },
        "createdDate": {
          "description": "The creation date of the virtual machine.",
          "format": "date-time",
          "type": "string"
        },
        "customImageId": {
          "description": "The custom image identifier of the virtual machine.",
          "type": "string"
        },
        "disallowPublicIpAddress": {
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "type": "boolean"
        },
        "environmentId": {
          "description": "The resource ID of the environment that contains this virtual machine, if any.",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date for VM.",
          "format": "date-time",
          "type": "string"
        },
        "fqdn": {
          "description": "The fully-qualified domain name of the virtual machine.",
          "type": "string"
        },
        "galleryImageReference": {
          "$ref": "#/definitions/GalleryImageReference",
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine."
        },
        "isAuthenticationWithSshKey": {
          "description": "Indicates whether this virtual machine uses an SSH key for authentication.",
          "type": "boolean"
        },
        "labSubnetName": {
          "description": "The lab subnet name of the virtual machine.",
          "type": "string"
        },
        "labVirtualNetworkId": {
          "description": "The lab virtual network identifier of the virtual machine.",
          "type": "string"
        },
        "networkInterface": {
          "$ref": "#/definitions/NetworkInterfaceProperties",
          "description": "The network interface properties."
        },
        "notes": {
          "description": "The notes of the virtual machine.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the virtual machine.",
          "type": "string"
        },
        "ownerObjectId": {
          "description": "The object identifier of the owner of the virtual machine.",
          "type": "string"
        },
        "ownerUserPrincipalName": {
          "description": "The user principal name of the virtual machine owner.",
          "type": "string"
        },
        "password": {
          "description": "The password of the virtual machine administrator.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "size": {
          "description": "The size of the virtual machine.",
          "type": "string"
        },
        "sshKey": {
          "description": "The SSH key of the virtual machine administrator.",
          "type": "string"
        },
        "storageType": {
          "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "userName": {
          "description": "The user name of the virtual machine.",
          "type": "string"
        },
        "virtualMachineCreationSource": {
          "description": "Tells source of creation of lab virtual machine. Output property only.",
          "enum": [
            "FromCustomImage",
            "FromGalleryImage"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachineCreationSource"
          }
        }
      },
      "type": "object",
      "title": "LabVirtualMachineProperties"
    },
    "LabVirtualMachinePropertiesFragment": {
      "description": "Properties of a virtual machine.",
      "properties": {
        "allowClaim": {
          "description": "Indicates whether another user can take ownership of the virtual machine",
          "type": "boolean"
        },
        "applicableSchedule": {
          "$ref": "#/definitions/ApplicableScheduleFragment",
          "description": "The applicable schedule for the virtual machine."
        },
        "artifactDeploymentStatus": {
          "$ref": "#/definitions/ArtifactDeploymentStatusPropertiesFragment",
          "description": "The artifact deployment status for the virtual machine."
        },
        "artifacts": {
          "description": "The artifacts to be installed on the virtual machine.",
          "items": {
            "$ref": "#/definitions/ArtifactInstallPropertiesFragment"
          },
          "type": "array"
        },
        "computeVm": {
          "$ref": "#/definitions/ComputeVmPropertiesFragment",
          "description": "The compute virtual machine properties."
        },
        "createdByUser": {
          "description": "The email address of creator of the virtual machine.",
          "type": "string"
        },
        "createdByUserId": {
          "description": "The object identifier of the creator of the virtual machine.",
          "type": "string"
        },
        "createdDate": {
          "description": "The creation date of the virtual machine.",
          "format": "date-time",
          "type": "string"
        },
        "customImageId": {
          "description": "The custom image identifier of the virtual machine.",
          "type": "string"
        },
        "disallowPublicIpAddress": {
          "description": "Indicates whether the virtual machine is to be created without a public IP address.",
          "type": "boolean"
        },
        "environmentId": {
          "description": "The resource ID of the environment that contains this virtual machine, if any.",
          "type": "string"
        },
        "expirationDate": {
          "description": "The expiration date for VM.",
          "format": "date-time",
          "type": "string"
        },
        "fqdn": {
          "description": "The fully-qualified domain name of the virtual machine.",
          "type": "string"
        },
        "galleryImageReference": {
          "$ref": "#/definitions/GalleryImageReferenceFragment",
          "description": "The Microsoft Azure Marketplace image reference of the virtual machine."
        },
        "isAuthenticationWithSshKey": {
          "description": "Indicates whether this virtual machine uses an SSH key for authentication.",
          "type": "boolean"
        },
        "labSubnetName": {
          "description": "The lab subnet name of the virtual machine.",
          "type": "string"
        },
        "labVirtualNetworkId": {
          "description": "The lab virtual network identifier of the virtual machine.",
          "type": "string"
        },
        "networkInterface": {
          "$ref": "#/definitions/NetworkInterfacePropertiesFragment",
          "description": "The network interface properties."
        },
        "notes": {
          "description": "The notes of the virtual machine.",
          "type": "string"
        },
        "osType": {
          "description": "The OS type of the virtual machine.",
          "type": "string"
        },
        "ownerObjectId": {
          "description": "The object identifier of the owner of the virtual machine.",
          "type": "string"
        },
        "ownerUserPrincipalName": {
          "description": "The user principal name of the virtual machine owner.",
          "type": "string"
        },
        "password": {
          "description": "The password of the virtual machine administrator.",
          "type": "string"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "size": {
          "description": "The size of the virtual machine.",
          "type": "string"
        },
        "sshKey": {
          "description": "The SSH key of the virtual machine administrator.",
          "type": "string"
        },
        "storageType": {
          "description": "Storage type to use for virtual machine (i.e. Standard, Premium).",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "userName": {
          "description": "The user name of the virtual machine.",
          "type": "string"
        },
        "virtualMachineCreationSource": {
          "description": "Tells source of creation of lab virtual machine. Output property only.",
          "enum": [
            "FromCustomImage",
            "FromGalleryImage"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "VirtualMachineCreationSource"
          }
        }
      },
      "type": "object",
      "title": "LabVirtualMachinePropertiesFragment"
    },
    "LinuxOsInfo": {
      "description": "Information about a Linux OS.",
      "properties": {
        "linuxOsState": {
          "description": "The state of the Linux OS (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied).",
          "enum": [
            "NonDeprovisioned",
            "DeprovisionRequested",
            "DeprovisionApplied"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "LinuxOsState"
          }
        }
      },
      "type": "object",
      "title": "LinuxOsInfo"
    },
    "NetworkInterfaceProperties": {
      "description": "Properties of a network interface.",
      "properties": {
        "dnsName": {
          "description": "The DNS name.",
          "type": "string"
        },
        "privateIpAddress": {
          "description": "The private IP address.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "The public IP address.",
          "type": "string"
        },
        "publicIpAddressId": {
          "description": "The resource ID of the public IP address.",
          "type": "string"
        },
        "rdpAuthority": {
          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).",
          "type": "string"
        },
        "sharedPublicIpAddressConfiguration": {
          "$ref": "#/definitions/SharedPublicIpAddressConfiguration",
          "description": "The configuration for sharing a public IP address across multiple virtual machines."
        },
        "sshAuthority": {
          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.",
          "type": "string"
        },
        "subnetId": {
          "description": "The resource ID of the sub net.",
          "type": "string"
        },
        "virtualNetworkId": {
          "description": "The resource ID of the virtual network.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NetworkInterfaceProperties"
    },
    "NetworkInterfacePropertiesFragment": {
      "description": "Properties of a network interface.",
      "properties": {
        "dnsName": {
          "description": "The DNS name.",
          "type": "string"
        },
        "privateIpAddress": {
          "description": "The private IP address.",
          "type": "string"
        },
        "publicIpAddress": {
          "description": "The public IP address.",
          "type": "string"
        },
        "publicIpAddressId": {
          "description": "The resource ID of the public IP address.",
          "type": "string"
        },
        "rdpAuthority": {
          "description": "The RdpAuthority property is a server DNS host name or IP address followed by the service port number for RDP (Remote Desktop Protocol).",
          "type": "string"
        },
        "sharedPublicIpAddressConfiguration": {
          "$ref": "#/definitions/SharedPublicIpAddressConfigurationFragment",
          "description": "The configuration for sharing a public IP address across multiple virtual machines."
        },
        "sshAuthority": {
          "description": "The SshAuthority property is a server DNS host name or IP address followed by the service port number for SSH.",
          "type": "string"
        },
        "subnetId": {
          "description": "The resource ID of the sub net.",
          "type": "string"
        },
        "virtualNetworkId": {
          "description": "The resource ID of the virtual network.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NetworkInterfacePropertiesFragment"
    },
    "NotificationChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A notification.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationChannelProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "NotificationChannel"
    },
    "NotificationChannelFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A notification.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/NotificationChannelPropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "NotificationChannelFragment"
    },
    "NotificationChannelProperties": {
      "description": "Properties of a schedule.",
      "properties": {
        "createdDate": {
          "description": "The creation date of the notification channel.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "Description of notification.",
          "type": "string"
        },
        "events": {
          "description": "The list of event for which this notification is enabled.",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "webHookUrl": {
          "description": "The webhook URL to send notifications to.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NotificationChannelProperties"
    },
    "NotificationChannelPropertiesFragment": {
      "description": "Properties of a schedule.",
      "properties": {
        "description": {
          "description": "Description of notification.",
          "type": "string"
        },
        "events": {
          "description": "The list of event for which this notification is enabled.",
          "items": {
            "$ref": "#/definitions/EventFragment"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "webHookUrl": {
          "description": "The webhook URL to send notifications to.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NotificationChannelPropertiesFragment"
    },
    "NotificationSettings": {
      "description": "Notification settings for a schedule.",
      "properties": {
        "status": {
          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NotificationStatus"
          }
        },
        "timeInMinutes": {
          "description": "Time in minutes before event at which notification will be sent.",
          "format": "int32",
          "type": "integer"
        },
        "webhookUrl": {
          "description": "The webhook URL to which the notification will be sent.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NotificationSettings"
    },
    "NotificationSettingsFragment": {
      "description": "Notification settings for a schedule.",
      "properties": {
        "status": {
          "description": "If notifications are enabled for this schedule (i.e. Enabled, Disabled).",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NotificationStatus"
          }
        },
        "timeInMinutes": {
          "description": "Time in minutes before event at which notification will be sent.",
          "format": "int32",
          "type": "integer"
        },
        "webhookUrl": {
          "description": "The webhook URL to which the notification will be sent.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NotificationSettingsFragment"
    },
    "NotifyParameters": {
      "description": "Properties for generating a Notification.",
      "properties": {
        "eventName": {
          "description": "The type of event (i.e. AutoShutdown, Cost)",
          "enum": [
            "AutoShutdown",
            "Cost"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "NotificationChannelEventType"
          }
        },
        "jsonPayload": {
          "description": "Properties for the notification in json format.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "NotifyParameters"
    },
    "ParameterInfo": {
      "description": "Information about an artifact's parameter.",
      "properties": {
        "name": {
          "description": "The name of the artifact parameter.",
          "type": "string"
        },
        "value": {
          "description": "The value of the artifact parameter.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ParameterInfo"
    },
    "ParametersValueFileInfo": {
      "description": "A file containing a set of parameter values for an ARM template.",
      "properties": {
        "fileName": {
          "description": "File name.",
          "type": "string"
        },
        "parametersValueInfo": {
          "description": "Contents of the file.",
          "type": "object"
        }
      },
      "type": "object",
      "title": "ParametersValueFileInfo"
    },
    "PercentageCostThresholdProperties": {
      "description": "Properties of a percentage cost threshold.",
      "properties": {
        "thresholdValue": {
          "description": "The cost threshold value.",
          "format": "double",
          "type": "number"
        }
      },
      "type": "object",
      "title": "PercentageCostThresholdProperties"
    },
    "Policy": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A Policy.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "Policy"
    },
    "PolicyFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A Policy.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/PolicyPropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "PolicyFragment"
    },
    "PolicyProperties": {
      "description": "Properties of a Policy.",
      "properties": {
        "createdDate": {
          "description": "The creation date of the policy.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the policy.",
          "type": "string"
        },
        "evaluatorType": {
          "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
          "enum": [
            "AllowedValuesPolicy",
            "MaxValuePolicy"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PolicyEvaluatorType"
          }
        },
        "factData": {
          "description": "The fact data of the policy.",
          "type": "string"
        },
        "factName": {
          "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
          "enum": [
            "UserOwnedLabVmCount",
            "UserOwnedLabPremiumVmCount",
            "LabVmCount",
            "LabPremiumVmCount",
            "LabVmSize",
            "GalleryImage",
            "UserOwnedLabVmCountInSubnet",
            "LabTargetCost"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PolicyFactName"
          }
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "status": {
          "description": "The status of the policy.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PolicyStatus"
          }
        },
        "threshold": {
          "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "PolicyProperties"
    },
    "PolicyPropertiesFragment": {
      "description": "Properties of a Policy.",
      "properties": {
        "description": {
          "description": "The description of the policy.",
          "type": "string"
        },
        "evaluatorType": {
          "description": "The evaluator type of the policy (i.e. AllowedValuesPolicy, MaxValuePolicy).",
          "enum": [
            "AllowedValuesPolicy",
            "MaxValuePolicy"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PolicyEvaluatorType"
          }
        },
        "factData": {
          "description": "The fact data of the policy.",
          "type": "string"
        },
        "factName": {
          "description": "The fact name of the policy (e.g. LabVmCount, LabVmSize, MaxVmsAllowedPerLab, etc.",
          "enum": [
            "UserOwnedLabVmCount",
            "UserOwnedLabPremiumVmCount",
            "LabVmCount",
            "LabPremiumVmCount",
            "LabVmSize",
            "GalleryImage",
            "UserOwnedLabVmCountInSubnet",
            "LabTargetCost"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PolicyFactName"
          }
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "status": {
          "description": "The status of the policy.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PolicyStatus"
          }
        },
        "threshold": {
          "description": "The threshold of the policy (i.e. a number for MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "PolicyPropertiesFragment"
    },
    "PolicySetResult": {
      "description": "Result of a policy set evaluation.",
      "properties": {
        "hasError": {
          "description": "A value indicating whether this policy set evaluation has discovered violations.",
          "type": "boolean"
        },
        "policyViolations": {
          "description": "The list of policy violations.",
          "items": {
            "$ref": "#/definitions/PolicyViolation"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "PolicySetResult"
    },
    "PolicyViolation": {
      "description": "Policy violation.",
      "properties": {
        "code": {
          "description": "The code of the policy violation.",
          "type": "string"
        },
        "message": {
          "description": "The message of the policy violation.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "PolicyViolation"
    },
    "Port": {
      "description": "Properties of a network port.",
      "properties": {
        "backendPort": {
          "description": "Backend port of the target virtual machine.",
          "format": "int32",
          "type": "integer"
        },
        "transportProtocol": {
          "description": "Protocol type of the port.",
          "enum": [
            "Tcp",
            "Udp"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TransportProtocol"
          }
        }
      },
      "type": "object",
      "title": "Port"
    },
    "PortFragment": {
      "description": "Properties of a network port.",
      "properties": {
        "backendPort": {
          "description": "Backend port of the target virtual machine.",
          "format": "int32",
          "type": "integer"
        },
        "transportProtocol": {
          "description": "Protocol type of the port.",
          "enum": [
            "Tcp",
            "Udp"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TransportProtocol"
          }
        }
      },
      "type": "object",
      "title": "PortFragment"
    },
    "Resource": {
      "description": "An Azure resource.",
      "properties": {
        "id": {
          "description": "The identifier of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "The location of the resource.",
          "type": "string"
        },
        "name": {
          "description": "The name of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The tags of the resource.",
          "type": "object"
        },
        "type": {
          "description": "The type of the resource.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-azure-resource": true,
      "title": "Resource"
    },
    "ResponseWithContinuation[ArmTemplate]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/ArmTemplate"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[ArmTemplate]"
    },
    "ResponseWithContinuation[ArtifactSource]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/ArtifactSource"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[ArtifactSource]"
    },
    "ResponseWithContinuation[Artifact]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/Artifact"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[Artifact]"
    },
    "ResponseWithContinuation[CustomImage]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/CustomImage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[CustomImage]"
    },
    "ResponseWithContinuation[Disk]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/Disk"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[Disk]"
    },
    "ResponseWithContinuation[DtlEnvironment]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/DtlEnvironment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[DtlEnvironment]"
    },
    "ResponseWithContinuation[Formula]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/Formula"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[Formula]"
    },
    "ResponseWithContinuation[GalleryImage]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/GalleryImage"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[GalleryImage]"
    },
    "ResponseWithContinuation[LabVhd]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/LabVhd"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[LabVhd]"
    },
    "ResponseWithContinuation[LabVirtualMachine]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/LabVirtualMachine"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[LabVirtualMachine]"
    },
    "ResponseWithContinuation[Lab]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/Lab"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[Lab]"
    },
    "ResponseWithContinuation[NotificationChannel]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/NotificationChannel"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[NotificationChannel]"
    },
    "ResponseWithContinuation[Policy]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/Policy"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[Policy]"
    },
    "ResponseWithContinuation[Schedule]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/Schedule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[Schedule]"
    },
    "ResponseWithContinuation[Secret]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/Secret"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[Secret]"
    },
    "ResponseWithContinuation[ServiceRunner]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/ServiceRunner"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[ServiceRunner]"
    },
    "ResponseWithContinuation[User]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/User"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[User]"
    },
    "ResponseWithContinuation[VirtualNetwork]": {
      "description": "The response of a list operation.",
      "properties": {
        "nextLink": {
          "description": "Link for next set of results.",
          "type": "string"
        },
        "value": {
          "description": "Results of the list operation.",
          "items": {
            "$ref": "#/definitions/VirtualNetwork"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "ResponseWithContinuation[VirtualNetwork]"
    },
    "RetargetScheduleProperties": {
      "description": "Properties for retargeting a virtual machine schedule.",
      "properties": {
        "currentResourceId": {
          "description": "The resource Id of the virtual machine on which the schedule operates",
          "type": "string"
        },
        "targetResourceId": {
          "description": "The resource Id of the virtual machine that the schedule should be retargeted to",
          "type": "string"
        }
      },
      "type": "object",
      "title": "RetargetScheduleProperties"
    },
    "Schedule": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A schedule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ScheduleProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "Schedule"
    },
    "ScheduleFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A schedule.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SchedulePropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "ScheduleFragment"
    },
    "ScheduleProperties": {
      "description": "Properties of a schedule.",
      "properties": {
        "createdDate": {
          "description": "The creation date of the schedule.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "dailyRecurrence": {
          "$ref": "#/definitions/DayDetails",
          "description": "If the schedule will occur once each day of the week, specify the daily recurrence."
        },
        "hourlyRecurrence": {
          "$ref": "#/definitions/HourDetails",
          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence."
        },
        "notificationSettings": {
          "$ref": "#/definitions/NotificationSettings",
          "description": "Notification settings."
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "status": {
          "description": "The status of the schedule (i.e. Enabled, Disabled)",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "EnableStatus"
          }
        },
        "targetResourceId": {
          "description": "The resource ID to which the schedule belongs",
          "type": "string"
        },
        "taskType": {
          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
          "type": "string"
        },
        "timeZoneId": {
          "description": "The time zone ID (e.g. Pacific Standard time).",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "weeklyRecurrence": {
          "$ref": "#/definitions/WeekDetails",
          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence."
        }
      },
      "type": "object",
      "title": "ScheduleProperties"
    },
    "SchedulePropertiesFragment": {
      "description": "Properties of a schedule.",
      "properties": {
        "dailyRecurrence": {
          "$ref": "#/definitions/DayDetailsFragment",
          "description": "If the schedule will occur once each day of the week, specify the daily recurrence."
        },
        "hourlyRecurrence": {
          "$ref": "#/definitions/HourDetailsFragment",
          "description": "If the schedule will occur multiple times a day, specify the hourly recurrence."
        },
        "notificationSettings": {
          "$ref": "#/definitions/NotificationSettingsFragment",
          "description": "Notification settings."
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "status": {
          "description": "The status of the schedule (i.e. Enabled, Disabled)",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "EnableStatus"
          }
        },
        "targetResourceId": {
          "description": "The resource ID to which the schedule belongs",
          "type": "string"
        },
        "taskType": {
          "description": "The task type of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).",
          "type": "string"
        },
        "timeZoneId": {
          "description": "The time zone ID (e.g. Pacific Standard time).",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "weeklyRecurrence": {
          "$ref": "#/definitions/WeekDetailsFragment",
          "description": "If the schedule will occur only some days of the week, specify the weekly recurrence."
        }
      },
      "type": "object",
      "title": "SchedulePropertiesFragment"
    },
    "Secret": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A secret.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/SecretProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object",
      "title": "Secret"
    },
    "SecretProperties": {
      "description": "Properties of a secret.",
      "properties": {
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        },
        "value": {
          "description": "The value of the secret for secret creation.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "SecretProperties"
    },
    "ServiceRunner": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A container for a managed identity to execute DevTest lab services.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/IdentityProperties",
          "description": "The identity of the resource."
        }
      },
      "type": "object",
      "title": "ServiceRunner"
    },
    "SharedPublicIpAddressConfiguration": {
      "description": "Properties of a virtual machine that determine how it is connected to a load balancer.",
      "properties": {
        "inboundNatRules": {
          "description": "The incoming NAT rules",
          "items": {
            "$ref": "#/definitions/InboundNatRule"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "SharedPublicIpAddressConfiguration"
    },
    "SharedPublicIpAddressConfigurationFragment": {
      "description": "Properties of a virtual machine that determine how it is connected to a load balancer.",
      "properties": {
        "inboundNatRules": {
          "description": "The incoming NAT rules",
          "items": {
            "$ref": "#/definitions/InboundNatRuleFragment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "SharedPublicIpAddressConfigurationFragment"
    },
    "ShutdownNotificationContent": {
      "description": "The contents of a shutdown notification. Webhooks can use this type to deserialize the request body when they get notified of an imminent shutdown.",
      "properties": {
        "delayUrl120": {
          "description": "The URL to delay shutdown by 2 hours.",
          "type": "string"
        },
        "delayUrl60": {
          "description": "The URL to delay shutdown by 60 minutes.",
          "type": "string"
        },
        "eventType": {
          "description": "The event for which a notification will be sent.",
          "type": "string"
        },
        "guid": {
          "description": "The GUID for the virtual machine to be shut down.",
          "type": "string"
        },
        "labName": {
          "description": "The lab for the schedule.",
          "type": "string"
        },
        "owner": {
          "description": "The owner of the virtual machine.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "The resource group name for the schedule.",
          "type": "string"
        },
        "skipUrl": {
          "description": "The URL to skip auto-shutdown.",
          "type": "string"
        },
        "subscriptionId": {
          "description": "The subscription ID for the schedule.",
          "type": "string"
        },
        "text": {
          "description": "The text for the notification.",
          "type": "string"
        },
        "vmName": {
          "description": "The virtual machine to be shut down.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "ShutdownNotificationContent"
    },
    "Subnet": {
      "description": "Subnet information.",
      "properties": {
        "allowPublicIp": {
          "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UsagePermissionType"
          }
        },
        "labSubnetName": {
          "description": "The name of the subnet as seen in the lab.",
          "type": "string"
        },
        "resourceId": {
          "description": "The resource ID of the subnet.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "Subnet"
    },
    "SubnetFragment": {
      "description": "Subnet information.",
      "properties": {
        "allowPublicIp": {
          "description": "The permission policy of the subnet for allowing public IP addresses (i.e. Allow, Deny)).",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UsagePermissionType"
          }
        },
        "labSubnetName": {
          "description": "The name of the subnet as seen in the lab.",
          "type": "string"
        },
        "resourceId": {
          "description": "The resource ID of the subnet.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "SubnetFragment"
    },
    "SubnetOverride": {
      "description": "Property overrides on a subnet of a virtual network.",
      "properties": {
        "labSubnetName": {
          "description": "The name given to the subnet within the lab.",
          "type": "string"
        },
        "resourceId": {
          "description": "The resource ID of the subnet.",
          "type": "string"
        },
        "sharedPublicIpAddressConfiguration": {
          "$ref": "#/definitions/SubnetSharedPublicIpAddressConfiguration",
          "description": "Properties that virtual machines on this subnet will share."
        },
        "useInVmCreationPermission": {
          "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UsagePermissionType"
          }
        },
        "usePublicIpAddressPermission": {
          "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UsagePermissionType"
          }
        },
        "virtualNetworkPoolName": {
          "description": "The virtual network pool associated with this subnet.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "SubnetOverride"
    },
    "SubnetOverrideFragment": {
      "description": "Property overrides on a subnet of a virtual network.",
      "properties": {
        "labSubnetName": {
          "description": "The name given to the subnet within the lab.",
          "type": "string"
        },
        "resourceId": {
          "description": "The resource ID of the subnet.",
          "type": "string"
        },
        "sharedPublicIpAddressConfiguration": {
          "$ref": "#/definitions/SubnetSharedPublicIpAddressConfigurationFragment",
          "description": "Properties that virtual machines on this subnet will share."
        },
        "useInVmCreationPermission": {
          "description": "Indicates whether this subnet can be used during virtual machine creation (i.e. Allow, Deny).",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UsagePermissionType"
          }
        },
        "usePublicIpAddressPermission": {
          "description": "Indicates whether public IP addresses can be assigned to virtual machines on this subnet (i.e. Allow, Deny).",
          "enum": [
            "Default",
            "Deny",
            "Allow"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UsagePermissionType"
          }
        },
        "virtualNetworkPoolName": {
          "description": "The virtual network pool associated with this subnet.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "SubnetOverrideFragment"
    },
    "SubnetSharedPublicIpAddressConfiguration": {
      "description": "Configuration for public IP address sharing.",
      "properties": {
        "allowedPorts": {
          "description": "Backend ports that virtual machines on this subnet are allowed to expose",
          "items": {
            "$ref": "#/definitions/Port"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "SubnetSharedPublicIpAddressConfiguration"
    },
    "SubnetSharedPublicIpAddressConfigurationFragment": {
      "description": "Configuration for public IP address sharing.",
      "properties": {
        "allowedPorts": {
          "description": "Backend ports that virtual machines on this subnet are allowed to expose",
          "items": {
            "$ref": "#/definitions/PortFragment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "SubnetSharedPublicIpAddressConfigurationFragment"
    },
    "TargetCostProperties": {
      "description": "Properties of a cost target.",
      "properties": {
        "costThresholds": {
          "description": "Cost thresholds.",
          "items": {
            "$ref": "#/definitions/CostThresholdProperties"
          },
          "type": "array"
        },
        "cycleEndDateTime": {
          "description": "Reporting cycle end date.",
          "format": "date-time",
          "type": "string"
        },
        "cycleStartDateTime": {
          "description": "Reporting cycle start date.",
          "format": "date-time",
          "type": "string"
        },
        "cycleType": {
          "description": "Reporting cycle type.",
          "enum": [
            "CalendarMonth",
            "Custom"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ReportingCycleType"
          }
        },
        "status": {
          "description": "Target cost status",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TargetCostStatus"
          }
        },
        "target": {
          "description": "Lab target cost",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "title": "TargetCostProperties"
    },
    "User": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Profile of a lab user.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "User"
    },
    "UserFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Profile of a lab user.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/UserPropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "UserFragment"
    },
    "UserIdentity": {
      "description": "Identity attributes of a lab user.",
      "properties": {
        "appId": {
          "description": "Set to the app Id of the client JWT making the request.",
          "type": "string"
        },
        "objectId": {
          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.",
          "type": "string"
        },
        "principalId": {
          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.",
          "type": "string"
        },
        "principalName": {
          "description": "Set to the principal name / UPN of the client JWT making the request.",
          "type": "string"
        },
        "tenantId": {
          "description": "Set to the tenant ID of the client JWT making the request.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UserIdentity"
    },
    "UserIdentityFragment": {
      "description": "Identity attributes of a lab user.",
      "properties": {
        "appId": {
          "description": "Set to the app Id of the client JWT making the request.",
          "type": "string"
        },
        "objectId": {
          "description": "Set to the object Id of the client JWT making the request. Not all users have object Id. For CSP (reseller) scenarios for example, object Id is not available.",
          "type": "string"
        },
        "principalId": {
          "description": "Set to the principal Id of the client JWT making the request. Service principal will not have the principal Id.",
          "type": "string"
        },
        "principalName": {
          "description": "Set to the principal name / UPN of the client JWT making the request.",
          "type": "string"
        },
        "tenantId": {
          "description": "Set to the tenant ID of the client JWT making the request.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UserIdentityFragment"
    },
    "UserProperties": {
      "description": "Properties of a lab user profile.",
      "properties": {
        "createdDate": {
          "description": "The creation date of the user profile.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "identity": {
          "$ref": "#/definitions/UserIdentity",
          "description": "The identity of the user."
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "secretStore": {
          "$ref": "#/definitions/UserSecretStore",
          "description": "The secret store of the user."
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UserProperties"
    },
    "UserPropertiesFragment": {
      "description": "Properties of a lab user profile.",
      "properties": {
        "identity": {
          "$ref": "#/definitions/UserIdentityFragment",
          "description": "The identity of the user."
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "secretStore": {
          "$ref": "#/definitions/UserSecretStoreFragment",
          "description": "The secret store of the user."
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UserPropertiesFragment"
    },
    "UserSecretStore": {
      "description": "Properties of a user's secret store.",
      "properties": {
        "keyVaultId": {
          "description": "The ID of the user's Key vault.",
          "type": "string"
        },
        "keyVaultUri": {
          "description": "The URI of the user's Key vault.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UserSecretStore"
    },
    "UserSecretStoreFragment": {
      "description": "Properties of a user's secret store.",
      "properties": {
        "keyVaultId": {
          "description": "The ID of the user's Key vault.",
          "type": "string"
        },
        "keyVaultUri": {
          "description": "The URI of the user's Key vault.",
          "type": "string"
        }
      },
      "type": "object",
      "title": "UserSecretStoreFragment"
    },
    "VirtualNetwork": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A virtual network.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkProperties",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "VirtualNetwork"
    },
    "VirtualNetworkFragment": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "A virtual network.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/VirtualNetworkPropertiesFragment",
          "description": "The properties of the resource.",
          "x-ms-client-flatten": true
        }
      },
      "type": "object",
      "title": "VirtualNetworkFragment"
    },
    "VirtualNetworkProperties": {
      "description": "Properties of a virtual network.",
      "properties": {
        "allowedSubnets": {
          "description": "The allowed subnets of the virtual network.",
          "items": {
            "$ref": "#/definitions/Subnet"
          },
          "type": "array"
        },
        "createdDate": {
          "description": "The creation date of the virtual network.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "The description of the virtual network.",
          "type": "string"
        },
        "externalProviderResourceId": {
          "description": "The Microsoft.Network resource identifier of the virtual network.",
          "type": "string"
        },
        "externalSubnets": {
          "description": "The external subnet properties.",
          "items": {
            "$ref": "#/definitions/ExternalSubnet"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "subnetOverrides": {
          "description": "The subnet overrides of the virtual network.",
          "items": {
            "$ref": "#/definitions/SubnetOverride"
          },
          "type": "array"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "VirtualNetworkProperties"
    },
    "VirtualNetworkPropertiesFragment": {
      "description": "Properties of a virtual network.",
      "properties": {
        "allowedSubnets": {
          "description": "The allowed subnets of the virtual network.",
          "items": {
            "$ref": "#/definitions/SubnetFragment"
          },
          "type": "array"
        },
        "description": {
          "description": "The description of the virtual network.",
          "type": "string"
        },
        "externalProviderResourceId": {
          "description": "The Microsoft.Network resource identifier of the virtual network.",
          "type": "string"
        },
        "externalSubnets": {
          "description": "The external subnet properties.",
          "items": {
            "$ref": "#/definitions/ExternalSubnetFragment"
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "The provisioning status of the resource.",
          "type": "string"
        },
        "subnetOverrides": {
          "description": "The subnet overrides of the virtual network.",
          "items": {
            "$ref": "#/definitions/SubnetOverrideFragment"
          },
          "type": "array"
        },
        "uniqueIdentifier": {
          "description": "The unique immutable identifier of a resource (Guid).",
          "type": "string"
        }
      },
      "type": "object",
      "title": "VirtualNetworkPropertiesFragment"
    },
    "WeekDetails": {
      "description": "Properties of a weekly schedule.",
      "properties": {
        "time": {
          "description": "The time of the day the schedule will occur.",
          "type": "string"
        },
        "weekdays": {
          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "WeekDetails"
    },
    "WeekDetailsFragment": {
      "description": "Properties of a weekly schedule.",
      "properties": {
        "time": {
          "description": "The time of the day the schedule will occur.",
          "type": "string"
        },
        "weekdays": {
          "description": "The days of the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "WeekDetailsFragment"
    },
    "WindowsOsInfo": {
      "description": "Information about a Windows OS.",
      "properties": {
        "windowsOsState": {
          "description": "The state of the Windows OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied).",
          "enum": [
            "NonSysprepped",
            "SysprepRequested",
            "SysprepApplied"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "WindowsOsState"
          }
        }
      },
      "type": "object",
      "title": "WindowsOsInfo"
    }
  },
  "actions": [
    {
      "id": "Labs_ListBySubscription",
      "title": "Labs_ListBySubscription",
      "description": "List labs in a subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Lab]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_ListBySubscription",
      "title": "GlobalSchedules_ListBySubscription",
      "description": "List schedules in a subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=status)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Schedule]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_ListByResourceGroup",
      "title": "Labs_ListByResourceGroup",
      "description": "List labs in a resource group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Lab]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ArtifactSources_List",
      "title": "ArtifactSources_List",
      "description": "List artifact sources in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[ArtifactSource]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ArmTemplates_List",
      "title": "ArmTemplates_List",
      "description": "List azure resource manager templates in a given artifact source.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "artifactSourceName": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "artifactSourceName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[ArmTemplate]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ArmTemplates_Get",
      "title": "ArmTemplates_Get",
      "description": "Get azure resource manager template.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "artifactSourceName": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "name": {
            "type": "string",
            "description": "The name of the azure Resource Manager template."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "artifactSourceName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ArmTemplate"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Artifacts_List",
      "title": "Artifacts_List",
      "description": "List artifacts in a given artifact source.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "artifactSourceName": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=title)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "artifactSourceName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Artifact]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Artifacts_Get",
      "title": "Artifacts_Get",
      "description": "Get artifact.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "artifactSourceName": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "name": {
            "type": "string",
            "description": "The name of the artifact."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=title)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "artifactSourceName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Artifact"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Artifacts_GenerateArmTemplate",
      "title": "Artifacts_GenerateArmTemplate",
      "description": "Generates an ARM template for the given artifact, uploads the required files to a storage account, and validates the generated artifact.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "artifactSourceName": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "name": {
            "type": "string",
            "description": "The name of the artifact."
          },
          "generateArmTemplateRequest": {
            "$ref": "#/definitions/GenerateArmTemplateRequest"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "artifactSourceName",
          "name",
          "generateArmTemplateRequest",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ArmTemplateInfo"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ArtifactSources_Delete",
      "title": "ArtifactSources_Delete",
      "description": "Delete artifact source.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ArtifactSources_Get",
      "title": "ArtifactSources_Get",
      "description": "Get artifact source.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=displayName)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ArtifactSource"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ArtifactSources_Update",
      "title": "ArtifactSources_Update",
      "description": "Modify properties of artifact sources.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "artifactSource": {
            "$ref": "#/definitions/ArtifactSourceFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "artifactSource",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ArtifactSource"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ArtifactSources_CreateOrUpdate",
      "title": "ArtifactSources_CreateOrUpdate",
      "description": "Create or replace an existing artifact source.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the artifact source."
          },
          "artifactSource": {
            "$ref": "#/definitions/ArtifactSource"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "artifactSource",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ArtifactSource"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Costs_Get",
      "title": "Costs_Get",
      "description": "Get cost.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the cost."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($expand=labCostDetails)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LabCost"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Costs_CreateOrUpdate",
      "title": "Costs_CreateOrUpdate",
      "description": "Create or replace an existing cost.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the cost."
          },
          "labCost": {
            "$ref": "#/definitions/LabCost"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "labCost",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LabCost"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "CustomImages_List",
      "title": "CustomImages_List",
      "description": "List custom images in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=vm)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[CustomImage]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "CustomImages_Delete",
      "title": "CustomImages_Delete",
      "description": "Delete custom image. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the custom image."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "CustomImages_Get",
      "title": "CustomImages_Get",
      "description": "Get custom image.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the custom image."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=vm)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CustomImage"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "CustomImages_CreateOrUpdate",
      "title": "CustomImages_CreateOrUpdate",
      "description": "Create or replace an existing custom image. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the custom image."
          },
          "customImage": {
            "$ref": "#/definitions/CustomImage"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "customImage",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CustomImage"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Formulas_List",
      "title": "Formulas_List",
      "description": "List formulas in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=description)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Formula]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Formulas_Delete",
      "title": "Formulas_Delete",
      "description": "Delete formula.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the formula."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Formulas_Get",
      "title": "Formulas_Get",
      "description": "Get formula.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the formula."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=description)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Formula"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Formulas_CreateOrUpdate",
      "title": "Formulas_CreateOrUpdate",
      "description": "Create or replace an existing Formula. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the formula."
          },
          "formula": {
            "$ref": "#/definitions/Formula"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "formula",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Formula"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GalleryImages_List",
      "title": "GalleryImages_List",
      "description": "List gallery images in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=author)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[GalleryImage]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "NotificationChannels_List",
      "title": "NotificationChannels_List",
      "description": "List notificationchannels in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=webHookUrl)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[NotificationChannel]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "NotificationChannels_Delete",
      "title": "NotificationChannels_Delete",
      "description": "Delete notificationchannel.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the notificationChannel."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "NotificationChannels_Get",
      "title": "NotificationChannels_Get",
      "description": "Get notificationchannel.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the notificationChannel."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=webHookUrl)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NotificationChannel"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "NotificationChannels_Update",
      "title": "NotificationChannels_Update",
      "description": "Modify properties of notificationchannels.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the notificationChannel."
          },
          "notificationChannel": {
            "$ref": "#/definitions/NotificationChannelFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "notificationChannel",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NotificationChannel"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "NotificationChannels_CreateOrUpdate",
      "title": "NotificationChannels_CreateOrUpdate",
      "description": "Create or replace an existing notificationChannel.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the notificationChannel."
          },
          "notificationChannel": {
            "$ref": "#/definitions/NotificationChannel"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "notificationChannel",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/NotificationChannel"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "NotificationChannels_Notify",
      "title": "NotificationChannels_Notify",
      "description": "Send notification to provided channel.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the notificationChannel."
          },
          "notifyParameters": {
            "$ref": "#/definitions/NotifyParameters"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "notifyParameters",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "PolicySets_EvaluatePolicies",
      "title": "PolicySets_EvaluatePolicies",
      "description": "Evaluates lab policy.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the policy set."
          },
          "evaluatePoliciesRequest": {
            "$ref": "#/definitions/EvaluatePoliciesRequest"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "evaluatePoliciesRequest",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/EvaluatePoliciesResponse"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Policies_List",
      "title": "Policies_List",
      "description": "List policies in a given policy set.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "policySetName": {
            "type": "string",
            "description": "The name of the policy set."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=description)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "policySetName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Policy]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Policies_Delete",
      "title": "Policies_Delete",
      "description": "Delete policy.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "policySetName": {
            "type": "string",
            "description": "The name of the policy set."
          },
          "name": {
            "type": "string",
            "description": "The name of the policy."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "policySetName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Policies_Get",
      "title": "Policies_Get",
      "description": "Get policy.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "policySetName": {
            "type": "string",
            "description": "The name of the policy set."
          },
          "name": {
            "type": "string",
            "description": "The name of the policy."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=description)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "policySetName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Policy"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Policies_Update",
      "title": "Policies_Update",
      "description": "Modify properties of policies.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "policySetName": {
            "type": "string",
            "description": "The name of the policy set."
          },
          "name": {
            "type": "string",
            "description": "The name of the policy."
          },
          "policy": {
            "$ref": "#/definitions/PolicyFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "policySetName",
          "name",
          "policy",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Policy"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Policies_CreateOrUpdate",
      "title": "Policies_CreateOrUpdate",
      "description": "Create or replace an existing policy.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "policySetName": {
            "type": "string",
            "description": "The name of the policy set."
          },
          "name": {
            "type": "string",
            "description": "The name of the policy."
          },
          "policy": {
            "$ref": "#/definitions/Policy"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "policySetName",
          "name",
          "policy",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Policy"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Schedules_List",
      "title": "Schedules_List",
      "description": "List schedules in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=status)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Schedule]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Schedules_Delete",
      "title": "Schedules_Delete",
      "description": "Delete schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Schedules_Get",
      "title": "Schedules_Get",
      "description": "Get schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=status)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Schedules_Update",
      "title": "Schedules_Update",
      "description": "Modify properties of schedules.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "schedule": {
            "$ref": "#/definitions/ScheduleFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "schedule",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Schedules_CreateOrUpdate",
      "title": "Schedules_CreateOrUpdate",
      "description": "Create or replace an existing schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "schedule": {
            "$ref": "#/definitions/Schedule"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "schedule",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Schedules_Execute",
      "title": "Schedules_Execute",
      "description": "Execute a schedule. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Schedules_ListApplicable",
      "title": "Schedules_ListApplicable",
      "description": "Lists all applicable schedules",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Schedule]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ServiceRunners_List",
      "title": "ServiceRunners_List",
      "description": "List service runners in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[ServiceRunner]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ServiceRunners_Delete",
      "title": "ServiceRunners_Delete",
      "description": "Delete service runner.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the service runner."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ServiceRunners_Get",
      "title": "ServiceRunners_Get",
      "description": "Get service runner.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the service runner."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ServiceRunner"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "ServiceRunners_CreateOrUpdate",
      "title": "ServiceRunners_CreateOrUpdate",
      "description": "Create or replace an existing Service runner.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the service runner."
          },
          "serviceRunner": {
            "$ref": "#/definitions/ServiceRunner"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "serviceRunner",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ServiceRunner"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Users_List",
      "title": "Users_List",
      "description": "List user profiles in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=identity)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[User]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Users_Delete",
      "title": "Users_Delete",
      "description": "Delete user profile. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Users_Get",
      "title": "Users_Get",
      "description": "Get user profile.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=identity)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/User"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Users_Update",
      "title": "Users_Update",
      "description": "Modify properties of user profiles.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "user": {
            "$ref": "#/definitions/UserFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "user",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/User"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Users_CreateOrUpdate",
      "title": "Users_CreateOrUpdate",
      "description": "Create or replace an existing user profile.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "user": {
            "$ref": "#/definitions/User"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "user",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/User"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Disks_List",
      "title": "Disks_List",
      "description": "List disks in a given user profile.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=diskType)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Disk]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Disks_Delete",
      "title": "Disks_Delete",
      "description": "Delete disk. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the disk."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Disks_Get",
      "title": "Disks_Get",
      "description": "Get disk.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the disk."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=diskType)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Disk"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Disks_CreateOrUpdate",
      "title": "Disks_CreateOrUpdate",
      "description": "Create or replace an existing disk. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the disk."
          },
          "disk": {
            "$ref": "#/definitions/Disk"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "disk",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Disk"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Disks_Attach",
      "title": "Disks_Attach",
      "description": "Attach and create the lease of the disk to the virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the disk."
          },
          "attachDiskProperties": {
            "$ref": "#/definitions/AttachDiskProperties"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "attachDiskProperties",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Disks_Detach",
      "title": "Disks_Detach",
      "description": "Detach and break the lease of the disk attached to the virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the disk."
          },
          "detachDiskProperties": {
            "$ref": "#/definitions/DetachDiskProperties"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "detachDiskProperties",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Environments_List",
      "title": "Environments_List",
      "description": "List environments in a given user profile.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=deploymentProperties)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[DtlEnvironment]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Environments_Delete",
      "title": "Environments_Delete",
      "description": "Delete environment. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the environment."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Environments_Get",
      "title": "Environments_Get",
      "description": "Get environment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the environment."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=deploymentProperties)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DtlEnvironment"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Environments_CreateOrUpdate",
      "title": "Environments_CreateOrUpdate",
      "description": "Create or replace an existing environment. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the environment."
          },
          "dtlEnvironment": {
            "$ref": "#/definitions/DtlEnvironment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "dtlEnvironment",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DtlEnvironment"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Secrets_List",
      "title": "Secrets_List",
      "description": "List secrets in a given user profile.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=value)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Secret]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Secrets_Delete",
      "title": "Secrets_Delete",
      "description": "Delete secret.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the secret."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Secrets_Get",
      "title": "Secrets_Get",
      "description": "Get secret.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the secret."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=value)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Secret"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Secrets_CreateOrUpdate",
      "title": "Secrets_CreateOrUpdate",
      "description": "Create or replace an existing secret.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user profile."
          },
          "name": {
            "type": "string",
            "description": "The name of the secret."
          },
          "secret": {
            "$ref": "#/definitions/Secret"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "userName",
          "name",
          "secret",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Secret"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_List",
      "title": "VirtualMachines_List",
      "description": "List virtual machines in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[LabVirtualMachine]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_Delete",
      "title": "VirtualMachines_Delete",
      "description": "Delete virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_Get",
      "title": "VirtualMachines_Get",
      "description": "Get virtual machine.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($expand=artifacts,computeVm,networkInterface,applicableSchedule)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LabVirtualMachine"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_Update",
      "title": "VirtualMachines_Update",
      "description": "Modify properties of virtual machines.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "labVirtualMachine": {
            "$ref": "#/definitions/LabVirtualMachineFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "labVirtualMachine",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LabVirtualMachine"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_CreateOrUpdate",
      "title": "VirtualMachines_CreateOrUpdate",
      "description": "Create or replace an existing Virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "labVirtualMachine": {
            "$ref": "#/definitions/LabVirtualMachine"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "labVirtualMachine",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/LabVirtualMachine"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_AddDataDisk",
      "title": "VirtualMachines_AddDataDisk",
      "description": "Attach a new or existing data disk to virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "dataDiskProperties": {
            "$ref": "#/definitions/DataDiskProperties"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "dataDiskProperties",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_ApplyArtifacts",
      "title": "VirtualMachines_ApplyArtifacts",
      "description": "Apply artifacts to virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "applyArtifactsRequest": {
            "$ref": "#/definitions/ApplyArtifactsRequest"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "applyArtifactsRequest",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_Claim",
      "title": "VirtualMachines_Claim",
      "description": "Take ownership of an existing virtual machine This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_DetachDataDisk",
      "title": "VirtualMachines_DetachDataDisk",
      "description": "Detach the specified disk from the virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "detachDataDiskProperties": {
            "$ref": "#/definitions/DetachDataDiskProperties"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "detachDataDiskProperties",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_ListApplicableSchedules",
      "title": "VirtualMachines_ListApplicableSchedules",
      "description": "Lists all applicable schedules",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ApplicableSchedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_Start",
      "title": "VirtualMachines_Start",
      "description": "Start a virtual machine. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachines_Stop",
      "title": "VirtualMachines_Stop",
      "description": "Stop a virtual machine This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachineSchedules_List",
      "title": "VirtualMachineSchedules_List",
      "description": "List schedules in a given virtual machine.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "virtualMachineName": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=status)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "virtualMachineName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Schedule]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachineSchedules_Delete",
      "title": "VirtualMachineSchedules_Delete",
      "description": "Delete schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "virtualMachineName": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "virtualMachineName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachineSchedules_Get",
      "title": "VirtualMachineSchedules_Get",
      "description": "Get schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "virtualMachineName": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=status)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "virtualMachineName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachineSchedules_Update",
      "title": "VirtualMachineSchedules_Update",
      "description": "Modify properties of schedules.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "virtualMachineName": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "schedule": {
            "$ref": "#/definitions/ScheduleFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "virtualMachineName",
          "name",
          "schedule",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachineSchedules_CreateOrUpdate",
      "title": "VirtualMachineSchedules_CreateOrUpdate",
      "description": "Create or replace an existing schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "virtualMachineName": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "schedule": {
            "$ref": "#/definitions/Schedule"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "virtualMachineName",
          "name",
          "schedule",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualMachineSchedules_Execute",
      "title": "VirtualMachineSchedules_Execute",
      "description": "Execute a schedule. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "virtualMachineName": {
            "type": "string",
            "description": "The name of the virtual machine."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "virtualMachineName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualNetworks_List",
      "title": "VirtualNetworks_List",
      "description": "List virtual networks in a given lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($expand=externalSubnets)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[VirtualNetwork]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualNetworks_Delete",
      "title": "VirtualNetworks_Delete",
      "description": "Delete virtual network. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual network."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualNetworks_Get",
      "title": "VirtualNetworks_Get",
      "description": "Get virtual network.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual network."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($expand=externalSubnets)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VirtualNetwork"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualNetworks_Update",
      "title": "VirtualNetworks_Update",
      "description": "Modify properties of virtual networks.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual network."
          },
          "virtualNetwork": {
            "$ref": "#/definitions/VirtualNetworkFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "virtualNetwork",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VirtualNetwork"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "VirtualNetworks_CreateOrUpdate",
      "title": "VirtualNetworks_CreateOrUpdate",
      "description": "Create or replace an existing virtual network. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "labName": {
            "type": "string",
            "description": "The name of the lab."
          },
          "name": {
            "type": "string",
            "description": "The name of the virtual network."
          },
          "virtualNetwork": {
            "$ref": "#/definitions/VirtualNetwork"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "labName",
          "name",
          "virtualNetwork",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/VirtualNetwork"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_Delete",
      "title": "Labs_Delete",
      "description": "Delete lab. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_Get",
      "title": "Labs_Get",
      "description": "Get lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=defaultStorageAccount)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Lab"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_Update",
      "title": "Labs_Update",
      "description": "Modify properties of labs.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "lab": {
            "$ref": "#/definitions/LabFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "lab",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Lab"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_CreateOrUpdate",
      "title": "Labs_CreateOrUpdate",
      "description": "Create or replace an existing lab. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "lab": {
            "$ref": "#/definitions/Lab"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "lab",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Lab"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_ClaimAnyVm",
      "title": "Labs_ClaimAnyVm",
      "description": "Claim a random claimable virtual machine in the lab. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_CreateEnvironment",
      "title": "Labs_CreateEnvironment",
      "description": "Create virtual machines in a lab. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "labVirtualMachineCreationParameter": {
            "$ref": "#/definitions/LabVirtualMachineCreationParameter"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "labVirtualMachineCreationParameter",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_ExportResourceUsage",
      "title": "Labs_ExportResourceUsage",
      "description": "Exports the lab resource usage into a storage account This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "exportResourceUsageParameters": {
            "$ref": "#/definitions/ExportResourceUsageParameters"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "exportResourceUsageParameters",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_GenerateUploadUri",
      "title": "Labs_GenerateUploadUri",
      "description": "Generate a URI for uploading custom disk images to a Lab.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "generateUploadUriParameter": {
            "$ref": "#/definitions/GenerateUploadUriParameter"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "generateUploadUriParameter",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GenerateUploadUriResponse"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "Labs_ListVhds",
      "title": "Labs_ListVhds",
      "description": "List disk images available for custom image creation.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the lab."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[LabVhd]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_ListByResourceGroup",
      "title": "GlobalSchedules_ListByResourceGroup",
      "description": "List schedules in a resource group.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=status)'"
          },
          "$filter": {
            "type": "string",
            "description": "The filter to apply to the operation."
          },
          "$top": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum number of resources to return from the operation."
          },
          "$orderby": {
            "type": "string",
            "description": "The ordering expression for the results, using OData notation."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ResponseWithContinuation[Schedule]"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_Delete",
      "title": "GlobalSchedules_Delete",
      "description": "Delete schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_Get",
      "title": "GlobalSchedules_Get",
      "description": "Get schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "$expand": {
            "type": "string",
            "description": "Specify the $expand query. Example: 'properties($select=status)'"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_Update",
      "title": "GlobalSchedules_Update",
      "description": "Modify properties of schedules.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "schedule": {
            "$ref": "#/definitions/ScheduleFragment"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "schedule",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_CreateOrUpdate",
      "title": "GlobalSchedules_CreateOrUpdate",
      "description": "Create or replace an existing schedule.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "schedule": {
            "$ref": "#/definitions/Schedule"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "schedule",
          "api-version"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/Schedule"
      },
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_Execute",
      "title": "GlobalSchedules_Execute",
      "description": "Execute a schedule. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    },
    {
      "id": "GlobalSchedules_Retarget",
      "title": "GlobalSchedules_Retarget",
      "description": "Updates a schedule's target resource Id. This operation can take a while to complete.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "subscriptionId": {
            "type": "string",
            "description": "The subscription ID."
          },
          "resourceGroupName": {
            "type": "string",
            "description": "The name of the resource group."
          },
          "name": {
            "type": "string",
            "description": "The name of the schedule."
          },
          "retargetScheduleProperties": {
            "$ref": "#/definitions/RetargetScheduleProperties"
          },
          "api-version": {
            "type": "string",
            "description": "Client API version.",
            "default": "2016-05-15"
          }
        },
        "additionalProperties": false,
        "required": [
          "subscriptionId",
          "resourceGroupName",
          "name",
          "retargetScheduleProperties",
          "api-version"
        ]
      },
      "outputSchema": {},
      "security": {
        "azure_arm_devtestlabs": {
          "integration": "azure_arm_devtestlabs"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "developer tools",
    "cloud",
    "azure"
  ]
}