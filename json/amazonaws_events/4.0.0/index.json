{
  "id": "amazonaws_events",
  "title": "Amazon CloudWatch Events",
  "description": "Amazon CloudWatch Events helps you to respond to state changes in your AWS resources. When your resources change state, they automatically send events into an event stream. You can create rules that match selected events in the stream and route them to targets to take action. You can also use rules to take action on a pre-determined schedule. For example, you can configure rules to:\n\n*   Automatically invoke an AWS Lambda function to update DNS entries when an event notifies you that Amazon EC2 instance enters the running state.\n\n*   Direct specific API records from CloudTrail to an Amazon Kinesis stream for detailed analysis of potential security or availability risks.\n\n*   Periodically invoke a built-in target to create a snapshot of an Amazon EBS volume.\n\nFor more information about the features of Amazon CloudWatch Events, see the [Amazon CloudWatch Events User Guide](http://docs.aws.amazon.com/AmazonCloudWatch/latest/events).",
  "security": {
    "amazonaws_events": {
      "integration": "amazonaws_events",
      "fields": {
        "accessKeyId": "",
        "secretAccessKey": "",
        "region": "AWS region (if applicable)"
      }
    }
  },
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_events.jpeg"
  },
  "actionCount": 15,
  "definitions": {
    "Action": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "events:[a-zA-Z]+",
      "type": "string",
      "title": "Action"
    },
    "Arn": {
      "maxLength": 1600,
      "minLength": 1,
      "type": "string",
      "title": "Arn"
    },
    "Boolean": {
      "type": "boolean",
      "title": "Boolean"
    },
    "ConcurrentModificationException": {
      "description": "There is concurrent modification on a rule or target.",
      "properties": {},
      "type": "object",
      "title": "ConcurrentModificationException"
    },
    "DeleteRuleRequest": {
      "properties": {
        "Name": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object",
      "title": "DeleteRuleRequest"
    },
    "DescribeEventBusRequest": {
      "properties": {},
      "type": "object",
      "title": "DescribeEventBusRequest"
    },
    "DescribeEventBusResponse": {
      "properties": {
        "Arn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the account permitted to write events to the current account."
        },
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the event bus. Currently, this is always <code>default</code>."
        },
        "Policy": {
          "$ref": "#/definitions/String",
          "description": "The policy that enables the external account to send events to your account."
        }
      },
      "type": "object",
      "title": "DescribeEventBusResponse"
    },
    "DescribeRuleRequest": {
      "properties": {
        "Name": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object",
      "title": "DescribeRuleRequest"
    },
    "DescribeRuleResponse": {
      "properties": {
        "Arn": {
          "$ref": "#/definitions/RuleArn",
          "description": "The Amazon Resource Name (ARN) of the rule."
        },
        "Description": {
          "$ref": "#/definitions/RuleDescription",
          "description": "The description of the rule."
        },
        "EventPattern": {
          "$ref": "#/definitions/EventPattern",
          "description": "The event pattern. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html\">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>."
        },
        "Name": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "The Amazon Resource Name (ARN) of the IAM role associated with the rule."
        },
        "ScheduleExpression": {
          "$ref": "#/definitions/ScheduleExpression",
          "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\", \"rate(5 minutes)\"."
        },
        "State": {
          "$ref": "#/definitions/RuleState",
          "description": "Specifies whether the rule is enabled or disabled."
        }
      },
      "type": "object",
      "title": "DescribeRuleResponse"
    },
    "DisableRuleRequest": {
      "properties": {
        "Name": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object",
      "title": "DisableRuleRequest"
    },
    "EcsParameters": {
      "description": "The custom parameters to be used when the target is an Amazon ECS cluster.",
      "properties": {
        "TaskCount": {
          "$ref": "#/definitions/LimitMin1",
          "description": "The number of tasks to create based on the <code>TaskDefinition</code>. The default is one."
        },
        "TaskDefinitionArn": {
          "$ref": "#/definitions/Arn",
          "description": "The ARN of the task definition to use if the event target is an Amazon ECS cluster. "
        }
      },
      "required": [
        "TaskDefinitionArn"
      ],
      "type": "object",
      "title": "EcsParameters"
    },
    "EnableRuleRequest": {
      "properties": {
        "Name": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object",
      "title": "EnableRuleRequest"
    },
    "ErrorCode": {
      "type": "string",
      "title": "ErrorCode"
    },
    "ErrorMessage": {
      "type": "string",
      "title": "ErrorMessage"
    },
    "EventId": {
      "type": "string",
      "title": "EventId"
    },
    "EventPattern": {
      "maxLength": 2048,
      "type": "string",
      "title": "EventPattern"
    },
    "EventResource": {
      "type": "string",
      "title": "EventResource"
    },
    "EventResourceList": {
      "items": {
        "$ref": "#/definitions/EventResource"
      },
      "type": "array",
      "title": "EventResourceList"
    },
    "EventTime": {
      "format": "date-time",
      "type": "string",
      "title": "EventTime"
    },
    "InputTransformer": {
      "description": "Contains the parameters needed for you to provide custom input to a target based on one or more pieces of data extracted from the event.",
      "properties": {
        "InputPathsMap": {
          "$ref": "#/definitions/TransformerPaths",
          "description": "Map of JSON paths to be extracted from the event. These are key-value pairs, where each value is a JSON path. You must use JSON dot notation, not bracket notation."
        },
        "InputTemplate": {
          "$ref": "#/definitions/TransformerInput",
          "description": "Input template where you can use the values of the keys from <code>InputPathsMap</code> to customize the data sent to the target."
        }
      },
      "required": [
        "InputTemplate"
      ],
      "type": "object",
      "title": "InputTransformer"
    },
    "InputTransformerPathKey": {
      "maxLength": 256,
      "minLength": 1,
      "pattern": "[A-Za-z0-9\\_\\-]+",
      "type": "string",
      "title": "InputTransformerPathKey"
    },
    "Integer": {
      "type": "integer",
      "title": "Integer"
    },
    "InternalException": {
      "description": "This exception occurs due to unexpected causes.",
      "properties": {},
      "type": "object",
      "title": "InternalException"
    },
    "InvalidEventPatternException": {
      "description": "The event pattern is not valid.",
      "properties": {},
      "type": "object",
      "title": "InvalidEventPatternException"
    },
    "KinesisParameters": {
      "description": "This object enables you to specify a JSON path to extract from the event and use as the partition key for the Amazon Kinesis stream, so that you can control the shard to which the event goes. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key.",
      "properties": {
        "PartitionKeyPath": {
          "$ref": "#/definitions/TargetPartitionKeyPath",
          "description": "The JSON path to be extracted from the event and used as the partition key. For more information, see <a href=\"http://docs.aws.amazon.com/streams/latest/dev/key-concepts.html#partition-key\">Amazon Kinesis Streams Key Concepts</a> in the <i>Amazon Kinesis Streams Developer Guide</i>."
        }
      },
      "required": [
        "PartitionKeyPath"
      ],
      "type": "object",
      "title": "KinesisParameters"
    },
    "LimitExceededException": {
      "description": "You tried to create more rules or add more targets to a rule than is allowed.",
      "properties": {},
      "type": "object",
      "title": "LimitExceededException"
    },
    "LimitMax100": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer",
      "title": "LimitMax100"
    },
    "LimitMin1": {
      "minimum": 1,
      "type": "integer",
      "title": "LimitMin1"
    },
    "ListRuleNamesByTargetRequest": {
      "properties": {
        "Limit": {
          "$ref": "#/definitions/LimitMax100",
          "description": "The maximum number of results to return."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned by a previous call to retrieve the next set of results."
        },
        "TargetArn": {
          "$ref": "#/definitions/TargetArn",
          "description": "The Amazon Resource Name (ARN) of the target resource."
        }
      },
      "required": [
        "TargetArn"
      ],
      "type": "object",
      "title": "ListRuleNamesByTargetRequest"
    },
    "ListRuleNamesByTargetResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "Indicates whether there are additional results to retrieve. If there are no more results, the value is null."
        },
        "RuleNames": {
          "$ref": "#/definitions/RuleNameList",
          "description": "The names of the rules that can invoke the given target."
        }
      },
      "type": "object",
      "title": "ListRuleNamesByTargetResponse"
    },
    "ListRulesRequest": {
      "properties": {
        "Limit": {
          "$ref": "#/definitions/LimitMax100",
          "description": "The maximum number of results to return."
        },
        "NamePrefix": {
          "$ref": "#/definitions/RuleName",
          "description": "The prefix matching the rule name."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned by a previous call to retrieve the next set of results."
        }
      },
      "type": "object",
      "title": "ListRulesRequest"
    },
    "ListRulesResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "Indicates whether there are additional results to retrieve. If there are no more results, the value is null."
        },
        "Rules": {
          "$ref": "#/definitions/RuleResponseList",
          "description": "The rules that match the specified criteria."
        }
      },
      "type": "object",
      "title": "ListRulesResponse"
    },
    "ListTargetsByRuleRequest": {
      "properties": {
        "Limit": {
          "$ref": "#/definitions/LimitMax100",
          "description": "The maximum number of results to return."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "The token returned by a previous call to retrieve the next set of results."
        },
        "Rule": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        }
      },
      "required": [
        "Rule"
      ],
      "type": "object",
      "title": "ListTargetsByRuleRequest"
    },
    "ListTargetsByRuleResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "Indicates whether there are additional results to retrieve. If there are no more results, the value is null."
        },
        "Targets": {
          "$ref": "#/definitions/TargetList",
          "description": "The targets assigned to the rule."
        }
      },
      "type": "object",
      "title": "ListTargetsByRuleResponse"
    },
    "NextToken": {
      "maxLength": 2048,
      "minLength": 1,
      "type": "string",
      "title": "NextToken"
    },
    "PolicyLengthExceededException": {
      "description": "The event bus policy is too long. For more information, see the limits.",
      "properties": {},
      "type": "object",
      "title": "PolicyLengthExceededException"
    },
    "Principal": {
      "maxLength": 12,
      "minLength": 1,
      "pattern": "(\\d{12}|\\*)",
      "type": "string",
      "title": "Principal"
    },
    "PutEventsRequest": {
      "properties": {
        "Entries": {
          "$ref": "#/definitions/PutEventsRequestEntryList",
          "description": "The entry that defines an event in your system. You can specify several parameters for the entry such as the source and type of the event, resources associated with the event, and so on."
        }
      },
      "required": [
        "Entries"
      ],
      "type": "object",
      "title": "PutEventsRequest"
    },
    "PutEventsRequestEntry": {
      "description": "Represents an event to be submitted.",
      "properties": {
        "Detail": {
          "$ref": "#/definitions/String",
          "description": "In the JSON sense, an object containing fields, which may also contain nested subobjects. No constraints are imposed on its contents."
        },
        "DetailType": {
          "$ref": "#/definitions/String",
          "description": "Free-form string used to decide what fields to expect in the event detail."
        },
        "Resources": {
          "$ref": "#/definitions/EventResourceList",
          "description": "AWS resources, identified by Amazon Resource Name (ARN), which the event primarily concerns. Any number, including zero, may be present."
        },
        "Source": {
          "$ref": "#/definitions/String",
          "description": "The source of the event."
        },
        "Time": {
          "$ref": "#/definitions/EventTime",
          "description": "The timestamp of the event, per <a href=\"https://www.rfc-editor.org/rfc/rfc3339.txt\">RFC3339</a>. If no timestamp is provided, the timestamp of the <a>PutEvents</a> call is used."
        }
      },
      "type": "object",
      "title": "PutEventsRequestEntry"
    },
    "PutEventsRequestEntryList": {
      "items": {
        "$ref": "#/definitions/PutEventsRequestEntry"
      },
      "maxItems": 10,
      "minItems": 1,
      "type": "array",
      "title": "PutEventsRequestEntryList"
    },
    "PutEventsResponse": {
      "properties": {
        "Entries": {
          "$ref": "#/definitions/PutEventsResultEntryList",
          "description": "The successfully and unsuccessfully ingested events results. If the ingestion was successful, the entry has the event ID in it. Otherwise, you can use the error code and error message to identify the problem with the entry."
        },
        "FailedEntryCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of failed entries."
        }
      },
      "type": "object",
      "title": "PutEventsResponse"
    },
    "PutEventsResultEntry": {
      "description": "Represents an event that failed to be submitted.",
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/ErrorCode",
          "description": "The error code that indicates why the event submission failed."
        },
        "ErrorMessage": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "The error message that explains why the event submission failed."
        },
        "EventId": {
          "$ref": "#/definitions/EventId",
          "description": "The ID of the event."
        }
      },
      "type": "object",
      "title": "PutEventsResultEntry"
    },
    "PutEventsResultEntryList": {
      "items": {
        "$ref": "#/definitions/PutEventsResultEntry"
      },
      "type": "array",
      "title": "PutEventsResultEntryList"
    },
    "PutPermissionRequest": {
      "properties": {
        "Action": {
          "$ref": "#/definitions/Action",
          "description": "The action that you are enabling the other account to perform. Currently, this must be <code>events:PutEvents</code>."
        },
        "Principal": {
          "$ref": "#/definitions/Principal",
          "description": "<p>The 12-digit AWS account ID that you are permitting to put events to your default event bus. Specify \"*\" to permit any account to put events to your default event bus.</p> <p>If you specify \"*\", avoid creating rules that may match undesirable events. To create more secure rules, make sure that the event pattern for each rule contains an <code>account</code> field with a specific account ID from which to receive events. Rules with an account field do not match any events sent from other accounts.</p>"
        },
        "StatementId": {
          "$ref": "#/definitions/StatementId",
          "description": "An identifier string for the external account that you are granting permissions to. If you later want to revoke the permission for this external account, specify this <code>StatementId</code> when you run <a>RemovePermission</a>."
        }
      },
      "required": [
        "Action",
        "Principal",
        "StatementId"
      ],
      "type": "object",
      "title": "PutPermissionRequest"
    },
    "PutRuleRequest": {
      "properties": {
        "Description": {
          "$ref": "#/definitions/RuleDescription",
          "description": "A description of the rule."
        },
        "EventPattern": {
          "$ref": "#/definitions/EventPattern",
          "description": "The event pattern. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html\">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>."
        },
        "Name": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule that you are creating or updating."
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "The Amazon Resource Name (ARN) of the IAM role associated with the rule."
        },
        "ScheduleExpression": {
          "$ref": "#/definitions/ScheduleExpression",
          "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\" or \"rate(5 minutes)\"."
        },
        "State": {
          "$ref": "#/definitions/RuleState",
          "description": "Indicates whether the rule is enabled or disabled."
        }
      },
      "required": [
        "Name"
      ],
      "type": "object",
      "title": "PutRuleRequest"
    },
    "PutRuleResponse": {
      "properties": {
        "RuleArn": {
          "$ref": "#/definitions/RuleArn",
          "description": "The Amazon Resource Name (ARN) of the rule."
        }
      },
      "type": "object",
      "title": "PutRuleResponse"
    },
    "PutTargetsRequest": {
      "properties": {
        "Rule": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        },
        "Targets": {
          "$ref": "#/definitions/TargetList",
          "description": "The targets to update or add to the rule."
        }
      },
      "required": [
        "Rule",
        "Targets"
      ],
      "type": "object",
      "title": "PutTargetsRequest"
    },
    "PutTargetsResponse": {
      "properties": {
        "FailedEntries": {
          "$ref": "#/definitions/PutTargetsResultEntryList",
          "description": "The failed target entries."
        },
        "FailedEntryCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of failed entries."
        }
      },
      "type": "object",
      "title": "PutTargetsResponse"
    },
    "PutTargetsResultEntry": {
      "description": "Represents a target that failed to be added to a rule.",
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/ErrorCode",
          "description": "The error code that indicates why the target addition failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time."
        },
        "ErrorMessage": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "The error message that explains why the target addition failed."
        },
        "TargetId": {
          "$ref": "#/definitions/TargetId",
          "description": "The ID of the target."
        }
      },
      "type": "object",
      "title": "PutTargetsResultEntry"
    },
    "PutTargetsResultEntryList": {
      "items": {
        "$ref": "#/definitions/PutTargetsResultEntry"
      },
      "type": "array",
      "title": "PutTargetsResultEntryList"
    },
    "RemovePermissionRequest": {
      "properties": {
        "StatementId": {
          "$ref": "#/definitions/StatementId",
          "description": "The statement ID corresponding to the account that is no longer allowed to put events to the default event bus."
        }
      },
      "required": [
        "StatementId"
      ],
      "type": "object",
      "title": "RemovePermissionRequest"
    },
    "RemoveTargetsRequest": {
      "properties": {
        "Ids": {
          "$ref": "#/definitions/TargetIdList",
          "description": "The IDs of the targets to remove from the rule."
        },
        "Rule": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        }
      },
      "required": [
        "Rule",
        "Ids"
      ],
      "type": "object",
      "title": "RemoveTargetsRequest"
    },
    "RemoveTargetsResponse": {
      "properties": {
        "FailedEntries": {
          "$ref": "#/definitions/RemoveTargetsResultEntryList",
          "description": "The failed target entries."
        },
        "FailedEntryCount": {
          "$ref": "#/definitions/Integer",
          "description": "The number of failed entries."
        }
      },
      "type": "object",
      "title": "RemoveTargetsResponse"
    },
    "RemoveTargetsResultEntry": {
      "description": "Represents a target that failed to be removed from a rule.",
      "properties": {
        "ErrorCode": {
          "$ref": "#/definitions/ErrorCode",
          "description": "The error code that indicates why the target removal failed. If the value is <code>ConcurrentModificationException</code>, too many requests were made at the same time."
        },
        "ErrorMessage": {
          "$ref": "#/definitions/ErrorMessage",
          "description": "The error message that explains why the target removal failed."
        },
        "TargetId": {
          "$ref": "#/definitions/TargetId",
          "description": "The ID of the target."
        }
      },
      "type": "object",
      "title": "RemoveTargetsResultEntry"
    },
    "RemoveTargetsResultEntryList": {
      "items": {
        "$ref": "#/definitions/RemoveTargetsResultEntry"
      },
      "type": "array",
      "title": "RemoveTargetsResultEntryList"
    },
    "ResourceNotFoundException": {
      "description": "An entity that you specified does not exist.",
      "properties": {},
      "type": "object",
      "title": "ResourceNotFoundException"
    },
    "RoleArn": {
      "maxLength": 1600,
      "minLength": 1,
      "type": "string",
      "title": "RoleArn"
    },
    "Rule": {
      "description": "Contains information about a rule in Amazon CloudWatch Events.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/RuleArn",
          "description": "The Amazon Resource Name (ARN) of the rule."
        },
        "Description": {
          "$ref": "#/definitions/RuleDescription",
          "description": "The description of the rule."
        },
        "EventPattern": {
          "$ref": "#/definitions/EventPattern",
          "description": "The event pattern of the rule. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html\">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>."
        },
        "Name": {
          "$ref": "#/definitions/RuleName",
          "description": "The name of the rule."
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "The Amazon Resource Name (ARN) of the role that is used for target invocation."
        },
        "ScheduleExpression": {
          "$ref": "#/definitions/ScheduleExpression",
          "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\", \"rate(5 minutes)\"."
        },
        "State": {
          "$ref": "#/definitions/RuleState",
          "description": "The state of the rule."
        }
      },
      "type": "object",
      "title": "Rule"
    },
    "RuleArn": {
      "maxLength": 1600,
      "minLength": 1,
      "type": "string",
      "title": "RuleArn"
    },
    "RuleDescription": {
      "maxLength": 512,
      "type": "string",
      "title": "RuleDescription"
    },
    "RuleName": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[\\.\\-_A-Za-z0-9]+",
      "type": "string",
      "title": "RuleName"
    },
    "RuleNameList": {
      "items": {
        "$ref": "#/definitions/RuleName"
      },
      "type": "array",
      "title": "RuleNameList"
    },
    "RuleResponseList": {
      "items": {
        "$ref": "#/definitions/Rule"
      },
      "type": "array",
      "title": "RuleResponseList"
    },
    "RuleState": {
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "type": "string",
      "title": "RuleState"
    },
    "RunCommandParameters": {
      "description": "This parameter contains the criteria (either InstanceIds or a tag) used to specify which EC2 instances are to be sent the command. ",
      "properties": {
        "RunCommandTargets": {
          "$ref": "#/definitions/RunCommandTargets",
          "description": "Currently, we support including only one RunCommandTarget block, which specifies either an array of InstanceIds or a tag."
        }
      },
      "required": [
        "RunCommandTargets"
      ],
      "type": "object",
      "title": "RunCommandParameters"
    },
    "RunCommandTarget": {
      "description": "Information about the EC2 instances that are to be sent the command, specified as key-value pairs. Each <code>RunCommandTarget</code> block can include only one key, but this key may specify multiple values.",
      "properties": {
        "Key": {
          "$ref": "#/definitions/RunCommandTargetKey",
          "description": "Can be either <code>tag:</code> <i>tag-key</i> or <code>InstanceIds</code>."
        },
        "Values": {
          "$ref": "#/definitions/RunCommandTargetValues",
          "description": "If <code>Key</code> is <code>tag:</code> <i>tag-key</i>, <code>Values</code> is a list of tag values. If <code>Key</code> is <code>InstanceIds</code>, <code>Values</code> is a list of Amazon EC2 instance IDs."
        }
      },
      "required": [
        "Key",
        "Values"
      ],
      "type": "object",
      "title": "RunCommandTarget"
    },
    "RunCommandTargetKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*$",
      "type": "string",
      "title": "RunCommandTargetKey"
    },
    "RunCommandTargetValue": {
      "maxLength": 256,
      "minLength": 1,
      "type": "string",
      "title": "RunCommandTargetValue"
    },
    "RunCommandTargetValues": {
      "items": {
        "$ref": "#/definitions/RunCommandTargetValue"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array",
      "title": "RunCommandTargetValues"
    },
    "RunCommandTargets": {
      "items": {
        "$ref": "#/definitions/RunCommandTarget"
      },
      "maxItems": 5,
      "minItems": 1,
      "type": "array",
      "title": "RunCommandTargets"
    },
    "ScheduleExpression": {
      "maxLength": 256,
      "type": "string",
      "title": "ScheduleExpression"
    },
    "StatementId": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[a-zA-Z0-9-_]+",
      "type": "string",
      "title": "StatementId"
    },
    "String": {
      "type": "string",
      "title": "String"
    },
    "Target": {
      "description": "Targets are the resources to be invoked when a rule is triggered. Target types include EC2 instances, AWS Lambda functions, Amazon Kinesis streams, Amazon ECS tasks, AWS Step Functions state machines, Run Command, and built-in targets.",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/TargetArn",
          "description": "The Amazon Resource Name (ARN) of the target."
        },
        "EcsParameters": {
          "$ref": "#/definitions/EcsParameters",
          "description": "Contains the Amazon ECS task definition and task count to be used, if the event target is an Amazon ECS task. For more information about Amazon ECS tasks, see <a href=\"http://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_defintions.html\">Task Definitions </a> in the <i>Amazon EC2 Container Service Developer Guide</i>."
        },
        "Id": {
          "$ref": "#/definitions/TargetId",
          "description": "The ID of the target."
        },
        "Input": {
          "$ref": "#/definitions/TargetInput",
          "description": "Valid JSON text passed to the target. In this case, nothing from the event itself is passed to the target. You must use JSON dot notation, not bracket notation. For more information, see <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">The JavaScript Object Notation (JSON) Data Interchange Format</a>."
        },
        "InputPath": {
          "$ref": "#/definitions/TargetInputPath",
          "description": "The value of the JSONPath that is used for extracting part of the matched event when passing it to the target. You must use JSON dot notation, not bracket notation. For more information about JSON paths, see <a href=\"http://goessner.net/articles/JsonPath/\">JSONPath</a>."
        },
        "InputTransformer": {
          "$ref": "#/definitions/InputTransformer",
          "description": "Settings to enable you to provide custom input to a target based on certain event data. You can extract one or more key-value pairs from the event and then use that data to send customized input to the target."
        },
        "KinesisParameters": {
          "$ref": "#/definitions/KinesisParameters",
          "description": "The custom parameter you can use to control shard assignment, when the target is an Amazon Kinesis stream. If you do not include this parameter, the default is to use the <code>eventId</code> as the partition key."
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "The Amazon Resource Name (ARN) of the IAM role to be used for this target when the rule is triggered. If one rule triggers multiple targets, you can use a different IAM role for each target."
        },
        "RunCommandParameters": {
          "$ref": "#/definitions/RunCommandParameters",
          "description": "Parameters used when you are using the rule to invoke Amazon EC2 Run Command."
        }
      },
      "required": [
        "Id",
        "Arn"
      ],
      "type": "object",
      "title": "Target"
    },
    "TargetArn": {
      "maxLength": 1600,
      "minLength": 1,
      "type": "string",
      "title": "TargetArn"
    },
    "TargetId": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[\\.\\-_A-Za-z0-9]+",
      "type": "string",
      "title": "TargetId"
    },
    "TargetIdList": {
      "items": {
        "$ref": "#/definitions/TargetId"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array",
      "title": "TargetIdList"
    },
    "TargetInput": {
      "maxLength": 8192,
      "type": "string",
      "title": "TargetInput"
    },
    "TargetInputPath": {
      "maxLength": 256,
      "type": "string",
      "title": "TargetInputPath"
    },
    "TargetList": {
      "items": {
        "$ref": "#/definitions/Target"
      },
      "maxItems": 100,
      "minItems": 1,
      "type": "array",
      "title": "TargetList"
    },
    "TargetPartitionKeyPath": {
      "maxLength": 256,
      "type": "string",
      "title": "TargetPartitionKeyPath"
    },
    "TestEventPatternRequest": {
      "properties": {
        "Event": {
          "$ref": "#/definitions/String",
          "description": "The event, in JSON format, to test against the event pattern."
        },
        "EventPattern": {
          "$ref": "#/definitions/EventPattern",
          "description": "The event pattern. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/events/CloudWatchEventsandEventPatterns.html\">Events and Event Patterns</a> in the <i>Amazon CloudWatch Events User Guide</i>."
        }
      },
      "required": [
        "EventPattern",
        "Event"
      ],
      "type": "object",
      "title": "TestEventPatternRequest"
    },
    "TestEventPatternResponse": {
      "properties": {
        "Result": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the event matches the event pattern."
        }
      },
      "type": "object",
      "title": "TestEventPatternResponse"
    },
    "TransformerInput": {
      "maxLength": 8192,
      "minLength": 1,
      "type": "string",
      "title": "TransformerInput"
    },
    "TransformerPaths": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/InputTransformerPathKey"
          },
          "value": {
            "$ref": "#/definitions/TargetInputPath"
          }
        },
        "type": "object"
      },
      "maxItems": 10,
      "type": "array",
      "title": "TransformerPaths"
    }
  },
  "actions": [
    {
      "id": "DeleteRule",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteRuleRequest"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "DescribeEventBus",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEventBusRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEventBusResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "DescribeRule",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeRuleRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeRuleResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "DisableRule",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DisableRuleRequest"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "EnableRule",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/EnableRuleRequest"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "ListRuleNamesByTarget",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListRuleNamesByTargetRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListRuleNamesByTargetResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "ListRules",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListRulesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListRulesResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "ListTargetsByRule",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListTargetsByRuleRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTargetsByRuleResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "PutEvents",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutEventsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/PutEventsResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "PutPermission",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutPermissionRequest"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "PutRule",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutRuleRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/PutRuleResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "PutTargets",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PutTargetsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/PutTargetsResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "RemovePermission",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RemovePermissionRequest"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "RemoveTargets",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RemoveTargetsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RemoveTargetsResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    },
    {
      "id": "TestEventPattern",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/TestEventPatternRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TestEventPatternResponse"
      },
      "security": {
        "amazonaws_events": {
          "integration": "amazonaws_events"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "cloud",
    "aws"
  ]
}