{
  "id": "lufthansa_public",
  "title": "Lufthansa Public",
  "security": {
    "lufthansa_public": {
      "integration": "lufthansa_public",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "flow": "application",
        "scopes": {
          "read:LH Open API": "read access"
        },
        "tokenUrl": "https://api.lufthansa.com/v1/oauth/token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/lufthansa_public.png"
  },
  "actionCount": 15,
  "actions": [
    {
      "id": "oauthCallback",
      "title": "",
      "description": "Exchange the code passed to your redirect URI for an access_token",
      "inputSchema": {
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "oauthRefresh",
      "title": "",
      "description": "Exchange a refresh_token for an access_token",
      "inputSchema": {},
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "Lounges",
      "title": "Lounges",
      "description": "Lounge information",
      "inputSchema": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "3-leter IATA airport or city code (e.g. 'ZRH')"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "cabinClass": {
            "type": "string",
            "description": "Cabin class: 'M', 'E', 'C', 'F' (Acceptable values are: \"\", \"M\", \"E\", \"C\", \"F\")"
          },
          "tierCode": {
            "type": "string",
            "description": "Frequent flyer level ('FTL', 'SGC', 'SEN', 'HON') (Acceptable values are: \"\", \"FTL\", \"SGC\", \"SEN\", \"HON\")"
          },
          "lang": {
            "type": "string",
            "description": "Language code."
          }
        },
        "additionalProperties": false,
        "required": [
          "location",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "offers.seatmaps.flightNumber.origin.destination.date.cabinClass.get",
      "title": "offers.seatmaps.flightNumber.origin.destination.date.cabinClass.get",
      "description": "Cabin layout and seat characteristics.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "flightNumber": {
            "type": "string",
            "description": "Flight number including carrier code and any suffix (e.g. 'LH2037')"
          },
          "origin": {
            "type": "string",
            "description": "Departure airport. 3-letter IATA airport code (e.g. 'TXL')"
          },
          "destination": {
            "type": "string",
            "description": "Destination airport. 3-letter IATA airport code (e.g. 'MUC')"
          },
          "date": {
            "type": "string",
            "description": "Departure date (YYYY-MM-DD)"
          },
          "cabinClass": {
            "type": "string",
            "description": "Cabin class: 'M', 'E', 'C', 'F'. Some flights have fewer classes (Acceptable values are: \"M\", \"E\", \"C\", \"F\")"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          }
        },
        "additionalProperties": false,
        "required": [
          "flightNumber",
          "origin",
          "destination",
          "date",
          "cabinClass",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "operations.flightstatus.arrivals.airportCode.fromDateTime.get",
      "title": "operations.flightstatus.arrivals.airportCode.fromDateTime.get",
      "description": "Status of all arrivals at a given airport up to 4 hours from the provided date time.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "airportCode": {
            "type": "string",
            "description": "3-letter IATA aiport code (e.g. 'ZRH')"
          },
          "fromDateTime": {
            "type": "string",
            "description": "Start of time range in local time of arrival airport (YYYY-MM-DDTHH:mm)"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "airportCode",
          "fromDateTime",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "operations.flightstatus.departures.airportCode.fromDateTime.get",
      "title": "operations.flightstatus.departures.airportCode.fromDateTime.get",
      "description": "Status of all departures from a given airport up to 4 hours from the provided date time.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "airportCode": {
            "type": "string",
            "description": "Departure airport. 3-letter IATA airport code (e.g. 'HAM')"
          },
          "fromDateTime": {
            "type": "string",
            "description": "Start of time range in local time of departure airport (YYYY-MM-DDTHH:mm)"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "airportCode",
          "fromDateTime",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "operations.flightstatus.route.origin.destination.date.get",
      "title": "operations.flightstatus.route.origin.destination.date.get",
      "description": "Status of flights between a given origin and destination on a given date.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "origin": {
            "type": "string",
            "description": "3-letter IATA airport (e.g. 'FRA')"
          },
          "destination": {
            "type": "string",
            "description": "3-letter IATA airport code (e.g. 'JFK')"
          },
          "date": {
            "type": "string",
            "description": "Departure date (YYYY-MM-DD) in local time of departure airport"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "origin",
          "destination",
          "date",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "operations.flightstatus.flightNumber.date.get",
      "title": "operations.flightstatus.flightNumber.date.get",
      "description": "Status of a particular flight (boarding, delayed, etc.).",
      "inputSchema": {
        "type": "object",
        "properties": {
          "flightNumber": {
            "type": "string",
            "description": "Flight number including carrier code and any suffix (e.g. 'LH400')"
          },
          "date": {
            "type": "string",
            "description": "The departure date (YYYY-MM-DD) in the local time of the departure airport"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "flightNumber",
          "date",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "operations.schedules.origin.destination.fromDateTime.get",
      "title": "operations.schedules.origin.destination.fromDateTime.get",
      "description": "Scheduled flights between given airports on a given date.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "origin": {
            "type": "string",
            "description": "Departure airport. 3-letter IATA airport code (e.g. 'ZRH')"
          },
          "destination": {
            "type": "string",
            "description": "Destination airport. 3-letter IATA airport code (e.g. 'FRA')"
          },
          "fromDateTime": {
            "type": "string",
            "description": "Local departure date and optionally departure time (YYYY-MM-DD or YYYY-MM-DDTHH:mm). When not provided, time is assumed to be 00:01"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "directFlights": {
            "type": "boolean",
            "description": "Show only direct flights (false=0, true=1). Default is false"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "origin",
          "destination",
          "fromDateTime",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "Aircraft",
      "title": "Aircraft",
      "description": "List all aircraft types or one specific aircraft type.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "aircraftCode": {
            "type": "string",
            "description": "3-character IATA aircraft code"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "Accept",
          "aircraftCode"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "Airlines",
      "title": "Airlines",
      "description": "List all airlines or one specific airline.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "airlineCode": {
            "type": "string",
            "description": "2-character IATA airline/carrier code"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "Accept",
          "airlineCode"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "references.airports.nearest.latitude_longitude.get",
      "title": "references.airports.nearest.latitude_longitude.get",
      "description": "List the 5 closest airports to the given latitude and longitude, irrespective of the radius of the reference point.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "integer",
            "format": "int32",
            "description": "Latitude in decimal format to at most 3 decimal places"
          },
          "longitude": {
            "type": "integer",
            "format": "int32",
            "description": "Longitude in decimal format to at most 3 decimal places"
          },
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "lang": {
            "type": "string",
            "description": "2 letter ISO 3166-1 language code"
          }
        },
        "additionalProperties": false,
        "required": [
          "latitude",
          "longitude",
          "Accept"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "Airports",
      "title": "Airports",
      "description": "List all airports or one specific airport. All airports response is very large. It is possible to request the response in a specific language.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "airportCode": {
            "type": "string",
            "description": "3-letter IATA airport code"
          },
          "lang": {
            "type": "string",
            "description": "2-letter ISO 3166-1 language code"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          },
          "LHoperated": {
            "type": "boolean",
            "description": "Restrict the results to locations with flights operated by LH (false=0, true=1)"
          }
        },
        "additionalProperties": false,
        "required": [
          "Accept",
          "airportCode"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "Cities",
      "title": "Cities",
      "description": "List all cities or one specific city. It is possible to request the response in a specific language.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "cityCode": {
            "type": "string",
            "description": "3-letter IATA city code"
          },
          "lang": {
            "type": "string",
            "description": "2 letter ISO 3166-1 language code"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "Accept",
          "cityCode"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    },
    {
      "id": "Countries",
      "title": "Countries",
      "description": "List all countries or one specific country. It is possible to request the response in a specific language.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "Accept": {
            "type": "string",
            "description": "http header: application/json or application/xml (Acceptable values are: \"application/json\", \"application/xml\")"
          },
          "countryCode": {
            "type": "string",
            "description": "2-letter ISO 3166-1 country code"
          },
          "lang": {
            "type": "string",
            "description": "2 letter ISO 3166-1 language code"
          },
          "limit": {
            "type": "string",
            "description": "Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)"
          },
          "offset": {
            "type": "string",
            "description": "Number of records skipped. Defaults to 0"
          }
        },
        "additionalProperties": false,
        "required": [
          "Accept",
          "countryCode"
        ]
      },
      "outputSchema": {
        "type": "string"
      },
      "security": {
        "lufthansa_public": {
          "integration": "lufthansa_public"
        }
      }
    }
  ],
  "tags": [
    "transport"
  ]
}