{
  "id": "google_admin",
  "title": "Admin Reports",
  "description": "Fetches reports for the administrators of G Suite customers about the usage, collaboration, security, and risk for their users.",
  "definitions": {
    "Activities": {
      "description": "JSON template for a collection of activites.",
      "properties": {
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "items": {
          "description": "Each record in read response.",
          "items": {
            "$ref": "#/definitions/Activity"
          },
          "type": "array"
        },
        "kind": {
          "default": "admin#reports#activities",
          "description": "Kind of list response this is.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Token for retrieving the next page",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Activity": {
      "description": "JSON template for the activity resource.",
      "properties": {
        "actor": {
          "description": "User doing the action.",
          "properties": {
            "callerType": {
              "description": "User or OAuth 2LO request.",
              "type": "string"
            },
            "email": {
              "description": "Email address of the user.",
              "type": "string"
            },
            "key": {
              "description": "For OAuth 2LO API requests, consumer_key of the requestor.",
              "type": "string"
            },
            "profileId": {
              "description": "Obfuscated user id of the user.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "etag": {
          "description": "ETag of the entry.",
          "type": "string"
        },
        "events": {
          "description": "Activity events.",
          "items": {
            "properties": {
              "name": {
                "description": "Name of event.",
                "type": "string"
              },
              "parameters": {
                "description": "Parameter value pairs for various applications.",
                "items": {
                  "properties": {
                    "boolValue": {
                      "description": "Boolean value of the parameter.",
                      "type": "boolean"
                    },
                    "intValue": {
                      "description": "Integral value of the parameter.",
                      "format": "int64",
                      "type": "string"
                    },
                    "multiIntValue": {
                      "description": "Multi-int value of the parameter.",
                      "items": {
                        "format": "int64",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "multiValue": {
                      "description": "Multi-string value of the parameter.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "The name of the parameter.",
                      "type": "string"
                    },
                    "value": {
                      "description": "String value of the parameter.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "type": {
                "description": "Type of event.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "description": "Unique identifier for each activity record.",
          "properties": {
            "applicationName": {
              "description": "Application name to which the event belongs.",
              "type": "string"
            },
            "customerId": {
              "description": "Obfuscated customer ID of the source customer.",
              "type": "string"
            },
            "time": {
              "description": "Time of occurrence of the activity.",
              "format": "date-time",
              "type": "string"
            },
            "uniqueQualifier": {
              "description": "Unique qualifier if multiple events have the same time.",
              "format": "int64",
              "type": "string"
            }
          },
          "type": "object"
        },
        "ipAddress": {
          "description": "IP Address of the user doing the action.",
          "type": "string"
        },
        "kind": {
          "default": "admin#reports#activity",
          "description": "Kind of resource this is.",
          "type": "string"
        },
        "ownerDomain": {
          "description": "Domain of source customer.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Channel": {
      "description": "An notification channel used to watch for resource changes.",
      "properties": {
        "address": {
          "description": "The address where notifications are delivered for this channel.",
          "type": "string"
        },
        "expiration": {
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "format": "int64",
          "type": "string"
        },
        "id": {
          "description": "A UUID or similar unique string that identifies this channel.",
          "type": "string"
        },
        "kind": {
          "default": "api#channel",
          "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
          "type": "string"
        },
        "params": {
          "additionalProperties": {
            "description": "Declares a new parameter by name.",
            "type": "string"
          },
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "type": "object"
        },
        "payload": {
          "description": "A Boolean value to indicate whether payload is wanted. Optional.",
          "type": "boolean"
        },
        "resourceId": {
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.",
          "type": "string"
        },
        "resourceUri": {
          "description": "A version-specific identifier for the watched resource.",
          "type": "string"
        },
        "token": {
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.",
          "type": "string"
        },
        "type": {
          "description": "The type of delivery mechanism used for this channel.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UsageReport": {
      "description": "JSON template for a usage report.",
      "properties": {
        "date": {
          "description": "The date to which the record belongs.",
          "readOnly": true,
          "type": "string"
        },
        "entity": {
          "description": "Information about the type of the item.",
          "properties": {
            "customerId": {
              "description": "Obfuscated customer id for the record.",
              "readOnly": true,
              "type": "string"
            },
            "profileId": {
              "description": "Obfuscated user id for the record.",
              "readOnly": true,
              "type": "string"
            },
            "type": {
              "description": "The type of item, can be a customer or user.",
              "readOnly": true,
              "type": "string"
            },
            "userEmail": {
              "description": "user's email.",
              "readOnly": true,
              "type": "string"
            }
          },
          "readOnly": true,
          "type": "object"
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "kind": {
          "default": "admin#reports#usageReport",
          "description": "The kind of object.",
          "type": "string"
        },
        "parameters": {
          "description": "Parameter value pairs for various applications.",
          "items": {
            "properties": {
              "boolValue": {
                "description": "Boolean value of the parameter.",
                "readOnly": true,
                "type": "boolean"
              },
              "datetimeValue": {
                "description": "RFC 3339 formatted value of the parameter.",
                "format": "date-time",
                "readOnly": true,
                "type": "string"
              },
              "intValue": {
                "description": "Integral value of the parameter.",
                "format": "int64",
                "readOnly": true,
                "type": "string"
              },
              "msgValue": {
                "description": "Nested message value of the parameter.",
                "items": {
                  "additionalProperties": {},
                  "type": "object"
                },
                "readOnly": true,
                "type": "array"
              },
              "name": {
                "description": "The name of the parameter.",
                "type": "string"
              },
              "stringValue": {
                "description": "String value of the parameter.",
                "readOnly": true,
                "type": "string"
              }
            },
            "type": "object"
          },
          "readOnly": true,
          "type": "array"
        }
      },
      "type": "object"
    },
    "UsageReports": {
      "description": "JSON template for a collection of usage reports.",
      "properties": {
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "kind": {
          "default": "admin#reports#usageReports",
          "description": "The kind of object.",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Token for retrieving the next page",
          "type": "string"
        },
        "usageReports": {
          "description": "Various application parameter records.",
          "items": {
            "$ref": "#/definitions/UsageReport"
          },
          "type": "array"
        },
        "warnings": {
          "description": "Warnings if any.",
          "items": {
            "properties": {
              "code": {
                "description": "Machine readable code / warning type.",
                "type": "string"
              },
              "data": {
                "description": "Key-Value pairs to give detailed information on the warning.",
                "items": {
                  "properties": {
                    "key": {
                      "description": "Key associated with a key-value pair to give detailed information on the warning.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value associated with a key-value pair to give detailed information on the warning.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "message": {
                "description": "Human readable message for the warning.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  },
  "actions": [
    {
      "id": "activities.list",
      "title": "activities.list",
      "description": "Retrieves a list of activities for a specific customer and application.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userKey": {
            "type": "string",
            "description": "Represents the profile id or the user email for which the data should be filtered. When 'all' is specified as the userKey, it returns usageReports for all users."
          },
          "applicationName": {
            "type": "string",
            "description": "Application name for which the events are to be retrieved."
          },
          "actorIpAddress": {
            "type": "string",
            "description": "IP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses."
          },
          "customerId": {
            "type": "string",
            "description": "Represents the customer for which the data is to be fetched."
          },
          "endTime": {
            "type": "string",
            "description": "Return events which occurred at or before this time."
          },
          "eventName": {
            "type": "string",
            "description": "Name of the event being queried."
          },
          "filters": {
            "type": "string",
            "description": "Event parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],..."
          },
          "maxResults": {
            "type": "integer",
            "description": "Number of activity records to be shown in each page.",
            "maximum": 1000,
            "minimum": 1
          },
          "pageToken": {
            "type": "string",
            "description": "Token to specify next page."
          },
          "startTime": {
            "type": "string",
            "description": "Return events which occurred at or after this time."
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Activities"
      }
    },
    {
      "id": "activities.watch",
      "title": "activities.watch",
      "description": "Push changes to activities",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userKey": {
            "type": "string",
            "description": "Represents the profile id or the user email for which the data should be filtered. When 'all' is specified as the userKey, it returns usageReports for all users."
          },
          "applicationName": {
            "type": "string",
            "description": "Application name for which the events are to be retrieved."
          },
          "actorIpAddress": {
            "type": "string",
            "description": "IP Address of host where the event was performed. Supports both IPv4 and IPv6 addresses."
          },
          "customerId": {
            "type": "string",
            "description": "Represents the customer for which the data is to be fetched."
          },
          "endTime": {
            "type": "string",
            "description": "Return events which occurred at or before this time."
          },
          "eventName": {
            "type": "string",
            "description": "Name of the event being queried."
          },
          "filters": {
            "type": "string",
            "description": "Event parameters in the form [parameter1 name][operator][parameter1 value],[parameter2 name][operator][parameter2 value],..."
          },
          "maxResults": {
            "type": "integer",
            "description": "Number of activity records to be shown in each page.",
            "maximum": 1000,
            "minimum": 1
          },
          "pageToken": {
            "type": "string",
            "description": "Token to specify next page."
          },
          "startTime": {
            "type": "string",
            "description": "Return events which occurred at or after this time."
          },
          "resource": {
            "$ref": "#/definitions/Channel"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/Channel"
      }
    },
    {
      "id": "channels.stop",
      "title": "channels.stop",
      "description": "Stop watching resources through this channel",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "resource": {
            "$ref": "#/definitions/Channel"
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {}
    },
    {
      "id": "customerUsageReports.get",
      "title": "customerUsageReports.get",
      "description": "Retrieves a report which is a collection of properties / statistics for a specific customer.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Represents the date in yyyy-mm-dd format for which the data is to be fetched."
          },
          "customerId": {
            "type": "string",
            "description": "Represents the customer for which the data is to be fetched."
          },
          "pageToken": {
            "type": "string",
            "description": "Token to specify next page."
          },
          "parameters": {
            "type": "string",
            "description": "Represents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2."
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UsageReports"
      }
    },
    {
      "id": "userUsageReport.get",
      "title": "userUsageReport.get",
      "description": "Retrieves a report which is a collection of properties / statistics for a set of users.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "userKey": {
            "type": "string",
            "description": "Represents the profile id or the user email for which the data should be filtered."
          },
          "date": {
            "type": "string",
            "description": "Represents the date in yyyy-mm-dd format for which the data is to be fetched."
          },
          "customerId": {
            "type": "string",
            "description": "Represents the customer for which the data is to be fetched."
          },
          "filters": {
            "type": "string",
            "description": "Represents the set of filters including parameter operator value."
          },
          "maxResults": {
            "type": "integer",
            "description": "Maximum number of results to return. Maximum allowed is 1000",
            "maximum": 1000
          },
          "pageToken": {
            "type": "string",
            "description": "Token to specify next page."
          },
          "parameters": {
            "type": "string",
            "description": "Represents the application name, parameter name pairs to fetch in csv as app_name1:param_name1, app_name2:param_name2."
          },
          "alt": {
            "type": "string",
            "description": "Data format for the response.",
            "enum": [
              "json"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response."
          },
          "key": {
            "type": "string",
            "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
          },
          "oauth_token": {
            "type": "string",
            "description": "OAuth 2.0 token for the current user."
          },
          "prettyPrint": {
            "type": "boolean",
            "description": "Returns response with indentations and line breaks."
          },
          "quotaUser": {
            "type": "string",
            "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided."
          },
          "userIp": {
            "type": "string",
            "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits."
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/UsageReports"
      }
    }
  ]
}