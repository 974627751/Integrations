{
  "id": "whapi_accounts",
  "title": "Accounts",
  "description": "The Accounts API is a collection of methods used to query a customer account. It allows the developer to retrieve account-related data such as the user account balance.",
  "security": {
    "whapi_accounts": {
      "integration": "whapi_accounts",
      "fields": {
        "apiKey": "A unique identifier of your application that is generated by the API portal."
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/whapi_accounts.jpeg"
  },
  "actionCount": 5,
  "definitions": {
    "accountBalance": {
      "properties": {
        "availableFunds": {
          "description": "Current available funds in this account",
          "type": "number"
        },
        "balance": {
          "description": "Current balance of account",
          "type": "number"
        },
        "currencyCode": {
          "description": "A three-character ISO4217 currency code. This will be the currency that the user registered in",
          "type": "string"
        },
        "withdrawableFunds": {
          "description": "Current withdrawable balance of this account",
          "type": "number"
        }
      },
      "required": [
        "balance",
        "currencyCode"
      ],
      "type": "object",
      "title": "accountBalance"
    },
    "accountErrors": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "#/definitions/error"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "accountErrors"
    },
    "accountFlagsSet": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object",
      "title": "accountFlagsSet"
    },
    "accounts": {
      "properties": {
        "accountId": {
          "description": "Account ID",
          "type": "string"
        },
        "accountNum": {
          "description": "Account number",
          "type": "string"
        },
        "city": {
          "description": "The city of the customer's address",
          "type": "string"
        },
        "contactable": {
          "description": "Is it okay for the bookmaker to contact the customer with marketing information",
          "type": "boolean"
        },
        "country": {
          "description": "The country of the customer's address",
          "type": "string"
        },
        "countryCode": {
          "description": "A two-character ISO 3166-1-Alpha-2 code representing the customer's country of registration",
          "type": "string"
        },
        "county": {
          "description": "The county of the customer's address",
          "type": "string"
        },
        "currencyCode": {
          "description": "A three-character ISO4217 currency code. This will be the currency that the customer registered in",
          "type": "string"
        },
        "customerId": {
          "description": "Customer ID",
          "type": "string"
        },
        "email": {
          "description": "The primary email address of the customer with that account. Must be unique.",
          "type": "string"
        },
        "firstName": {
          "description": "The first name of the customer with that account",
          "type": "string"
        },
        "flags": {
          "$ref": "#/definitions/flags"
        },
        "lastName": {
          "description": "The last name of the customer with that account",
          "type": "string"
        },
        "mobile": {
          "description": "The mobile number of the customer with that account",
          "type": "string"
        },
        "partnerContactable": {
          "description": "Is it okay for the bookmaker to give the user's contact details to companies with which it has partnerships",
          "type": "boolean"
        },
        "postcode": {
          "description": "The postCode of the customer's address",
          "type": "string"
        },
        "status": {
          "description": "Account status",
          "type": "string"
        },
        "street1": {
          "description": "Line number 1 of the customer's street address written out in full",
          "type": "string"
        },
        "street2": {
          "description": "Line number 2 of the customer's street address written out in full",
          "type": "string"
        },
        "street3": {
          "description": "Line number 3 of the customer's street address written out in full",
          "type": "string"
        },
        "title": {
          "description": "The title of the name of the customer with that account",
          "type": "string"
        }
      },
      "required": [
        "accountNum",
        "firstName",
        "lastName",
        "status"
      ],
      "type": "object",
      "title": "accounts"
    },
    "error": {
      "properties": {
        "code": {
          "description": "A unique William Hill identifier for the error",
          "type": "string"
        },
        "field": {
          "description": "To help pinpoint the exact parameter where a request has failed",
          "type": "string"
        },
        "message": {
          "description": "A unique William Hill text string to enable you to identify the error (in English only)",
          "type": "string"
        }
      },
      "type": "object",
      "title": "error"
    },
    "flags": {
      "items": {
        "$ref": "#/definitions/flags_inner"
      },
      "type": "array",
      "title": "flags"
    },
    "flags_inner": {
      "properties": {
        "flagName": {
          "description": "Name of the flag to set.",
          "type": "string"
        },
        "flagReason": {
          "description": "The reason that the flag has been set.",
          "type": "string"
        },
        "flagValue": {
          "description": "Value to set the flag to.",
          "type": "string"
        }
      },
      "required": [
        "flagName",
        "flagValue"
      ],
      "title": "flags_inner"
    },
    "getPayments": {
      "properties": {
        "payments": {
          "items": {
            "$ref": "#/definitions/payment"
          },
          "type": "array"
        }
      },
      "type": "object",
      "title": "getPayments"
    },
    "payment": {
      "properties": {
        "action": {
          "description": "Action of the payment (D = Deposit, W = withdrawal)",
          "pattern": "(D|W)",
          "type": "string"
        },
        "amount": {
          "description": "The amount of the payment",
          "type": "number"
        },
        "channel": {
          "description": "The channel through which the payment was made",
          "type": "string"
        },
        "commision": {
          "description": "The commision for the payment",
          "type": "number"
        },
        "id": {
          "description": "ID of the payment",
          "type": "string"
        },
        "ipAddress": {
          "description": "The IP address from which the payment was made",
          "type": "string"
        },
        "methodId": {
          "description": "ID of the payment method",
          "type": "string"
        },
        "paymentDateTime": {
          "description": "The date and time when the payment was made",
          "type": "string"
        },
        "status": {
          "description": "The status of the payment",
          "type": "string"
        },
        "type": {
          "description": "Type of the payment",
          "pattern": "([A-Za-z]*)",
          "type": "string"
        }
      },
      "required": [
        "action",
        "amount",
        "id",
        "paymentDateTime",
        "status"
      ],
      "type": "object",
      "title": "payment"
    },
    "rewardsEligibility": {
      "description": "eligibilty status",
      "properties": {
        "status": {
          "pattern": "(eligible|optedIn|optedOut)",
          "type": "string",
          "x-eg": "eligible"
        }
      },
      "type": "object",
      "title": "rewardsEligibility"
    }
  },
  "actions": [
    {
      "id": "getDetails",
      "title": "getDetails",
      "description": "Retrieves a limited set of customer account details. For security purposes, only a subset is supplied, which does not include fields such as security questions and answers.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiSecret": {
            "type": "string",
            "description": "Another unique identifier for your application.",
            "pattern": "^[a-zA-Z0-9]{19,50}$"
          },
          "apiTicket": {
            "type": "string",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          },
          "fields": {
            "type": "array",
            "description": "Specify an absolute field list to return (Comma-Separated List)"
          },
          "include": {
            "type": "array",
            "description": "Specify fields in addition to the default to return (Comma-Separated List)"
          },
          "exclude": {
            "type": "array",
            "description": "Specify fields from the default to exclude (Comma-Separated List)"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiSecret",
          "apiTicket"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/accounts"
      },
      "security": {
        "whapi_accounts": {
          "integration": "whapi_accounts"
        }
      }
    },
    {
      "id": "getBalance",
      "title": "getBalance",
      "description": "This method can be used to retrieve the customerâ€™s account balance in UK Sterling.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiSecret": {
            "type": "string",
            "description": "Another unique identifier for your application.",
            "pattern": "^[a-zA-Z0-9]{19,50}$"
          },
          "apiTicket": {
            "type": "string",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          },
          "fields": {
            "type": "array",
            "description": "Specify an absolute field list to return (Comma-Separated List)"
          },
          "include": {
            "type": "array",
            "description": "Specify fields in addition to the default to return (Comma-Separated List)"
          },
          "exclude": {
            "type": "array",
            "description": "Specify fields from the default to exclude (Comma-Separated List)"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiSecret",
          "apiTicket"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/accountBalance"
      },
      "security": {
        "whapi_accounts": {
          "integration": "whapi_accounts"
        }
      }
    },
    {
      "id": "setAccountFlags",
      "title": "setAccountFlags",
      "description": "Sets a flag based on name to value provided for the user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiSecret": {
            "type": "string",
            "description": "Another unique identifier for your application.",
            "pattern": "^[a-zA-Z0-9]{19,50}$"
          },
          "apiTicket": {
            "type": "string",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          },
          "apiCountryCode": {
            "type": "string",
            "description": "A two-character ISO 3166-1-Alpha-2 code representing the country API to use.",
            "pattern": "^(GB|ES|IT)$",
            "default": "GB"
          },
          "flags": {
            "$ref": "#/definitions/flags"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiSecret",
          "apiTicket",
          "flags"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/accountFlagsSet"
      },
      "security": {
        "whapi_accounts": {
          "integration": "whapi_accounts"
        }
      }
    },
    {
      "id": "getPayments",
      "title": "getPayments",
      "description": "Retrieves the customerâ€™s account payments in UK Sterling.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiSecret": {
            "type": "string",
            "description": "Another unique identifier for your application.",
            "pattern": "^[a-zA-Z0-9]{19,50}$"
          },
          "apiTicket": {
            "type": "string",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          },
          "page": {
            "type": "number",
            "description": "The page number to return (Used with pageSize)",
            "pattern": "^[1-9]{1,7}$",
            "default": 1
          },
          "pageSize": {
            "type": "number",
            "description": "Specify the number of results to return per page.",
            "pattern": "^[1-9]{1,7}$",
            "default": 100
          },
          "dateFrom": {
            "type": "string",
            "description": "The FROM datetime from payments to be returned. (yyyy-MM-ddTHH:mm:ss)",
            "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})$"
          },
          "dateTo": {
            "type": "string",
            "description": "The TO datetime for payments to be returned. (yyyy-MM-ddTHH:mm:ss)",
            "pattern": "^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\d{2})\\:(\\d{2})$"
          },
          "sort": {
            "type": "string",
            "description": "The order the response will be retuned by. i.e. date,desc",
            "default": "date,asc"
          },
          "transactionType": {
            "type": "string",
            "description": "Allows the user to select with they want to see withdrawls or deposits. If it is omitted from the query both types will be returned",
            "pattern": "^(W|D)$"
          },
          "fields": {
            "type": "array",
            "description": "Specify an absolute field list to return (Comma-Separated List)"
          },
          "include": {
            "type": "array",
            "description": "Specify fields in addition to the default to return (Comma-Separated List)"
          },
          "exclude": {
            "type": "array",
            "description": "Specify fields from the default to exclude (Comma-Separated List)"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiSecret",
          "apiTicket"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/getPayments"
      },
      "security": {
        "whapi_accounts": {
          "integration": "whapi_accounts"
        }
      }
    },
    {
      "id": "getRewardEligibility",
      "title": "getRewardEligibility",
      "description": "Gets a customer's rewards eligibility and opt-in/out status",
      "inputSchema": {
        "type": "object",
        "properties": {
          "apiSecret": {
            "type": "string",
            "description": "Another unique identifier for your application.",
            "pattern": "^[a-zA-Z0-9]{19,50}$"
          },
          "apiTicket": {
            "type": "string",
            "description": "Ticket Granting Ticket obtained from a previous request",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]{39,100}$"
          }
        },
        "additionalProperties": false,
        "required": [
          "apiSecret",
          "apiTicket"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/rewardsEligibility"
      },
      "security": {
        "whapi_accounts": {
          "integration": "whapi_accounts"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "entertainment"
  ]
}