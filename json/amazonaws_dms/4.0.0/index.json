{
  "id": "amazonaws_dms",
  "title": "AWS Database Migration Service",
  "description": "AWS Database Migration Service\n\nAWS Database Migration Service (AWS DMS) can migrate your data to and from the most widely used commercial and open-source databases such as Oracle, PostgreSQL, Microsoft SQL Server, Amazon Redshift, MariaDB, Amazon Aurora, MySQL, and SAP Adaptive Server Enterprise (ASE). The service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle to MySQL or SQL Server to PostgreSQL.\n\nFor more information about AWS DMS, see the AWS DMS user guide at [What Is AWS Database Migration Service?](http://docs.aws.amazon.com/dms/latest/userguide/Welcome.html)",
  "security": {
    "amazonaws_dms": {
      "integration": "amazonaws_dms",
      "fields": {
        "accessKeyId": "",
        "secretAccessKey": "",
        "region": "AWS region (if applicable)"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_dms.svg"
  },
  "actionCount": 40,
  "definitions": {
    "AccessDeniedFault": {
      "description": "AWS DMS was denied access to the endpoint.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "AccessDeniedFault"
    },
    "AccountQuota": {
      "description": "Describes a quota for an AWS account, for example, the number of replication instances allowed.",
      "properties": {
        "AccountQuotaName": {
          "$ref": "#/definitions/String",
          "description": "The name of the AWS DMS quota for this AWS account."
        },
        "Max": {
          "$ref": "#/definitions/Long",
          "description": "The maximum allowed value for the quota."
        },
        "Used": {
          "$ref": "#/definitions/Long",
          "description": "The amount currently used toward the quota maximum."
        }
      },
      "type": "object",
      "title": "AccountQuota"
    },
    "AccountQuotaList": {
      "items": {
        "$ref": "#/definitions/AccountQuota"
      },
      "type": "array",
      "title": "AccountQuotaList"
    },
    "AddTagsToResourceMessage": {
      "description": "<p/>",
      "example": {
        "ResourceArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E",
        "Tags": [
          {
            "Key": "Acount",
            "Value": "1633456"
          }
        ]
      },
      "properties": {
        "ResourceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be added to. AWS DMS resources include a replication instance, endpoint, and a replication task."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tag to be assigned to the DMS resource."
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "object",
      "title": "AddTagsToResourceMessage"
    },
    "AddTagsToResourceResponse": {
      "description": "<p/>",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "AddTagsToResourceResponse"
    },
    "AuthMechanismValue": {
      "enum": [
        "default",
        "mongodb_cr",
        "scram_sha_1"
      ],
      "type": "string",
      "title": "AuthMechanismValue"
    },
    "AuthTypeValue": {
      "enum": [
        "no",
        "password"
      ],
      "type": "string",
      "title": "AuthTypeValue"
    },
    "AvailabilityZone": {
      "description": "<p/>",
      "properties": {
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the availability zone."
        }
      },
      "type": "object",
      "title": "AvailabilityZone"
    },
    "Boolean": {
      "type": "boolean",
      "title": "Boolean"
    },
    "BooleanOptional": {
      "type": "boolean",
      "title": "BooleanOptional"
    },
    "Certificate": {
      "description": "The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.",
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) for the certificate."
        },
        "CertificateCreationDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The date that the certificate was created."
        },
        "CertificateIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9."
        },
        "CertificateOwner": {
          "$ref": "#/definitions/String",
          "description": "The owner of the certificate."
        },
        "CertificatePem": {
          "$ref": "#/definitions/String",
          "description": "The contents of the .pem X.509 certificate file for the certificate."
        },
        "CertificateWallet": {
          "$ref": "#/definitions/CertificateWallet",
          "description": "The location of the imported Oracle Wallet certificate for use with SSL."
        },
        "KeyLength": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The key length of the cryptographic algorithm being used."
        },
        "SigningAlgorithm": {
          "$ref": "#/definitions/String",
          "description": "The signing algorithm for the certificate."
        },
        "ValidFromDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The beginning date that the certificate is valid."
        },
        "ValidToDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The final date that the certificate is valid."
        }
      },
      "type": "object",
      "title": "Certificate"
    },
    "CertificateList": {
      "items": {
        "$ref": "#/definitions/Certificate"
      },
      "type": "array",
      "title": "CertificateList"
    },
    "CertificateWallet": {
      "type": "string",
      "title": "CertificateWallet"
    },
    "CompressionTypeValue": {
      "enum": [
        "none",
        "gzip"
      ],
      "type": "string",
      "title": "CompressionTypeValue"
    },
    "Connection": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "EndpointIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the endpoint. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens."
        },
        "LastFailureMessage": {
          "$ref": "#/definitions/String",
          "description": "The error message when the connection last failed."
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        },
        "ReplicationInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The replication instance identifier. This parameter is stored as a lowercase string."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The connection status."
        }
      },
      "type": "object",
      "title": "Connection"
    },
    "ConnectionList": {
      "items": {
        "$ref": "#/definitions/Connection"
      },
      "type": "array",
      "title": "ConnectionList"
    },
    "CreateEndpointMessage": {
      "description": "<p/>",
      "example": {
        "CertificateArn": "",
        "DatabaseName": "testdb",
        "EndpointIdentifier": "test-endpoint-1",
        "EndpointType": "source",
        "EngineName": "mysql",
        "ExtraConnectionAttributes": "",
        "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
        "Password": "pasword",
        "Port": 3306,
        "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
        "SslMode": "require",
        "Tags": [
          {
            "Key": "Acount",
            "Value": "143327655"
          }
        ],
        "Username": "username"
      },
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Number (ARN) for the certificate."
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": "The name of the endpoint database."
        },
        "DynamoDbSettings": {
          "$ref": "#/definitions/DynamoDbSettings",
          "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see the <b>Using Object Mapping to Migrate Data to DynamoDB</b> section at <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\"> Using an Amazon DynamoDB Database as a Target for AWS Database Migration Service</a>. "
        },
        "EndpointIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens."
        },
        "EndpointType": {
          "$ref": "#/definitions/ReplicationEndpointTypeValue",
          "description": "The type of endpoint."
        },
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "The type of engine for the endpoint. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER."
        },
        "ExtraConnectionAttributes": {
          "$ref": "#/definitions/String",
          "description": "Additional attributes associated with the connection."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region."
        },
        "MongoDbSettings": {
          "$ref": "#/definitions/MongoDbSettings",
          "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the <b>Configuration Properties When Using MongoDB as a Source for AWS Database Migration Service</b> section at <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html\"> Using Amazon S3 as a Target for AWS Database Migration Service</a>. "
        },
        "Password": {
          "$ref": "#/definitions/SecretString",
          "description": "The password to be used to login to the endpoint database."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The port used by the endpoint database."
        },
        "S3Settings": {
          "$ref": "#/definitions/S3Settings",
          "description": "Settings in JSON format for the target S3 endpoint. For more information about the available settings, see the <b>Extra Connection Attributes</b> section at <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html\"> Using Amazon S3 as a Target for AWS Database Migration Service</a>. "
        },
        "ServerName": {
          "$ref": "#/definitions/String",
          "description": "The name of the server where the endpoint database resides."
        },
        "SslMode": {
          "$ref": "#/definitions/DmsSslModeValue",
          "description": "<p>The SSL mode to use for the SSL connection.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Tags to be added to the endpoint."
        },
        "Username": {
          "$ref": "#/definitions/String",
          "description": "The user name to be used to login to the endpoint database."
        }
      },
      "required": [
        "EndpointIdentifier",
        "EndpointType",
        "EngineName"
      ],
      "type": "object",
      "title": "CreateEndpointMessage"
    },
    "CreateEndpointResponse": {
      "description": "<p/>",
      "example": {
        "Endpoint": {
          "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
          "EndpointIdentifier": "test-endpoint-1",
          "EndpointType": "source",
          "EngineName": "mysql",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "Port": 3306,
          "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
          "Status": "active",
          "Username": "username"
        }
      },
      "properties": {
        "Endpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "The endpoint that was created."
        }
      },
      "type": "object",
      "title": "CreateEndpointResponse"
    },
    "CreateEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " A Boolean value; set to <b>true</b> to activate the subscription, or set to <b>false</b> to create the subscription but not activate it. "
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": " A list of event categories for a source type that you want to subscribe to. You can see a list of the categories for a given source type by calling the <b>DescribeEventCategories</b> action or in the topic <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html\"> Working with Events and Notifications</a> in the AWS Database Migration Service User Guide. "
        },
        "SnsTopicArn": {
          "$ref": "#/definitions/String",
          "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it. "
        },
        "SourceIds": {
          "$ref": "#/definitions/SourceIdsList",
          "description": " The list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. "
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p> The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to <code>replication-instance</code>. If this value is not specified, all events are returned. </p> <p>Valid values: replication-instance | migration-task</p>"
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "<p>The name of the DMS event notification subscription. </p> <p>Constraints: The name must be less than 255 characters. </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "A tag to be attached to the event subscription."
        }
      },
      "required": [
        "SubscriptionName",
        "SnsTopicArn"
      ],
      "type": "object",
      "title": "CreateEventSubscriptionMessage"
    },
    "CreateEventSubscriptionResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription",
          "description": "The event subscription that was created."
        }
      },
      "type": "object",
      "title": "CreateEventSubscriptionResponse"
    },
    "CreateReplicationInstanceMessage": {
      "description": "<p/>",
      "example": {
        "AllocatedStorage": 123,
        "AutoMinorVersionUpgrade": true,
        "AvailabilityZone": "",
        "EngineVersion": "",
        "KmsKeyId": "",
        "MultiAZ": true,
        "PreferredMaintenanceWindow": "",
        "PubliclyAccessible": true,
        "ReplicationInstanceClass": "",
        "ReplicationInstanceIdentifier": "",
        "ReplicationSubnetGroupIdentifier": "",
        "Tags": [
          {
            "Key": "string",
            "Value": "string"
          }
        ],
        "VpcSecurityGroupIds": []
      },
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The amount of storage (in gigabytes) to be initially allocated for the replication instance."
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": "<p>Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.</p> <p>Default: <code>true</code> </p>"
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "<p>The EC2 Availability Zone that the replication instance will be created in.</p> <p>Default: A random, system-chosen Availability Zone in the endpoint's region.</p> <p> Example: <code>us-east-1d</code> </p>"
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The engine version number of the replication instance."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The KMS key identifier that will be used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region."
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p> Format: <code>ddd:hh24:mi-ddd:hh24:mi</code> </p> <p>Default: A 30-minute window selected at random from an 8-hour block of time per region, occurring on a random day of the week.</p> <p>Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun</p> <p>Constraints: Minimum 30-minute window.</p>"
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. "
        },
        "ReplicationInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the replication instance as specified by the replication instance class.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>"
        },
        "ReplicationInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>"
        },
        "ReplicationSubnetGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "A subnet group to associate with the replication instance."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Tags to be associated with the replication instance."
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. "
        }
      },
      "required": [
        "ReplicationInstanceIdentifier",
        "ReplicationInstanceClass"
      ],
      "type": "object",
      "title": "CreateReplicationInstanceMessage"
    },
    "CreateReplicationInstanceResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationInstance": {
          "AllocatedStorage": 5,
          "AutoMinorVersionUpgrade": true,
          "EngineVersion": "1.5.0",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "PendingModifiedValues": {},
          "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
          "PubliclyAccessible": true,
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationInstanceClass": "dms.t2.micro",
          "ReplicationInstanceIdentifier": "test-rep-1",
          "ReplicationInstanceStatus": "creating",
          "ReplicationSubnetGroup": {
            "ReplicationSubnetGroupDescription": "default",
            "ReplicationSubnetGroupIdentifier": "default",
            "SubnetGroupStatus": "Complete",
            "Subnets": [
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1d"
                },
                "SubnetIdentifier": "subnet-f6dd91af",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1b"
                },
                "SubnetIdentifier": "subnet-3605751d",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1c"
                },
                "SubnetIdentifier": "subnet-c2daefb5",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1e"
                },
                "SubnetIdentifier": "subnet-85e90cb8",
                "SubnetStatus": "Active"
              }
            ],
            "VpcId": "vpc-6741a603"
          }
        }
      },
      "properties": {
        "ReplicationInstance": {
          "$ref": "#/definitions/ReplicationInstance",
          "description": "The replication instance that was created."
        }
      },
      "type": "object",
      "title": "CreateReplicationInstanceResponse"
    },
    "CreateReplicationSubnetGroupMessage": {
      "description": "<p/>",
      "example": {
        "ReplicationSubnetGroupDescription": "US West subnet group",
        "ReplicationSubnetGroupIdentifier": "us-west-2ab-vpc-215ds366",
        "SubnetIds": [
          "subnet-e145356n",
          "subnet-58f79200"
        ],
        "Tags": [
          {
            "Key": "Acount",
            "Value": "145235"
          }
        ]
      },
      "properties": {
        "ReplicationSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description for the subnet group."
        },
        "ReplicationSubnetGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The name for the replication subnet group. This value is stored as a lowercase string.</p> <p>Constraints: Must contain no more than 255 alphanumeric characters, periods, spaces, underscores, or hyphens. Must not be \"default\".</p> <p>Example: <code>mySubnetgroup</code> </p>"
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIdentifierList",
          "description": "The EC2 subnet IDs for the subnet group."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tag to be assigned to the subnet group."
        }
      },
      "required": [
        "ReplicationSubnetGroupIdentifier",
        "ReplicationSubnetGroupDescription",
        "SubnetIds"
      ],
      "type": "object",
      "title": "CreateReplicationSubnetGroupMessage"
    },
    "CreateReplicationSubnetGroupResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationSubnetGroup": {}
      },
      "properties": {
        "ReplicationSubnetGroup": {
          "$ref": "#/definitions/ReplicationSubnetGroup",
          "description": "The replication subnet group that was created."
        }
      },
      "type": "object",
      "title": "CreateReplicationSubnetGroupResponse"
    },
    "CreateReplicationTaskMessage": {
      "description": "<p/>",
      "example": {
        "CdcStartTime": "2016-12-14T18:25:43Z",
        "MigrationType": "full-load",
        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
        "ReplicationTaskIdentifier": "task1",
        "ReplicationTaskSettings": "",
        "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
        "TableMappings": "file://mappingfile.json",
        "Tags": [
          {
            "Key": "Acount",
            "Value": "24352226"
          }
        ],
        "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
      },
      "properties": {
        "CdcStartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The start time for the Change Data Capture (CDC) operation."
        },
        "MigrationType": {
          "$ref": "#/definitions/MigrationTypeValue",
          "description": "The migration type."
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        },
        "ReplicationTaskIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        },
        "ReplicationTaskSettings": {
          "$ref": "#/definitions/String",
          "description": "Settings for the task, such as target metadata settings. For a complete list of task settings, see <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html\">Task Settings for AWS Database Migration Service Tasks</a>."
        },
        "SourceEndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "TableMappings": {
          "$ref": "#/definitions/String",
          "description": "<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with \"file://\". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "Tags to be added to the replication instance."
        },
        "TargetEndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        }
      },
      "required": [
        "ReplicationTaskIdentifier",
        "SourceEndpointArn",
        "TargetEndpointArn",
        "ReplicationInstanceArn",
        "MigrationType",
        "TableMappings"
      ],
      "type": "object",
      "title": "CreateReplicationTaskMessage"
    },
    "CreateReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "$ref": "#/definitions/ReplicationTask",
          "description": "The replication task that was created."
        }
      },
      "type": "object",
      "title": "CreateReplicationTaskResponse"
    },
    "DeleteCertificateMessage": {
      "example": {
        "CertificateArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUSM457DE6XFJCJQ"
      },
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the deleted certificate."
        }
      },
      "required": [
        "CertificateArn"
      ],
      "type": "object",
      "title": "DeleteCertificateMessage"
    },
    "DeleteCertificateResponse": {
      "example": {
        "Certificate": {}
      },
      "properties": {
        "Certificate": {
          "$ref": "#/definitions/Certificate",
          "description": "The Secure Sockets Layer (SSL) certificate."
        }
      },
      "type": "object",
      "title": "DeleteCertificateResponse"
    },
    "DeleteEndpointMessage": {
      "description": "<p/>",
      "example": {
        "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM"
      },
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        }
      },
      "required": [
        "EndpointArn"
      ],
      "type": "object",
      "title": "DeleteEndpointMessage"
    },
    "DeleteEndpointResponse": {
      "description": "<p/>",
      "example": {
        "Endpoint": {
          "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
          "EndpointIdentifier": "test-endpoint-1",
          "EndpointType": "source",
          "EngineName": "mysql",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "Port": 3306,
          "ServerName": "mydb.cx1llnox7iyx.us-west-2.rds.amazonaws.com",
          "Status": "active",
          "Username": "username"
        }
      },
      "properties": {
        "Endpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "The endpoint that was deleted."
        }
      },
      "type": "object",
      "title": "DeleteEndpointResponse"
    },
    "DeleteEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the DMS event notification subscription to be deleted."
        }
      },
      "required": [
        "SubscriptionName"
      ],
      "type": "object",
      "title": "DeleteEventSubscriptionMessage"
    },
    "DeleteEventSubscriptionResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription",
          "description": "The event subscription that was deleted."
        }
      },
      "type": "object",
      "title": "DeleteEventSubscriptionResponse"
    },
    "DeleteReplicationInstanceMessage": {
      "description": "<p/>",
      "example": {
        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
      },
      "properties": {
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance to be deleted."
        }
      },
      "required": [
        "ReplicationInstanceArn"
      ],
      "type": "object",
      "title": "DeleteReplicationInstanceMessage"
    },
    "DeleteReplicationInstanceResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationInstance": {
          "AllocatedStorage": 5,
          "AutoMinorVersionUpgrade": true,
          "EngineVersion": "1.5.0",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "PendingModifiedValues": {},
          "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
          "PubliclyAccessible": true,
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationInstanceClass": "dms.t2.micro",
          "ReplicationInstanceIdentifier": "test-rep-1",
          "ReplicationInstanceStatus": "creating",
          "ReplicationSubnetGroup": {
            "ReplicationSubnetGroupDescription": "default",
            "ReplicationSubnetGroupIdentifier": "default",
            "SubnetGroupStatus": "Complete",
            "Subnets": [
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1d"
                },
                "SubnetIdentifier": "subnet-f6dd91af",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1b"
                },
                "SubnetIdentifier": "subnet-3605751d",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1c"
                },
                "SubnetIdentifier": "subnet-c2daefb5",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1e"
                },
                "SubnetIdentifier": "subnet-85e90cb8",
                "SubnetStatus": "Active"
              }
            ],
            "VpcId": "vpc-6741a603"
          }
        }
      },
      "properties": {
        "ReplicationInstance": {
          "$ref": "#/definitions/ReplicationInstance",
          "description": "The replication instance that was deleted."
        }
      },
      "type": "object",
      "title": "DeleteReplicationInstanceResponse"
    },
    "DeleteReplicationSubnetGroupMessage": {
      "description": "<p/>",
      "example": {
        "ReplicationSubnetGroupIdentifier": "us-west-2ab-vpc-215ds366"
      },
      "properties": {
        "ReplicationSubnetGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The subnet group name of the replication instance."
        }
      },
      "required": [
        "ReplicationSubnetGroupIdentifier"
      ],
      "type": "object",
      "title": "DeleteReplicationSubnetGroupMessage"
    },
    "DeleteReplicationSubnetGroupResponse": {
      "description": "<p/>",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "DeleteReplicationSubnetGroupResponse"
    },
    "DeleteReplicationTaskMessage": {
      "description": "<p/>",
      "example": {
        "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
      },
      "properties": {
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication task to be deleted."
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "type": "object",
      "title": "DeleteReplicationTaskMessage"
    },
    "DeleteReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "$ref": "#/definitions/ReplicationTask",
          "description": "The deleted replication task."
        }
      },
      "type": "object",
      "title": "DeleteReplicationTaskResponse"
    },
    "DescribeAccountAttributesMessage": {
      "description": "<p/>",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "DescribeAccountAttributesMessage"
    },
    "DescribeAccountAttributesResponse": {
      "description": "<p/>",
      "example": {
        "AccountQuotas": [
          {
            "AccountQuotaName": "ReplicationInstances",
            "Max": 20,
            "Used": 0
          },
          {
            "AccountQuotaName": "AllocatedStorage",
            "Max": 20,
            "Used": 0
          },
          {
            "AccountQuotaName": "Endpoints",
            "Max": 20,
            "Used": 0
          }
        ]
      },
      "properties": {
        "AccountQuotas": {
          "$ref": "#/definitions/AccountQuotaList",
          "description": "Account quota information."
        }
      },
      "type": "object",
      "title": "DescribeAccountAttributesResponse"
    },
    "DescribeCertificatesMessage": {
      "example": {
        "Filters": [
          {
            "Name": "string",
            "Values": [
              "string",
              "string"
            ]
          }
        ],
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Filters applied to the certificate described in the form of key-value pairs."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 10</p>"
        }
      },
      "type": "object",
      "title": "DescribeCertificatesMessage"
    },
    "DescribeCertificatesResponse": {
      "example": {
        "Certificates": [],
        "Marker": ""
      },
      "properties": {
        "Certificates": {
          "$ref": "#/definitions/CertificateList",
          "description": "The Secure Sockets Layer (SSL) certificates associated with the replication instance."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": "The pagination token."
        }
      },
      "type": "object",
      "title": "DescribeCertificatesResponse"
    },
    "DescribeConnectionsMessage": {
      "description": "<p/>",
      "example": {
        "Filters": [
          {
            "Name": "string",
            "Values": [
              "string",
              "string"
            ]
          }
        ],
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>The filters applied to the connection.</p> <p>Valid filter names: endpoint-arn | replication-instance-arn</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object",
      "title": "DescribeConnectionsMessage"
    },
    "DescribeConnectionsResponse": {
      "description": "<p/>",
      "example": {
        "Connections": [
          {
            "EndpointArn": "arn:aws:dms:us-east-arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
            "EndpointIdentifier": "testsrc1",
            "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
            "ReplicationInstanceIdentifier": "test",
            "Status": "successful"
          }
        ],
        "Marker": ""
      },
      "properties": {
        "Connections": {
          "$ref": "#/definitions/ConnectionList",
          "description": "A description of the connections."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object",
      "title": "DescribeConnectionsResponse"
    },
    "DescribeEndpointTypesMessage": {
      "description": "<p/>",
      "example": {
        "Filters": [
          {
            "Name": "string",
            "Values": [
              "string",
              "string"
            ]
          }
        ],
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: engine-name | endpoint-type</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object",
      "title": "DescribeEndpointTypesMessage"
    },
    "DescribeEndpointTypesResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "SupportedEndpointTypes": []
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "SupportedEndpointTypes": {
          "$ref": "#/definitions/SupportedEndpointTypeList",
          "description": "The type of endpoints that are supported."
        }
      },
      "type": "object",
      "title": "DescribeEndpointTypesResponse"
    },
    "DescribeEndpointsMessage": {
      "description": "<p/>",
      "example": {
        "Filters": [
          {
            "Name": "string",
            "Values": [
              "string",
              "string"
            ]
          }
        ],
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: endpoint-arn | endpoint-type | endpoint-id | engine-name</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object",
      "title": "DescribeEndpointsMessage"
    },
    "DescribeEndpointsResponse": {
      "description": "<p/>",
      "example": {
        "Endpoints": [],
        "Marker": ""
      },
      "properties": {
        "Endpoints": {
          "$ref": "#/definitions/EndpointList",
          "description": "Endpoint description."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object",
      "title": "DescribeEndpointsResponse"
    },
    "DescribeEventCategoriesMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Filters applied to the action."
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | migration-task</p>"
        }
      },
      "type": "object",
      "title": "DescribeEventCategoriesMessage"
    },
    "DescribeEventCategoriesResponse": {
      "description": "<p/>",
      "properties": {
        "EventCategoryGroupList": {
          "$ref": "#/definitions/EventCategoryGroupList",
          "description": "A list of event categories."
        }
      },
      "type": "object",
      "title": "DescribeEventCategoriesResponse"
    },
    "DescribeEventSubscriptionsMessage": {
      "description": "<p/>",
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Filters applied to the action."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the AWS DMS event subscription to be described."
        }
      },
      "type": "object",
      "title": "DescribeEventSubscriptionsMessage"
    },
    "DescribeEventSubscriptionsResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscriptionsList": {
          "$ref": "#/definitions/EventSubscriptionsList",
          "description": "A list of event subscriptions."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object",
      "title": "DescribeEventSubscriptionsResponse"
    },
    "DescribeEventsMessage": {
      "description": "<p/>",
      "properties": {
        "Duration": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The duration of the events to be listed."
        },
        "EndTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The end time for the events to be listed."
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": "A list of event categories for a source type that you want to subscribe to."
        },
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Filters applied to the action."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        },
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": " The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It cannot end with a hyphen or contain two consecutive hyphens. "
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "<p>The type of AWS DMS resource that generates events.</p> <p>Valid values: replication-instance | migration-task</p>"
        },
        "StartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The start time for the events to be listed."
        }
      },
      "type": "object",
      "title": "DescribeEventsMessage"
    },
    "DescribeEventsResponse": {
      "description": "<p/>",
      "properties": {
        "Events": {
          "$ref": "#/definitions/EventList",
          "description": "The events described."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        }
      },
      "type": "object",
      "title": "DescribeEventsResponse"
    },
    "DescribeOrderableReplicationInstancesMessage": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object",
      "title": "DescribeOrderableReplicationInstancesMessage"
    },
    "DescribeOrderableReplicationInstancesResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "OrderableReplicationInstances": []
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "OrderableReplicationInstances": {
          "$ref": "#/definitions/OrderableReplicationInstanceList",
          "description": "The order-able replication instances available."
        }
      },
      "type": "object",
      "title": "DescribeOrderableReplicationInstancesResponse"
    },
    "DescribeRefreshSchemasStatusMessage": {
      "description": "<p/>",
      "example": {
        "EndpointArn": ""
      },
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        }
      },
      "required": [
        "EndpointArn"
      ],
      "type": "object",
      "title": "DescribeRefreshSchemasStatusMessage"
    },
    "DescribeRefreshSchemasStatusResponse": {
      "description": "<p/>",
      "example": {
        "RefreshSchemasStatus": {}
      },
      "properties": {
        "RefreshSchemasStatus": {
          "$ref": "#/definitions/RefreshSchemasStatus",
          "description": "The status of the schema."
        }
      },
      "type": "object",
      "title": "DescribeRefreshSchemasStatusResponse"
    },
    "DescribeReplicationInstancesMessage": {
      "description": "<p/>",
      "example": {
        "Filters": [
          {
            "Name": "string",
            "Values": [
              "string",
              "string"
            ]
          }
        ],
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-instance-arn | replication-instance-id | replication-instance-class | engine-version</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object",
      "title": "DescribeReplicationInstancesMessage"
    },
    "DescribeReplicationInstancesResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationInstances": []
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "ReplicationInstances": {
          "$ref": "#/definitions/ReplicationInstanceList",
          "description": "The replication instances described."
        }
      },
      "type": "object",
      "title": "DescribeReplicationInstancesResponse"
    },
    "DescribeReplicationSubnetGroupsMessage": {
      "description": "<p/>",
      "example": {
        "Filters": [
          {
            "Name": "string",
            "Values": [
              "string",
              "string"
            ]
          }
        ],
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "Filters applied to the describe action."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object",
      "title": "DescribeReplicationSubnetGroupsMessage"
    },
    "DescribeReplicationSubnetGroupsResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationSubnetGroups": []
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "ReplicationSubnetGroups": {
          "$ref": "#/definitions/ReplicationSubnetGroups",
          "description": "A description of the replication subnet groups."
        }
      },
      "type": "object",
      "title": "DescribeReplicationSubnetGroupsResponse"
    },
    "DescribeReplicationTasksMessage": {
      "description": "<p/>",
      "example": {
        "Filters": [
          {
            "Name": "string",
            "Values": [
              "string",
              "string"
            ]
          }
        ],
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>Filters applied to the describe action.</p> <p>Valid filter names: replication-task-arn | replication-task-id | migration-type | endpoint-arn | replication-instance-arn</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "type": "object",
      "title": "DescribeReplicationTasksMessage"
    },
    "DescribeReplicationTasksResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationTasks": []
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "ReplicationTasks": {
          "$ref": "#/definitions/ReplicationTaskList",
          "description": "A description of the replication tasks."
        }
      },
      "type": "object",
      "title": "DescribeReplicationTasksResponse"
    },
    "DescribeSchemasMessage": {
      "description": "<p/>",
      "example": {
        "EndpointArn": "",
        "Marker": "",
        "MaxRecords": 123
      },
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 100.</p>"
        }
      },
      "required": [
        "EndpointArn"
      ],
      "type": "object",
      "title": "DescribeSchemasMessage"
    },
    "DescribeSchemasResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "Schemas": []
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "Schemas": {
          "$ref": "#/definitions/SchemaList",
          "description": "The described schema."
        }
      },
      "type": "object",
      "title": "DescribeSchemasResponse"
    },
    "DescribeTableStatisticsMessage": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "MaxRecords": 123,
        "ReplicationTaskArn": ""
      },
      "properties": {
        "Filters": {
          "$ref": "#/definitions/FilterList",
          "description": "<p>Filters applied to the describe table statistics action.</p> <p>Valid filter names: schema-name | table-name | table-state</p> <p>A combination of filters creates an AND condition where each record matches all specified filters.</p>"
        },
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "MaxRecords": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "<p> The maximum number of records to include in the response. If more records exist than the specified <code>MaxRecords</code> value, a pagination token called a marker is included in the response so that the remaining results can be retrieved. </p> <p>Default: 100</p> <p>Constraints: Minimum 20, maximum 500.</p>"
        },
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication task."
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "type": "object",
      "title": "DescribeTableStatisticsMessage"
    },
    "DescribeTableStatisticsResponse": {
      "description": "<p/>",
      "example": {
        "Marker": "",
        "ReplicationTaskArn": "",
        "TableStatistics": []
      },
      "properties": {
        "Marker": {
          "$ref": "#/definitions/String",
          "description": " An optional pagination token provided by a previous request. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by <code>MaxRecords</code>. "
        },
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication task."
        },
        "TableStatistics": {
          "$ref": "#/definitions/TableStatisticsList",
          "description": "The table statistics."
        }
      },
      "type": "object",
      "title": "DescribeTableStatisticsResponse"
    },
    "DmsSslModeValue": {
      "enum": [
        "none",
        "require",
        "verify-ca",
        "verify-full"
      ],
      "type": "string",
      "title": "DmsSslModeValue"
    },
    "DynamoDbSettings": {
      "description": "<p/>",
      "properties": {
        "ServiceAccessRoleArn": {
          "$ref": "#/definitions/String",
          "description": " The Amazon Resource Name (ARN) used by the service access IAM role. "
        }
      },
      "required": [
        "ServiceAccessRoleArn"
      ],
      "type": "object",
      "title": "DynamoDbSettings"
    },
    "Endpoint": {
      "description": "<p/>",
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) used for SSL connection to the endpoint."
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": "The name of the database at the endpoint."
        },
        "DynamoDbSettings": {
          "$ref": "#/definitions/DynamoDbSettings",
          "description": "The settings for the target DynamoDB database. For more information, see the <code>DynamoDBSettings</code> structure."
        },
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "EndpointIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens."
        },
        "EndpointType": {
          "$ref": "#/definitions/ReplicationEndpointTypeValue",
          "description": "The type of endpoint."
        },
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "The database engine name. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER."
        },
        "ExternalId": {
          "$ref": "#/definitions/String",
          "description": " Value returned by a call to CreateEndpoint that can be used for cross-account validation. Use it on a subsequent call to CreateEndpoint to create the endpoint with a cross-account. "
        },
        "ExtraConnectionAttributes": {
          "$ref": "#/definitions/String",
          "description": "Additional connection attributes used to connect to the endpoint."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The KMS key identifier that will be used to encrypt the connection parameters. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region."
        },
        "MongoDbSettings": {
          "$ref": "#/definitions/MongoDbSettings",
          "description": "The settings for the MongoDB source endpoint. For more information, see the <code>MongoDbSettings</code> structure."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The port value used to access the endpoint."
        },
        "S3Settings": {
          "$ref": "#/definitions/S3Settings",
          "description": "The settings for the S3 target endpoint. For more information, see the <code>S3Settings</code> structure."
        },
        "ServerName": {
          "$ref": "#/definitions/String",
          "description": "The name of the server at the endpoint."
        },
        "SslMode": {
          "$ref": "#/definitions/DmsSslModeValue",
          "description": "<p>The SSL mode used to connect to the endpoint.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>"
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the endpoint."
        },
        "Username": {
          "$ref": "#/definitions/String",
          "description": "The user name used to connect to the endpoint."
        }
      },
      "type": "object",
      "title": "Endpoint"
    },
    "EndpointList": {
      "items": {
        "$ref": "#/definitions/Endpoint"
      },
      "type": "array",
      "title": "EndpointList"
    },
    "Event": {
      "description": "<p/>",
      "properties": {
        "Date": {
          "$ref": "#/definitions/TStamp",
          "description": "The date of the event."
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": "The event categories available for the specified source type."
        },
        "Message": {
          "$ref": "#/definitions/String",
          "description": "The event message."
        },
        "SourceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p> The identifier of the event source. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens; it cannot end with a hyphen or contain two consecutive hyphens. </p> <p>Constraints:replication instance, endpoint, migration task</p>"
        },
        "SourceType": {
          "$ref": "#/definitions/SourceType",
          "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | endpoint | migration-task</p>"
        }
      },
      "type": "object",
      "title": "Event"
    },
    "EventCategoriesList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "EventCategoriesList"
    },
    "EventCategoryGroup": {
      "description": "<p/>",
      "properties": {
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": " A list of event categories for a <code>SourceType</code> that you want to subscribe to. "
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>"
        }
      },
      "type": "object",
      "title": "EventCategoryGroup"
    },
    "EventCategoryGroupList": {
      "items": {
        "$ref": "#/definitions/EventCategoryGroup"
      },
      "type": "array",
      "title": "EventCategoryGroupList"
    },
    "EventList": {
      "items": {
        "$ref": "#/definitions/Event"
      },
      "type": "array",
      "title": "EventList"
    },
    "EventSubscription": {
      "description": "<p/>",
      "properties": {
        "CustSubscriptionId": {
          "$ref": "#/definitions/String",
          "description": "The AWS DMS event notification subscription Id."
        },
        "CustomerAwsId": {
          "$ref": "#/definitions/String",
          "description": "The AWS customer account associated with the AWS DMS event notification subscription."
        },
        "Enabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Boolean value that indicates if the event subscription is enabled."
        },
        "EventCategoriesList": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": "A lists of event categories."
        },
        "SnsTopicArn": {
          "$ref": "#/definitions/String",
          "description": "The topic ARN of the AWS DMS event notification subscription."
        },
        "SourceIdsList": {
          "$ref": "#/definitions/SourceIdsList",
          "description": "A list of source Ids for the event subscription."
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p> The type of AWS DMS resource that generates events. </p> <p>Valid values: replication-instance | replication-server | security-group | migration-task</p>"
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "<p>The status of the AWS DMS event notification subscription.</p> <p>Constraints:</p> <p>Can be one of the following: creating | modifying | deleting | active | no-permission | topic-not-exist</p> <p>The status \"no-permission\" indicates that AWS DMS no longer has permission to post to the SNS topic. The status \"topic-not-exist\" indicates that the topic was deleted after the subscription was created.</p>"
        },
        "SubscriptionCreationTime": {
          "$ref": "#/definitions/String",
          "description": "The time the RDS event notification subscription was created."
        }
      },
      "type": "object",
      "title": "EventSubscription"
    },
    "EventSubscriptionsList": {
      "items": {
        "$ref": "#/definitions/EventSubscription"
      },
      "type": "array",
      "title": "EventSubscriptionsList"
    },
    "ExceptionMessage": {
      "type": "string",
      "title": "ExceptionMessage"
    },
    "Filter": {
      "description": "<p/>",
      "properties": {
        "Name": {
          "$ref": "#/definitions/String",
          "description": "The name of the filter."
        },
        "Values": {
          "$ref": "#/definitions/FilterValueList",
          "description": "The filter value."
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "type": "object",
      "title": "Filter"
    },
    "FilterList": {
      "items": {
        "$ref": "#/definitions/Filter"
      },
      "type": "array",
      "title": "FilterList"
    },
    "FilterValueList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "FilterValueList"
    },
    "ImportCertificateMessage": {
      "example": {
        "CertificateIdentifier": "",
        "CertificatePem": ""
      },
      "properties": {
        "CertificateIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The customer-assigned name of the certificate. Valid characters are A-z and 0-9."
        },
        "CertificatePem": {
          "$ref": "#/definitions/String",
          "description": "The contents of the .pem X.509 certificate file for the certificate."
        },
        "CertificateWallet": {
          "$ref": "#/definitions/CertificateWallet",
          "description": "The location of the imported Oracle Wallet certificate for use with SSL."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "The tags associated with the certificate."
        }
      },
      "required": [
        "CertificateIdentifier"
      ],
      "type": "object",
      "title": "ImportCertificateMessage"
    },
    "ImportCertificateResponse": {
      "example": {
        "Certificate": {}
      },
      "properties": {
        "Certificate": {
          "$ref": "#/definitions/Certificate",
          "description": "The certificate to be uploaded."
        }
      },
      "type": "object",
      "title": "ImportCertificateResponse"
    },
    "InsufficientResourceCapacityFault": {
      "description": "There are not enough resources allocated to the database migration.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InsufficientResourceCapacityFault"
    },
    "Integer": {
      "type": "integer",
      "title": "Integer"
    },
    "IntegerOptional": {
      "type": "integer",
      "title": "IntegerOptional"
    },
    "InvalidCertificateFault": {
      "description": "The certificate was not valid.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage"
        }
      },
      "type": "object",
      "title": "InvalidCertificateFault"
    },
    "InvalidResourceStateFault": {
      "description": "The resource is in a state that prevents it from being used for database migration.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InvalidResourceStateFault"
    },
    "InvalidSubnet": {
      "description": "The subnet provided is invalid.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "InvalidSubnet"
    },
    "KMSKeyNotAccessibleFault": {
      "description": "AWS DMS cannot access the KMS key.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "KMSKeyNotAccessibleFault"
    },
    "KeyList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "KeyList"
    },
    "ListTagsForResourceMessage": {
      "description": "<p/>",
      "example": {
        "ResourceArn": ""
      },
      "properties": {
        "ResourceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the AWS DMS resource."
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "object",
      "title": "ListTagsForResourceMessage"
    },
    "ListTagsForResourceResponse": {
      "description": "<p/>",
      "example": {
        "TagList": []
      },
      "properties": {
        "TagList": {
          "$ref": "#/definitions/TagList",
          "description": "A list of tags for the resource."
        }
      },
      "type": "object",
      "title": "ListTagsForResourceResponse"
    },
    "Long": {
      "type": "integer",
      "title": "Long"
    },
    "MigrationTypeValue": {
      "enum": [
        "full-load",
        "cdc",
        "full-load-and-cdc"
      ],
      "type": "string",
      "title": "MigrationTypeValue"
    },
    "ModifyEndpointMessage": {
      "description": "<p/>",
      "example": {
        "CertificateArn": "",
        "DatabaseName": "",
        "EndpointArn": "",
        "EndpointIdentifier": "",
        "EndpointType": "source",
        "EngineName": "",
        "ExtraConnectionAttributes": "",
        "Password": "",
        "Port": 123,
        "ServerName": "",
        "SslMode": "require",
        "Username": ""
      },
      "properties": {
        "CertificateArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the certificate used for SSL connection."
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": "The name of the endpoint database."
        },
        "DynamoDbSettings": {
          "$ref": "#/definitions/DynamoDbSettings",
          "description": "Settings in JSON format for the target Amazon DynamoDB endpoint. For more information about the available settings, see the <b>Using Object Mapping to Migrate Data to DynamoDB</b> section at <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html\"> Using an Amazon DynamoDB Database as a Target for AWS Database Migration Service</a>. "
        },
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "EndpointIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The database endpoint identifier. Identifiers must begin with a letter; must contain only ASCII letters, digits, and hyphens; and must not end with a hyphen or contain two consecutive hyphens."
        },
        "EndpointType": {
          "$ref": "#/definitions/ReplicationEndpointTypeValue",
          "description": "The type of endpoint."
        },
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "The type of engine for the endpoint. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, DYNAMODB, MONGODB, SYBASE, and SQLSERVER."
        },
        "ExtraConnectionAttributes": {
          "$ref": "#/definitions/String",
          "description": "Additional attributes associated with the connection. To reset this parameter, pass the empty string (\"\") as an argument."
        },
        "MongoDbSettings": {
          "$ref": "#/definitions/MongoDbSettings",
          "description": "Settings in JSON format for the source MongoDB endpoint. For more information about the available settings, see the <b>Configuration Properties When Using MongoDB as a Source for AWS Database Migration Service</b> section at <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MongoDB.html\"> Using Amazon S3 as a Target for AWS Database Migration Service</a>. "
        },
        "Password": {
          "$ref": "#/definitions/SecretString",
          "description": "The password to be used to login to the endpoint database."
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The port used by the endpoint database."
        },
        "S3Settings": {
          "$ref": "#/definitions/S3Settings",
          "description": "Settings in JSON format for the target S3 endpoint. For more information about the available settings, see the <b>Extra Connection Attributes</b> section at <a href=\"http://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html\"> Using Amazon S3 as a Target for AWS Database Migration Service</a>. "
        },
        "ServerName": {
          "$ref": "#/definitions/String",
          "description": "The name of the server where the endpoint database resides."
        },
        "SslMode": {
          "$ref": "#/definitions/DmsSslModeValue",
          "description": "<p>The SSL mode to be used.</p> <p>SSL mode can be one of four values: none, require, verify-ca, verify-full. </p> <p>The default value is none.</p>"
        },
        "Username": {
          "$ref": "#/definitions/String",
          "description": "The user name to be used to login to the endpoint database."
        }
      },
      "required": [
        "EndpointArn"
      ],
      "type": "object",
      "title": "ModifyEndpointMessage"
    },
    "ModifyEndpointResponse": {
      "description": "<p/>",
      "example": {
        "Endpoint": {}
      },
      "properties": {
        "Endpoint": {
          "$ref": "#/definitions/Endpoint",
          "description": "The modified endpoint."
        }
      },
      "type": "object",
      "title": "ModifyEndpointResponse"
    },
    "ModifyEventSubscriptionMessage": {
      "description": "<p/>",
      "properties": {
        "Enabled": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " A Boolean value; set to <b>true</b> to activate the subscription. "
        },
        "EventCategories": {
          "$ref": "#/definitions/EventCategoriesList",
          "description": " A list of event categories for a source type that you want to subscribe to. Use the <code>DescribeEventCategories</code> action to see a list of event categories. "
        },
        "SnsTopicArn": {
          "$ref": "#/definitions/String",
          "description": " The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it."
        },
        "SourceType": {
          "$ref": "#/definitions/String",
          "description": "<p> The type of AWS DMS resource that generates the events you want to subscribe to. </p> <p>Valid values: replication-instance | migration-task</p>"
        },
        "SubscriptionName": {
          "$ref": "#/definitions/String",
          "description": "The name of the AWS DMS event notification subscription to be modified."
        }
      },
      "required": [
        "SubscriptionName"
      ],
      "type": "object",
      "title": "ModifyEventSubscriptionMessage"
    },
    "ModifyEventSubscriptionResponse": {
      "description": "<p/>",
      "properties": {
        "EventSubscription": {
          "$ref": "#/definitions/EventSubscription",
          "description": "The modified event subscription."
        }
      },
      "type": "object",
      "title": "ModifyEventSubscriptionResponse"
    },
    "ModifyReplicationInstanceMessage": {
      "description": "<p/>",
      "example": {
        "AllocatedStorage": 123,
        "AllowMajorVersionUpgrade": true,
        "ApplyImmediately": true,
        "AutoMinorVersionUpgrade": true,
        "EngineVersion": "1.5.0",
        "MultiAZ": true,
        "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
        "ReplicationInstanceClass": "dms.t2.micro",
        "ReplicationInstanceIdentifier": "test-rep-1",
        "VpcSecurityGroupIds": []
      },
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The amount of storage (in gigabytes) to be allocated for the replication instance."
        },
        "AllowMajorVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "<p>Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible.</p> <p>Constraints: This parameter must be set to true when specifying a value for the <code>EngineVersion</code> parameter that is a different major version than the replication instance's current version.</p>"
        },
        "ApplyImmediately": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates whether the changes should be applied immediately or during the next maintenance window."
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " Indicates that minor version upgrades will be applied automatically to the replication instance during the maintenance window. Changing this parameter does not result in an outage except in the following case and the change is asynchronously applied as soon as possible. An outage will result if this parameter is set to <code>true</code> during the maintenance window, and a newer minor version is available, and AWS DMS has enabled auto patching for that engine version. "
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The engine version number of the replication instance."
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "<p>The weekly time range (in UTC) during which system maintenance can occur, which might result in an outage. Changing this parameter does not result in an outage, except in the following situation, and the change is asynchronously applied as soon as possible. If moving this window to the current time, there must be at least 30 minutes between the current time and end of the window to ensure pending changes are applied.</p> <p>Default: Uses existing setting</p> <p>Format: ddd:hh24:mi-ddd:hh24:mi</p> <p>Valid Days: Mon | Tue | Wed | Thu | Fri | Sat | Sun</p> <p>Constraints: Must be at least 30 minutes</p>"
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        },
        "ReplicationInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>"
        },
        "ReplicationInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The replication instance identifier. This parameter is stored as a lowercase string."
        },
        "VpcSecurityGroupIds": {
          "$ref": "#/definitions/VpcSecurityGroupIdList",
          "description": " Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance. "
        }
      },
      "required": [
        "ReplicationInstanceArn"
      ],
      "type": "object",
      "title": "ModifyReplicationInstanceMessage"
    },
    "ModifyReplicationInstanceResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationInstance": {
          "AllocatedStorage": 5,
          "AutoMinorVersionUpgrade": true,
          "EngineVersion": "1.5.0",
          "KmsKeyId": "arn:aws:kms:us-east-1:123456789012:key/4c1731d6-5435-ed4d-be13-d53411a7cfbd",
          "PendingModifiedValues": {},
          "PreferredMaintenanceWindow": "sun:06:00-sun:14:00",
          "PubliclyAccessible": true,
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationInstanceClass": "dms.t2.micro",
          "ReplicationInstanceIdentifier": "test-rep-1",
          "ReplicationInstanceStatus": "available",
          "ReplicationSubnetGroup": {
            "ReplicationSubnetGroupDescription": "default",
            "ReplicationSubnetGroupIdentifier": "default",
            "SubnetGroupStatus": "Complete",
            "Subnets": [
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1d"
                },
                "SubnetIdentifier": "subnet-f6dd91af",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1b"
                },
                "SubnetIdentifier": "subnet-3605751d",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1c"
                },
                "SubnetIdentifier": "subnet-c2daefb5",
                "SubnetStatus": "Active"
              },
              {
                "SubnetAvailabilityZone": {
                  "Name": "us-east-1e"
                },
                "SubnetIdentifier": "subnet-85e90cb8",
                "SubnetStatus": "Active"
              }
            ],
            "VpcId": "vpc-6741a603"
          }
        }
      },
      "properties": {
        "ReplicationInstance": {
          "$ref": "#/definitions/ReplicationInstance",
          "description": "The modified replication instance."
        }
      },
      "type": "object",
      "title": "ModifyReplicationInstanceResponse"
    },
    "ModifyReplicationSubnetGroupMessage": {
      "description": "<p/>",
      "example": {
        "ReplicationSubnetGroupDescription": "",
        "ReplicationSubnetGroupIdentifier": "",
        "SubnetIds": []
      },
      "properties": {
        "ReplicationSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the replication instance subnet group."
        },
        "ReplicationSubnetGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The name of the replication instance subnet group."
        },
        "SubnetIds": {
          "$ref": "#/definitions/SubnetIdentifierList",
          "description": "A list of subnet IDs."
        }
      },
      "required": [
        "ReplicationSubnetGroupIdentifier",
        "SubnetIds"
      ],
      "type": "object",
      "title": "ModifyReplicationSubnetGroupMessage"
    },
    "ModifyReplicationSubnetGroupResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationSubnetGroup": {}
      },
      "properties": {
        "ReplicationSubnetGroup": {
          "$ref": "#/definitions/ReplicationSubnetGroup",
          "description": "The modified replication subnet group."
        }
      },
      "type": "object",
      "title": "ModifyReplicationSubnetGroupResponse"
    },
    "ModifyReplicationTaskMessage": {
      "description": "<p/>",
      "properties": {
        "CdcStartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The start time for the Change Data Capture (CDC) operation."
        },
        "MigrationType": {
          "$ref": "#/definitions/MigrationTypeValue",
          "description": "<p>The migration type.</p> <p>Valid values: full-load | cdc | full-load-and-cdc</p>"
        },
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication task."
        },
        "ReplicationTaskIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        },
        "ReplicationTaskSettings": {
          "$ref": "#/definitions/String",
          "description": "JSON file that contains settings for the task, such as target metadata settings."
        },
        "TableMappings": {
          "$ref": "#/definitions/String",
          "description": "<p>When using the AWS CLI or boto3, provide the path of the JSON file that contains the table mappings. Precede the path with \"file://\". When working with the DMS API, provide the JSON as the parameter value.</p> <p>For example, --table-mappings file://mappingfile.json</p>"
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "type": "object",
      "title": "ModifyReplicationTaskMessage"
    },
    "ModifyReplicationTaskResponse": {
      "description": "<p/>",
      "properties": {
        "ReplicationTask": {
          "$ref": "#/definitions/ReplicationTask",
          "description": "The replication task that was modified."
        }
      },
      "type": "object",
      "title": "ModifyReplicationTaskResponse"
    },
    "MongoDbSettings": {
      "description": "<p/>",
      "properties": {
        "AuthMechanism": {
          "$ref": "#/definitions/AuthMechanismValue",
          "description": "<p> The authentication mechanism you use to access the MongoDB source endpoint.</p> <p>Valid values: DEFAULT, MONGODB_CR, SCRAM_SHA_1 </p> <p>DEFAULT – For MongoDB version 2.x, use MONGODB_CR. For MongoDB version 3.x, use SCRAM_SHA_1. This attribute is not used when authType=No.</p>"
        },
        "AuthSource": {
          "$ref": "#/definitions/String",
          "description": "<p> The MongoDB database name. This attribute is not used when <code>authType=NO</code>. </p> <p>The default is admin.</p>"
        },
        "AuthType": {
          "$ref": "#/definitions/AuthTypeValue",
          "description": "<p> The authentication type you use to access the MongoDB source endpoint.</p> <p>Valid values: NO, PASSWORD </p> <p>When NO is selected, user name and password parameters are not used and can be empty. </p>"
        },
        "DatabaseName": {
          "$ref": "#/definitions/String",
          "description": " The database name on the MongoDB source endpoint. "
        },
        "DocsToInvestigate": {
          "$ref": "#/definitions/String",
          "description": "<p> Indicates the number of documents to preview to determine the document organization. Use this attribute when <code>NestingLevel</code> is set to ONE. </p> <p>Must be a positive value greater than 0. Default value is 1000.</p>"
        },
        "ExtractDocId": {
          "$ref": "#/definitions/String",
          "description": "<p> Specifies the document ID. Use this attribute when <code>NestingLevel</code> is set to NONE. </p> <p>Default value is false. </p>"
        },
        "NestingLevel": {
          "$ref": "#/definitions/NestingLevelValue",
          "description": "<p> Specifies either document or table mode. </p> <p>Valid values: NONE, ONE</p> <p>Default value is NONE. Specify NONE to use document mode. Specify ONE to use table mode.</p>"
        },
        "Password": {
          "$ref": "#/definitions/SecretString",
          "description": " The password for the user account you use to access the MongoDB source endpoint. "
        },
        "Port": {
          "$ref": "#/definitions/IntegerOptional",
          "description": " The port value for the MongoDB source endpoint. "
        },
        "ServerName": {
          "$ref": "#/definitions/String",
          "description": " The name of the server on the MongoDB source endpoint. "
        },
        "Username": {
          "$ref": "#/definitions/String",
          "description": "The user name you use to access the MongoDB source endpoint. "
        }
      },
      "type": "object",
      "title": "MongoDbSettings"
    },
    "NestingLevelValue": {
      "enum": [
        "none",
        "one"
      ],
      "type": "string",
      "title": "NestingLevelValue"
    },
    "OrderableReplicationInstance": {
      "description": "<p/>",
      "properties": {
        "DefaultAllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "The default amount of storage (in gigabytes) that is allocated for the replication instance."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The version of the replication engine."
        },
        "IncludedAllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "The amount of storage (in gigabytes) that is allocated for the replication instance."
        },
        "MaxAllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance."
        },
        "MinAllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "The minimum amount of storage (in gigabytes) that can be allocated for the replication instance."
        },
        "ReplicationInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>"
        },
        "StorageType": {
          "$ref": "#/definitions/String",
          "description": "The type of storage used by the replication instance."
        }
      },
      "type": "object",
      "title": "OrderableReplicationInstance"
    },
    "OrderableReplicationInstanceList": {
      "items": {
        "$ref": "#/definitions/OrderableReplicationInstance"
      },
      "type": "array",
      "title": "OrderableReplicationInstanceList"
    },
    "RefreshSchemasMessage": {
      "description": "<p/>",
      "example": {
        "EndpointArn": "",
        "ReplicationInstanceArn": ""
      },
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        }
      },
      "required": [
        "EndpointArn",
        "ReplicationInstanceArn"
      ],
      "type": "object",
      "title": "RefreshSchemasMessage"
    },
    "RefreshSchemasResponse": {
      "description": "<p/>",
      "example": {
        "RefreshSchemasStatus": {}
      },
      "properties": {
        "RefreshSchemasStatus": {
          "$ref": "#/definitions/RefreshSchemasStatus",
          "description": "The status of the refreshed schema."
        }
      },
      "type": "object",
      "title": "RefreshSchemasResponse"
    },
    "RefreshSchemasStatus": {
      "description": "<p/>",
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "LastFailureMessage": {
          "$ref": "#/definitions/String",
          "description": "The last failure message for the schema."
        },
        "LastRefreshDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The date the schema was last refreshed."
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        },
        "Status": {
          "$ref": "#/definitions/RefreshSchemasStatusTypeValue",
          "description": "The status of the schema."
        }
      },
      "type": "object",
      "title": "RefreshSchemasStatus"
    },
    "RefreshSchemasStatusTypeValue": {
      "enum": [
        "successful",
        "failed",
        "refreshing"
      ],
      "type": "string",
      "title": "RefreshSchemasStatusTypeValue"
    },
    "ReloadTablesMessage": {
      "properties": {
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance. "
        },
        "TablesToReload": {
          "$ref": "#/definitions/TableListToReload",
          "description": "The name and schema of the table to be reloaded. "
        }
      },
      "required": [
        "ReplicationTaskArn",
        "TablesToReload"
      ],
      "type": "object",
      "title": "ReloadTablesMessage"
    },
    "ReloadTablesResponse": {
      "properties": {
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication task. "
        }
      },
      "type": "object",
      "title": "ReloadTablesResponse"
    },
    "RemoveTagsFromResourceMessage": {
      "description": "<p/>",
      "example": {
        "ResourceArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E",
        "TagKeys": []
      },
      "properties": {
        "ResourceArn": {
          "$ref": "#/definitions/String",
          "description": "&gt;The Amazon Resource Name (ARN) of the AWS DMS resource the tag is to be removed from."
        },
        "TagKeys": {
          "$ref": "#/definitions/KeyList",
          "description": "The tag key (name) of the tag to be removed."
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "object",
      "title": "RemoveTagsFromResourceMessage"
    },
    "RemoveTagsFromResourceResponse": {
      "description": "<p/>",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "RemoveTagsFromResourceResponse"
    },
    "ReplicationEndpointTypeValue": {
      "enum": [
        "source",
        "target"
      ],
      "type": "string",
      "title": "ReplicationEndpointTypeValue"
    },
    "ReplicationInstance": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/Integer",
          "description": "The amount of storage (in gigabytes) that is allocated for the replication instance."
        },
        "AutoMinorVersionUpgrade": {
          "$ref": "#/definitions/Boolean",
          "description": "Boolean value indicating if minor version upgrades will be automatically applied to the instance."
        },
        "AvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The Availability Zone for the instance."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The engine version number of the replication instance."
        },
        "InstanceCreateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The time the replication instance was created."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/String",
          "description": "The KMS key identifier that is used to encrypt the content on the replication instance. If you do not specify a value for the KmsKeyId parameter, then AWS DMS will use your default encryption key. AWS KMS creates the default encryption key for your AWS account. Your AWS account has a different default encryption key for each AWS region."
        },
        "MultiAZ": {
          "$ref": "#/definitions/Boolean",
          "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
        },
        "PendingModifiedValues": {
          "$ref": "#/definitions/ReplicationPendingModifiedValues",
          "description": "The pending modification values."
        },
        "PreferredMaintenanceWindow": {
          "$ref": "#/definitions/String",
          "description": "The maintenance window times for the replication instance."
        },
        "PubliclyAccessible": {
          "$ref": "#/definitions/Boolean",
          "description": " Specifies the accessibility options for the replication instance. A value of <code>true</code> represents an instance with a public IP address. A value of <code>false</code> represents an instance with a private IP address. The default value is <code>true</code>. "
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        },
        "ReplicationInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>"
        },
        "ReplicationInstanceIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The replication instance identifier. This parameter is stored as a lowercase string.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 63 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul> <p>Example: <code>myrepinstance</code> </p>"
        },
        "ReplicationInstancePrivateIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The private IP address of the replication instance."
        },
        "ReplicationInstancePrivateIpAddresses": {
          "$ref": "#/definitions/ReplicationInstancePrivateIpAddressList",
          "description": "The private IP address of the replication instance."
        },
        "ReplicationInstancePublicIpAddress": {
          "$ref": "#/definitions/String",
          "description": "The public IP address of the replication instance."
        },
        "ReplicationInstancePublicIpAddresses": {
          "$ref": "#/definitions/ReplicationInstancePublicIpAddressList",
          "description": "The public IP address of the replication instance."
        },
        "ReplicationInstanceStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of the replication instance."
        },
        "ReplicationSubnetGroup": {
          "$ref": "#/definitions/ReplicationSubnetGroup",
          "description": "The subnet group for the replication instance."
        },
        "SecondaryAvailabilityZone": {
          "$ref": "#/definitions/String",
          "description": "The availability zone of the standby replication instance in a Multi-AZ deployment."
        },
        "VpcSecurityGroups": {
          "$ref": "#/definitions/VpcSecurityGroupMembershipList",
          "description": "The VPC security group for the instance."
        }
      },
      "type": "object",
      "title": "ReplicationInstance"
    },
    "ReplicationInstanceList": {
      "items": {
        "$ref": "#/definitions/ReplicationInstance"
      },
      "type": "array",
      "title": "ReplicationInstanceList"
    },
    "ReplicationInstancePrivateIpAddressList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "ReplicationInstancePrivateIpAddressList"
    },
    "ReplicationInstancePublicIpAddressList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "ReplicationInstancePublicIpAddressList"
    },
    "ReplicationPendingModifiedValues": {
      "description": "<p/>",
      "properties": {
        "AllocatedStorage": {
          "$ref": "#/definitions/IntegerOptional",
          "description": "The amount of storage (in gigabytes) that is allocated for the replication instance."
        },
        "EngineVersion": {
          "$ref": "#/definitions/String",
          "description": "The engine version number of the replication instance."
        },
        "MultiAZ": {
          "$ref": "#/definitions/BooleanOptional",
          "description": " Specifies if the replication instance is a Multi-AZ deployment. You cannot set the <code>AvailabilityZone</code> parameter if the Multi-AZ parameter is set to <code>true</code>. "
        },
        "ReplicationInstanceClass": {
          "$ref": "#/definitions/String",
          "description": "<p>The compute and memory capacity of the replication instance.</p> <p> Valid Values: <code>dms.t2.micro | dms.t2.small | dms.t2.medium | dms.t2.large | dms.c4.large | dms.c4.xlarge | dms.c4.2xlarge | dms.c4.4xlarge </code> </p>"
        }
      },
      "type": "object",
      "title": "ReplicationPendingModifiedValues"
    },
    "ReplicationSubnetGroup": {
      "description": "<p/>",
      "properties": {
        "ReplicationSubnetGroupDescription": {
          "$ref": "#/definitions/String",
          "description": "The description of the replication subnet group."
        },
        "ReplicationSubnetGroupIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The identifier of the replication instance subnet group."
        },
        "SubnetGroupStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of the subnet group."
        },
        "Subnets": {
          "$ref": "#/definitions/SubnetList",
          "description": "The subnets that are in the subnet group."
        },
        "VpcId": {
          "$ref": "#/definitions/String",
          "description": "The ID of the VPC."
        }
      },
      "type": "object",
      "title": "ReplicationSubnetGroup"
    },
    "ReplicationSubnetGroupDoesNotCoverEnoughAZs": {
      "description": "The replication subnet group does not cover enough Availability Zones (AZs). Edit the replication subnet group and add more AZs.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "ReplicationSubnetGroupDoesNotCoverEnoughAZs"
    },
    "ReplicationSubnetGroups": {
      "items": {
        "$ref": "#/definitions/ReplicationSubnetGroup"
      },
      "type": "array",
      "title": "ReplicationSubnetGroups"
    },
    "ReplicationTask": {
      "description": "<p/>",
      "properties": {
        "LastFailureMessage": {
          "$ref": "#/definitions/String",
          "description": "The last error (failure) message generated for the replication instance."
        },
        "MigrationType": {
          "$ref": "#/definitions/MigrationTypeValue",
          "description": "The type of migration."
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        },
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication task."
        },
        "ReplicationTaskCreationDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The date the replication task was created."
        },
        "ReplicationTaskIdentifier": {
          "$ref": "#/definitions/String",
          "description": "<p>The replication task identifier.</p> <p>Constraints:</p> <ul> <li> <p>Must contain from 1 to 255 alphanumeric characters or hyphens.</p> </li> <li> <p>First character must be a letter.</p> </li> <li> <p>Cannot end with a hyphen or contain two consecutive hyphens.</p> </li> </ul>"
        },
        "ReplicationTaskSettings": {
          "$ref": "#/definitions/String",
          "description": "The settings for the replication task."
        },
        "ReplicationTaskStartDate": {
          "$ref": "#/definitions/TStamp",
          "description": "The date the replication task is scheduled to start."
        },
        "ReplicationTaskStats": {
          "$ref": "#/definitions/ReplicationTaskStats",
          "description": "The statistics for the task, including elapsed time, tables loaded, and table errors."
        },
        "SourceEndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the replication task."
        },
        "StopReason": {
          "$ref": "#/definitions/String",
          "description": "The reason the replication task was stopped."
        },
        "TableMappings": {
          "$ref": "#/definitions/String",
          "description": "Table mappings specified in the task."
        },
        "TargetEndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        }
      },
      "type": "object",
      "title": "ReplicationTask"
    },
    "ReplicationTaskList": {
      "items": {
        "$ref": "#/definitions/ReplicationTask"
      },
      "type": "array",
      "title": "ReplicationTaskList"
    },
    "ReplicationTaskStats": {
      "description": "<p/>",
      "properties": {
        "ElapsedTimeMillis": {
          "$ref": "#/definitions/Long",
          "description": "The elapsed time of the task, in milliseconds."
        },
        "FullLoadProgressPercent": {
          "$ref": "#/definitions/Integer",
          "description": "The percent complete for the full load migration task."
        },
        "TablesErrored": {
          "$ref": "#/definitions/Integer",
          "description": "The number of errors that have occurred during this task."
        },
        "TablesLoaded": {
          "$ref": "#/definitions/Integer",
          "description": "The number of tables loaded for this task."
        },
        "TablesLoading": {
          "$ref": "#/definitions/Integer",
          "description": "The number of tables currently loading for this task."
        },
        "TablesQueued": {
          "$ref": "#/definitions/Integer",
          "description": "The number of tables queued for this task."
        }
      },
      "type": "object",
      "title": "ReplicationTaskStats"
    },
    "ResourceAlreadyExistsFault": {
      "description": "The resource you are attempting to create already exists.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "ResourceAlreadyExistsFault"
    },
    "ResourceNotFoundFault": {
      "description": "The resource could not be found.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "ResourceNotFoundFault"
    },
    "ResourceQuotaExceededFault": {
      "description": "The quota for this resource quota has been exceeded.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "ResourceQuotaExceededFault"
    },
    "S3Settings": {
      "description": "<p/>",
      "properties": {
        "BucketFolder": {
          "$ref": "#/definitions/String",
          "description": " An optional parameter to set a folder name in the S3 bucket. If provided, tables are created in the path &lt;bucketFolder&gt;/&lt;schema_name&gt;/&lt;table_name&gt;/. If this parameter is not specified, then the path used is &lt;schema_name&gt;/&lt;table_name&gt;/. "
        },
        "BucketName": {
          "$ref": "#/definitions/String",
          "description": " The name of the S3 bucket. "
        },
        "CompressionType": {
          "$ref": "#/definitions/CompressionTypeValue",
          "description": " An optional parameter to use GZIP to compress the target files. Set to GZIP to compress the target files. Set to NONE (the default) or do not use to leave the files uncompressed. "
        },
        "CsvDelimiter": {
          "$ref": "#/definitions/String",
          "description": " The delimiter used to separate columns in the source files. The default is a comma. "
        },
        "CsvRowDelimiter": {
          "$ref": "#/definitions/String",
          "description": " The delimiter used to separate rows in the source files. The default is a carriage return (\\n). "
        },
        "ExternalTableDefinition": {
          "$ref": "#/definitions/String",
          "description": " "
        },
        "ServiceAccessRoleArn": {
          "$ref": "#/definitions/String",
          "description": " The Amazon Resource Name (ARN) used by the service access IAM role. "
        }
      },
      "type": "object",
      "title": "S3Settings"
    },
    "SNSInvalidTopicFault": {
      "description": "The SNS topic is invalid.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "SNSInvalidTopicFault"
    },
    "SNSNoAuthorizationFault": {
      "description": "You are not authorized for the SNS subscription.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "SNSNoAuthorizationFault"
    },
    "SchemaList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "SchemaList"
    },
    "SecretString": {
      "format": "password",
      "type": "string",
      "title": "SecretString"
    },
    "SourceIdsList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "SourceIdsList"
    },
    "SourceType": {
      "enum": [
        "replication-instance"
      ],
      "type": "string",
      "title": "SourceType"
    },
    "StartReplicationTaskMessage": {
      "description": "<p/>",
      "example": {
        "CdcStartTime": "2016-12-14T13:33:20Z",
        "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
        "StartReplicationTaskType": "start-replication"
      },
      "properties": {
        "CdcStartTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The start time for the Change Data Capture (CDC) operation."
        },
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Number (ARN) of the replication task to be started."
        },
        "StartReplicationTaskType": {
          "$ref": "#/definitions/StartReplicationTaskTypeValue",
          "description": "The type of replication task."
        }
      },
      "required": [
        "ReplicationTaskArn",
        "StartReplicationTaskType"
      ],
      "type": "object",
      "title": "StartReplicationTaskMessage"
    },
    "StartReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "$ref": "#/definitions/ReplicationTask",
          "description": "The replication task started."
        }
      },
      "type": "object",
      "title": "StartReplicationTaskResponse"
    },
    "StartReplicationTaskTypeValue": {
      "enum": [
        "start-replication",
        "resume-processing",
        "reload-target"
      ],
      "type": "string",
      "title": "StartReplicationTaskTypeValue"
    },
    "StopReplicationTaskMessage": {
      "description": "<p/>",
      "example": {
        "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
      },
      "properties": {
        "ReplicationTaskArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Number(ARN) of the replication task to be stopped."
        }
      },
      "required": [
        "ReplicationTaskArn"
      ],
      "type": "object",
      "title": "StopReplicationTaskMessage"
    },
    "StopReplicationTaskResponse": {
      "description": "<p/>",
      "example": {
        "ReplicationTask": {
          "MigrationType": "full-load",
          "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ",
          "ReplicationTaskArn": "arn:aws:dms:us-east-1:123456789012:task:OEAMB3NXSTZ6LFYZFEPPBBXPYM",
          "ReplicationTaskCreationDate": "2016-12-14T18:25:43Z",
          "ReplicationTaskIdentifier": "task1",
          "ReplicationTaskSettings": "{\"TargetMetadata\":{\"TargetSchema\":\"\",\"SupportLobs\":true,\"FullLobMode\":true,\"LobChunkSize\":64,\"LimitedSizeLobMode\":false,\"LobMaxSize\":0},\"FullLoadSettings\":{\"FullLoadEnabled\":true,\"ApplyChangesEnabled\":false,\"TargetTablePrepMode\":\"DROP_AND_CREATE\",\"CreatePkAfterFullLoad\":false,\"StopTaskCachedChangesApplied\":false,\"StopTaskCachedChangesNotApplied\":false,\"ResumeEnabled\":false,\"ResumeMinTableSize\":100000,\"ResumeOnlyClusteredPKTables\":true,\"MaxFullLoadSubTasks\":8,\"TransactionConsistencyTimeout\":600,\"CommitRate\":10000},\"Logging\":{\"EnableLogging\":false}}",
          "SourceEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ZW5UAN6P4E77EC7YWHK4RZZ3BE",
          "Status": "creating",
          "TableMappings": "file://mappingfile.json",
          "TargetEndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:ASXWXJZLNWNT5HTWCGV2BUJQ7E"
        }
      },
      "properties": {
        "ReplicationTask": {
          "$ref": "#/definitions/ReplicationTask",
          "description": "The replication task stopped."
        }
      },
      "type": "object",
      "title": "StopReplicationTaskResponse"
    },
    "StorageQuotaExceededFault": {
      "description": "The storage quota has been exceeded.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "StorageQuotaExceededFault"
    },
    "String": {
      "type": "string",
      "title": "String"
    },
    "Subnet": {
      "description": "<p/>",
      "properties": {
        "SubnetAvailabilityZone": {
          "$ref": "#/definitions/AvailabilityZone",
          "description": "The Availability Zone of the subnet."
        },
        "SubnetIdentifier": {
          "$ref": "#/definitions/String",
          "description": "The subnet identifier."
        },
        "SubnetStatus": {
          "$ref": "#/definitions/String",
          "description": "The status of the subnet."
        }
      },
      "type": "object",
      "title": "Subnet"
    },
    "SubnetAlreadyInUse": {
      "description": "The specified subnet is already in use.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "SubnetAlreadyInUse"
    },
    "SubnetIdentifierList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "SubnetIdentifierList"
    },
    "SubnetList": {
      "items": {
        "$ref": "#/definitions/Subnet"
      },
      "type": "array",
      "title": "SubnetList"
    },
    "SupportedEndpointType": {
      "description": "<p/>",
      "properties": {
        "EndpointType": {
          "$ref": "#/definitions/ReplicationEndpointTypeValue",
          "description": "The type of endpoint."
        },
        "EngineName": {
          "$ref": "#/definitions/String",
          "description": "The database engine name. Valid values, depending on the EndPointType, include MYSQL, ORACLE, POSTGRES, MARIADB, AURORA, REDSHIFT, S3, SYBASE, DYNAMODB, MONGODB, and SQLSERVER."
        },
        "SupportsCDC": {
          "$ref": "#/definitions/Boolean",
          "description": "Indicates if Change Data Capture (CDC) is supported."
        }
      },
      "type": "object",
      "title": "SupportedEndpointType"
    },
    "SupportedEndpointTypeList": {
      "items": {
        "$ref": "#/definitions/SupportedEndpointType"
      },
      "type": "array",
      "title": "SupportedEndpointTypeList"
    },
    "TStamp": {
      "format": "date-time",
      "type": "string",
      "title": "TStamp"
    },
    "TableListToReload": {
      "items": {
        "$ref": "#/definitions/TableToReload"
      },
      "type": "array",
      "title": "TableListToReload"
    },
    "TableStatistics": {
      "description": "<p/>",
      "properties": {
        "Ddls": {
          "$ref": "#/definitions/Long",
          "description": "The Data Definition Language (DDL) used to build and modify the structure of your tables."
        },
        "Deletes": {
          "$ref": "#/definitions/Long",
          "description": "The number of delete actions performed on a table."
        },
        "FullLoadCondtnlChkFailedRows": {
          "$ref": "#/definitions/Long",
          "description": "The number of rows that failed conditional checks during the Full Load operation (valid only for DynamoDB as a target migrations)."
        },
        "FullLoadErrorRows": {
          "$ref": "#/definitions/Long",
          "description": "The number of rows that failed to load during the Full Load operation (valid only for DynamoDB as a target migrations)."
        },
        "FullLoadRows": {
          "$ref": "#/definitions/Long",
          "description": "The number of rows added during the Full Load operation."
        },
        "Inserts": {
          "$ref": "#/definitions/Long",
          "description": "The number of insert actions performed on a table."
        },
        "LastUpdateTime": {
          "$ref": "#/definitions/TStamp",
          "description": "The last time the table was updated."
        },
        "SchemaName": {
          "$ref": "#/definitions/String",
          "description": "The schema name."
        },
        "TableName": {
          "$ref": "#/definitions/String",
          "description": "The name of the table."
        },
        "TableState": {
          "$ref": "#/definitions/String",
          "description": "<p>The state of the tables described.</p> <p>Valid states: Table does not exist | Before load | Full load | Table completed | Table cancelled | Table error | Table all | Table updates | Table is being reloaded</p>"
        },
        "Updates": {
          "$ref": "#/definitions/Long",
          "description": "The number of update actions performed on a table."
        }
      },
      "type": "object",
      "title": "TableStatistics"
    },
    "TableStatisticsList": {
      "items": {
        "$ref": "#/definitions/TableStatistics"
      },
      "type": "array",
      "title": "TableStatisticsList"
    },
    "TableToReload": {
      "description": "<p/>",
      "properties": {
        "SchemaName": {
          "$ref": "#/definitions/String",
          "description": "The schema name of the table to be reloaded."
        },
        "TableName": {
          "$ref": "#/definitions/String",
          "description": "The table name of the table to be reloaded."
        }
      },
      "type": "object",
      "title": "TableToReload"
    },
    "Tag": {
      "description": "<p/>",
      "properties": {
        "Key": {
          "$ref": "#/definitions/String",
          "description": "A key is the required name of the tag. The string value can be from 1 to 128 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
        },
        "Value": {
          "$ref": "#/definitions/String",
          "description": "A value is the optional value of the tag. The string value can be from 1 to 256 Unicode characters in length and cannot be prefixed with \"aws:\" or \"dms:\". The string can only contain only the set of Unicode letters, digits, white-space, '_', '.', '/', '=', '+', '-' (Java regex: \"^([\\\\p{L}\\\\p{Z}\\\\p{N}_.:/=+\\\\-]*)$\")."
        }
      },
      "type": "object",
      "title": "Tag"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array",
      "title": "TagList"
    },
    "TestConnectionMessage": {
      "description": "<p/>",
      "example": {
        "EndpointArn": "arn:aws:dms:us-east-1:123456789012:endpoint:RAAR3R22XSH46S3PWLC3NJAWKM",
        "ReplicationInstanceArn": "arn:aws:dms:us-east-1:123456789012:rep:6UTDJGBOUS3VI3SUWA66XFJCJQ"
      },
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) string that uniquely identifies the endpoint."
        },
        "ReplicationInstanceArn": {
          "$ref": "#/definitions/String",
          "description": "The Amazon Resource Name (ARN) of the replication instance."
        }
      },
      "required": [
        "ReplicationInstanceArn",
        "EndpointArn"
      ],
      "type": "object",
      "title": "TestConnectionMessage"
    },
    "TestConnectionResponse": {
      "description": "<p/>",
      "example": {
        "Connection": {}
      },
      "properties": {
        "Connection": {
          "$ref": "#/definitions/Connection",
          "description": "The connection tested."
        }
      },
      "type": "object",
      "title": "TestConnectionResponse"
    },
    "UpgradeDependencyFailureFault": {
      "description": "An upgrade dependency is preventing the database migration.",
      "properties": {
        "message": {
          "$ref": "#/definitions/ExceptionMessage",
          "description": "<p/>"
        }
      },
      "type": "object",
      "title": "UpgradeDependencyFailureFault"
    },
    "VpcSecurityGroupIdList": {
      "items": {
        "$ref": "#/definitions/String"
      },
      "type": "array",
      "title": "VpcSecurityGroupIdList"
    },
    "VpcSecurityGroupMembership": {
      "description": "<p/>",
      "properties": {
        "Status": {
          "$ref": "#/definitions/String",
          "description": "The status of the VPC security group."
        },
        "VpcSecurityGroupId": {
          "$ref": "#/definitions/String",
          "description": "The VPC security group Id."
        }
      },
      "type": "object",
      "title": "VpcSecurityGroupMembership"
    },
    "VpcSecurityGroupMembershipList": {
      "items": {
        "$ref": "#/definitions/VpcSecurityGroupMembership"
      },
      "type": "array",
      "title": "VpcSecurityGroupMembershipList"
    }
  },
  "actions": [
    {
      "id": "AddTagsToResource",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/AddTagsToResourceMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/AddTagsToResourceResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "CreateEndpoint",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateEndpointMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateEndpointResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "CreateEventSubscription",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateEventSubscriptionMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateEventSubscriptionResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "CreateReplicationInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateReplicationInstanceMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateReplicationInstanceResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "CreateReplicationSubnetGroup",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateReplicationSubnetGroupMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateReplicationSubnetGroupResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "CreateReplicationTask",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateReplicationTaskMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateReplicationTaskResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DeleteCertificate",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteCertificateMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteCertificateResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DeleteEndpoint",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteEndpointMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteEndpointResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DeleteEventSubscription",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteEventSubscriptionMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteEventSubscriptionResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DeleteReplicationInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteReplicationInstanceMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteReplicationInstanceResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DeleteReplicationSubnetGroup",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteReplicationSubnetGroupMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteReplicationSubnetGroupResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DeleteReplicationTask",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteReplicationTaskMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteReplicationTaskResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeAccountAttributes",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeAccountAttributesMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeAccountAttributesResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeCertificates",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeCertificatesMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeCertificatesResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeConnections",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeConnectionsMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeConnectionsResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeEndpointTypes",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEndpointTypesMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEndpointTypesResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeEndpoints",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEndpointsMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEndpointsResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeEventCategories",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEventCategoriesMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEventCategoriesResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeEventSubscriptions",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEventSubscriptionsMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEventSubscriptionsResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeEvents",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEventsMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEventsResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeOrderableReplicationInstances",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeOrderableReplicationInstancesMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeOrderableReplicationInstancesResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeRefreshSchemasStatus",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeRefreshSchemasStatusMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeRefreshSchemasStatusResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeReplicationInstances",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeReplicationInstancesMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeReplicationInstancesResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeReplicationSubnetGroups",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeReplicationSubnetGroupsMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeReplicationSubnetGroupsResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeReplicationTasks",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeReplicationTasksMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeReplicationTasksResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeSchemas",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeSchemasMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeSchemasResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "DescribeTableStatistics",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxRecords": {
            "type": "string"
          },
          "Marker": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/DescribeTableStatisticsMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeTableStatisticsResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ImportCertificate",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ImportCertificateMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ImportCertificateResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ListTagsForResource",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListTagsForResourceMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTagsForResourceResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ModifyEndpoint",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ModifyEndpointMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ModifyEndpointResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ModifyEventSubscription",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ModifyEventSubscriptionMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ModifyEventSubscriptionResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ModifyReplicationInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ModifyReplicationInstanceMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ModifyReplicationInstanceResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ModifyReplicationSubnetGroup",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ModifyReplicationSubnetGroupMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ModifyReplicationSubnetGroupResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ModifyReplicationTask",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ModifyReplicationTaskMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ModifyReplicationTaskResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "RefreshSchemas",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RefreshSchemasMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RefreshSchemasResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "ReloadTables",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ReloadTablesMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ReloadTablesResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "RemoveTagsFromResource",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RemoveTagsFromResourceMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RemoveTagsFromResourceResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "StartReplicationTask",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StartReplicationTaskMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StartReplicationTaskResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "StopReplicationTask",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StopReplicationTaskMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StopReplicationTaskResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    },
    {
      "id": "TestConnection",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/TestConnectionMessage"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/TestConnectionResponse"
      },
      "security": {
        "amazonaws_dms": {
          "integration": "amazonaws_dms"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "cloud",
    "aws"
  ]
}