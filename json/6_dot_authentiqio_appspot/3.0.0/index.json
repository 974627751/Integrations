{
  "id": "6_dot_authentiqio_appspot",
  "title": "Authentiq",
  "description": "Strong authentication, without the passwords.",
  "security": {},
  "logo": {
    "backgroundColor": "#F26641",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/6_dot_authentiqio_appspot.svg"
  },
  "actionCount": 14,
  "definitions": {
    "AuthentiqID": {
      "description": "Authentiq ID in JWT format, self-signed.\n",
      "properties": {
        "devtoken": {
          "description": "device token for push messages",
          "type": "string"
        },
        "sub": {
          "description": "UUID and public signing key",
          "type": "string"
        }
      },
      "required": [
        "sub"
      ],
      "title": "AuthentiqID"
    },
    "Claims": {
      "description": "Claim in JWT format, self- or issuer-signed. \n",
      "properties": {
        "email": {
          "description": "",
          "type": "string"
        },
        "phone": {
          "description": "",
          "type": "string"
        },
        "scope": {
          "description": "claim scope",
          "type": "string"
        },
        "sub": {
          "description": "UUID",
          "type": "string"
        },
        "type": {
          "description": "",
          "type": "string"
        }
      },
      "required": [
        "sub",
        "scope"
      ],
      "title": "Claims"
    },
    "Error": {
      "properties": {
        "detail": {
          "type": "string"
        },
        "error": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "description": "unique uri for this error",
          "type": "string"
        }
      },
      "required": [
        "error"
      ],
      "title": "Error"
    },
    "PushToken": {
      "description": "PushToken in JWT format, self-signed. \n",
      "properties": {
        "aud": {
          "description": "audience (URI)",
          "type": "string"
        },
        "exp": {
          "type": "integer"
        },
        "iat": {
          "type": "integer"
        },
        "iss": {
          "description": "issuer (URI)",
          "type": "string"
        },
        "nbf": {
          "type": "integer"
        },
        "sub": {
          "description": "UUID and public signing key",
          "type": "string"
        }
      },
      "required": [
        "sub",
        "iss",
        "aud"
      ],
      "title": "PushToken"
    }
  },
  "actions": [
    {
      "id": "key_revoke_nosecret",
      "title": "key_revoke_nosecret",
      "description": "Revoke an Authentiq ID using email & phone.\n\nIf called with `email` and `phone` only, a verification code \nwill be sent by email. Do a second call adding `code` to \ncomplete the revocation.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "primary email associated to Key (ID)"
          },
          "phone": {
            "type": "string",
            "description": "primary phone number, international representation"
          },
          "code": {
            "type": "string",
            "description": "verification code sent by email"
          }
        },
        "additionalProperties": false,
        "required": [
          "email",
          "phone"
        ]
      },
      "outputSchema": {
        "properties": {
          "status": {
            "description": "pending or done",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "key_register",
      "title": "key_register",
      "description": "Register a new ID `JWT(sub, devtoken)`\n\nv5: `JWT(sub, pk, devtoken, ...)`\n\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/AuthentiqID"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {
        "properties": {
          "secret": {
            "description": "revoke key",
            "type": "string"
          },
          "status": {
            "description": "registered",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "key_revoke",
      "title": "key_revoke",
      "description": "Revoke an Identity (Key) with a revocation secret",
      "inputSchema": {
        "type": "object",
        "properties": {
          "PK": {
            "type": "string",
            "description": "Public Signing Key - Authentiq ID (43 chars)"
          },
          "secret": {
            "type": "string",
            "description": "revokation secret"
          }
        },
        "additionalProperties": false,
        "required": [
          "PK",
          "secret"
        ]
      },
      "outputSchema": {
        "properties": {
          "status": {
            "description": "done",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "key.PK.get",
      "title": "key.PK.get",
      "description": "Get public details of an Authentiq ID.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "PK": {
            "type": "string",
            "description": "Public Signing Key - Authentiq ID (43 chars)"
          }
        },
        "additionalProperties": false,
        "required": [
          "PK"
        ]
      },
      "outputSchema": {
        "properties": {
          "since": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "sub": {
            "description": "base64safe encoded public signing key",
            "type": "string"
          }
        },
        "title": "JWT",
        "type": "object"
      }
    },
    {
      "id": "key.PK.head",
      "title": "key.PK.head",
      "description": "HEAD info on Authentiq ID\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "PK": {
            "type": "string",
            "description": "Public Signing Key - Authentiq ID (43 chars)"
          }
        },
        "additionalProperties": false,
        "required": [
          "PK"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "key_update",
      "title": "key_update",
      "description": "update properties of an Authentiq ID.\n(not operational in v4; use PUT for now)\n\nv5: POST issuer-signed email & phone scopes in\na self-signed JWT\n\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "PK": {
            "type": "string",
            "description": "Public Signing Key - Authentiq ID (43 chars)"
          },
          "body": {
            "$ref": "#/definitions/AuthentiqID"
          }
        },
        "additionalProperties": false,
        "required": [
          "PK",
          "body"
        ]
      },
      "outputSchema": {
        "properties": {
          "status": {
            "description": "confirmed",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "key_bind",
      "title": "key_bind",
      "description": "Update Authentiq ID by replacing the object.\n\nv4: `JWT(sub,email,phone)` to bind email/phone hash; \n\nv5: POST issuer-signed email & phone scopes\nand PUT to update registration `JWT(sub, pk, devtoken, ...)`\n\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "PK": {
            "type": "string",
            "description": "Public Signing Key - Authentiq ID (43 chars)"
          },
          "body": {
            "$ref": "#/definitions/AuthentiqID"
          }
        },
        "additionalProperties": false,
        "required": [
          "PK",
          "body"
        ]
      },
      "outputSchema": {
        "properties": {
          "status": {
            "description": "confirmed",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "push_login_request",
      "title": "push_login_request",
      "description": "push sign-in request\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/PushToken"
          },
          "callback": {
            "type": "string",
            "description": "URI App will connect to"
          }
        },
        "additionalProperties": false,
        "required": [
          "body",
          "callback"
        ]
      },
      "outputSchema": {
        "properties": {
          "status": {
            "description": "sent",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "sign_request",
      "title": "sign_request",
      "description": "scope verification request\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "body": {
            "$ref": "#/definitions/Claims"
          },
          "test": {
            "type": "integer",
            "description": "test only mode, using test issuer"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {
        "properties": {
          "job": {
            "description": "20-character ID",
            "type": "string"
          },
          "status": {
            "description": "waiting",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "sign_delete",
      "title": "sign_delete",
      "description": "delete a verification job",
      "inputSchema": {
        "type": "object",
        "properties": {
          "job": {
            "type": "string",
            "description": "Job ID (20 chars)"
          }
        },
        "additionalProperties": false,
        "required": [
          "job"
        ]
      },
      "outputSchema": {
        "properties": {
          "status": {
            "description": "done",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "sign_retrieve",
      "title": "sign_retrieve",
      "description": "get the status / current content of a verification job",
      "inputSchema": {
        "type": "object",
        "properties": {
          "job": {
            "type": "string",
            "description": "Job ID (20 chars)"
          }
        },
        "additionalProperties": false,
        "required": [
          "job"
        ]
      },
      "outputSchema": {
        "properties": {
          "exp": {
            "type": "integer"
          },
          "field": {
            "type": "string"
          },
          "sub": {
            "description": "base64safe encoded public signing key",
            "type": "string"
          }
        },
        "title": "JWT",
        "type": "object"
      }
    },
    {
      "id": "sign_retrieve_head",
      "title": "sign_retrieve_head",
      "description": "HEAD to get the status of a verification job",
      "inputSchema": {
        "type": "object",
        "properties": {
          "job": {
            "type": "string",
            "description": "Job ID (20 chars)"
          }
        },
        "additionalProperties": false,
        "required": [
          "job"
        ]
      },
      "outputSchema": {}
    },
    {
      "id": "sign_confirm",
      "title": "sign_confirm",
      "description": "this is a scope confirmation",
      "inputSchema": {
        "type": "object",
        "properties": {
          "job": {
            "type": "string",
            "description": "Job ID (20 chars)"
          }
        },
        "additionalProperties": false,
        "required": [
          "job"
        ]
      },
      "outputSchema": {
        "properties": {
          "status": {
            "description": "confirmed",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    {
      "id": "sign_update",
      "title": "sign_update",
      "description": "authority updates a JWT with its signature\nSee: https://github.com/skion/authentiq/wiki/JWT-Examples\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "job": {
            "type": "string",
            "description": "Job ID (20 chars)"
          }
        },
        "additionalProperties": false,
        "required": [
          "job"
        ]
      },
      "outputSchema": {
        "properties": {
          "jwt": {
            "description": "result is JWT or JSON??",
            "type": "string"
          },
          "status": {
            "description": "ready",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  ],
  "tags": [
    "security"
  ]
}