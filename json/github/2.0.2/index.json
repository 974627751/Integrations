{
  "id": "github",
  "title": "GitHub",
  "description": "Powerful collaboration, code review, and code management for open source and private projects.\n",
  "security": {
    "github": {
      "integration": "github",
      "fields": {
        "access_token": "An OAuth access token",
        "refresh_token": "An OAuth refresh token (optional)",
        "client_id": "An OAuth client ID (optional)",
        "client_secret": "An OAuth client secret (optional)",
        "redirect_uri": "The callback URL for your application"
      },
      "oauth": {
        "authorizationUrl": "https://github.com/login/oauth/authorize",
        "description": "OAuth2 is a protocol that lets external apps request authorization to private\ndetails in a user's GitHub account without getting their password. This is\npreferred over Basic Authentication because tokens can be limited to specific\ntypes of data, and can be revoked by users at any time.\n",
        "flow": "accessCode",
        "scopes": {
          "admin:org": "",
          "admin:org_hook": "",
          "admin:public_key": "",
          "admin:repo_hook": "",
          "delete_repo": "",
          "gist": "",
          "notifications": "",
          "public_repo": "",
          "read:org": "",
          "read:public_key": "",
          "read:repo_hook": "",
          "repo": "",
          "repo:status": "",
          "repo_deployment": "",
          "user": "",
          "user:email": "",
          "user:follow": "",
          "write:org": "",
          "write:public_key": "",
          "write:repo_hook": ""
        },
        "tokenUrl": "https://github.com/login/oauth/access_token",
        "type": "oauth2"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/github.png"
  },
  "actionCount": 246,
  "definitions": {
    "asset": {
      "properties": {
        "content_type": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "download_count": {
          "type": "number"
        },
        "id": {
          "type": "number"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "number"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "uploader": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "number"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "assetPatch": {
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "assets": {
      "items": {
        "properties": {
          "content_type": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "download_count": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "label": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "state": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "uploader": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "followers_url": {
                "type": "string"
              },
              "following_url": {
                "type": "string"
              },
              "gists_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "id": {
                "type": "number"
              },
              "login": {
                "type": "string"
              },
              "organizations_url": {
                "type": "string"
              },
              "received_events_url": {
                "type": "string"
              },
              "repos_url": {
                "type": "string"
              },
              "site_admin": {
                "type": "boolean"
              },
              "starred_url": {
                "type": "string"
              },
              "subscriptions_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "assignees": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "integer"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "blob": {
      "properties": {
        "content": {
          "type": "string"
        },
        "encoding": {
          "enum": [
            "utf-8",
            "base64"
          ]
        },
        "sha": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "blobs": {
      "properties": {
        "sha": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "branch": {
      "properties": {
        "_links": {
          "properties": {
            "html": {
              "type": "string"
            },
            "self": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "commit": {
          "properties": {
            "author": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "commit": {
              "properties": {
                "author": {
                  "properties": {
                    "date": {
                      "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "committer": {
                  "properties": {
                    "date": {
                      "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "message": {
                  "type": "string"
                },
                "tree": {
                  "properties": {
                    "sha": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "committer": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "parents": {
              "items": {
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "sha": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "branches": {
      "items": {
        "properties": {
          "commit": {
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "codeFrequencyStats": {
      "items": {
        "type": "integer"
      },
      "type": "array"
    },
    "collaborators": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "comment": {
      "properties": {
        "body": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "commentBody": {
      "properties": {
        "body": {
          "type": "string"
        }
      },
      "required": [
        "body"
      ],
      "type": "object"
    },
    "comments": {
      "items": {
        "properties": {
          "body": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601.",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "commit": {
      "properties": {
        "author": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "commit": {
          "properties": {
            "author": {
              "properties": {
                "date": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "committer": {
              "properties": {
                "date": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "message": {
              "type": "string"
            },
            "tree": {
              "properties": {
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "committer": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "files": {
          "items": {
            "properties": {
              "additions": {
                "type": "integer"
              },
              "blob_url": {
                "type": "string"
              },
              "changes": {
                "type": "integer"
              },
              "deletions": {
                "type": "integer"
              },
              "filename": {
                "type": "string"
              },
              "patch": {
                "type": "string"
              },
              "raw_url": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "parents": {
          "items": {
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "sha": {
          "type": "string"
        },
        "stats": {
          "properties": {
            "additions": {
              "type": "integer"
            },
            "deletions": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "commitActivityStats": {
      "items": {
        "properties": {
          "days": {
            "items": {
              "type": "integer"
            },
            "type": "array"
          },
          "total": {
            "type": "integer"
          },
          "week": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "commitBody": {
      "properties": {
        "body": {
          "type": "string"
        },
        "line": {
          "description": "Deprecated - Use position parameter instead.",
          "type": "string"
        },
        "number": {
          "description": "Line number in the file to comment on. Defaults to null.",
          "type": "string"
        },
        "path": {
          "description": "Relative path of the file to comment on.",
          "type": "string"
        },
        "position": {
          "description": "Line index in the diff to comment on.",
          "type": "integer"
        },
        "sha": {
          "description": "SHA of the commit to comment on.",
          "type": "string"
        }
      },
      "required": [
        "sha",
        "body"
      ],
      "type": "object"
    },
    "commitComments": {
      "properties": {
        "body": {
          "type": "string"
        },
        "commit_id": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "line": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "updated_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "commits": {
      "items": {
        "properties": {
          "author": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "commit": {
            "properties": {
              "author": {
                "properties": {
                  "date": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "committer": {
                "properties": {
                  "date": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "message": {
                "type": "string"
              },
              "tree": {
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "committer": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "parents": {
            "items": {
              "properties": {
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "sha": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "compare-commits": {
      "properties": {
        "ahead_by": {
          "type": "integer"
        },
        "base_commit": {
          "properties": {
            "author": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "events_url": {
                  "type": "string"
                },
                "followers_url": {
                  "type": "string"
                },
                "following_url": {
                  "type": "string"
                },
                "gists_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "organizations_url": {
                  "type": "string"
                },
                "received_events_url": {
                  "type": "string"
                },
                "repos_url": {
                  "type": "string"
                },
                "site_admin": {
                  "type": "boolean"
                },
                "starred_url": {
                  "type": "string"
                },
                "subscriptions_url": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "commit": {
              "properties": {
                "author": {
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "committer": {
                  "properties": {
                    "date": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "message": {
                  "type": "string"
                },
                "tree": {
                  "properties": {
                    "sha": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "committer": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "events_url": {
                  "type": "string"
                },
                "followers_url": {
                  "type": "string"
                },
                "following_url": {
                  "type": "string"
                },
                "gists_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "organizations_url": {
                  "type": "string"
                },
                "received_events_url": {
                  "type": "string"
                },
                "repos_url": {
                  "type": "string"
                },
                "site_admin": {
                  "type": "boolean"
                },
                "starred_url": {
                  "type": "string"
                },
                "subscriptions_url": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "parents": {
              "items": {
                "properties": {
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "sha": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "behind_by": {
          "type": "integer"
        },
        "commits": {
          "items": {
            "properties": {
              "author": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "commit": {
                "properties": {
                  "author": {
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "committer": {
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "message": {
                    "type": "string"
                  },
                  "tree": {
                    "properties": {
                      "sha": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "committer": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "parents": {
                "items": {
                  "properties": {
                    "sha": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "diff_url": {
          "type": "string"
        },
        "files": {
          "items": {
            "properties": {
              "additions": {
                "type": "integer"
              },
              "blob_url": {
                "type": "string"
              },
              "changes": {
                "type": "integer"
              },
              "contents_url": {
                "type": "string"
              },
              "deletions": {
                "type": "integer"
              },
              "filename": {
                "type": "string"
              },
              "patch": {
                "type": "string"
              },
              "raw_url": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "html_url": {
          "type": "string"
        },
        "patch_url": {
          "type": "string"
        },
        "permalink_url": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "total_commits": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "contents-path": {
      "properties": {
        "_links": {
          "properties": {
            "git": {
              "type": "string"
            },
            "html": {
              "type": "string"
            },
            "self": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "content": {
          "type": "string"
        },
        "encoding": {
          "type": "string"
        },
        "git_url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "contributors": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "contributions": {
            "type": "integer"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "contributorsStats": {
      "items": {
        "properties": {
          "author": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "total": {
            "description": "The Total number of commits authored by the contributor.",
            "type": "integer"
          },
          "weeks": {
            "items": {
              "properties": {
                "a": {
                  "description": "Number of additions.",
                  "type": "integer"
                },
                "c": {
                  "description": "Number of commits.",
                  "type": "integer"
                },
                "d": {
                  "description": "Number of deletions.",
                  "type": "integer"
                },
                "w": {
                  "description": "Start of the week.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "createDownload": {
      "properties": {
        "accesskeyid": {
          "type": "string"
        },
        "acl": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "content_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "download_count": {
          "type": "integer"
        },
        "expirationdate": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "mime_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "redirect": {
          "type": "boolean"
        },
        "s3_url": {
          "type": "string"
        },
        "signature": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "createFile": {
      "properties": {
        "commit": {
          "properties": {
            "author": {
              "properties": {
                "date": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "committer": {
              "properties": {
                "date": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "html_url": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "parents": {
              "items": {
                "properties": {
                  "html_url": {
                    "type": "string"
                  },
                  "sha": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "sha": {
              "type": "string"
            },
            "tree": {
              "properties": {
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "content": {
          "properties": {
            "_links": {
              "properties": {
                "git": {
                  "type": "string"
                },
                "html": {
                  "type": "string"
                },
                "self": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "git_url": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "sha": {
              "type": "string"
            },
            "size": {
              "type": "integer"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "createFileBody": {
      "properties": {
        "committer": {
          "properties": {
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "content": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "deleteFile": {
      "properties": {
        "commit": {
          "properties": {
            "author": {
              "properties": {
                "date": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "committer": {
              "properties": {
                "date": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "html_url": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "parents": {
              "properties": {
                "html_url": {
                  "type": "string"
                },
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "sha": {
              "type": "string"
            },
            "tree": {
              "properties": {
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "content": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "deleteFileBody": {
      "properties": {
        "committer": {
          "properties": {
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "deployment": {
      "properties": {
        "description": {
          "type": "string"
        },
        "payload": {
          "properties": {
            "deploy_user": {
              "type": "string"
            },
            "environment": {
              "type": "string"
            },
            "room_id": {
              "type": "number"
            }
          },
          "type": "object"
        },
        "ref": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "deployment-resp": {
      "properties": {
        "created_at": {
          "type": "string"
        },
        "creator": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "payload": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "statuses_url": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "deployment-statuses": {
      "items": {
        "properties": {
          "created_at": {
            "type": "string"
          },
          "creator": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "followers_url": {
                "type": "string"
              },
              "following_url": {
                "type": "string"
              },
              "gists_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "organizations_url": {
                "type": "string"
              },
              "received_events_url": {
                "type": "string"
              },
              "repos_url": {
                "type": "string"
              },
              "site_admin": {
                "type": "boolean"
              },
              "starred_url": {
                "type": "string"
              },
              "subscriptions_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "payload": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "target_url": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "deployment-statuses-create": {
      "properties": {
        "description": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "target_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "downloadBody": {
      "properties": {
        "content_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "description": "Size of file in bytes.",
          "type": "integer"
        }
      },
      "required": [
        "name",
        "size"
      ],
      "type": "object"
    },
    "downloads": {
      "properties": {
        "content_type": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "download_count": {
          "type": "integer"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "editTeam": {
      "properties": {
        "name": {
          "type": "string"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ]
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "emailsPost": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "emojis": {
      "properties": {
        "100": {
          "type": "string"
        },
        "1234": {
          "type": "string"
        },
        "+1": {
          "type": "string"
        },
        "-1": {
          "type": "string"
        },
        "8ball": {
          "type": "string"
        },
        "a": {
          "type": "string"
        },
        "ab": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "event": {
      "properties": {
        "actor": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "commit_id": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "event": {
          "type": "string"
        },
        "issue": {
          "properties": {
            "assignee": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              }
            },
            "body": {
              "type": "string"
            },
            "closed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "comments": {
              "type": "integer"
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "labels": {
              "items": {
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "milestone": {
              "properties": {
                "closed_issues": {
                  "type": "integer"
                },
                "created_at": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string"
                },
                "creator": {
                  "properties": {
                    "avatar_url": {
                      "type": "string"
                    },
                    "gravatar_id": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": {
                  "type": "string"
                },
                "due_on": {
                  "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                  "type": "string"
                },
                "number": {
                  "type": "integer"
                },
                "open_issues": {
                  "type": "integer"
                },
                "state": {
                  "enum": [
                    "open",
                    "closed"
                  ]
                },
                "title": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "number": {
              "type": "integer"
            },
            "pull_request": {
              "properties": {
                "diff_url": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "patch_url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "state": {
              "enum": [
                "open",
                "closed"
              ]
            },
            "title": {
              "type": "string"
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "user": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "events": {
      "properties": {
        "actor": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "created_at": {
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "org": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "payload": {
          "properties": {},
          "type": "object"
        },
        "public": {
          "type": "boolean"
        },
        "repo": {
          "properties": {
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "feeds": {
      "properties": {
        "_links": {
          "properties": {
            "current_user": {
              "properties": {
                "href": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "current_user_actor": {
              "properties": {
                "href": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "current_user_organization": {
              "properties": {
                "href": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "current_user_public": {
              "properties": {
                "href": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "timeline": {
              "properties": {
                "href": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "href": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "current_user_actor_url": {
          "type": "string"
        },
        "current_user_organization_url": {
          "type": "string"
        },
        "current_user_public": {
          "type": "string"
        },
        "current_user_url": {
          "type": "string"
        },
        "timeline_url": {
          "type": "string"
        },
        "user_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "fork": {
      "properties": {
        "clone_url": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fork": {
          "type": "boolean"
        },
        "forks": {
          "type": "integer"
        },
        "forks_count": {
          "type": "integer"
        },
        "full_name": {
          "type": "string"
        },
        "git_url": {
          "type": "string"
        },
        "homepage": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "master_branch": {
          "type": "string"
        },
        "mirror_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "open_issues": {
          "type": "integer"
        },
        "open_issues_count": {
          "type": "integer"
        },
        "owner": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "private": {
          "type": "boolean"
        },
        "pushed_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "ssh_url": {
          "type": "string"
        },
        "svn_url": {
          "type": "string"
        },
        "updated_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "watchers": {
          "type": "integer"
        },
        "watchers_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "forkBody": {
      "properties": {
        "organization": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "forks": {
      "items": {
        "properties": {
          "clone_url": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fork": {
            "type": "boolean"
          },
          "forks": {
            "type": "integer"
          },
          "forks_count": {
            "type": "integer"
          },
          "full_name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "master_branch": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "owner": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "private": {
            "type": "boolean"
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "ssh_url": {
            "type": "string"
          },
          "svn_url": {
            "type": "string"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "watchers": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "gist": {
      "properties": {
        "comments": {
          "type": "integer"
        },
        "comments_url": {
          "type": "string"
        },
        "created_at": {
          "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "files": {
          "properties": {
            "ring.erl": {
              "properties": {
                "filename": {
                  "type": "string"
                },
                "raw_url": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "forks": {
          "items": {
            "properties": {
              "created_at": {
                "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "user": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "git_pull_url": {
          "type": "string"
        },
        "git_push_url": {
          "type": "string"
        },
        "history": {
          "items": {
            "properties": {
              "change_status": {
                "properties": {
                  "additions": {
                    "type": "integer"
                  },
                  "deletions": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "committed_at": {
                "description": "Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.",
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "user": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "version": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "public": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "gists": {
      "items": {
        "properties": {
          "comments": {
            "type": "integer"
          },
          "comments_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "files": {
            "properties": {
              "ring.erl": {
                "properties": {
                  "filename": {
                    "type": "string"
                  },
                  "raw_url": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "git_pull_url": {
            "type": "string"
          },
          "git_push_url": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "public": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "gitCommit": {
      "properties": {
        "author": {
          "properties": {
            "date": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "parents": {
          "type": "string"
        },
        "tree": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "gitRefPatch": {
      "properties": {
        "force": {
          "type": "boolean"
        },
        "sha": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "gitignore": {
      "items": {},
      "type": "array"
    },
    "gitignore-lang": {
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "headBranch": {
      "properties": {
        "object": {
          "properties": {
            "sha": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ref": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "headBranchBody": {
      "properties": {
        "force": {
          "description": "Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work.",
          "type": "boolean"
        },
        "sha": {
          "description": "String of the SHA1 value to set this reference to.",
          "type": "string"
        }
      },
      "required": [
        "sha",
        "force"
      ],
      "type": "object"
    },
    "heads": {
      "items": {
        "properties": {
          "commit": {
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "tarball_url": {
            "type": "string"
          },
          "zipball_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "hook": {
      "items": {
        "properties": {
          "active": {
            "type": "boolean"
          },
          "config": {
            "properties": {
              "content_type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "events": {
            "items": {
              "enum": [
                "push",
                "issues",
                "issue_comment",
                "commit_comment",
                "pull_request",
                "pull_request_review_comment",
                "gollum",
                "watch",
                "download",
                "fork",
                "fork_apply",
                "member",
                "public",
                "team_add",
                "status"
              ]
            },
            "type": "array"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "hookBody": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "add_events": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "issue": {
      "properties": {
        "assignee": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "labels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "milestone": {
          "type": "number"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "issueBody": {
      "properties": {
        "assignee": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "labels": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "milestone": {
          "type": "number"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "issues": {
      "items": {
        "properties": {
          "assignee": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "body": {
            "type": "string"
          },
          "closed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "comments": {
            "type": "integer"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "labels": {
            "items": {
              "properties": {
                "color": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "milestone": {
            "properties": {
              "closed_issues": {
                "type": "integer"
              },
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string"
              },
              "creator": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "description": {
                "type": "string"
              },
              "due_on": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string"
              },
              "number": {
                "type": "integer"
              },
              "open_issues": {
                "type": "integer"
              },
              "state": {
                "enum": [
                  "open",
                  "closed"
                ]
              },
              "title": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "number": {
            "type": "integer"
          },
          "pull_request": {
            "properties": {
              "diff_url": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "patch_url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "state": {
            "enum": [
              "open",
              "closed"
            ]
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "issuesComment": {
      "properties": {
        "body": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "updated_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "issuesComments": {
      "items": {
        "properties": {
          "_links": {
            "properties": {
              "html": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "pull_request": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "body": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "key": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "keyBody": {
      "properties": {
        "key": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "keys": {
      "items": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "key": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "label": {
      "properties": {
        "color": {
          "maxLength": 6,
          "minLength": 6,
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "labels": {
      "items": {
        "properties": {
          "color": {
            "maxLength": 6,
            "minLength": 6,
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "labelsBody": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "languages": {
      "additionalProperties": {
        "type": "integer"
      },
      "type": "object"
    },
    "markdown": {
      "properties": {
        "context": {
          "type": "string"
        },
        "mode": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "members": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "merge": {
      "properties": {
        "merged": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "mergePullBody": {
      "properties": {
        "commit_message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "mergesBody": {
      "properties": {
        "base": {
          "type": "string"
        },
        "commit_message": {
          "type": "string"
        },
        "head": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "mergesConflict": {
      "properties": {
        "message": {
          "description": "Error message",
          "type": "string"
        }
      },
      "type": "object"
    },
    "mergesSuccessful": {
      "properties": {
        "author": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "comments_url": {
          "type": "string"
        },
        "commit": {
          "properties": {
            "author": {
              "properties": {
                "date": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "comment_count": {
              "type": "integer"
            },
            "committer": {
              "properties": {
                "date": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "message": {
              "type": "string"
            },
            "tree": {
              "properties": {
                "sha": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "committer": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "merged": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "parents": {
          "items": {
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "sha": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "meta": {
      "properties": {
        "git": {
          "items": {
            "description": "An Array of IP addresses in CIDR format specifying the Git servers at GitHub.",
            "type": "string"
          },
          "type": "array"
        },
        "hooks": {
          "items": {
            "description": "An Array of IP addresses in CIDR format specifying the addresses that incoming service hooks will originate from.",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "milestone": {
      "properties": {
        "closed_issues": {
          "type": "integer"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "creator": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "due_on": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "number": {
          "type": "integer"
        },
        "open_issues": {
          "type": "integer"
        },
        "state": {
          "enum": [
            "open",
            "closed"
          ]
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "milestoneBody": {
      "properties": {
        "description": {
          "type": "string"
        },
        "due_on": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "milestoneUpdate": {
      "properties": {
        "description": {
          "type": "string"
        },
        "due_on": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "notificationMarkRead": {
      "properties": {
        "last_read_at": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "notifications": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "last_read_at": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "repository": {
          "properties": {
            "description": {
              "type": "string"
            },
            "fork": {
              "type": "boolean"
            },
            "full_name": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "owner": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "private": {
              "type": "boolean"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "subject": {
          "properties": {
            "latest_comment_url": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "unread": {
          "type": "boolean"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "orgMembers": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "orgPublicMembers": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "orgTeams": {
      "items": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "orgTeamsPost": {
      "properties": {
        "name": {
          "type": "string"
        },
        "permission": {
          "enum": [
            "pull",
            "push",
            "admin"
          ]
        },
        "repo_names": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "organization": {
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "blog": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "followers": {
          "type": "integer"
        },
        "following": {
          "type": "integer"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "public_gists": {
          "type": "integer"
        },
        "public_repos": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "organizationAsTeamMember": {
      "properties": {
        "errors": {
          "items": {
            "properties": {
              "code": {
                "type": "string"
              },
              "field": {
                "type": "string"
              },
              "resource": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "participationStats": {
      "properties": {
        "all": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        },
        "owner": {
          "items": {
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "patchGist": {
      "properties": {
        "description": {
          "type": "string"
        },
        "files": {
          "properties": {
            "delete_this_file.txt": {
              "type": "string"
            },
            "file1.txt": {
              "properties": {
                "content": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "new_file.txt": {
              "properties": {
                "content": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "old_name.txt": {
              "properties": {
                "content": {
                  "type": "string"
                },
                "filename": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "type": "object"
    },
    "patchOrg": {
      "properties": {
        "billing_email": {
          "description": "Billing email address. This address is not publicized.",
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "email": {
          "description": "Publicly visible email address.",
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "postComment": {
      "properties": {
        "body": {
          "type": "string"
        }
      },
      "required": [
        "body"
      ],
      "type": "object"
    },
    "postGist": {
      "properties": {
        "description": {
          "type": "string"
        },
        "files": {
          "properties": {
            "file1.txt": {
              "properties": {
                "content": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "public": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "postRepo": {
      "properties": {
        "auto_init": {
          "description": "True to create an initial commit with empty README. Default is false.",
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "gitignore_template": {
          "description": "Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \"Haskell\" Ignored if auto_init parameter is not provided. ",
          "type": "string"
        },
        "has_downloads": {
          "description": "True to enable downloads for this repository, false to disable them. Default is true.",
          "type": "boolean"
        },
        "has_issues": {
          "description": "True to enable issues for this repository, false to disable them. Default is true.",
          "type": "boolean"
        },
        "has_wiki": {
          "description": "True to enable the wiki for this repository, false to disable it. Default is true.",
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "private": {
          "description": "True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account.",
          "type": "boolean"
        },
        "team_id": {
          "description": "The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization.",
          "type": "integer"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "pullRequest": {
      "properties": {
        "_links": {
          "properties": {
            "comments": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "html": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "review_comments": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "additions": {
          "type": "integer"
        },
        "base": {
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "properties": {
                "clone_url": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "fork": {
                  "type": "boolean"
                },
                "forks": {
                  "type": "integer"
                },
                "forks_count": {
                  "type": "integer"
                },
                "full_name": {
                  "type": "string"
                },
                "git_url": {
                  "type": "string"
                },
                "homepage": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "language": {
                  "type": "null"
                },
                "master_branch": {
                  "type": "string"
                },
                "mirror_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "open_issues": {
                  "type": "integer"
                },
                "open_issues_count": {
                  "type": "integer"
                },
                "owner": {
                  "properties": {
                    "avatar_url": {
                      "type": "string"
                    },
                    "gravatar_id": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "private": {
                  "type": "boolean"
                },
                "pushed_at": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "ssh_url": {
                  "type": "string"
                },
                "svn_url": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "watchers": {
                  "type": "integer"
                },
                "watchers_count": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "body": {
          "type": "string"
        },
        "changed_files": {
          "type": "integer"
        },
        "closed_at": {
          "type": "string"
        },
        "comments": {
          "type": "integer"
        },
        "commits": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "deletions": {
          "type": "integer"
        },
        "diff_url": {
          "type": "string"
        },
        "head": {
          "properties": {
            "label": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "repo": {
              "properties": {
                "clone_url": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "fork": {
                  "type": "boolean"
                },
                "forks": {
                  "type": "integer"
                },
                "forks_count": {
                  "type": "integer"
                },
                "full_name": {
                  "type": "string"
                },
                "git_url": {
                  "type": "string"
                },
                "homepage": {
                  "type": "string"
                },
                "html_url": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "language": {
                  "type": "null"
                },
                "master_branch": {
                  "type": "string"
                },
                "mirror_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "open_issues": {
                  "type": "integer"
                },
                "open_issues_count": {
                  "type": "integer"
                },
                "owner": {
                  "properties": {
                    "avatar_url": {
                      "type": "string"
                    },
                    "gravatar_id": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "private": {
                  "type": "boolean"
                },
                "pushed_at": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "ssh_url": {
                  "type": "string"
                },
                "svn_url": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "watchers": {
                  "type": "integer"
                },
                "watchers_count": {
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "sha": {
              "type": "string"
            },
            "user": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "html_url": {
          "type": "string"
        },
        "issue_url": {
          "type": "string"
        },
        "merge_commit_sha": {
          "type": "string"
        },
        "mergeable": {
          "type": "boolean"
        },
        "merged": {
          "type": "boolean"
        },
        "merged_at": {
          "type": "string"
        },
        "merged_by": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "number": {
          "type": "integer"
        },
        "patch_url": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "pullUpdate": {
      "properties": {
        "body": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pulls": {
      "items": {
        "properties": {
          "_links": {
            "properties": {
              "comments": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "review_comments": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "base": {
            "properties": {
              "label": {
                "type": "string"
              },
              "ref": {
                "type": "string"
              },
              "repo": {
                "properties": {
                  "clone_url": {
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "fork": {
                    "type": "boolean"
                  },
                  "forks": {
                    "type": "integer"
                  },
                  "forks_count": {
                    "type": "integer"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "git_url": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "language": {
                    "type": "string"
                  },
                  "master_branch": {
                    "type": "string"
                  },
                  "mirror_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "open_issues": {
                    "type": "integer"
                  },
                  "open_issues_count": {
                    "type": "integer"
                  },
                  "owner": {
                    "properties": {
                      "avatar_url": {
                        "type": "string"
                      },
                      "gravatar_id": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "private": {
                    "type": "boolean"
                  },
                  "pushed_at": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "ssh_url": {
                    "type": "string"
                  },
                  "svn_url": {
                    "type": "string"
                  },
                  "updated_at": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "watchers": {
                    "type": "integer"
                  },
                  "watchers_count": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "sha": {
                "type": "string"
              },
              "user": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "body": {
            "type": "string"
          },
          "closed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "diff_url": {
            "type": "string"
          },
          "head": {
            "properties": {
              "label": {
                "type": "string"
              },
              "ref": {
                "type": "string"
              },
              "repo": {
                "properties": {
                  "clone_url": {
                    "type": "string"
                  },
                  "created_at": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "fork": {
                    "type": "boolean"
                  },
                  "forks": {
                    "type": "integer"
                  },
                  "forks_count": {
                    "type": "integer"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "git_url": {
                    "type": "string"
                  },
                  "homepage": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "language": {
                    "type": "string"
                  },
                  "master_branch": {
                    "type": "string"
                  },
                  "mirror_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "open_issues": {
                    "type": "integer"
                  },
                  "open_issues_count": {
                    "type": "integer"
                  },
                  "owner": {
                    "properties": {
                      "avatar_url": {
                        "type": "string"
                      },
                      "gravatar_id": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "private": {
                    "type": "boolean"
                  },
                  "pushed_at": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "ssh_url": {
                    "type": "string"
                  },
                  "svn_url": {
                    "type": "string"
                  },
                  "updated_at": {
                    "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "watchers": {
                    "type": "integer"
                  },
                  "watchers_count": {
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "sha": {
                "type": "string"
              },
              "user": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "html_url": {
            "type": "string"
          },
          "issue_url": {
            "type": "string"
          },
          "merged_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "number": {
            "type": "integer"
          },
          "patch_url": {
            "type": "string"
          },
          "state": {
            "enum": [
              "open",
              "closed"
            ]
          },
          "title": {
            "type": "string"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "pullsComment": {
      "properties": {
        "_links": {
          "properties": {
            "html": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "pull_request": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "self": {
              "properties": {
                "href": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "body": {
          "type": "string"
        },
        "commit_id": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "path": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "updated_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "user": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "pullsCommentPost": {
      "properties": {
        "body": {
          "type": "string"
        },
        "commit_id": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "position": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "pullsComments": {
      "items": {
        "properties": {
          "_links": {
            "properties": {
              "html": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "pull_request": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "properties": {
                  "href": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "body": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "pullsPost": {
      "properties": {
        "base": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "head": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "punchCardStats": {
      "items": {
        "type": "integer"
      },
      "type": "array"
    },
    "putSubscription": {
      "properties": {
        "created_at": {
          "type": "string"
        },
        "ignored": {
          "type": "boolean"
        },
        "reason": {
          "type": "object"
        },
        "subscribed": {
          "type": "boolean"
        },
        "thread_url": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "rate_limit": {
      "properties": {
        "rate": {
          "properties": {
            "limit": {
              "type": "integer"
            },
            "remaining": {
              "type": "integer"
            },
            "reset": {
              "type": "integer"
            }
          }
        }
      },
      "type": "object"
    },
    "readme": {
      "properties": {
        "_links": {
          "properties": {
            "git": {
              "type": "string"
            },
            "html": {
              "type": "string"
            },
            "self": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "content": {
          "type": "string"
        },
        "encoding": {
          "type": "string"
        },
        "git_url": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ref": {
      "items": {
        "properties": {
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "creator": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "state": {
            "type": "string"
          },
          "target_url": {
            "type": "string"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "refBody": {
      "properties": {
        "object": {
          "properties": {
            "sha": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "ref": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "refStatus": {
      "items": {
        "properties": {
          "commit_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "repository_url": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "statuses": {
            "items": {
              "properties": {
                "context": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "state": {
                  "type": "string"
                },
                "target_url": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "refs": {
      "items": {
        "properties": {
          "object": {
            "properties": {
              "sha": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "ref": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "refsBody": {
      "properties": {
        "ref": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "release": {
      "properties": {
        "assets": {
          "items": {
            "properties": {
              "content_type": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "download_count": {
                "type": "integer"
              },
              "id": {
                "type": "integer"
              },
              "label": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "state": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "uploader": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "site_admin": {
                    "type": "boolean"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "assets_url": {
          "type": "string"
        },
        "author": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "events_url": {
              "type": "string"
            },
            "followers_url": {
              "type": "string"
            },
            "following_url": {
              "type": "string"
            },
            "gists_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "organizations_url": {
              "type": "string"
            },
            "received_events_url": {
              "type": "string"
            },
            "repos_url": {
              "type": "string"
            },
            "site_admin": {
              "type": "boolean"
            },
            "starred_url": {
              "type": "string"
            },
            "subscriptions_url": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "body": {
          "type": "string"
        },
        "created_at": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "prerelease": {
          "type": "boolean"
        },
        "published_at": {
          "type": "string"
        },
        "tag_name": {
          "type": "string"
        },
        "tarball_url": {
          "type": "string"
        },
        "target_commitish": {
          "type": "string"
        },
        "upload_url": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "zipball_url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "release-create": {
      "properties": {
        "body": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "prerelease": {
          "type": "boolean"
        },
        "tag_name": {
          "type": "string"
        },
        "target_commitish": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "releases": {
      "items": {
        "properties": {
          "assets": {
            "items": {
              "properties": {
                "content_type": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "download_count": {
                  "type": "integer"
                },
                "id": {
                  "type": "integer"
                },
                "label": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "state": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "uploader": {
                  "properties": {
                    "avatar_url": {
                      "type": "string"
                    },
                    "events_url": {
                      "type": "string"
                    },
                    "followers_url": {
                      "type": "string"
                    },
                    "following_url": {
                      "type": "string"
                    },
                    "gists_url": {
                      "type": "string"
                    },
                    "gravatar_id": {
                      "type": "string"
                    },
                    "html_url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "integer"
                    },
                    "login": {
                      "type": "string"
                    },
                    "organizations_url": {
                      "type": "string"
                    },
                    "received_events_url": {
                      "type": "string"
                    },
                    "repos_url": {
                      "type": "string"
                    },
                    "site_admin": {
                      "type": "boolean"
                    },
                    "starred_url": {
                      "type": "string"
                    },
                    "subscriptions_url": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          },
          "assets_url": {
            "type": "string"
          },
          "author": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "followers_url": {
                "type": "string"
              },
              "following_url": {
                "type": "string"
              },
              "gists_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "organizations_url": {
                "type": "string"
              },
              "received_events_url": {
                "type": "string"
              },
              "repos_url": {
                "type": "string"
              },
              "site_admin": {
                "type": "boolean"
              },
              "starred_url": {
                "type": "string"
              },
              "subscriptions_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "draft": {
            "type": "boolean"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "prerelease": {
            "type": "boolean"
          },
          "published_at": {
            "type": "string"
          },
          "tag_name": {
            "type": "string"
          },
          "tarball_url": {
            "type": "string"
          },
          "target_commitish": {
            "type": "string"
          },
          "upload_url": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "zipball_url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "repo": {
      "properties": {
        "clone_url": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "fork": {
          "type": "boolean"
        },
        "forks": {
          "type": "integer"
        },
        "forks_count": {
          "type": "integer"
        },
        "full_name": {
          "type": "string"
        },
        "git_url": {
          "type": "string"
        },
        "has_downloads": {
          "type": "boolean"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "language": {
          "type": "string"
        },
        "master_branch": {
          "type": "string"
        },
        "mirror_url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "open_issues": {
          "type": "integer"
        },
        "open_issues_count": {
          "type": "integer"
        },
        "organization": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "owner": {
          "properties": {
            "avatar_url": {
              "type": "string"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "login": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "parent": {
          "description": "Is present when the repo is a fork. Parent is the repo this repo was forked from.",
          "properties": {
            "clone_url": {
              "type": "string"
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "fork": {
              "type": "boolean"
            },
            "forks": {
              "type": "integer"
            },
            "forks_count": {
              "type": "integer"
            },
            "full_name": {
              "type": "string"
            },
            "git_url": {
              "type": "string"
            },
            "homepage": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "language": {
              "type": "string"
            },
            "master_branch": {
              "type": "string"
            },
            "mirror_url": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "open_issues": {
              "type": "integer"
            },
            "open_issues_count": {
              "type": "integer"
            },
            "owner": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "private": {
              "type": "boolean"
            },
            "pushed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "size": {
              "type": "integer"
            },
            "ssh_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "watchers": {
              "type": "integer"
            },
            "watchers_count": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "private": {
          "type": "boolean"
        },
        "pushed_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "size": {
          "type": "integer"
        },
        "source": {
          "description": "Is present when the repo is a fork. Source is the ultimate source for the network.",
          "properties": {
            "clone_url": {
              "type": "string"
            },
            "created_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "fork": {
              "type": "boolean"
            },
            "forks": {
              "type": "integer"
            },
            "forks_count": {
              "type": "integer"
            },
            "full_name": {
              "type": "string"
            },
            "git_url": {
              "type": "string"
            },
            "homepage": {
              "type": "string"
            },
            "html_url": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "language": {
              "type": "string"
            },
            "master_branch": {
              "type": "string"
            },
            "mirror_url": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "open_issues": {
              "type": "integer"
            },
            "open_issues_count": {
              "type": "integer"
            },
            "owner": {
              "properties": {
                "avatar_url": {
                  "type": "string"
                },
                "gravatar_id": {
                  "type": "string"
                },
                "id": {
                  "type": "integer"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "private": {
              "type": "boolean"
            },
            "pushed_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "size": {
              "type": "integer"
            },
            "ssh_url": {
              "type": "string"
            },
            "svn_url": {
              "type": "string"
            },
            "updated_at": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "watchers": {
              "type": "integer"
            },
            "watchers_count": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "ssh_url": {
          "type": "string"
        },
        "svn_url": {
          "type": "string"
        },
        "updated_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "watchers": {
          "type": "integer"
        },
        "watchers_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "repo-deployments": {
      "items": {
        "properties": {
          "created_at": {
            "type": "string"
          },
          "creator": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "followers_url": {
                "type": "string"
              },
              "following_url": {
                "type": "string"
              },
              "gists_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "organizations_url": {
                "type": "string"
              },
              "received_events_url": {
                "type": "string"
              },
              "repos_url": {
                "type": "string"
              },
              "site_admin": {
                "type": "boolean"
              },
              "starred_url": {
                "type": "string"
              },
              "subscriptions_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "payload": {
            "type": "string"
          },
          "sha": {
            "type": "string"
          },
          "statuses_url": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "repoComments": {
      "items": {
        "properties": {
          "body": {
            "type": "string"
          },
          "commit_id": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "line": {
            "type": "integer"
          },
          "path": {
            "type": "string"
          },
          "position": {
            "type": "integer"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "user": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "repoCommit": {
      "properties": {
        "author": {
          "properties": {
            "date": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "committer": {
          "properties": {
            "date": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "parents": {
          "items": {
            "properties": {
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "sha": {
          "type": "string"
        },
        "tree": {
          "properties": {
            "sha": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "repoCommitBody": {
      "properties": {
        "author": {
          "properties": {
            "date": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "parents": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tree": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "parents",
        "tree"
      ],
      "type": "object"
    },
    "repoEdit": {
      "properties": {
        "description": {
          "type": "string"
        },
        "has_downloads": {
          "type": "boolean"
        },
        "has_issues": {
          "type": "boolean"
        },
        "has_wiki": {
          "type": "boolean"
        },
        "homepage": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "private": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "repos": {
      "items": {
        "properties": {
          "clone_url": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fork": {
            "type": "boolean"
          },
          "forks": {
            "type": "integer"
          },
          "forks_count": {
            "type": "integer"
          },
          "full_name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "master_branch": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "owner": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "private": {
            "type": "boolean"
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "ssh_url": {
            "type": "string"
          },
          "svn_url": {
            "type": "string"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "watchers": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          }
        }
      },
      "type": "array"
    },
    "repositories": {
      "items": {
        "properties": {
          "description": {
            "type": "string"
          },
          "fork": {
            "type": "boolean"
          },
          "full_name": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "private": {
            "type": "boolean"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "search-code": {
      "properties": {
        "items": {
          "items": {
            "properties": {
              "git_url": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "repository": {
                "properties": {
                  "archive_url": {
                    "type": "string"
                  },
                  "assignees_url": {
                    "type": "string"
                  },
                  "blobs_url": {
                    "type": "string"
                  },
                  "branches_url": {
                    "type": "string"
                  },
                  "collaborators_url": {
                    "type": "string"
                  },
                  "comments_url": {
                    "type": "string"
                  },
                  "commits_url": {
                    "type": "string"
                  },
                  "compare_url": {
                    "type": "string"
                  },
                  "contents_url": {
                    "type": "string"
                  },
                  "contributors_url": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "downloads_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "fork": {
                    "type": "boolean"
                  },
                  "forks_url": {
                    "type": "string"
                  },
                  "full_name": {
                    "type": "string"
                  },
                  "git_commits_url": {
                    "type": "string"
                  },
                  "git_refs_url": {
                    "type": "string"
                  },
                  "git_tags_url": {
                    "type": "string"
                  },
                  "hooks_url": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "issue_comment_url": {
                    "type": "string"
                  },
                  "issue_events_url": {
                    "type": "string"
                  },
                  "issues_url": {
                    "type": "string"
                  },
                  "keys_url": {
                    "type": "string"
                  },
                  "labels_url": {
                    "type": "string"
                  },
                  "languages_url": {
                    "type": "string"
                  },
                  "merges_url": {
                    "type": "string"
                  },
                  "milestones_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notifications_url": {
                    "type": "string"
                  },
                  "owner": {
                    "properties": {
                      "avatar_url": {
                        "type": "string"
                      },
                      "events_url": {
                        "type": "string"
                      },
                      "followers_url": {
                        "type": "string"
                      },
                      "following_url": {
                        "type": "string"
                      },
                      "gists_url": {
                        "type": "string"
                      },
                      "gravatar_id": {
                        "type": "string"
                      },
                      "html_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "login": {
                        "type": "string"
                      },
                      "organizations_url": {
                        "type": "string"
                      },
                      "received_events_url": {
                        "type": "string"
                      },
                      "repos_url": {
                        "type": "string"
                      },
                      "starred_url": {
                        "type": "string"
                      },
                      "subscriptions_url": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "private": {
                    "type": "boolean"
                  },
                  "pulls_url": {
                    "type": "string"
                  },
                  "stargazers_url": {
                    "type": "string"
                  },
                  "statuses_url": {
                    "type": "string"
                  },
                  "subscribers_url": {
                    "type": "string"
                  },
                  "subscription_url": {
                    "type": "string"
                  },
                  "tags_url": {
                    "type": "string"
                  },
                  "teams_url": {
                    "type": "string"
                  },
                  "trees_url": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "score": {
                "type": "number"
              },
              "sha": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "total_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "search-issues": {
      "properties": {
        "items": {
          "items": {
            "properties": {
              "assignee": {
                "type": "null"
              },
              "body": {
                "type": "string"
              },
              "closed_at": {
                "type": "null"
              },
              "comments": {
                "type": "integer"
              },
              "comments_url": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "events_url": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "labels": {
                "items": {
                  "properties": {
                    "color": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "labels_url": {
                "type": "string"
              },
              "milestone": {
                "type": "null"
              },
              "number": {
                "type": "integer"
              },
              "pull_request": {
                "properties": {
                  "diff_url": {
                    "type": "null"
                  },
                  "html_url": {
                    "type": "null"
                  },
                  "patch_url": {
                    "type": "null"
                  }
                },
                "type": "object"
              },
              "score": {
                "type": "number"
              },
              "state": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "user": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "events_url": {
                    "type": "string"
                  },
                  "followers_url": {
                    "type": "string"
                  },
                  "following_url": {
                    "type": "string"
                  },
                  "gists_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "html_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "organizations_url": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "repos_url": {
                    "type": "string"
                  },
                  "starred_url": {
                    "type": "string"
                  },
                  "subscriptions_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "total_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "search-issues-by-keyword": {
      "properties": {
        "issues": {
          "items": {
            "properties": {
              "body": {
                "type": "string"
              },
              "comments": {
                "type": "integer"
              },
              "created_at": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "labels": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "number": {
                "type": "integer"
              },
              "position": {
                "type": "integer"
              },
              "state": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "updated_at": {
                "type": "string"
              },
              "user": {
                "type": "string"
              },
              "votes": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "search-repositories": {
      "properties": {
        "items": {
          "items": {
            "properties": {
              "created_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string"
              },
              "default_branch": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "fork": {
                "type": "boolean"
              },
              "forks": {
                "type": "integer"
              },
              "forks_count": {
                "type": "integer"
              },
              "full_name": {
                "type": "string"
              },
              "homepage": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "language": {
                "type": "string"
              },
              "master_branch": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "open_issues": {
                "type": "integer"
              },
              "open_issues_count": {
                "type": "integer"
              },
              "owner": {
                "properties": {
                  "avatar_url": {
                    "type": "string"
                  },
                  "gravatar_id": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  },
                  "login": {
                    "type": "string"
                  },
                  "received_events_url": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "private": {
                "type": "boolean"
              },
              "pushed_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string"
              },
              "score": {
                "type": "number"
              },
              "size": {
                "type": "integer"
              },
              "updated_at": {
                "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "watchers": {
                "type": "integer"
              },
              "watchers_count": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "total_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "search-repositories-by-keyword": {
      "properties": {
        "repositories": {
          "items": {
            "properties": {
              "created": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "followers": {
                "type": "integer"
              },
              "fork": {
                "type": "boolean"
              },
              "forks": {
                "type": "integer"
              },
              "has_downloads": {
                "type": "boolean"
              },
              "has_issues": {
                "type": "boolean"
              },
              "has_wiki": {
                "type": "boolean"
              },
              "homepage": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "open_issues": {
                "type": "integer"
              },
              "owner": {
                "type": "string"
              },
              "private": {
                "type": "boolean"
              },
              "pushed": {
                "type": "string"
              },
              "pushed_at": {
                "type": "string"
              },
              "score": {
                "type": "number"
              },
              "size": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "watchers": {
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "search-user-by-email": {
      "properties": {
        "user": {
          "properties": {
            "blog": {
              "type": "string"
            },
            "company": {
              "type": "string"
            },
            "created": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "followers_count": {
              "type": "integer"
            },
            "following_count": {
              "type": "integer"
            },
            "gravatar_id": {
              "type": "string"
            },
            "id": {
              "type": "integer"
            },
            "location": {
              "type": "string"
            },
            "login": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "public_gist_count": {
              "type": "integer"
            },
            "public_repo_count": {
              "type": "integer"
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "search-users": {
      "properties": {
        "items": {
          "items": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "followers_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "html_url": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "organizations_url": {
                "type": "string"
              },
              "received_events_url": {
                "type": "string"
              },
              "repos_url": {
                "type": "string"
              },
              "score": {
                "type": "number"
              },
              "subscriptions_url": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "total_count": {
          "type": "integer"
        }
      },
      "type": "object"
    },
    "search-users-by-keyword": {
      "properties": {
        "users": {
          "items": {
            "properties": {
              "created": {
                "type": "string"
              },
              "created_at": {
                "type": "string"
              },
              "followers": {
                "type": "integer"
              },
              "followers_count": {
                "type": "integer"
              },
              "fullname": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "login": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "public_repo_count": {
                "type": "integer"
              },
              "repos": {
                "type": "integer"
              },
              "score": {
                "type": "number"
              },
              "type": {
                "type": "string"
              },
              "username": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "stargazers": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "subscribition": {
      "properties": {
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "ignored": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "repository_url": {
          "type": "string"
        },
        "subscribed": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "subscribitionBody": {
      "properties": {
        "ignored": {
          "type": "boolean"
        },
        "subscribed": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "subscription": {
      "properties": {
        "created_at": {
          "type": "string"
        },
        "ignored": {
          "type": "boolean"
        },
        "reason": {
          "type": "boolean"
        },
        "subscribed": {
          "type": "boolean"
        },
        "thread_url": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "tag": {
      "properties": {
        "message": {
          "type": "string"
        },
        "object": {
          "properties": {
            "sha": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "sha": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "tagger": {
          "properties": {
            "date": {
              "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "tags": {
      "properties": {
        "message": {
          "description": "String of the tag message.",
          "type": "string"
        },
        "object": {
          "description": "String of the SHA of the git object this is tagging.",
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "tagger": {
          "properties": {
            "date": {
              "description": "Timestamp of when this object was tagged.",
              "type": "string"
            },
            "email": {
              "description": "String of the email of the author of the tag.",
              "type": "string"
            },
            "name": {
              "description": "String of the name of the author of the tag.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "description": "String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.",
          "type": "string"
        }
      },
      "required": [
        "tag",
        "message",
        "object",
        "type",
        "tagger"
      ],
      "type": "object"
    },
    "team": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "members_count": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        },
        "repos_count": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "teamMembership": {
      "properties": {
        "state": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "teamRepos": {
      "items": {
        "properties": {
          "clone_url": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fork": {
            "type": "boolean"
          },
          "forks": {
            "type": "integer"
          },
          "forks_count": {
            "type": "integer"
          },
          "full_name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "null"
          },
          "master_branch": {
            "type": "string"
          },
          "mirror_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "owner": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "private": {
            "type": "boolean"
          },
          "pushed_at": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "ssh_url": {
            "type": "string"
          },
          "svn_url": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "watchers": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "teams": {
      "items": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "teams-list": {
      "items": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "members_count": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "organization": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "permission": {
            "type": "string"
          },
          "repos_count": {
            "type": "integer"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "tree": {
      "properties": {
        "sha": {
          "type": "string"
        },
        "tree": {
          "items": {
            "properties": {
              "mode": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "sha": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "type": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "trees": {
      "properties": {
        "base_tree": {
          "type": "string"
        },
        "sha": {
          "description": "SHA1 checksum ID of the object in the tree.",
          "type": "string"
        },
        "tree": {
          "items": {
            "properties": {
              "mode": {
                "description": "One of 100644 for file (blob), 100755 for executable (blob), 040000 for subdirectory (tree), 160000 for submodule (commit) or 120000 for a blob that specifies the path of a symlink.",
                "enum": [
                  "100644",
                  "100755",
                  "040000",
                  "160000",
                  "120000"
                ],
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "sha": {
                "description": "SHA1 checksum ID of the object in the tree.",
                "type": "string"
              },
              "type": {
                "enum": [
                  "blob",
                  "tree",
                  "commit"
                ],
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user": {
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "blog": {
          "type": "string"
        },
        "collaborators": {
          "type": "integer"
        },
        "company": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "disk_usage": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "followers": {
          "type": "integer"
        },
        "following": {
          "type": "integer"
        },
        "gravatar_id": {
          "type": "string"
        },
        "hireable": {
          "type": "boolean"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "owned_private_repos": {
          "type": "integer"
        },
        "plan": {
          "properties": {
            "collaborators": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "private_repos": {
              "type": "integer"
            },
            "space": {
              "type": "integer"
            }
          },
          "type": "object"
        },
        "private_gists": {
          "type": "integer"
        },
        "public_gists": {
          "type": "integer"
        },
        "public_repos": {
          "type": "integer"
        },
        "total_private_repos": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user-emails": {
      "items": {
        "type": "string"
      },
      "type": "array"
    },
    "user-emails_final": {
      "items": {},
      "type": "array"
    },
    "user-keys": {
      "items": {},
      "type": "array"
    },
    "user-keys-keyId": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user-keys-post": {
      "properties": {
        "key": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user-update": {
      "properties": {
        "bio": {
          "type": "string"
        },
        "blog": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "hireable": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user-userId": {
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "bio": {
          "type": "string"
        },
        "blog": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "created_at": {
          "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
          "type": "string"
        },
        "email": {
          "description": "Note: The returned email is the user’s publicly visible email address (or null if the user has not specified a public email address in their profile).",
          "type": "string"
        },
        "followers": {
          "type": "integer"
        },
        "following": {
          "type": "integer"
        },
        "gravatar_id": {
          "type": "string"
        },
        "hireable": {
          "type": "boolean"
        },
        "html_url": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "location": {
          "type": "string"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "public_gists": {
          "type": "integer"
        },
        "public_repos": {
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user-userId-starred": {
      "items": {},
      "type": "array"
    },
    "user-userId-subscribitions": {
      "items": {
        "properties": {
          "clone_url": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fork": {
            "type": "boolean"
          },
          "forks": {
            "type": "integer"
          },
          "forks_count": {
            "type": "integer"
          },
          "full_name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "homepage": {
            "type": "string"
          },
          "html_url": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "master_branch": {
            "type": "integer"
          },
          "mirror_url": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "open_issues": {
            "type": "integer"
          },
          "open_issues_count": {
            "type": "integer"
          },
          "owner": {
            "properties": {
              "avatar_url": {
                "type": "string"
              },
              "gravatar_id": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              },
              "login": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "private": {
            "type": "boolean"
          },
          "pushed_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "ssh_url": {
            "type": "string"
          },
          "svn_url": {
            "type": "string"
          },
          "updated_at": {
            "description": "ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "watchers": {
            "type": "integer"
          },
          "watchers_count": {
            "type": "integer"
          }
        }
      },
      "type": "array"
    },
    "users": {
      "items": {
        "properties": {
          "avatar_url": {
            "type": "string"
          },
          "gravatar_id": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "login": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "users-userId-keys": {
      "items": {},
      "type": "array"
    },
    "users-userId-orgs": {
      "items": {},
      "type": "array"
    }
  },
  "actions": [
    {
      "id": "oauthCallback",
      "title": "",
      "description": "Exchange the code passed to your redirect URI for an access_token",
      "inputSchema": {
        "type": "object",
        "properties": {
          "code": {
            "title": "code",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "oauthRefresh",
      "title": "",
      "description": "Exchange a refresh_token for an access_token",
      "inputSchema": {},
      "outputSchema": {
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "expiration": {
            "type": "string"
          }
        }
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "emojis.get",
      "title": "emojis.get",
      "description": "Lists all the emojis available to use on GitHub.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/emojis"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "events.get",
      "title": "events.get",
      "description": "List public events.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/events"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "feeds.get",
      "title": "feeds.get",
      "description": "List Feeds.\nGitHub provides several timeline resources in Atom format. The Feeds API\n lists all the feeds available to the authenticating user.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/feeds"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.get",
      "title": "gists.get",
      "description": "List the authenticated user's gists or if called anonymously, this will\nreturn all public gists.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "since": {
            "type": "string",
            "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\nOnly gists updated at or after this time are returned.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/gists"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.post",
      "title": "gists.post",
      "description": "Create a gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/postGist"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gist"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.public.get",
      "title": "gists.public.get",
      "description": "List all public gists.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "since": {
            "type": "string",
            "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\nOnly gists updated at or after this time are returned.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/gists"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.starred.get",
      "title": "gists.starred.get",
      "description": "List the authenticated user's starred gists.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "since": {
            "type": "string",
            "description": "Timestamp in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ.\nOnly gists updated at or after this time are returned.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/gists"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.delete",
      "title": "gists.id.delete",
      "description": "Delete a gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.get",
      "title": "gists.id.get",
      "description": "Get a single gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gist"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.patch",
      "title": "gists.id.patch",
      "description": "Edit a gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/patchGist"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gist"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.comments.get",
      "title": "gists.id.comments.get",
      "description": "List comments on a gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/comments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.comments.post",
      "title": "gists.id.comments.post",
      "description": "Create a commen",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/commentBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/comment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.comments.commentId.delete",
      "title": "gists.id.comments.commentId.delete",
      "description": "Delete a comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "commentId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.comments.commentId.get",
      "title": "gists.id.comments.commentId.get",
      "description": "Get a single comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "commentId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/comment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.comments.commentId.patch",
      "title": "gists.id.comments.commentId.patch",
      "description": "Edit a comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/comment"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "commentId",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/comment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.forks.post",
      "title": "gists.id.forks.post",
      "description": "Fork a gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.star.delete",
      "title": "gists.id.star.delete",
      "description": "Unstar a gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.star.get",
      "title": "gists.id.star.get",
      "description": "Check if a gist is starred.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gists.id.star.put",
      "title": "gists.id.star.put",
      "description": "Star a gist.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of gist."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gitignore.templates.get",
      "title": "gitignore.templates.get",
      "description": "Listing available templates.\nList all templates available to pass as an option when creating a repository.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/gitignore"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "gitignore.templates.language.get",
      "title": "gitignore.templates.language.get",
      "description": "Get a single template.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "language"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gitignore-lang"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "issues.get",
      "title": "issues.get",
      "description": "List issues.\nList all issues across all the authenticated user's visible repositories.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n",
            "enum": [
              "assigned",
              "created",
              "mentioned",
              "subscribed",
              "all"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          "labels": {
            "type": "string",
            "description": "String list of comma separated Label names. Example - bug,ui,@high."
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "comments"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "since": {
            "type": "string",
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "filter",
          "state",
          "labels",
          "sort",
          "direction"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issues"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "legacy.issues.search.owner.repository.state.keyword.get",
      "title": "legacy.issues.search.owner.repository.state.keyword.get",
      "description": "Find issues by state and keyword.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string",
            "description": "The search term."
          },
          "state": {
            "type": "string",
            "description": "Indicates the state of the issues to return. Can be either open or closed.",
            "enum": [
              "open",
              "closed"
            ]
          },
          "owner": {
            "type": "string"
          },
          "repository": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "keyword",
          "state",
          "owner",
          "repository"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-issues-by-keyword"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "legacy.repos.search.keyword.get",
      "title": "legacy.repos.search.keyword.get",
      "description": "Find repositories by keyword. Note, this legacy method does not follow the v3 pagination pattern. This method returns up to 100 results per page and pages can be fetched using the start_page parameter.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string",
            "description": "The search term"
          },
          "order": {
            "type": "string",
            "description": "The sort field. if sort param is provided. Can be either asc or desc.",
            "enum": [
              "desc",
              "asc"
            ]
          },
          "language": {
            "type": "string",
            "description": "Filter results by language"
          },
          "start_page": {
            "type": "string",
            "description": "The page number to fetch"
          },
          "sort": {
            "type": "string",
            "description": "The sort field. One of stars, forks, or updated. Default: results are sorted by best match.",
            "enum": [
              "updated",
              "stars",
              "forks"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "keyword"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-repositories-by-keyword"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "legacy.user.email.email.get",
      "title": "legacy.user.email.email.get",
      "description": "This API call is added for compatibility reasons only.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The email address"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "email"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-user-by-email"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "legacy.user.search.keyword.get",
      "title": "legacy.user.search.keyword.get",
      "description": "Find users by keyword.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string",
            "description": "The search term"
          },
          "order": {
            "type": "string",
            "description": "The sort field. if sort param is provided. Can be either asc or desc.",
            "enum": [
              "desc",
              "asc"
            ]
          },
          "start_page": {
            "type": "string",
            "description": "The page number to fetch"
          },
          "sort": {
            "type": "string",
            "description": "The sort field. One of stars, forks, or updated. Default: results are sorted by best match.",
            "enum": [
              "updated",
              "stars",
              "forks"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "keyword"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-users-by-keyword"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "markdown.post",
      "title": "markdown.post",
      "description": "Render an arbitrary Markdown document",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/markdown"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "markdown.raw.post",
      "title": "markdown.raw.post",
      "description": "Render a Markdown document in raw mode",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "meta.get",
      "title": "meta.get",
      "description": "This gives some information about GitHub.com, the service.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/meta"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "networks.owner.repo.events.get",
      "title": "networks.owner.repo.events.get",
      "description": "List public events for a network of repositories.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of the owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/events"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "notifications.get",
      "title": "notifications.get",
      "description": "List your notifications.\nList all notifications for the current user, grouped by repository.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "all": {
            "type": "boolean",
            "description": "True to show notifications marked as read."
          },
          "participating": {
            "type": "boolean",
            "description": "True to show only notifications in which the user is directly participating\nor mentioned.\n"
          },
          "since": {
            "type": "string",
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/notifications"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "notifications.put",
      "title": "notifications.put",
      "description": "Mark as read.\nMarking a notification as \"read\" removes it from the default view on GitHub.com.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/notificationMarkRead"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "notifications.threads.id.get",
      "title": "notifications.threads.id.get",
      "description": "View a single thread.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of thread."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/notifications"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "notifications.threads.id.patch",
      "title": "notifications.threads.id.patch",
      "description": "Mark a thread as read",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of thread."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "notifications.threads.id.subscription.delete",
      "title": "notifications.threads.id.subscription.delete",
      "description": "Delete a Thread Subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of thread."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "notifications.threads.id.subscription.get",
      "title": "notifications.threads.id.subscription.get",
      "description": "Get a Thread Subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of thread."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/subscription"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "notifications.threads.id.subscription.put",
      "title": "notifications.threads.id.subscription.put",
      "description": "Set a Thread Subscription.\nThis lets you subscribe to a thread, or ignore it. Subscribing to a thread\nis unnecessary if the user is already subscribed to the repository. Ignoring\na thread will mute all future notifications (until you comment or get @mentioned).\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of thread."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/putSubscription"
          }
        },
        "additionalProperties": false,
        "required": [
          "id",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/subscription"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.get",
      "title": "orgs.org.get",
      "description": "Get an Organization.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/organization"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.patch",
      "title": "orgs.org.patch",
      "description": "Edit an Organization.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/patchOrg"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/organization"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.events.get",
      "title": "orgs.org.events.get",
      "description": "List public events for an organization.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/events"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.issues.get",
      "title": "orgs.org.issues.get",
      "description": "List issues.\nList all issues for a given organization for the authenticated user.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "filter": {
            "type": "string",
            "description": "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n",
            "enum": [
              "assigned",
              "created",
              "mentioned",
              "subscribed",
              "all"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          "labels": {
            "type": "string",
            "description": "String list of comma separated Label names. Example - bug,ui,@high."
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "comments"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "since": {
            "type": "string",
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "filter",
          "state",
          "labels",
          "sort",
          "direction"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issues"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.members.get",
      "title": "orgs.org.members.get",
      "description": "Members list.\nList all users who are members of an organization. A member is a user tha\nbelongs to at least 1 team in the organization. If the authenticated user\nis also an owner of this organization then both concealed and public members\nwill be returned. If the requester is not an owner of the organization the\nquery will be redirected to the public members list.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.members.username.delete",
      "title": "orgs.org.members.username.delete",
      "description": "Remove a member.\nRemoving a user from this list will remove them from all teams and they\nwill no longer have any access to the organization's repositories.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "username": {
            "type": "string",
            "description": "Name of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.members.username.get",
      "title": "orgs.org.members.username.get",
      "description": "Check if a user is, publicly or privately, a member of the organization.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "username": {
            "type": "string",
            "description": "Name of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.public_members.get",
      "title": "orgs.org.public_members.get",
      "description": "Public members list.\nMembers of an organization can choose to have their membership publicized\nor not.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.public_members.username.delete",
      "title": "orgs.org.public_members.username.delete",
      "description": "Conceal a user's membership.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "username": {
            "type": "string",
            "description": "Name of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.public_members.username.get",
      "title": "orgs.org.public_members.username.get",
      "description": "Check public membership.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "username": {
            "type": "string",
            "description": "Name of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.public_members.username.put",
      "title": "orgs.org.public_members.username.put",
      "description": "Publicize a user's membership.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "username": {
            "type": "string",
            "description": "Name of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.repos.get",
      "title": "orgs.org.repos.get",
      "description": "List repositories for the specified org.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "type": {
            "type": "string",
            "enum": [
              "all",
              "public",
              "private",
              "forks",
              "sources",
              "member"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repos"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.repos.post",
      "title": "orgs.org.repos.post",
      "description": "Create a new repository for the authenticated user. OAuth users must supply\nrepo scope.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/postRepo"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repos"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.teams.get",
      "title": "orgs.org.teams.get",
      "description": "List teams.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "org"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/teams"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "orgs.org.teams.post",
      "title": "orgs.org.teams.post",
      "description": "Create team.\nIn order to create a team, the authenticated user must be an owner of organization.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "org": {
            "type": "string",
            "description": "Name of organisation."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/orgTeamsPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "org",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/team"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "rate_limit.get",
      "title": "rate_limit.get",
      "description": "Get your current rate limit status\nNote: Accessing this endpoint does not count against your rate limit.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/rate_limit"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.delete",
      "title": "repos.owner.repo.delete",
      "description": "Delete a Repository.\nDeleting a repository requires admin access. If OAuth is used, the delete_repo\nscope is required.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.get",
      "title": "repos.owner.repo.get",
      "description": "Get repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repo"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.patch",
      "title": "repos.owner.repo.patch",
      "description": "Edit repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/repoEdit"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repo"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.assignees.get",
      "title": "repos.owner.repo.assignees.get",
      "description": "List assignees.\nThis call lists all the available assignees (owner + collaborators) to which\nissues may be assigned.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/assignees"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.assignees.assignee.get",
      "title": "repos.owner.repo.assignees.assignee.get",
      "description": "Check assignee.\nYou may also check to see if a particular user is an assignee for a repository.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "assignee": {
            "type": "string",
            "description": "Login of the assignee."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "assignee"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.branches.get",
      "title": "repos.owner.repo.branches.get",
      "description": "Get list of branches",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/branches"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.branches.branch.get",
      "title": "repos.owner.repo.branches.branch.get",
      "description": "Get Branch",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "branch": {
            "type": "string",
            "description": "Name of the branch."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "branch"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/branch"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.collaborators.get",
      "title": "repos.owner.repo.collaborators.get",
      "description": "List.\nWhen authenticating as an organization owner of an organization-owned\nrepository, all organization owners are included in the list of\ncollaborators. Otherwise, only users with access to the repository are\nreturned in the collaborators list.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.collaborators.user.delete",
      "title": "repos.owner.repo.collaborators.user.delete",
      "description": "Remove collaborator.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "user": {
            "type": "string",
            "description": "Login of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "user"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.collaborators.user.get",
      "title": "repos.owner.repo.collaborators.user.get",
      "description": "Check if user is a collaborator",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "user": {
            "type": "string",
            "description": "Login of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "user"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.collaborators.user.put",
      "title": "repos.owner.repo.collaborators.user.put",
      "description": "Add collaborator.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "user": {
            "type": "string",
            "description": "Login of the user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "user"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.comments.get",
      "title": "repos.owner.repo.comments.get",
      "description": "List commit comments for a repository.\nComments are ordered by ascending ID.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repoComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.comments.commentId.delete",
      "title": "repos.owner.repo.comments.commentId.delete",
      "description": "Delete a commit comment",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.comments.commentId.get",
      "title": "repos.owner.repo.comments.commentId.get",
      "description": "Get a single commit comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/commitComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.comments.commentId.patch",
      "title": "repos.owner.repo.comments.commentId.patch",
      "description": "Update a commit comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/commentBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/commitComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.commits.get",
      "title": "repos.owner.repo.commits.get",
      "description": "List commits on a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "since": {
            "type": "string",
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
          },
          "sha": {
            "type": "string",
            "description": "Sha or branch to start listing commits from."
          },
          "path": {
            "type": "string",
            "description": "Only commits containing this file path will be returned."
          },
          "author": {
            "type": "string",
            "description": "GitHub login, name, or email by which to filter by commit author."
          },
          "until": {
            "type": "string",
            "description": "ISO 8601 Date - Only commits before this date will be returned."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/commits"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.commits.ref.status.get",
      "title": "repos.owner.repo.commits.ref.status.get",
      "description": "Get the combined Status for a specific Ref\nThe Combined status endpoint is currently available for developers to preview. During the preview period, the API may change without advance notice. Please see the blog post for full details.\nTo access this endpoint during the preview period, you must provide a custom media type in the Accept header:\napplication/vnd.github.she-hulk-preview+json\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "ref": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "ref"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/refStatus"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.commits.shaCode.get",
      "title": "repos.owner.repo.commits.shaCode.get",
      "description": "Get a single commit.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "shaCode": {
            "type": "string",
            "description": "SHA-1 code of the commit."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "shaCode"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/commit"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.commits.shaCode.comments.get",
      "title": "repos.owner.repo.commits.shaCode.comments.get",
      "description": "List comments for a single commitList comments for a single commit.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "shaCode": {
            "type": "string",
            "description": "SHA-1 code of the commit."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "shaCode"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repoComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.commits.shaCode.comments.post",
      "title": "repos.owner.repo.commits.shaCode.comments.post",
      "description": "Create a commit comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "shaCode": {
            "type": "string",
            "description": "SHA-1 code of the commit."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/commitBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "shaCode",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/commitComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.compare.baseId...headId.get",
      "title": "repos.owner.repo.compare.baseId...headId.get",
      "description": "Compare two commits",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "baseId": {
            "type": "string"
          },
          "headId": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "baseId",
          "headId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/compare-commits"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.contents.path.delete",
      "title": "repos.owner.repo.contents.path.delete",
      "description": "Delete a file.\nThis method deletes a file in a repository.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "path": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/deleteFileBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "path",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/deleteFile"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.contents.path.get",
      "title": "repos.owner.repo.contents.path.get",
      "description": "Get contents.\nThis method returns the contents of a file or directory in a repository.\nFiles and symlinks support a custom media type for getting the raw content.\nDirectories and submodules do not support custom media types.\nNote: This API supports files up to 1 megabyte in size.\nHere can be many outcomes. For details see \"http://developer.github.com/v3/repos/contents/\"\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "path": {
            "type": "string"
          },
          "path_query": {
            "type": "string",
            "description": "The content path."
          },
          "ref": {
            "type": "string",
            "description": "The String name of the Commit/Branch/Tag. Defaults to 'master'."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "path"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/contents-path"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.contents.path.put",
      "title": "repos.owner.repo.contents.path.put",
      "description": "Create a file.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "path": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/createFileBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "path",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/createFile"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.contributors.get",
      "title": "repos.owner.repo.contributors.get",
      "description": "Get list of contributors.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "anon": {
            "type": "string",
            "description": "Set to 1 or true to include anonymous contributors in results."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "anon"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/contributors"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.deployments.get",
      "title": "repos.owner.repo.deployments.get",
      "description": "Users with pull access can view deployments for a repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repo-deployments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.deployments.post",
      "title": "repos.owner.repo.deployments.post",
      "description": "Users with push access can create a deployment for a given ref",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/deployment"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/deployment-resp"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.deployments.id.statuses.get",
      "title": "repos.owner.repo.deployments.id.statuses.get",
      "description": "Users with pull access can view deployment statuses for a deployment",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "integer",
            "description": "The Deployment ID to list the statuses from."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/deployment-statuses"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.deployments.id.statuses.post",
      "title": "repos.owner.repo.deployments.id.statuses.post",
      "description": "Create a Deployment Status\nUsers with push access can create deployment statuses for a given deployment:\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "integer",
            "description": "The Deployment ID to list the statuses from."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/deployment-statuses-create"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id",
          "body"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.downloads.get",
      "title": "repos.owner.repo.downloads.get",
      "description": "Deprecated. List downloads for a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/downloads"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.downloads.downloadId.delete",
      "title": "repos.owner.repo.downloads.downloadId.delete",
      "description": "Deprecated. Delete a download.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "downloadId": {
            "type": "integer",
            "description": "Id of download."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "downloadId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.downloads.downloadId.get",
      "title": "repos.owner.repo.downloads.downloadId.get",
      "description": "Deprecated. Get a single download.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "downloadId": {
            "type": "integer",
            "description": "Id of download."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "downloadId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/downloads"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.events.get",
      "title": "repos.owner.repo.events.get",
      "description": "Get list of repository events.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/events"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.forks.get",
      "title": "repos.owner.repo.forks.get",
      "description": "List forks.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "sort": {
            "type": "string",
            "enum": [
              "newes",
              "oldes",
              "watchers"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/forks"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.forks.post",
      "title": "repos.owner.repo.forks.post",
      "description": "Create a fork.\nForking a Repository happens asynchronously. Therefore, you may have to wai\na short period before accessing the git objects. If this takes longer than 5\nminutes, be sure to contact Support.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/forkBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/fork"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.blobs.post",
      "title": "repos.owner.repo.git.blobs.post",
      "description": "Create a Blob.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/blob"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/blobs"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.blobs.shaCode.get",
      "title": "repos.owner.repo.git.blobs.shaCode.get",
      "description": "Get a Blob.\nSince blobs can be any arbitrary binary data, the input and responses for\nthe blob API takes an encoding parameter that can be either utf-8 or\nbase64. If your data cannot be losslessly sent as a UTF-8 string, you can\nbase64 encode it.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "shaCode": {
            "type": "string",
            "description": "SHA-1 code."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "shaCode"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/blob"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.commits.post",
      "title": "repos.owner.repo.git.commits.post",
      "description": "Create a Commit.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/repoCommitBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gitCommit"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.commits.shaCode.get",
      "title": "repos.owner.repo.git.commits.shaCode.get",
      "description": "Get a Commit.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "shaCode": {
            "type": "string",
            "description": "SHA-1 code."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "shaCode"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repoCommit"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.refs.get",
      "title": "repos.owner.repo.git.refs.get",
      "description": "Get all References",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/refs"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.refs.post",
      "title": "repos.owner.repo.git.refs.post",
      "description": "Create a Reference",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/refsBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/headBranch"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.refs.ref.delete",
      "title": "repos.owner.repo.git.refs.ref.delete",
      "description": "Delete a Reference\nExample: Deleting a branch: DELETE /repos/octocat/Hello-World/git/refs/heads/feature-a \nExample: Deleting a tag:        DELETE /repos/octocat/Hello-World/git/refs/tags/v1.0\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "ref": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "ref"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.refs.ref.get",
      "title": "repos.owner.repo.git.refs.ref.get",
      "description": "Get a Reference",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "ref": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "ref"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/headBranch"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.refs.ref.patch",
      "title": "repos.owner.repo.git.refs.ref.patch",
      "description": "Update a Reference",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "ref": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/gitRefPatch"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "ref",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/headBranch"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.tags.post",
      "title": "repos.owner.repo.git.tags.post",
      "description": "Create a Tag Object.\nNote that creating a tag object does not create the reference that makes a\ntag in Git. If you want to create an annotated tag in Git, you have to do\nthis call to create the tag object, and then create the refs/tags/[tag]\nreference. If you want to create a lightweight tag, you only have to create\nthe tag reference - this call would be unnecessary.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/tag"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/tags"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.tags.shaCode.get",
      "title": "repos.owner.repo.git.tags.shaCode.get",
      "description": "Get a Tag.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "shaCode": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "shaCode"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/tag"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.trees.post",
      "title": "repos.owner.repo.git.trees.post",
      "description": "Create a Tree.\nThe tree creation API will take nested entries as well. If both a tree and\na nested path modifying that tree are specified, it will overwrite the\ncontents of that tree with the new path contents and write a new tree out.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/tree"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/trees"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.git.trees.shaCode.get",
      "title": "repos.owner.repo.git.trees.shaCode.get",
      "description": "Get a Tree.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "shaCode": {
            "type": "string",
            "description": "Tree SHA."
          },
          "recursive": {
            "type": "integer",
            "description": "Get a Tree Recursively. (0 or 1)"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "shaCode"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/tree"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.hooks.get",
      "title": "repos.owner.repo.hooks.get",
      "description": "Get list of hooks.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/hook"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.hooks.post",
      "title": "repos.owner.repo.hooks.post",
      "description": "Create a hook.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/hookBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/hook"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.hooks.hookId.delete",
      "title": "repos.owner.repo.hooks.hookId.delete",
      "description": "Delete a hook.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "hookId": {
            "type": "integer",
            "description": "Id of hook."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "hookId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.hooks.hookId.get",
      "title": "repos.owner.repo.hooks.hookId.get",
      "description": "Get single hook.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "hookId": {
            "type": "integer",
            "description": "Id of hook."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "hookId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/hook"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.hooks.hookId.patch",
      "title": "repos.owner.repo.hooks.hookId.patch",
      "description": "Edit a hook.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "hookId": {
            "type": "integer",
            "description": "Id of hook."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/hookBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "hookId",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/hook"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.hooks.hookId.tests.post",
      "title": "repos.owner.repo.hooks.hookId.tests.post",
      "description": "Test a push hook.\nThis will trigger the hook with the latest push to the current repository\nif the hook is subscribed to push events. If the hook is not subscribed\nto push events, the server will respond with 204 but no test POST will\nbe generated.\nNote: Previously /repos/:owner/:repo/hooks/:id/tes\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "hookId": {
            "type": "integer",
            "description": "Id of hook."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "hookId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.get",
      "title": "repos.owner.repo.issues.get",
      "description": "List issues for a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "filter": {
            "type": "string",
            "description": "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n",
            "enum": [
              "assigned",
              "created",
              "mentioned",
              "subscribed",
              "all"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          "labels": {
            "type": "string",
            "description": "String list of comma separated Label names. Example - bug,ui,@high."
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "comments"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "since": {
            "type": "string",
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "filter",
          "state",
          "labels",
          "sort",
          "direction"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issues"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.post",
      "title": "repos.owner.repo.issues.post",
      "description": "Create an issue.\nAny user with pull access to a repository can create an issue.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/issue"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issue"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.comments.get",
      "title": "repos.owner.repo.issues.comments.get",
      "description": "List comments in a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "direction": {
            "type": "string",
            "description": "Ignored without 'sort' parameter."
          },
          "sort": {
            "type": "string",
            "description": "",
            "enum": [
              "created",
              "updated"
            ]
          },
          "since": {
            "type": "string",
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issuesComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.comments.commentId.delete",
      "title": "repos.owner.repo.issues.comments.commentId.delete",
      "description": "Delete a comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "ID of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.comments.commentId.get",
      "title": "repos.owner.repo.issues.comments.commentId.get",
      "description": "Get a single comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "ID of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issuesComment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.comments.commentId.patch",
      "title": "repos.owner.repo.issues.comments.commentId.patch",
      "description": "Edit a comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "ID of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/commentBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issuesComment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.events.get",
      "title": "repos.owner.repo.issues.events.get",
      "description": "List issue events for a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/events"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.events.eventId.get",
      "title": "repos.owner.repo.issues.events.eventId.get",
      "description": "Get a single event.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "eventId": {
            "type": "integer",
            "description": "Id of the event."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "eventId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/event"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.get",
      "title": "repos.owner.repo.issues.number.get",
      "description": "Get a single issue",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issue"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.patch",
      "title": "repos.owner.repo.issues.number.patch",
      "description": "Edit an issue.\nIssue owners and users with push access can edit an issue.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/issue"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issue"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.comments.get",
      "title": "repos.owner.repo.issues.number.comments.get",
      "description": "List comments on an issue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issuesComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.comments.post",
      "title": "repos.owner.repo.issues.number.comments.post",
      "description": "Create a comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/commentBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issuesComment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.events.get",
      "title": "repos.owner.repo.issues.number.events.get",
      "description": "List events for an issue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/events"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.labels.delete",
      "title": "repos.owner.repo.issues.number.labels.delete",
      "description": "Remove all labels from an issue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.labels.get",
      "title": "repos.owner.repo.issues.number.labels.get",
      "description": "List labels on an issue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/labels"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.labels.post",
      "title": "repos.owner.repo.issues.number.labels.post",
      "description": "Add labels to an issue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/emailsPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/label"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.labels.put",
      "title": "repos.owner.repo.issues.number.labels.put",
      "description": "Replace all labels for an issue.\nSending an empty array ([]) will remove all Labels from the Issue.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/emailsPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/label"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.issues.number.labels.name.delete",
      "title": "repos.owner.repo.issues.number.labels.name.delete",
      "description": "Remove a label from an issue.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of issue."
          },
          "name": {
            "type": "string",
            "description": "Name of the label."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "name"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.keys.get",
      "title": "repos.owner.repo.keys.get",
      "description": "Get list of keys.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/keys"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.keys.post",
      "title": "repos.owner.repo.keys.post",
      "description": "Create a key.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/user-keys-post"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/user-keys-keyId"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.keys.keyId.delete",
      "title": "repos.owner.repo.keys.keyId.delete",
      "description": "Delete a key.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "keyId": {
            "type": "integer",
            "description": "Id of key."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "keyId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.keys.keyId.get",
      "title": "repos.owner.repo.keys.keyId.get",
      "description": "Get a key",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "keyId": {
            "type": "integer",
            "description": "Id of key."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "keyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/user-keys-keyId"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.labels.get",
      "title": "repos.owner.repo.labels.get",
      "description": "List all labels for this repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/labels"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.labels.post",
      "title": "repos.owner.repo.labels.post",
      "description": "Create a label.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/emailsPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/label"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.labels.name.delete",
      "title": "repos.owner.repo.labels.name.delete",
      "description": "Delete a label.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "name": {
            "type": "string",
            "description": "Name of the label."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "name"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.labels.name.get",
      "title": "repos.owner.repo.labels.name.get",
      "description": "Get a single label.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "name": {
            "type": "string",
            "description": "Name of the label."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "name"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/label"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.labels.name.patch",
      "title": "repos.owner.repo.labels.name.patch",
      "description": "Update a label.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "name": {
            "type": "string",
            "description": "Name of the label."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/emailsPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "name",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/label"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.languages.get",
      "title": "repos.owner.repo.languages.get",
      "description": "List languages.\nList languages for the specified repository. The value on the right of a\nlanguage is the number of bytes of code written in that language.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/languages"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.merges.post",
      "title": "repos.owner.repo.merges.post",
      "description": "Perform a merge.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/mergesBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/mergesSuccessful"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.milestones.get",
      "title": "repos.owner.repo.milestones.get",
      "description": "List milestones for a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "state": {
            "type": "string",
            "description": "String to filter by state.",
            "enum": [
              "open",
              "closed"
            ]
          },
          "direction": {
            "type": "string",
            "description": "Ignored without 'sort' parameter."
          },
          "sort": {
            "type": "string",
            "description": "",
            "enum": [
              "due_date",
              "completeness"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/milestone"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.milestones.post",
      "title": "repos.owner.repo.milestones.post",
      "description": "Create a milestone.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/milestoneUpdate"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/milestone"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.milestones.number.delete",
      "title": "repos.owner.repo.milestones.number.delete",
      "description": "Delete a milestone.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of milestone."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.milestones.number.get",
      "title": "repos.owner.repo.milestones.number.get",
      "description": "Get a single milestone.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of milestone."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/milestone"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.milestones.number.patch",
      "title": "repos.owner.repo.milestones.number.patch",
      "description": "Update a milestone.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of milestone."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/milestoneUpdate"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/milestone"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.milestones.number.labels.get",
      "title": "repos.owner.repo.milestones.number.labels.get",
      "description": "Get labels for every issue in a milestone.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Number of milestone."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/labels"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.notifications.get",
      "title": "repos.owner.repo.notifications.get",
      "description": "List your notifications in a repository\nList all notifications for the current user.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "all": {
            "type": "boolean",
            "description": "True to show notifications marked as read."
          },
          "participating": {
            "type": "boolean",
            "description": "True to show only notifications in which the user is directly participating\nor mentioned.\n"
          },
          "since": {
            "type": "string",
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/notifications"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.notifications.put",
      "title": "repos.owner.repo.notifications.put",
      "description": "Mark notifications as read in a repository.\nMarking all notifications in a repository as \"read\" removes them from the\ndefault view on GitHub.com.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/notificationMarkRead"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.get",
      "title": "repos.owner.repo.pulls.get",
      "description": "List pull requests.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "state": {
            "type": "string",
            "description": "String to filter by state.",
            "enum": [
              "open",
              "closed"
            ]
          },
          "head": {
            "type": "string",
            "description": "Filter pulls by head user and branch name in the format of 'user:ref-name'.\nExample: github:new-script-format.\n"
          },
          "base": {
            "type": "string",
            "description": "Filter pulls by base branch name. Example - gh-pages."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pulls"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.post",
      "title": "repos.owner.repo.pulls.post",
      "description": "Create a pull request.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/pullsPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pulls"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.comments.get",
      "title": "repos.owner.repo.pulls.comments.get",
      "description": "List comments in a repository.\nBy default, Review Comments are ordered by ascending ID.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "direction": {
            "type": "string",
            "description": "Ignored without 'sort' parameter."
          },
          "sort": {
            "type": "string",
            "description": "",
            "enum": [
              "created",
              "updated"
            ]
          },
          "since": {
            "type": "string",
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issuesComments"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.comments.commentId.delete",
      "title": "repos.owner.repo.pulls.comments.commentId.delete",
      "description": "Delete a comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.comments.commentId.get",
      "title": "repos.owner.repo.pulls.comments.commentId.get",
      "description": "Get a single comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pullsComment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.comments.commentId.patch",
      "title": "repos.owner.repo.pulls.comments.commentId.patch",
      "description": "Edit a comment.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "commentId": {
            "type": "integer",
            "description": "Id of comment."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/commentBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "commentId",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pullsComment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.get",
      "title": "repos.owner.repo.pulls.number.get",
      "description": "Get a single pull request.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pullRequest"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.patch",
      "title": "repos.owner.repo.pulls.number.patch",
      "description": "Update a pull request.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/pullUpdate"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repo"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.comments.get",
      "title": "repos.owner.repo.pulls.number.comments.get",
      "description": "List comments on a pull request.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pullsComment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.comments.post",
      "title": "repos.owner.repo.pulls.number.comments.post",
      "description": "Create a comment.\n  #TODO Alternative input ( http://developer.github.com/v3/pulls/comments/ )\n  description: |\n    Alternative Input.\n    Instead of passing commit_id, path, and position you can reply to an\n    existing Pull Request Comment like this:\n\n        body\n           Required string\n        in_reply_to\n           Required number - Comment id to reply to.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/pullsCommentPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pullsComment"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.commits.get",
      "title": "repos.owner.repo.pulls.number.commits.get",
      "description": "List commits on a pull request.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/commits"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.files.get",
      "title": "repos.owner.repo.pulls.number.files.get",
      "description": "List pull requests files.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/pulls"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.merge.get",
      "title": "repos.owner.repo.pulls.number.merge.get",
      "description": "Get if a pull request has been merged.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.pulls.number.merge.put",
      "title": "repos.owner.repo.pulls.number.merge.put",
      "description": "Merge a pull request (Merge Button's)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "number": {
            "type": "integer",
            "description": "Id of pull."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/mergePullBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "number",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/merge"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.readme.get",
      "title": "repos.owner.repo.readme.get",
      "description": "Get the README.\nThis method returns the preferred README for a repository.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "ref": {
            "type": "string",
            "description": "The String name of the Commit/Branch/Tag. Defaults to master."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/contents-path"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.get",
      "title": "repos.owner.repo.releases.get",
      "description": "Users with push access to the repository will receive all releases (i.e., published releases and draft releases). Users with pull access will receive published releases only",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/releases"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.post",
      "title": "repos.owner.repo.releases.post",
      "description": "Create a release\nUsers with push access to the repository can create a release.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/release-create"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/release"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.assets.id.delete",
      "title": "repos.owner.repo.releases.assets.id.delete",
      "description": "Delete a release asset",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.assets.id.get",
      "title": "repos.owner.repo.releases.assets.id.get",
      "description": "Get a single release asset",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/asset"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.assets.id.patch",
      "title": "repos.owner.repo.releases.assets.id.patch",
      "description": "Edit a release asset\nUsers with push access to the repository can edit a release asset.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/assetPatch"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/asset"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.id.delete",
      "title": "repos.owner.repo.releases.id.delete",
      "description": "Users with push access to the repository can delete a release.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.id.get",
      "title": "repos.owner.repo.releases.id.get",
      "description": "Get a single release",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/release"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.id.patch",
      "title": "repos.owner.repo.releases.id.patch",
      "description": "Users with push access to the repository can edit a release",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/release-create"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/release"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.releases.id.assets.get",
      "title": "repos.owner.repo.releases.id.assets.get",
      "description": "List assets for a release",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "id": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "id"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/assets"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.stargazers.get",
      "title": "repos.owner.repo.stargazers.get",
      "description": "List Stargazers.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.stats.code_frequency.get",
      "title": "repos.owner.repo.stats.code_frequency.get",
      "description": "Get the number of additions and deletions per week.\nReturns a weekly aggregate of the number of additions and deletions pushed\nto a repository.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/codeFrequencyStats"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.stats.commit_activity.get",
      "title": "repos.owner.repo.stats.commit_activity.get",
      "description": "Get the last year of commit activity data.\nReturns the last year of commit activity grouped by week. The days array\nis a group of commits per day, starting on Sunday.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/commitActivityStats"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.stats.contributors.get",
      "title": "repos.owner.repo.stats.contributors.get",
      "description": "Get contributors list with additions, deletions, and commit counts.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/contributorsStats"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.stats.participation.get",
      "title": "repos.owner.repo.stats.participation.get",
      "description": "Get the weekly commit count for the repo owner and everyone else.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/participationStats"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.stats.punch_card.get",
      "title": "repos.owner.repo.stats.punch_card.get",
      "description": "Get the number of commits per hour in each day.\nEach array contains the day number, hour number, and number of commits\n0-6 Sunday - Saturday\n0-23 Hour of day\nNumber of commits\n\nFor example, [2, 14, 25] indicates that there were 25 total commits, during\nthe 2.00pm hour on Tuesdays. All times are based on the time zone of\nindividual commits.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/codeFrequencyStats"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.statuses.ref.get",
      "title": "repos.owner.repo.statuses.ref.get",
      "description": "List Statuses for a specific Ref.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "ref": {
            "type": "string",
            "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "ref"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ref"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.statuses.ref.post",
      "title": "repos.owner.repo.statuses.ref.post",
      "description": "Create a Status.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "ref": {
            "type": "string",
            "description": "Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/headBranch"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "ref",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ref"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.subscribers.get",
      "title": "repos.owner.repo.subscribers.get",
      "description": "List watchers.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.subscription.delete",
      "title": "repos.owner.repo.subscription.delete",
      "description": "Delete a Repository Subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.subscription.get",
      "title": "repos.owner.repo.subscription.get",
      "description": "Get a Repository Subscription.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/subscribition"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.subscription.put",
      "title": "repos.owner.repo.subscription.put",
      "description": "Set a Repository Subscription",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/subscribitionBody"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/subscribition"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.tags.get",
      "title": "repos.owner.repo.tags.get",
      "description": "Get list of tags.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/tags"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.teams.get",
      "title": "repos.owner.repo.teams.get",
      "description": "Get list of teams",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/teams"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.watchers.get",
      "title": "repos.owner.repo.watchers.get",
      "description": "List Stargazers. New implementation.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repos.owner.repo.archive_format.path.get",
      "title": "repos.owner.repo.archive_format.path.get",
      "description": "Get archive link.\nThis method will return a 302 to a URL to download a tarball or zipball\narchive for a repository. Please make sure your HTTP framework is\nconfigured to follow redirects or you will need to use the Location header\nto make a second GET request.\nNote: For private repositories, these links are temporary and expire quickly.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "archive_format": {
            "type": "string",
            "enum": [
              "tarball",
              "zipball"
            ]
          },
          "path": {
            "type": "string",
            "description": "Valid Git reference, defaults to 'master'."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo",
          "archive_format",
          "path"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "repositories.get",
      "title": "repositories.get",
      "description": "List all public repositories.\nThis provides a dump of every public repository, in the order that they\nwere created.\nNote: Pagination is powered exclusively by the since parameter. is the\nLink header to get the URL for the next page of repositories.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "since": {
            "type": "string",
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/repositories"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "search.code.get",
      "title": "search.code.get",
      "description": "Search code.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The sort field. if sort param is provided. Can be either asc or desc.",
            "enum": [
              "desc",
              "asc"
            ]
          },
          "q": {
            "type": "string",
            "description": "The search terms. This can be any combination of the supported code\nsearch parameters:\n'Search In' Qualifies which fields are searched. With this qualifier\nyou can restrict the search to just the file contents, the file path,\nor both.\n'Languages' Searches code based on the language it's written in.\n'Forks' Filters repositories based on the number of forks, and/or\nwhether code from forked repositories should be included in the results\nat all.\n'Size' Finds files that match a certain size (in bytes).\n'Path' Specifies the path that the resulting file must be at.\n'Extension' Matches files with a certain extension.\n'Users' or 'Repositories' Limits searches to a specific user or repository.\n"
          },
          "sort": {
            "type": "string",
            "description": "Can only be 'indexed', which indicates how recently a file has been indexed\nby the GitHub search infrastructure. If not provided, results are sorted\nby best match.\n",
            "enum": [
              "indexed"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "q"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-code"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "search.issues.get",
      "title": "search.issues.get",
      "description": "Find issues by state and keyword. (This method returns up to 100 results per page.)",
      "inputSchema": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The sort field. if sort param is provided. Can be either asc or desc.",
            "enum": [
              "desc",
              "asc"
            ]
          },
          "q": {
            "type": "string",
            "description": "The q search term can also contain any combination of the supported issue search qualifiers:"
          },
          "sort": {
            "type": "string",
            "description": "The sort field. Can be comments, created, or updated. Default: results are sorted by best match.",
            "enum": [
              "updated",
              "created",
              "comments"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "q"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-issues"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "search.repositories.get",
      "title": "search.repositories.get",
      "description": "Search repositories.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The sort field. if sort param is provided. Can be either asc or desc.",
            "enum": [
              "desc",
              "asc"
            ]
          },
          "q": {
            "type": "string",
            "description": "The search terms. This can be any combination of the supported repository\nsearch parameters:\n'Search In' Qualifies which fields are searched. With this qualifier you\ncan restrict the search to just the repository name, description, readme,\nor any combination of these.\n'Size' Finds repositories that match a certain size (in kilobytes).\n'Forks' Filters repositories based on the number of forks, and/or whether\nforked repositories should be included in the results at all.\n'Created' and 'Last Updated' Filters repositories based on times of\ncreation, or when they were last updated.\n'Users or Repositories' Limits searches to a specific user or repository.\n'Languages' Searches repositories based on the language they are written in.\n'Stars' Searches repositories based on the number of stars.\n"
          },
          "sort": {
            "type": "string",
            "description": "If not provided, results are sorted by best match.",
            "enum": [
              "stars",
              "forks",
              "updated"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "q"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-repositories"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "search.users.get",
      "title": "search.users.get",
      "description": "Search users.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "order": {
            "type": "string",
            "description": "The sort field. if sort param is provided. Can be either asc or desc.",
            "enum": [
              "desc",
              "asc"
            ]
          },
          "q": {
            "type": "string",
            "description": "The search terms. This can be any combination of the supported user\nsearch parameters:\n'Search In' Qualifies which fields are searched. With this qualifier you\ncan restrict the search to just the username, public email, full name,\nlocation, or any combination of these.\n'Repository count' Filters users based on the number of repositories they\nhave.\n'Location' Filter users by the location indicated in their profile.\n'Language' Search for users that have repositories that match a certain\nlanguage.\n'Created' Filter users based on when they joined.\n'Followers' Filter users based on the number of followers they have.\n"
          },
          "sort": {
            "type": "string",
            "description": "If not provided, results are sorted by best match.",
            "enum": [
              "followers",
              "repositories",
              "joined"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "q"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/search-users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.delete",
      "title": "teams.teamId.delete",
      "description": "Delete team.\nIn order to delete a team, the authenticated user must be an owner of the\norg that the team is associated with.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.get",
      "title": "teams.teamId.get",
      "description": "Get team.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/team"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.patch",
      "title": "teams.teamId.patch",
      "description": "Edit team.\nIn order to edit a team, the authenticated user must be an owner of the org\nthat the team is associated with.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/editTeam"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/team"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.members.get",
      "title": "teams.teamId.members.get",
      "description": "List team members.\nIn order to list members in a team, the authenticated user must be a member\nof the team.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.members.username.delete",
      "title": "teams.teamId.members.username.delete",
      "description": "The \"Remove team member\" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Remove team membership API instead. It allows you to remove both active and pending memberships.\n\nRemove team member.\nIn order to remove a user from a team, the authenticated user must have 'admin'\npermissions to the team or be an owner of the org that the team is associated\nwith.\nNOTE This does not delete the user, it just remove them from the team.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "username": {
            "type": "string",
            "description": "Name of a member."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.members.username.get",
      "title": "teams.teamId.members.username.get",
      "description": "The \"Get team member\" API is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Get team membership API instead. It allows you to get both active and pending memberships.\n\nGet team member.\nIn order to get if a user is a member of a team, the authenticated user mus\nbe a member of the team.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "username": {
            "type": "string",
            "description": "Name of a member."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.members.username.put",
      "title": "teams.teamId.members.username.put",
      "description": "The API (described below) is deprecated and is scheduled for removal in the next major version of the API. We recommend using the Add team membership API instead. It allows you to invite new organization members to your teams.\n\nAdd team member.\nIn order to add a user to a team, the authenticated user must have 'admin'\npermissions to the team or be an owner of the org that the team is associated\nwith.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "username": {
            "type": "string",
            "description": "Name of a member."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.memberships.username.delete",
      "title": "teams.teamId.memberships.username.delete",
      "description": "Remove team membership.\nIn order to remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. NOTE: This does not delete the user, it just removes their membership from the team.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "username": {
            "type": "string",
            "description": "Name of a member."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.memberships.username.get",
      "title": "teams.teamId.memberships.username.get",
      "description": "Get team membership.\nIn order to get a user's membership with a team, the authenticated user must be a member of the team or an owner of the team's organization.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "username": {
            "type": "string",
            "description": "Name of a member."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/teamMembership"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.memberships.username.put",
      "title": "teams.teamId.memberships.username.put",
      "description": "Add team membership.\nIn order to add a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with.\n\nIf the user is already a part of the team's organization (meaning they're on at least one other team in the organization), this endpoint will add the user to the team.\n\nIf the user is completely unaffiliated with the team's organization (meaning they're on none of the organization's teams), this endpoint will send an invitation to the user via email. This newly-created membership will be in the 'pending' state until the user accepts the invitation, at which point the membership will transition to the 'active' state and the user will be added as a member of the team.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "username": {
            "type": "string",
            "description": "Name of a member."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/teamMembership"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.repos.get",
      "title": "teams.teamId.repos.get",
      "description": "List team repos",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/teamRepos"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.repos.org.repo.put",
      "title": "teams.teamId.repos.org.repo.put",
      "description": "In order to add a repository to a team, the authenticated user must be an owner of the org that the team is associated with. Also, the repository must be owned by the organization, or a direct fork of a repository owned by the organization.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "org": {
            "type": "string",
            "description": "Name of a organization."
          },
          "repo": {
            "type": "string",
            "description": "Name of a repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "org",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.repos.owner.repo.delete",
      "title": "teams.teamId.repos.owner.repo.delete",
      "description": "In order to remove a repository from a team, the authenticated user must be an owner of the org that the team is associated with. NOTE: This does not delete the repository, it just removes it from the team.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "owner": {
            "type": "string",
            "description": "Name of a repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of a repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "teams.teamId.repos.owner.repo.get",
      "title": "teams.teamId.repos.owner.repo.get",
      "description": "Check if a team manages a repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "teamId": {
            "type": "integer",
            "description": "Id of team."
          },
          "owner": {
            "type": "string",
            "description": "Name of a repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of a repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "teamId",
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.get",
      "title": "user.get",
      "description": "Get the authenticated user.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/user"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.patch",
      "title": "user.patch",
      "description": "Update the authenticated user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/user-update"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/user"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.emails.delete",
      "title": "user.emails.delete",
      "description": "Delete email address(es).\nYou can include a single email address or an array of addresses.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/user-emails"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.emails.get",
      "title": "user.emails.get",
      "description": "List email addresses for a user.\nIn the final version of the API, this method will return an array of hashes\nwith extended information for each email address indicating if the address\nhas been verified and if it's primary email address for GitHub.\nUntil API v3 is finalized, use the application/vnd.github.v3 media type to\nget other response format.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/user-emails"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.emails.post",
      "title": "user.emails.post",
      "description": "Add email address(es).\nYou can post a single email address or an array of addresses.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/emailsPost"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.followers.get",
      "title": "user.followers.get",
      "description": "List the authenticated user's followers",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.following.get",
      "title": "user.following.get",
      "description": "List who the authenticated user is following.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.following.username.delete",
      "title": "user.following.username.delete",
      "description": "Unfollow a user.\nUnfollowing a user requires the user to be logged in and authenticated with\nbasic auth or OAuth with the user:follow scope.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.following.username.get",
      "title": "user.following.username.get",
      "description": "Check if you are following a user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.following.username.put",
      "title": "user.following.username.put",
      "description": "Follow a user.\nFollowing a user requires the user to be logged in and authenticated with\nbasic auth or OAuth with the user:follow scope.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.issues.get",
      "title": "user.issues.get",
      "description": "List issues.\nList all issues across owned and member repositories for the authenticated\nuser.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Issues assigned to you / created by you / mentioning you / you're\nsubscribed to updates for / All issues the authenticated user can see\n",
            "enum": [
              "assigned",
              "created",
              "mentioned",
              "subscribed",
              "all"
            ]
          },
          "state": {
            "type": "string",
            "enum": [
              "open",
              "closed"
            ]
          },
          "labels": {
            "type": "string",
            "description": "String list of comma separated Label names. Example - bug,ui,@high."
          },
          "sort": {
            "type": "string",
            "enum": [
              "created",
              "updated",
              "comments"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "since": {
            "type": "string",
            "description": "Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nOnly issues updated at or after this time are returned.\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "filter",
          "state",
          "labels",
          "sort",
          "direction"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/issues"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.keys.get",
      "title": "user.keys.get",
      "description": "List your public keys.\nLists the current user's keys. Management of public keys via the API requires\nthat you are authenticated through basic auth, or OAuth with the 'user', 'write:public_key' scopes.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/gitignore"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.keys.post",
      "title": "user.keys.post",
      "description": "Create a public key.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/user-keys-post"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/user-keys-keyId"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.keys.keyId.delete",
      "title": "user.keys.keyId.delete",
      "description": "Delete a public key. Removes a public key. Requires that you are authenticated via Basic Auth or via OAuth with at least admin:public_key scope.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keyId": {
            "type": "integer",
            "description": "ID of key."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "keyId"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.keys.keyId.get",
      "title": "user.keys.keyId.get",
      "description": "Get a single public key.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "keyId": {
            "type": "integer",
            "description": "ID of key."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "keyId"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/user-keys-keyId"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.orgs.get",
      "title": "user.orgs.get",
      "description": "List public and private organizations for the authenticated user.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/gitignore"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.repos.get",
      "title": "user.repos.get",
      "description": "List repositories for the authenticated user. Note that this does not include\nrepositories owned by organizations which the user can access. You can lis\nuser organizations and list organization repositories separately.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "all",
              "public",
              "private",
              "forks",
              "sources",
              "member"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/repos"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.repos.post",
      "title": "user.repos.post",
      "description": "Create a new repository for the authenticated user. OAuth users must supply\nrepo scope.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "body": {
            "$ref": "#/definitions/postRepo"
          }
        },
        "additionalProperties": false,
        "required": [
          "body"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repos"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.starred.get",
      "title": "user.starred.get",
      "description": "List repositories being starred by the authenticated user.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "direction": {
            "type": "string",
            "description": "Ignored without 'sort' parameter."
          },
          "sort": {
            "type": "string",
            "description": "",
            "enum": [
              "created",
              "updated"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/gitignore"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.starred.owner.repo.delete",
      "title": "user.starred.owner.repo.delete",
      "description": "Unstar a repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of a repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of a repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.starred.owner.repo.get",
      "title": "user.starred.owner.repo.get",
      "description": "Check if you are starring a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of a repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of a repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.starred.owner.repo.put",
      "title": "user.starred.owner.repo.put",
      "description": "Star a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of a repository owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of a repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.subscriptions.get",
      "title": "user.subscriptions.get",
      "description": "List repositories being watched by the authenticated user.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/user-userId-subscribitions"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.subscriptions.owner.repo.delete",
      "title": "user.subscriptions.owner.repo.delete",
      "description": "Stop watching a repository",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of the owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.subscriptions.owner.repo.get",
      "title": "user.subscriptions.owner.repo.get",
      "description": "Check if you are watching a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of the owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.subscriptions.owner.repo.put",
      "title": "user.subscriptions.owner.repo.put",
      "description": "Watch a repository.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string",
            "description": "Name of the owner."
          },
          "repo": {
            "type": "string",
            "description": "Name of repository."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "owner",
          "repo"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "user.teams.get",
      "title": "user.teams.get",
      "description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires user or repo scope when authenticating via OAuth.",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/teams-list"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.get",
      "title": "users.get",
      "description": "Get all users.\nThis provides a dump of every user, in the order that they signed up for GitHub.\nNote: Pagination is powered exclusively by the since parameter. Use the Link\nheader to get the URL for the next page of users.\n",
      "inputSchema": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "since": {
            "type": "integer",
            "description": "The integer ID of the last User that you've seen."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.get",
      "title": "users.username.get",
      "description": "Get a single user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.events.get",
      "title": "users.username.events.get",
      "description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.events.orgs.org.get",
      "title": "users.username.events.orgs.org.get",
      "description": "This is the user's organization dashboard. You must be authenticated as the user to view this.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "org": {
            "type": "string"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username",
          "org"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.followers.get",
      "title": "users.username.followers.get",
      "description": "List a user's followers",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/users"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.following.targetUser.get",
      "title": "users.username.following.targetUser.get",
      "description": "Check if one user follows another.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "targetUser": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username",
          "targetUser"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.gists.get",
      "title": "users.username.gists.get",
      "description": "List a users gists.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "since": {
            "type": "string",
            "description": "The time should be passed in as UTC in the ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\nExample: \"2012-10-09T23:39:01Z\".\n"
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gists"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.keys.get",
      "title": "users.username.keys.get",
      "description": "List public keys for a user.\nLists the verified public keys for a user. This is accessible by anyone.\n",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gitignore"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.orgs.get",
      "title": "users.username.orgs.get",
      "description": "List all public organizations for a user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/gitignore"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.received_events.get",
      "title": "users.username.received_events.get",
      "description": "These are events that you'll only see public events.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.received_events.public.get",
      "title": "users.username.received_events.public.get",
      "description": "List public events that a user has received",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.repos.get",
      "title": "users.username.repos.get",
      "description": "List public repositories for the specified user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "type": {
            "type": "string",
            "enum": [
              "all",
              "public",
              "private",
              "forks",
              "sources",
              "member"
            ]
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/repos"
      },
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.starred.get",
      "title": "users.username.starred.get",
      "description": "List repositories being starred by a user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    },
    {
      "id": "users.username.subscriptions.get",
      "title": "users.username.subscriptions.get",
      "description": "List repositories being watched by a user.",
      "inputSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Name of user."
          },
          "X-GitHub-Media-Type": {
            "type": "string",
            "description": "You can check the current version of media type in responses.\n"
          },
          "Accept": {
            "type": "string",
            "description": "Is used to set specified media type."
          },
          "X-RateLimit-Limit": {
            "type": "integer"
          },
          "X-RateLimit-Remaining": {
            "type": "integer"
          },
          "X-RateLimit-Reset": {
            "type": "integer"
          },
          "X-GitHub-Request-Id": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "additionalProperties": false,
        "required": [
          "username"
        ]
      },
      "outputSchema": {},
      "security": {
        "github": {
          "integration": "github"
        }
      }
    }
  ],
  "tags": [
    "collaboration",
    "developer tools"
  ]
}