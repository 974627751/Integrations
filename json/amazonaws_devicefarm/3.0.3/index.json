{
  "id": "amazonaws_devicefarm",
  "title": "AWS Device Farm",
  "description": "AWS Device Farm is a service that enables mobile app developers to test Android, iOS, and Fire OS apps on physical phones, tablets, and other devices in the cloud.",
  "security": {
    "amazonaws_devicefarm": {
      "integration": "amazonaws_devicefarm",
      "fields": {
        "accessKeyId": "",
        "secretAccessKey": "",
        "region": "AWS region (if applicable)"
      }
    }
  },
  "logo": {
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_devicefarm.svg"
  },
  "actionCount": 49,
  "definitions": {
    "AWSAccountNumber": {
      "maxLength": 16,
      "minLength": 2,
      "type": "string",
      "title": "AWSAccountNumber"
    },
    "AccountSettings": {
      "description": "A container for account-level settings within AWS Device Farm.",
      "properties": {
        "awsAccountNumber": {
          "$ref": "#/definitions/AWSAccountNumber",
          "description": "The AWS account number specified in the <code>AccountSettings</code> container."
        },
        "defaultJobTimeoutMinutes": {
          "$ref": "#/definitions/JobTimeoutMinutes",
          "description": "The default number of minutes (at the account level) a test run will execute before it times out. Default value is 60 minutes."
        },
        "maxJobTimeoutMinutes": {
          "$ref": "#/definitions/JobTimeoutMinutes",
          "description": "The maximum number of minutes a test run will execute before it times out."
        },
        "maxSlots": {
          "$ref": "#/definitions/MaxSlotMap",
          "description": "The maximum number of device slots that the AWS account can purchase. Each maximum is expressed as an <code>offering-id:number</code> pair, where the <code>offering-id</code> represents one of the IDs returned by the <code>ListOfferings</code> command."
        },
        "trialMinutes": {
          "$ref": "#/definitions/TrialMinutes",
          "description": "Information about an AWS account's usage of free trial device minutes."
        },
        "unmeteredDevices": {
          "$ref": "#/definitions/PurchasedDevicesMap",
          "description": "Returns the unmetered devices you have purchased or want to purchase."
        },
        "unmeteredRemoteAccessDevices": {
          "$ref": "#/definitions/PurchasedDevicesMap",
          "description": "Returns the unmetered remote access devices you have purchased or want to purchase."
        }
      },
      "type": "object",
      "title": "AccountSettings"
    },
    "AccountsCleanup": {
      "type": "boolean",
      "title": "AccountsCleanup"
    },
    "AmazonResourceName": {
      "minLength": 32,
      "type": "string",
      "title": "AmazonResourceName"
    },
    "AmazonResourceNames": {
      "items": {
        "$ref": "#/definitions/AmazonResourceName"
      },
      "type": "array",
      "title": "AmazonResourceNames"
    },
    "AppPackagesCleanup": {
      "type": "boolean",
      "title": "AppPackagesCleanup"
    },
    "ArgumentException": {
      "description": "An invalid argument was specified.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "Any additional information about the exception."
        }
      },
      "type": "object",
      "title": "ArgumentException"
    },
    "Artifact": {
      "description": "Represents the output of a test. Examples of artifacts include logs and screenshots.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The artifact's ARN."
        },
        "extension": {
          "$ref": "#/definitions/String",
          "description": "The artifact's file extension."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The artifact's name."
        },
        "type": {
          "$ref": "#/definitions/ArtifactType",
          "description": "<p>The artifact's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>UNKNOWN: An unknown type.</p> </li> <li> <p>SCREENSHOT: The screenshot type.</p> </li> <li> <p>DEVICE_LOG: The device log type.</p> </li> <li> <p>MESSAGE_LOG: The message log type.</p> </li> <li> <p>RESULT_LOG: The result log type.</p> </li> <li> <p>SERVICE_LOG: The service log type.</p> </li> <li> <p>WEBKIT_LOG: The web kit log type.</p> </li> <li> <p>INSTRUMENTATION_OUTPUT: The instrumentation type.</p> </li> <li> <p>EXERCISER_MONKEY_OUTPUT: For Android, the artifact (log) generated by an Android fuzz test.</p> </li> <li> <p>CALABASH_JSON_OUTPUT: The Calabash JSON output type.</p> </li> <li> <p>CALABASH_PRETTY_OUTPUT: The Calabash pretty output type.</p> </li> <li> <p>CALABASH_STANDARD_OUTPUT: The Calabash standard output type.</p> </li> <li> <p>CALABASH_JAVA_XML_OUTPUT: The Calabash Java XML output type.</p> </li> <li> <p>AUTOMATION_OUTPUT: The automation output type.</p> </li> <li> <p>APPIUM_SERVER_OUTPUT: The Appium server output type.</p> </li> <li> <p>APPIUM_JAVA_OUTPUT: The Appium Java output type.</p> </li> <li> <p>APPIUM_JAVA_XML_OUTPUT: The Appium Java XML output type.</p> </li> <li> <p>APPIUM_PYTHON_OUTPUT: The Appium Python output type.</p> </li> <li> <p>APPIUM_PYTHON_XML_OUTPUT: The Appium Python XML output type.</p> </li> <li> <p>EXPLORER_EVENT_LOG: The Explorer event log output type.</p> </li> <li> <p>EXPLORER_SUMMARY_LOG: The Explorer summary log output type.</p> </li> <li> <p>APPLICATION_CRASH_REPORT: The application crash report output type.</p> </li> <li> <p>XCTEST_LOG: The XCode test output type.</p> </li> </ul>"
        },
        "url": {
          "$ref": "#/definitions/URL",
          "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the artifact's file."
        }
      },
      "type": "object",
      "title": "Artifact"
    },
    "ArtifactCategory": {
      "enum": [
        "SCREENSHOT",
        "FILE",
        "LOG"
      ],
      "type": "string",
      "title": "ArtifactCategory"
    },
    "ArtifactType": {
      "enum": [
        "UNKNOWN",
        "SCREENSHOT",
        "DEVICE_LOG",
        "MESSAGE_LOG",
        "VIDEO_LOG",
        "RESULT_LOG",
        "SERVICE_LOG",
        "WEBKIT_LOG",
        "INSTRUMENTATION_OUTPUT",
        "EXERCISER_MONKEY_OUTPUT",
        "CALABASH_JSON_OUTPUT",
        "CALABASH_PRETTY_OUTPUT",
        "CALABASH_STANDARD_OUTPUT",
        "CALABASH_JAVA_XML_OUTPUT",
        "AUTOMATION_OUTPUT",
        "APPIUM_SERVER_OUTPUT",
        "APPIUM_JAVA_OUTPUT",
        "APPIUM_JAVA_XML_OUTPUT",
        "APPIUM_PYTHON_OUTPUT",
        "APPIUM_PYTHON_XML_OUTPUT",
        "EXPLORER_EVENT_LOG",
        "EXPLORER_SUMMARY_LOG",
        "APPLICATION_CRASH_REPORT",
        "XCTEST_LOG",
        "VIDEO"
      ],
      "type": "string",
      "title": "ArtifactType"
    },
    "Artifacts": {
      "items": {
        "$ref": "#/definitions/Artifact"
      },
      "type": "array",
      "title": "Artifacts"
    },
    "BillingMethod": {
      "enum": [
        "METERED",
        "UNMETERED"
      ],
      "type": "string",
      "title": "BillingMethod"
    },
    "Boolean": {
      "type": "boolean",
      "title": "Boolean"
    },
    "CPU": {
      "description": "<p>Represents the amount of CPU that an app is using on a physical device.</p> <p>Note that this does not represent system-wide CPU usage.</p>",
      "properties": {
        "architecture": {
          "$ref": "#/definitions/String",
          "description": "The CPU's architecture, for example x86 or ARM."
        },
        "clock": {
          "$ref": "#/definitions/Double",
          "description": "The clock speed of the device's CPU, expressed in hertz (Hz). For example, a 1.2 GHz CPU is expressed as 1200000000."
        },
        "frequency": {
          "$ref": "#/definitions/String",
          "description": "The CPU's frequency."
        }
      },
      "type": "object",
      "title": "CPU"
    },
    "ContentType": {
      "maxLength": 64,
      "minLength": 0,
      "type": "string",
      "title": "ContentType"
    },
    "Counters": {
      "description": "Represents entity counters.",
      "properties": {
        "errored": {
          "$ref": "#/definitions/Integer",
          "description": "The number of errored entities."
        },
        "failed": {
          "$ref": "#/definitions/Integer",
          "description": "The number of failed entities."
        },
        "passed": {
          "$ref": "#/definitions/Integer",
          "description": "The number of passed entities."
        },
        "skipped": {
          "$ref": "#/definitions/Integer",
          "description": "The number of skipped entities."
        },
        "stopped": {
          "$ref": "#/definitions/Integer",
          "description": "The number of stopped entities."
        },
        "total": {
          "$ref": "#/definitions/Integer",
          "description": "The total number of entities."
        },
        "warned": {
          "$ref": "#/definitions/Integer",
          "description": "The number of warned entities."
        }
      },
      "type": "object",
      "title": "Counters"
    },
    "CreateDevicePoolRequest": {
      "description": "Represents a request to the create device pool operation.",
      "example": {
        "description": "My Android devices",
        "name": "MyDevicePool",
        "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "rules": []
      },
      "properties": {
        "description": {
          "$ref": "#/definitions/Message",
          "description": "The device pool's description."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The device pool's name."
        },
        "projectArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the project for the device pool."
        },
        "rules": {
          "$ref": "#/definitions/Rules",
          "description": "The device pool's rules."
        }
      },
      "required": [
        "projectArn",
        "name",
        "rules"
      ],
      "type": "object",
      "title": "CreateDevicePoolRequest"
    },
    "CreateDevicePoolResult": {
      "description": "Represents the result of a create device pool request.",
      "example": {
        "devicePool": {}
      },
      "properties": {
        "devicePool": {
          "$ref": "#/definitions/DevicePool",
          "description": "The newly created device pool."
        }
      },
      "type": "object",
      "title": "CreateDevicePoolResult"
    },
    "CreateNetworkProfileRequest": {
      "properties": {
        "description": {
          "$ref": "#/definitions/Message",
          "description": "The description of the network profile."
        },
        "downlinkBandwidthBits": {
          "$ref": "#/definitions/Long",
          "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600."
        },
        "downlinkDelayMs": {
          "$ref": "#/definitions/Long",
          "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000."
        },
        "downlinkJitterMs": {
          "$ref": "#/definitions/Long",
          "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000."
        },
        "downlinkLossPercent": {
          "$ref": "#/definitions/PercentInteger",
          "description": "Proportion of received packets that fail to arrive from 0 to 100 percent."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name you wish to specify for the new network profile."
        },
        "projectArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project for which you want to create a network profile."
        },
        "type": {
          "$ref": "#/definitions/NetworkProfileType",
          "description": "The type of network profile you wish to create. Valid values are listed below."
        },
        "uplinkBandwidthBits": {
          "$ref": "#/definitions/Long",
          "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600."
        },
        "uplinkDelayMs": {
          "$ref": "#/definitions/Long",
          "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000."
        },
        "uplinkJitterMs": {
          "$ref": "#/definitions/Long",
          "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000."
        },
        "uplinkLossPercent": {
          "$ref": "#/definitions/PercentInteger",
          "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent."
        }
      },
      "required": [
        "projectArn",
        "name"
      ],
      "type": "object",
      "title": "CreateNetworkProfileRequest"
    },
    "CreateNetworkProfileResult": {
      "properties": {
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "The network profile that is returned by the create network profile request."
        }
      },
      "type": "object",
      "title": "CreateNetworkProfileResult"
    },
    "CreateProjectRequest": {
      "description": "Represents a request to the create project operation.",
      "example": {
        "name": "MyProject"
      },
      "properties": {
        "defaultJobTimeoutMinutes": {
          "$ref": "#/definitions/JobTimeoutMinutes",
          "description": "Sets the execution timeout value (in minutes) for a project. All test runs in this project will use the specified execution timeout value unless overridden when scheduling a run."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The project's name."
        }
      },
      "required": [
        "name"
      ],
      "type": "object",
      "title": "CreateProjectRequest"
    },
    "CreateProjectResult": {
      "description": "Represents the result of a create project request.",
      "example": {
        "project": {
          "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE",
          "created": "1472660939.152",
          "name": "MyProject"
        }
      },
      "properties": {
        "project": {
          "$ref": "#/definitions/Project",
          "description": "The newly created project."
        }
      },
      "type": "object",
      "title": "CreateProjectResult"
    },
    "CreateRemoteAccessSessionConfiguration": {
      "description": "Creates the configuration settings for a remote access session, including the device model and type.",
      "properties": {
        "billingMethod": {
          "$ref": "#/definitions/BillingMethod",
          "description": "Returns the billing method for purposes of configuring a remote access session."
        }
      },
      "type": "object",
      "title": "CreateRemoteAccessSessionConfiguration"
    },
    "CreateRemoteAccessSessionRequest": {
      "description": "Creates and submits a request to start a remote access session.",
      "example": {
        "configuration": {
          "billingMethod": "METERED"
        },
        "deviceArn": "arn:aws:devicefarm:us-west-2::device:123EXAMPLE",
        "name": "MySession",
        "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "configuration": {
          "$ref": "#/definitions/CreateRemoteAccessSessionConfiguration",
          "description": "The configuration information for the remote access session request."
        },
        "deviceArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the device for which you want to create a remote access session."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name of the remote access session that you wish to create."
        },
        "projectArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project for which you want to create a remote access session."
        }
      },
      "required": [
        "projectArn",
        "deviceArn"
      ],
      "type": "object",
      "title": "CreateRemoteAccessSessionRequest"
    },
    "CreateRemoteAccessSessionResult": {
      "description": "Represents the server response from a request to create a remote access session.",
      "example": {
        "remoteAccessSession": {}
      },
      "properties": {
        "remoteAccessSession": {
          "$ref": "#/definitions/RemoteAccessSession",
          "description": "A container that describes the remote access session when the request to create a remote access session is sent."
        }
      },
      "type": "object",
      "title": "CreateRemoteAccessSessionResult"
    },
    "CreateUploadRequest": {
      "description": "Represents a request to the create upload operation.",
      "example": {
        "name": "MyAppiumPythonUpload",
        "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "type": "APPIUM_PYTHON_TEST_PACKAGE"
      },
      "properties": {
        "contentType": {
          "$ref": "#/definitions/ContentType",
          "description": "The upload's content type (for example, \"application/octet-stream\")."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The upload's file name. The name should not contain the '/' character. If uploading an iOS app, the file name needs to end with the <code>.ipa</code> extension. If uploading an Android app, the file name needs to end with the <code>.apk</code> extension. For all others, the file name must end with the <code>.zip</code> file extension."
        },
        "projectArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the project for the upload."
        },
        "type": {
          "$ref": "#/definitions/UploadType",
          "description": "<p>The upload's upload type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> </ul> <p> <b>Note</b> If you call <code>CreateUpload</code> with <code>WEB_APP</code> specified, AWS Device Farm throws an <code>ArgumentException</code> error.</p>"
        }
      },
      "required": [
        "projectArn",
        "name",
        "type"
      ],
      "type": "object",
      "title": "CreateUploadRequest"
    },
    "CreateUploadResult": {
      "description": "Represents the result of a create upload request.",
      "example": {
        "upload": {
          "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE",
          "created": "1472661404.186",
          "name": "MyAppiumPythonUpload",
          "status": "INITIALIZED",
          "type": "APPIUM_PYTHON_TEST_PACKAGE",
          "url": "https://prod-us-west-2-uploads.s3-us-west-2.amazonaws.com/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aproject%3A5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE/uploads/arn%3Aaws%3Adevicefarm%3Aus-west-2%3A123456789101%3Aupload%3A5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/b5340a65-3da7-4da6-a26e-12345EXAMPLE/MyAppiumPythonUpload?AWSAccessKeyId=1234567891011EXAMPLE&Expires=1472747804&Signature=1234567891011EXAMPLE"
        }
      },
      "properties": {
        "upload": {
          "$ref": "#/definitions/Upload",
          "description": "The newly created upload."
        }
      },
      "type": "object",
      "title": "CreateUploadResult"
    },
    "CurrencyCode": {
      "enum": [
        "USD"
      ],
      "type": "string",
      "title": "CurrencyCode"
    },
    "DateTime": {
      "format": "date-time",
      "type": "string",
      "title": "DateTime"
    },
    "DeleteDevicePoolRequest": {
      "description": "Represents a request to the delete device pool operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "Represents the Amazon Resource Name (ARN) of the Device Farm device pool you wish to delete."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "DeleteDevicePoolRequest"
    },
    "DeleteDevicePoolResult": {
      "description": "Represents the result of a delete device pool request.",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "DeleteDevicePoolResult"
    },
    "DeleteNetworkProfileRequest": {
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the network profile you want to delete."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "DeleteNetworkProfileRequest"
    },
    "DeleteNetworkProfileResult": {
      "properties": {},
      "type": "object",
      "title": "DeleteNetworkProfileResult"
    },
    "DeleteProjectRequest": {
      "description": "Represents a request to the delete project operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "Represents the Amazon Resource Name (ARN) of the Device Farm project you wish to delete."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "DeleteProjectRequest"
    },
    "DeleteProjectResult": {
      "description": "Represents the result of a delete project request.",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "DeleteProjectResult"
    },
    "DeleteRemoteAccessSessionRequest": {
      "description": "Represents the request to delete the specified remote access session.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the sesssion for which you want to delete remote access."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "DeleteRemoteAccessSessionRequest"
    },
    "DeleteRemoteAccessSessionResult": {
      "description": "The response from the server when a request is made to delete the remote access session.",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "DeleteRemoteAccessSessionResult"
    },
    "DeleteRunRequest": {
      "description": "Represents a request to the delete run operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) for the run you wish to delete."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "DeleteRunRequest"
    },
    "DeleteRunResult": {
      "description": "Represents the result of a delete run request.",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "DeleteRunResult"
    },
    "DeleteUploadRequest": {
      "description": "Represents a request to the delete upload operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "Represents the Amazon Resource Name (ARN) of the Device Farm upload you wish to delete."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "DeleteUploadRequest"
    },
    "DeleteUploadResult": {
      "description": "Represents the result of a delete upload request.",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "DeleteUploadResult"
    },
    "Device": {
      "description": "Represents a device type that an app is tested against.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The device's ARN."
        },
        "carrier": {
          "$ref": "#/definitions/String",
          "description": "The device's carrier."
        },
        "cpu": {
          "$ref": "#/definitions/CPU",
          "description": "Information about the device's CPU."
        },
        "fleetName": {
          "$ref": "#/definitions/String",
          "description": "The name of the fleet to which this device belongs."
        },
        "fleetType": {
          "$ref": "#/definitions/String",
          "description": "The type of fleet to which this device belongs. Possible values for fleet type are PRIVATE and PUBLIC."
        },
        "formFactor": {
          "$ref": "#/definitions/DeviceFormFactor",
          "description": "<p>The device's form factor.</p> <p>Allowed values include:</p> <ul> <li> <p>PHONE: The phone form factor.</p> </li> <li> <p>TABLET: The tablet form factor.</p> </li> </ul>"
        },
        "heapSize": {
          "$ref": "#/definitions/Long",
          "description": "The device's heap size, expressed in bytes."
        },
        "image": {
          "$ref": "#/definitions/String",
          "description": "The device's image name."
        },
        "manufacturer": {
          "$ref": "#/definitions/String",
          "description": "The device's manufacturer name."
        },
        "memory": {
          "$ref": "#/definitions/Long",
          "description": "The device's total memory size, expressed in bytes."
        },
        "model": {
          "$ref": "#/definitions/String",
          "description": "The device's model name."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The device's display name."
        },
        "os": {
          "$ref": "#/definitions/String",
          "description": "The device's operating system type."
        },
        "platform": {
          "$ref": "#/definitions/DevicePlatform",
          "description": "<p>The device's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>"
        },
        "radio": {
          "$ref": "#/definitions/String",
          "description": "The device's radio."
        },
        "remoteAccessEnabled": {
          "$ref": "#/definitions/Boolean",
          "description": "Specifies whether remote access has been enabled for the specified device."
        },
        "resolution": {
          "$ref": "#/definitions/Resolution",
          "description": "The resolution of the device."
        }
      },
      "type": "object",
      "title": "Device"
    },
    "DeviceAttribute": {
      "enum": [
        "ARN",
        "PLATFORM",
        "FORM_FACTOR",
        "MANUFACTURER",
        "REMOTE_ACCESS_ENABLED",
        "APPIUM_VERSION"
      ],
      "type": "string",
      "title": "DeviceAttribute"
    },
    "DeviceFormFactor": {
      "enum": [
        "PHONE",
        "TABLET"
      ],
      "type": "string",
      "title": "DeviceFormFactor"
    },
    "DeviceMinutes": {
      "description": "Represents the total (metered or unmetered) minutes used by the resource to run tests. Contains the sum of minutes consumed by all children.",
      "properties": {
        "metered": {
          "$ref": "#/definitions/Double",
          "description": "When specified, represents only the sum of metered minutes used by the resource to run tests."
        },
        "total": {
          "$ref": "#/definitions/Double",
          "description": "When specified, represents the total minutes used by the resource to run tests."
        },
        "unmetered": {
          "$ref": "#/definitions/Double",
          "description": "When specified, represents only the sum of unmetered minutes used by the resource to run tests."
        }
      },
      "type": "object",
      "title": "DeviceMinutes"
    },
    "DevicePlatform": {
      "enum": [
        "ANDROID",
        "IOS"
      ],
      "type": "string",
      "title": "DevicePlatform"
    },
    "DevicePool": {
      "description": "Represents a collection of device types.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The device pool's ARN."
        },
        "description": {
          "$ref": "#/definitions/Message",
          "description": "The device pool's description."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The device pool's name."
        },
        "rules": {
          "$ref": "#/definitions/Rules",
          "description": "Information about the device pool's rules."
        },
        "type": {
          "$ref": "#/definitions/DevicePoolType",
          "description": "<p>The device pool's type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "DevicePool"
    },
    "DevicePoolCompatibilityResult": {
      "description": "Represents a device pool compatibility result.",
      "properties": {
        "compatible": {
          "$ref": "#/definitions/Boolean",
          "description": "Whether the result was compatible with the device pool."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device (phone or tablet) that you wish to return information about."
        },
        "incompatibilityMessages": {
          "$ref": "#/definitions/IncompatibilityMessages",
          "description": "Information about the compatibility."
        }
      },
      "type": "object",
      "title": "DevicePoolCompatibilityResult"
    },
    "DevicePoolCompatibilityResults": {
      "items": {
        "$ref": "#/definitions/DevicePoolCompatibilityResult"
      },
      "type": "array",
      "title": "DevicePoolCompatibilityResults"
    },
    "DevicePoolType": {
      "enum": [
        "CURATED",
        "PRIVATE"
      ],
      "type": "string",
      "title": "DevicePoolType"
    },
    "DevicePools": {
      "items": {
        "$ref": "#/definitions/DevicePool"
      },
      "type": "array",
      "title": "DevicePools"
    },
    "Devices": {
      "items": {
        "$ref": "#/definitions/Device"
      },
      "type": "array",
      "title": "Devices"
    },
    "Double": {
      "format": "double",
      "type": "number",
      "title": "Double"
    },
    "ExecutionConfiguration": {
      "description": "Represents configuration information about a test run, such as the execution timeout (in minutes).",
      "properties": {
        "accountsCleanup": {
          "$ref": "#/definitions/AccountsCleanup",
          "description": "True if account cleanup is enabled at the beginning of the test; otherwise, false."
        },
        "appPackagesCleanup": {
          "$ref": "#/definitions/AppPackagesCleanup",
          "description": "True if app package cleanup is enabled at the beginning of the test; otherwise, false."
        },
        "jobTimeoutMinutes": {
          "$ref": "#/definitions/JobTimeoutMinutes",
          "description": "The number of minutes a test run will execute before it times out."
        }
      },
      "type": "object",
      "title": "ExecutionConfiguration"
    },
    "ExecutionResult": {
      "enum": [
        "PENDING",
        "PASSED",
        "WARNED",
        "FAILED",
        "SKIPPED",
        "ERRORED",
        "STOPPED"
      ],
      "type": "string",
      "title": "ExecutionResult"
    },
    "ExecutionStatus": {
      "enum": [
        "PENDING",
        "PENDING_CONCURRENCY",
        "PENDING_DEVICE",
        "PROCESSING",
        "SCHEDULING",
        "PREPARING",
        "RUNNING",
        "COMPLETED",
        "STOPPING"
      ],
      "type": "string",
      "title": "ExecutionStatus"
    },
    "Filter": {
      "maxLength": 8192,
      "minLength": 0,
      "type": "string",
      "title": "Filter"
    },
    "GetAccountSettingsRequest": {
      "description": "Represents the request sent to retrieve the account settings.",
      "example": {},
      "properties": {},
      "type": "object",
      "title": "GetAccountSettingsRequest"
    },
    "GetAccountSettingsResult": {
      "description": "Represents the account settings return values from the <code>GetAccountSettings</code> request.",
      "example": {
        "accountSettings": {
          "awsAccountNumber": "123456789101",
          "unmeteredDevices": {
            "ANDROID": 1,
            "IOS": 2
          }
        }
      },
      "properties": {
        "accountSettings": {
          "$ref": "#/definitions/AccountSettings",
          "description": "The account settings."
        }
      },
      "type": "object",
      "title": "GetAccountSettingsResult"
    },
    "GetDevicePoolCompatibilityRequest": {
      "description": "Represents a request to the get device pool compatibility operation.",
      "example": {
        "appArn": "arn:aws:devicefarm:us-west-2::app:123-456-EXAMPLE-GUID",
        "devicePoolArn": "arn:aws:devicefarm:us-west-2::devicepool:123-456-EXAMPLE-GUID",
        "testType": "APPIUM_PYTHON"
      },
      "properties": {
        "appArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the app that is associated with the specified device pool."
        },
        "devicePoolArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The device pool's ARN."
        },
        "test": {
          "$ref": "#/definitions/ScheduleRunTest",
          "description": "Information about the uploaded test to be run against the device pool."
        },
        "testType": {
          "$ref": "#/definitions/TestType",
          "description": "<p>The test type for the specified device pool.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>"
        }
      },
      "required": [
        "devicePoolArn"
      ],
      "type": "object",
      "title": "GetDevicePoolCompatibilityRequest"
    },
    "GetDevicePoolCompatibilityResult": {
      "description": "Represents the result of describe device pool compatibility request.",
      "example": {
        "compatibleDevices": [],
        "incompatibleDevices": []
      },
      "properties": {
        "compatibleDevices": {
          "$ref": "#/definitions/DevicePoolCompatibilityResults",
          "description": "Information about compatible devices."
        },
        "incompatibleDevices": {
          "$ref": "#/definitions/DevicePoolCompatibilityResults",
          "description": "Information about incompatible devices."
        }
      },
      "type": "object",
      "title": "GetDevicePoolCompatibilityResult"
    },
    "GetDevicePoolRequest": {
      "description": "Represents a request to the get device pool operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The device pool's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetDevicePoolRequest"
    },
    "GetDevicePoolResult": {
      "description": "Represents the result of a get device pool request.",
      "example": {
        "devicePool": {}
      },
      "properties": {
        "devicePool": {
          "$ref": "#/definitions/DevicePool",
          "description": "An object containing information about the requested device pool."
        }
      },
      "type": "object",
      "title": "GetDevicePoolResult"
    },
    "GetDeviceRequest": {
      "description": "Represents a request to the get device request.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2::device:123EXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The device type's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetDeviceRequest"
    },
    "GetDeviceResult": {
      "description": "Represents the result of a get device request.",
      "example": {
        "device": {
          "arn": "arn:aws:devicefarm:us-west-2::device:A0E6E6E1059E45918208DF75B2B7EF6C",
          "cpu": {
            "architecture": "armeabi-v7a",
            "clock": 2265.6,
            "frequency": "MHz"
          },
          "formFactor": "PHONE",
          "heapSize": 256000000,
          "image": "75B2B7EF6C12345EXAMPLE",
          "manufacturer": "LG",
          "memory": 16000000000,
          "model": "G2 (Sprint)",
          "name": "LG G2 (Sprint)",
          "os": "4.2.2",
          "platform": "ANDROID",
          "resolution": {
            "height": 1920,
            "width": 1080
          }
        }
      },
      "properties": {
        "device": {
          "$ref": "#/definitions/Device",
          "description": "An object containing information about the requested device."
        }
      },
      "type": "object",
      "title": "GetDeviceResult"
    },
    "GetJobRequest": {
      "description": "Represents a request to the get job operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2::job:123-456-EXAMPLE-GUID"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The job's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetJobRequest"
    },
    "GetJobResult": {
      "description": "Represents the result of a get job request.",
      "example": {
        "job": {}
      },
      "properties": {
        "job": {
          "$ref": "#/definitions/Job",
          "description": "An object containing information about the requested job."
        }
      },
      "type": "object",
      "title": "GetJobResult"
    },
    "GetNetworkProfileRequest": {
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the network profile you want to return information about."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetNetworkProfileRequest"
    },
    "GetNetworkProfileResult": {
      "properties": {
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "The network profile."
        }
      },
      "type": "object",
      "title": "GetNetworkProfileResult"
    },
    "GetOfferingStatusRequest": {
      "description": "Represents the request to retrieve the offering status for the specified customer or account.",
      "example": {
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "GetOfferingStatusRequest"
    },
    "GetOfferingStatusResult": {
      "description": "Returns the status result for a device offering.",
      "example": {
        "current": {
          "D68B3C05-1BA6-4360-BC69-12345EXAMPLE": {
            "offering": {
              "description": "Android Remote Access Unmetered Device Slot",
              "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
              "platform": "ANDROID",
              "type": "RECURRING"
            },
            "quantity": 1
          }
        },
        "nextPeriod": {
          "D68B3C05-1BA6-4360-BC69-12345EXAMPLE": {
            "effectiveOn": "1472688000",
            "offering": {
              "description": "Android Remote Access Unmetered Device Slot",
              "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
              "platform": "ANDROID",
              "type": "RECURRING"
            },
            "quantity": 1
          }
        }
      },
      "properties": {
        "current": {
          "$ref": "#/definitions/OfferingStatusMap",
          "description": "When specified, gets the offering status for the current period."
        },
        "nextPeriod": {
          "$ref": "#/definitions/OfferingStatusMap",
          "description": "When specified, gets the offering status for the next period."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "GetOfferingStatusResult"
    },
    "GetProjectRequest": {
      "description": "Represents a request to the get project operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The project's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetProjectRequest"
    },
    "GetProjectResult": {
      "description": "Represents the result of a get project request.",
      "example": {
        "project": {
          "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:5e01a8c7-c861-4c0a-b1d5-12345EXAMPLE",
          "created": "1472660939.152",
          "name": "My Project"
        }
      },
      "properties": {
        "project": {
          "$ref": "#/definitions/Project",
          "description": "The project you wish to get information about."
        }
      },
      "type": "object",
      "title": "GetProjectResult"
    },
    "GetRemoteAccessSessionRequest": {
      "description": "Represents the request to get information about the specified remote access session.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the remote access session about which you want to get session information."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetRemoteAccessSessionRequest"
    },
    "GetRemoteAccessSessionResult": {
      "description": "Represents the response from the server that lists detailed information about the remote access session.",
      "example": {
        "remoteAccessSession": {}
      },
      "properties": {
        "remoteAccessSession": {
          "$ref": "#/definitions/RemoteAccessSession",
          "description": "A container that lists detailed information about the remote access session."
        }
      },
      "type": "object",
      "title": "GetRemoteAccessSessionResult"
    },
    "GetRunRequest": {
      "description": "Represents a request to the get run operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The run's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetRunRequest"
    },
    "GetRunResult": {
      "description": "Represents the result of a get run request.",
      "example": {
        "run": {
          "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
          "billingMethod": "METERED",
          "completedJobs": 0,
          "counters": {
            "errored": 0,
            "failed": 0,
            "passed": 0,
            "skipped": 0,
            "stopped": 0,
            "total": 0,
            "warned": 0
          },
          "created": "1472667509.852",
          "deviceMinutes": {
            "metered": 0,
            "total": 0,
            "unmetered": 0
          },
          "name": "My Test Run",
          "platform": "ANDROID",
          "result": "PENDING",
          "status": "RUNNING",
          "totalJobs": 3,
          "type": "BUILTIN_EXPLORER"
        }
      },
      "properties": {
        "run": {
          "$ref": "#/definitions/Run",
          "description": "The run you wish to get results from."
        }
      },
      "type": "object",
      "title": "GetRunResult"
    },
    "GetSuiteRequest": {
      "description": "Represents a request to the get suite operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:suite:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The suite's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetSuiteRequest"
    },
    "GetSuiteResult": {
      "description": "Represents the result of a get suite request.",
      "example": {
        "suite": {}
      },
      "properties": {
        "suite": {
          "$ref": "#/definitions/Suite",
          "description": "A collection of one or more tests."
        }
      },
      "type": "object",
      "title": "GetSuiteResult"
    },
    "GetTestRequest": {
      "description": "Represents a request to the get test operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The test's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetTestRequest"
    },
    "GetTestResult": {
      "description": "Represents the result of a get test request.",
      "example": {
        "test": {}
      },
      "properties": {
        "test": {
          "$ref": "#/definitions/Test",
          "description": "A test condition that is evaluated."
        }
      },
      "type": "object",
      "title": "GetTestResult"
    },
    "GetUploadRequest": {
      "description": "Represents a request to the get upload operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:upload:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The upload's ARN."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "GetUploadRequest"
    },
    "GetUploadResult": {
      "description": "Represents the result of a get upload request.",
      "example": {
        "upload": {}
      },
      "properties": {
        "upload": {
          "$ref": "#/definitions/Upload",
          "description": "An app or a set of one or more tests to upload or that have been uploaded."
        }
      },
      "type": "object",
      "title": "GetUploadResult"
    },
    "IdempotencyException": {
      "description": "An entity with the same name already exists.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "Any additional information about the exception."
        }
      },
      "type": "object",
      "title": "IdempotencyException"
    },
    "IncompatibilityMessage": {
      "description": "Represents information about incompatibility.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the incompatibility."
        },
        "type": {
          "$ref": "#/definitions/DeviceAttribute",
          "description": "<p>The type of incompatibility.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "IncompatibilityMessage"
    },
    "IncompatibilityMessages": {
      "items": {
        "$ref": "#/definitions/IncompatibilityMessage"
      },
      "type": "array",
      "title": "IncompatibilityMessages"
    },
    "InstallToRemoteAccessSessionRequest": {
      "description": "Represents the request to install an Android application (in .apk format) or an iOS application (in .ipa format) as part of a remote access session.",
      "example": {
        "appArn": "arn:aws:devicefarm:us-west-2:123456789101:app:EXAMPLE-GUID-123-456",
        "remoteAccessSessionArn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "appArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the app about which you are requesting information."
        },
        "remoteAccessSessionArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the remote access session about which you are requesting information."
        }
      },
      "required": [
        "remoteAccessSessionArn",
        "appArn"
      ],
      "type": "object",
      "title": "InstallToRemoteAccessSessionRequest"
    },
    "InstallToRemoteAccessSessionResult": {
      "description": "Represents the response from the server after AWS Device Farm makes a request to install to a remote access session.",
      "example": {
        "appUpload": {}
      },
      "properties": {
        "appUpload": {
          "$ref": "#/definitions/Upload",
          "description": "An app to upload or that has been uploaded."
        }
      },
      "type": "object",
      "title": "InstallToRemoteAccessSessionResult"
    },
    "Integer": {
      "type": "integer",
      "title": "Integer"
    },
    "Job": {
      "description": "Represents a device.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The job's ARN."
        },
        "counters": {
          "$ref": "#/definitions/Counters",
          "description": "The job's result counters."
        },
        "created": {
          "$ref": "#/definitions/DateTime",
          "description": "When the job was created."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device (phone or tablet)."
        },
        "deviceMinutes": {
          "$ref": "#/definitions/DeviceMinutes",
          "description": "Represents the total (metered or unmetered) minutes used by the job."
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the job's result."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The job's name."
        },
        "result": {
          "$ref": "#/definitions/ExecutionResult",
          "description": "<p>The job's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>"
        },
        "started": {
          "$ref": "#/definitions/DateTime",
          "description": "The job's start time."
        },
        "status": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "<p>The job's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>"
        },
        "stopped": {
          "$ref": "#/definitions/DateTime",
          "description": "The job's stop time."
        },
        "type": {
          "$ref": "#/definitions/TestType",
          "description": "<p>The job's type.</p> <p>Allowed values include the following:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "Job"
    },
    "JobTimeoutMinutes": {
      "type": "integer",
      "title": "JobTimeoutMinutes"
    },
    "Jobs": {
      "items": {
        "$ref": "#/definitions/Job"
      },
      "type": "array",
      "title": "Jobs"
    },
    "LimitExceededException": {
      "description": "A limit was exceeded.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "Any additional information about the exception."
        }
      },
      "type": "object",
      "title": "LimitExceededException"
    },
    "ListArtifactsRequest": {
      "description": "Represents a request to the list artifacts operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456",
        "type": "SCREENSHOT"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Run, Job, Suite, or Test ARN."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        },
        "type": {
          "$ref": "#/definitions/ArtifactCategory",
          "description": "<p>The artifacts' type.</p> <p>Allowed values include:</p> <ul> <li> <p>FILE: The artifacts are files.</p> </li> <li> <p>LOG: The artifacts are logs.</p> </li> <li> <p>SCREENSHOT: The artifacts are screenshots.</p> </li> </ul>"
        }
      },
      "required": [
        "arn",
        "type"
      ],
      "type": "object",
      "title": "ListArtifactsRequest"
    },
    "ListArtifactsResult": {
      "description": "Represents the result of a list artifacts operation.",
      "properties": {
        "artifacts": {
          "$ref": "#/definitions/Artifacts",
          "description": "Information about the artifacts."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListArtifactsResult"
    },
    "ListDevicePoolsRequest": {
      "description": "Represents the result of a list device pools request.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "type": "PRIVATE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The project ARN."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        },
        "type": {
          "$ref": "#/definitions/DevicePoolType",
          "description": "<p>The device pools' type.</p> <p>Allowed values include:</p> <ul> <li> <p>CURATED: A device pool that is created and managed by AWS Device Farm.</p> </li> <li> <p>PRIVATE: A device pool that is created and managed by the device pool developer.</p> </li> </ul>"
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListDevicePoolsRequest"
    },
    "ListDevicePoolsResult": {
      "description": "Represents the result of a list device pools request.",
      "example": {
        "devicePools": [
          {
            "arn": "arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE",
            "description": "Top devices",
            "name": "Top Devices",
            "rules": [
              {
                "attribute": "ARN",
                "operator": "IN",
                "value": "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"]"
              }
            ]
          },
          {
            "arn": "arn:aws:devicefarm:us-west-2:123456789101:devicepool:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/bf96e75a-28f6-4e61-b6a7-12345EXAMPLE",
            "description": "Samsung Galaxy Android devices",
            "name": "My Android Device Pool",
            "rules": [
              {
                "attribute": "ARN",
                "operator": "IN",
                "value": "[\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\",\"arn:aws:devicefarm:us-west-2::device:123456789EXAMPLE\"]"
              }
            ]
          }
        ]
      },
      "properties": {
        "devicePools": {
          "$ref": "#/definitions/DevicePools",
          "description": "Information about the device pools."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListDevicePoolsResult"
    },
    "ListDevicesRequest": {
      "description": "Represents the result of a list devices request.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListDevicesRequest"
    },
    "ListDevicesResult": {
      "description": "Represents the result of a list devices operation.",
      "example": {},
      "properties": {
        "devices": {
          "$ref": "#/definitions/Devices",
          "description": "Information about the devices."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListDevicesResult"
    },
    "ListJobsRequest": {
      "description": "Represents a request to the list jobs operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The jobs' ARNs."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListJobsRequest"
    },
    "ListJobsResult": {
      "description": "Represents the result of a list jobs request.",
      "properties": {
        "jobs": {
          "$ref": "#/definitions/Jobs",
          "description": "Information about the jobs."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListJobsResult"
    },
    "ListNetworkProfilesRequest": {
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project for which you want to list network profiles."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        },
        "type": {
          "$ref": "#/definitions/NetworkProfileType",
          "description": "The type of network profile you wish to return information about. Valid values are listed below."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListNetworkProfilesRequest"
    },
    "ListNetworkProfilesResult": {
      "properties": {
        "networkProfiles": {
          "$ref": "#/definitions/NetworkProfiles",
          "description": "A list of the available network profiles."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListNetworkProfilesResult"
    },
    "ListOfferingPromotionsRequest": {
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListOfferingPromotionsRequest"
    },
    "ListOfferingPromotionsResult": {
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier to be used in the next call to this operation, to return the next set of items in the list."
        },
        "offeringPromotions": {
          "$ref": "#/definitions/OfferingPromotions",
          "description": "Information about the offering promotions."
        }
      },
      "type": "object",
      "title": "ListOfferingPromotionsResult"
    },
    "ListOfferingTransactionsRequest": {
      "description": "Represents the request to list the offering transaction history.",
      "example": {
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListOfferingTransactionsRequest"
    },
    "ListOfferingTransactionsResult": {
      "description": "Returns the transaction log of the specified offerings.",
      "example": {
        "offeringTransactions": [
          {
            "cost": {
              "amount": 0,
              "currencyCode": "USD"
            },
            "createdOn": "1470021420",
            "offeringStatus": {
              "effectiveOn": "1472688000",
              "offering": {
                "description": "Android Remote Access Unmetered Device Slot",
                "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                "platform": "ANDROID",
                "type": "RECURRING"
              },
              "quantity": 0,
              "type": "RENEW"
            },
            "transactionId": "03728003-d1ea-4851-abd6-12345EXAMPLE"
          },
          {
            "cost": {
              "amount": 250,
              "currencyCode": "USD"
            },
            "createdOn": "1470021420",
            "offeringStatus": {
              "effectiveOn": "1470021420",
              "offering": {
                "description": "Android Remote Access Unmetered Device Slot",
                "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
                "platform": "ANDROID",
                "type": "RECURRING"
              },
              "quantity": 1,
              "type": "PURCHASE"
            },
            "transactionId": "56820b6e-06bd-473a-8ff8-12345EXAMPLE"
          },
          {
            "cost": {
              "amount": 175,
              "currencyCode": "USD"
            },
            "createdOn": "1465538520",
            "offeringStatus": {
              "effectiveOn": "1465538520",
              "offering": {
                "description": "Android Unmetered Device Slot",
                "id": "8980F81C-00D7-469D-8EC6-12345EXAMPLE",
                "platform": "ANDROID",
                "type": "RECURRING"
              },
              "quantity": 1,
              "type": "PURCHASE"
            },
            "transactionId": "953ae2c6-d760-4a04-9597-12345EXAMPLE"
          },
          {
            "cost": {
              "amount": 8.07,
              "currencyCode": "USD"
            },
            "createdOn": "1459344300",
            "offeringStatus": {
              "effectiveOn": "1459344300",
              "offering": {
                "description": "iOS Unmetered Device Slot",
                "id": "A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE",
                "platform": "IOS",
                "type": "RECURRING"
              },
              "quantity": 1,
              "type": "PURCHASE"
            },
            "transactionId": "2baf9021-ae3e-47f5-ab52-12345EXAMPLE"
          }
        ]
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        },
        "offeringTransactions": {
          "$ref": "#/definitions/OfferingTransactions",
          "description": "The audit log of subscriptions you have purchased and modified through AWS Device Farm."
        }
      },
      "type": "object",
      "title": "ListOfferingTransactionsResult"
    },
    "ListOfferingsRequest": {
      "description": "Represents the request to list all offerings.",
      "example": {
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListOfferingsRequest"
    },
    "ListOfferingsResult": {
      "description": "Represents the return values of the list of offerings.",
      "example": {
        "offerings": [
          {
            "description": "iOS Unmetered Device Slot",
            "id": "A53D4D73-A6F6-4B82-A0B0-12345EXAMPLE",
            "platform": "IOS",
            "recurringCharges": [
              {
                "cost": {
                  "amount": 250,
                  "currencyCode": "USD"
                },
                "frequency": "MONTHLY"
              }
            ],
            "type": "RECURRING"
          },
          {
            "description": "Android Unmetered Device Slot",
            "id": "8980F81C-00D7-469D-8EC6-12345EXAMPLE",
            "platform": "ANDROID",
            "recurringCharges": [
              {
                "cost": {
                  "amount": 250,
                  "currencyCode": "USD"
                },
                "frequency": "MONTHLY"
              }
            ],
            "type": "RECURRING"
          },
          {
            "description": "Android Remote Access Unmetered Device Slot",
            "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
            "platform": "ANDROID",
            "recurringCharges": [
              {
                "cost": {
                  "amount": 250,
                  "currencyCode": "USD"
                },
                "frequency": "MONTHLY"
              }
            ],
            "type": "RECURRING"
          },
          {
            "description": "iOS Remote Access Unmetered Device Slot",
            "id": "552B4DAD-A6C9-45C4-94FB-12345EXAMPLE",
            "platform": "IOS",
            "recurringCharges": [
              {
                "cost": {
                  "amount": 250,
                  "currencyCode": "USD"
                },
                "frequency": "MONTHLY"
              }
            ],
            "type": "RECURRING"
          }
        ]
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        },
        "offerings": {
          "$ref": "#/definitions/Offerings",
          "description": "A value representing the list offering results."
        }
      },
      "type": "object",
      "title": "ListOfferingsResult"
    },
    "ListProjectsRequest": {
      "description": "Represents a request to the list projects operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "Optional. If no Amazon Resource Name (ARN) is specified, then AWS Device Farm returns a list of all projects for the AWS account. You can also specify a project ARN."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "type": "object",
      "title": "ListProjectsRequest"
    },
    "ListProjectsResult": {
      "description": "Represents the result of a list projects request.",
      "example": {
        "projects": [
          {
            "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:7ad300ed-8183-41a7-bf94-12345EXAMPLE",
            "created": "1453163262.105",
            "name": "My Test Project"
          },
          {
            "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:d6b087d9-56db-4e44-b9ec-12345EXAMPLE",
            "created": "1470350112.439",
            "name": "Hello World"
          }
        ]
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        },
        "projects": {
          "$ref": "#/definitions/Projects",
          "description": "Information about the projects."
        }
      },
      "type": "object",
      "title": "ListProjectsResult"
    },
    "ListRemoteAccessSessionsRequest": {
      "description": "Represents the request to return information about the remote access session.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:session:EXAMPLE-GUID-123-456",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE="
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the remote access session about which you are requesting information."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListRemoteAccessSessionsRequest"
    },
    "ListRemoteAccessSessionsResult": {
      "description": "Represents the response from the server after AWS Device Farm makes a request to return information about the remote access session.",
      "example": {
        "remoteAccessSessions": []
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        },
        "remoteAccessSessions": {
          "$ref": "#/definitions/RemoteAccessSessions",
          "description": "A container representing the metadata from the service about each remote access session you are requesting."
        }
      },
      "type": "object",
      "title": "ListRemoteAccessSessionsResult"
    },
    "ListRunsRequest": {
      "description": "Represents a request to the list runs operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project for which you want to list runs."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListRunsRequest"
    },
    "ListRunsResult": {
      "description": "Represents the result of a list runs request.",
      "example": {
        "runs": [
          {
            "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:5e01a8c7-c861-4c0a-b1d5-5ec6e6c6dd23/0fcac17b-6122-44d7-ae5a-12345EXAMPLE",
            "billingMethod": "METERED",
            "completedJobs": 0,
            "counters": {
              "errored": 0,
              "failed": 0,
              "passed": 0,
              "skipped": 0,
              "stopped": 0,
              "total": 0,
              "warned": 0
            },
            "created": "1472667509.852",
            "deviceMinutes": {
              "metered": 0,
              "total": 0,
              "unmetered": 0
            },
            "name": "My Test Run",
            "platform": "ANDROID",
            "result": "PENDING",
            "status": "RUNNING",
            "totalJobs": 3,
            "type": "BUILTIN_EXPLORER"
          }
        ]
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        },
        "runs": {
          "$ref": "#/definitions/Runs",
          "description": "Information about the runs."
        }
      },
      "type": "object",
      "title": "ListRunsResult"
    },
    "ListSamplesRequest": {
      "description": "Represents a request to the list samples operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project for which you want to list samples."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListSamplesRequest"
    },
    "ListSamplesResult": {
      "description": "Represents the result of a list samples request.",
      "example": {
        "samples": []
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        },
        "samples": {
          "$ref": "#/definitions/Samples",
          "description": "Information about the samples."
        }
      },
      "type": "object",
      "title": "ListSamplesResult"
    },
    "ListSuitesRequest": {
      "description": "Represents a request to the list suites operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The suites' ARNs."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListSuitesRequest"
    },
    "ListSuitesResult": {
      "description": "Represents the result of a list suites request.",
      "example": {
        "suites": []
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        },
        "suites": {
          "$ref": "#/definitions/Suites",
          "description": "Information about the suites."
        }
      },
      "type": "object",
      "title": "ListSuitesResult"
    },
    "ListTestsRequest": {
      "description": "Represents a request to the list tests operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The tests' ARNs."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListTestsRequest"
    },
    "ListTestsResult": {
      "description": "Represents the result of a list tests request.",
      "example": {
        "tests": []
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        },
        "tests": {
          "$ref": "#/definitions/Tests",
          "description": "Information about the tests."
        }
      },
      "type": "object",
      "title": "ListTestsResult"
    },
    "ListUniqueProblemsRequest": {
      "description": "Represents a request to the list unique problems operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The unique problems' ARNs."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListUniqueProblemsRequest"
    },
    "ListUniqueProblemsResult": {
      "description": "Represents the result of a list unique problems request.",
      "example": {
        "uniqueProblems": {}
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        },
        "uniqueProblems": {
          "$ref": "#/definitions/UniqueProblemsByExecutionResultMap",
          "description": "<p>Information about the unique problems.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "ListUniqueProblemsResult"
    },
    "ListUploadsRequest": {
      "description": "Represents a request to the list uploads operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "nextToken": "RW5DdDJkMWYwZjM2MzM2VHVpOHJIUXlDUXlhc2QzRGViYnc9SEXAMPLE"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project for which you want to list uploads."
        },
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "ListUploadsRequest"
    },
    "ListUploadsResult": {
      "description": "Represents the result of a list uploads request.",
      "example": {
        "uploads": []
      },
      "properties": {
        "nextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the number of items that are returned is significantly large, this is an identifier that is also returned, which can be used in a subsequent call to this operation to return the next set of items in the list."
        },
        "uploads": {
          "$ref": "#/definitions/Uploads",
          "description": "Information about the uploads."
        }
      },
      "type": "object",
      "title": "ListUploadsResult"
    },
    "Location": {
      "description": "<p>Represents a latitude and longitude pair, expressed in geographic coordinate system degrees (for example 47.6204, -122.3491).</p> <p>Elevation is currently not supported.</p>",
      "properties": {
        "latitude": {
          "$ref": "#/definitions/Double",
          "description": "The latitude."
        },
        "longitude": {
          "$ref": "#/definitions/Double",
          "description": "The longitude."
        }
      },
      "required": [
        "latitude",
        "longitude"
      ],
      "type": "object",
      "title": "Location"
    },
    "Long": {
      "type": "integer",
      "title": "Long"
    },
    "MaxSlotMap": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/String"
          },
          "value": {
            "$ref": "#/definitions/Integer"
          }
        },
        "type": "object"
      },
      "type": "array",
      "title": "MaxSlotMap"
    },
    "Message": {
      "maxLength": 16384,
      "minLength": 0,
      "type": "string",
      "title": "Message"
    },
    "Metadata": {
      "maxLength": 8192,
      "minLength": 0,
      "type": "string",
      "title": "Metadata"
    },
    "MonetaryAmount": {
      "description": "A number representing the monetary amount for an offering or transaction.",
      "properties": {
        "amount": {
          "$ref": "#/definitions/Double",
          "description": "The numerical amount of an offering or transaction."
        },
        "currencyCode": {
          "$ref": "#/definitions/CurrencyCode",
          "description": "The currency code of a monetary amount. For example, <code>USD</code> means \"U.S. dollars.\""
        }
      },
      "type": "object",
      "title": "MonetaryAmount"
    },
    "Name": {
      "maxLength": 256,
      "minLength": 0,
      "type": "string",
      "title": "Name"
    },
    "NetworkProfile": {
      "description": "An array of settings that describes characteristics of a network profile.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the network profile."
        },
        "description": {
          "$ref": "#/definitions/Message",
          "description": "The description of the network profile."
        },
        "downlinkBandwidthBits": {
          "$ref": "#/definitions/Long",
          "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600."
        },
        "downlinkDelayMs": {
          "$ref": "#/definitions/Long",
          "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000."
        },
        "downlinkJitterMs": {
          "$ref": "#/definitions/Long",
          "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000."
        },
        "downlinkLossPercent": {
          "$ref": "#/definitions/PercentInteger",
          "description": "Proportion of received packets that fail to arrive from 0 to 100 percent."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name of the network profile."
        },
        "type": {
          "$ref": "#/definitions/NetworkProfileType",
          "description": "The type of network profile. Valid values are listed below."
        },
        "uplinkBandwidthBits": {
          "$ref": "#/definitions/Long",
          "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600."
        },
        "uplinkDelayMs": {
          "$ref": "#/definitions/Long",
          "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000."
        },
        "uplinkJitterMs": {
          "$ref": "#/definitions/Long",
          "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000."
        },
        "uplinkLossPercent": {
          "$ref": "#/definitions/PercentInteger",
          "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent."
        }
      },
      "type": "object",
      "title": "NetworkProfile"
    },
    "NetworkProfileType": {
      "enum": [
        "CURATED",
        "PRIVATE"
      ],
      "type": "string",
      "title": "NetworkProfileType"
    },
    "NetworkProfiles": {
      "items": {
        "$ref": "#/definitions/NetworkProfile"
      },
      "type": "array",
      "title": "NetworkProfiles"
    },
    "NotEligibleException": {
      "description": "Exception gets thrown when a user is not eligible to perform the specified transaction.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "The HTTP response code of a Not Eligible exception."
        }
      },
      "type": "object",
      "title": "NotEligibleException"
    },
    "NotFoundException": {
      "description": "The specified entity was not found.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "Any additional information about the exception."
        }
      },
      "type": "object",
      "title": "NotFoundException"
    },
    "Offering": {
      "description": "Represents the metadata of a device offering.",
      "properties": {
        "description": {
          "$ref": "#/definitions/Message",
          "description": "A string describing the offering."
        },
        "id": {
          "$ref": "#/definitions/OfferingIdentifier",
          "description": "The ID that corresponds to a device offering."
        },
        "platform": {
          "$ref": "#/definitions/DevicePlatform",
          "description": "The platform of the device (e.g., ANDROID or IOS)."
        },
        "recurringCharges": {
          "$ref": "#/definitions/RecurringCharges",
          "description": "Specifies whether there are recurring charges for the offering."
        },
        "type": {
          "$ref": "#/definitions/OfferingType",
          "description": "The type of offering (e.g., \"RECURRING\") for a device."
        }
      },
      "type": "object",
      "title": "Offering"
    },
    "OfferingIdentifier": {
      "minLength": 32,
      "type": "string",
      "title": "OfferingIdentifier"
    },
    "OfferingPromotion": {
      "description": "Represents information about an offering promotion.",
      "properties": {
        "description": {
          "$ref": "#/definitions/Message",
          "description": "A string describing the offering promotion."
        },
        "id": {
          "$ref": "#/definitions/OfferingPromotionIdentifier",
          "description": "The ID of the offering promotion."
        }
      },
      "type": "object",
      "title": "OfferingPromotion"
    },
    "OfferingPromotionIdentifier": {
      "minLength": 4,
      "type": "string",
      "title": "OfferingPromotionIdentifier"
    },
    "OfferingPromotions": {
      "items": {
        "$ref": "#/definitions/OfferingPromotion"
      },
      "type": "array",
      "title": "OfferingPromotions"
    },
    "OfferingStatus": {
      "description": "The status of the offering.",
      "properties": {
        "effectiveOn": {
          "$ref": "#/definitions/DateTime",
          "description": "The date on which the offering is effective."
        },
        "offering": {
          "$ref": "#/definitions/Offering",
          "description": "Represents the metadata of an offering status."
        },
        "quantity": {
          "$ref": "#/definitions/Integer",
          "description": "The number of available devices in the offering."
        },
        "type": {
          "$ref": "#/definitions/OfferingTransactionType",
          "description": "The type specified for the offering status."
        }
      },
      "type": "object",
      "title": "OfferingStatus"
    },
    "OfferingStatusMap": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/OfferingIdentifier"
          },
          "value": {
            "$ref": "#/definitions/OfferingStatus"
          }
        },
        "type": "object"
      },
      "type": "array",
      "title": "OfferingStatusMap"
    },
    "OfferingTransaction": {
      "description": "Represents the metadata of an offering transaction.",
      "properties": {
        "cost": {
          "$ref": "#/definitions/MonetaryAmount",
          "description": "The cost of an offering transaction."
        },
        "createdOn": {
          "$ref": "#/definitions/DateTime",
          "description": "The date on which an offering transaction was created."
        },
        "offeringPromotionId": {
          "$ref": "#/definitions/OfferingPromotionIdentifier",
          "description": "The ID that corresponds to a device offering promotion."
        },
        "offeringStatus": {
          "$ref": "#/definitions/OfferingStatus",
          "description": "The status of an offering transaction."
        },
        "transactionId": {
          "$ref": "#/definitions/TransactionIdentifier",
          "description": "The transaction ID of the offering transaction."
        }
      },
      "type": "object",
      "title": "OfferingTransaction"
    },
    "OfferingTransactionType": {
      "enum": [
        "PURCHASE",
        "RENEW",
        "SYSTEM"
      ],
      "type": "string",
      "title": "OfferingTransactionType"
    },
    "OfferingTransactions": {
      "items": {
        "$ref": "#/definitions/OfferingTransaction"
      },
      "type": "array",
      "title": "OfferingTransactions"
    },
    "OfferingType": {
      "enum": [
        "RECURRING"
      ],
      "type": "string",
      "title": "OfferingType"
    },
    "Offerings": {
      "items": {
        "$ref": "#/definitions/Offering"
      },
      "type": "array",
      "title": "Offerings"
    },
    "PaginationToken": {
      "maxLength": 1024,
      "minLength": 4,
      "type": "string",
      "title": "PaginationToken"
    },
    "PercentInteger": {
      "maximum": 100,
      "minimum": 0,
      "type": "integer",
      "title": "PercentInteger"
    },
    "Problem": {
      "description": "Represents a specific warning or failure.",
      "properties": {
        "device": {
          "$ref": "#/definitions/Device",
          "description": "Information about the associated device."
        },
        "job": {
          "$ref": "#/definitions/ProblemDetail",
          "description": "Information about the associated job."
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the problem's result."
        },
        "result": {
          "$ref": "#/definitions/ExecutionResult",
          "description": "<p>The problem's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>"
        },
        "run": {
          "$ref": "#/definitions/ProblemDetail",
          "description": "Information about the associated run."
        },
        "suite": {
          "$ref": "#/definitions/ProblemDetail",
          "description": "Information about the associated suite."
        },
        "test": {
          "$ref": "#/definitions/ProblemDetail",
          "description": "Information about the associated test."
        }
      },
      "type": "object",
      "title": "Problem"
    },
    "ProblemDetail": {
      "description": "Information about a problem detail.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The problem detail's ARN."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The problem detail's name."
        }
      },
      "type": "object",
      "title": "ProblemDetail"
    },
    "Problems": {
      "items": {
        "$ref": "#/definitions/Problem"
      },
      "type": "array",
      "title": "Problems"
    },
    "Project": {
      "description": "Represents an operating-system neutral workspace for running and managing tests.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The project's ARN."
        },
        "created": {
          "$ref": "#/definitions/DateTime",
          "description": "When the project was created."
        },
        "defaultJobTimeoutMinutes": {
          "$ref": "#/definitions/JobTimeoutMinutes",
          "description": "The default number of minutes (at the project level) a test run will execute before it times out. Default value is 60 minutes."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The project's name."
        }
      },
      "type": "object",
      "title": "Project"
    },
    "Projects": {
      "items": {
        "$ref": "#/definitions/Project"
      },
      "type": "array",
      "title": "Projects"
    },
    "PurchaseOfferingRequest": {
      "description": "Represents a request for a purchase offering.",
      "example": {
        "offeringId": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
        "quantity": 1
      },
      "properties": {
        "offeringId": {
          "$ref": "#/definitions/OfferingIdentifier",
          "description": "The ID of the offering."
        },
        "offeringPromotionId": {
          "$ref": "#/definitions/OfferingPromotionIdentifier",
          "description": "The ID of the offering promotion to be applied to the purchase."
        },
        "quantity": {
          "$ref": "#/definitions/Integer",
          "description": "The number of device slots you wish to purchase in an offering request."
        }
      },
      "type": "object",
      "title": "PurchaseOfferingRequest"
    },
    "PurchaseOfferingResult": {
      "description": "The result of the purchase offering (e.g., success or failure).",
      "example": {
        "offeringTransaction": {
          "cost": {
            "amount": 8.07,
            "currencyCode": "USD"
          },
          "createdOn": "1472648340",
          "offeringStatus": {
            "effectiveOn": "1472648340",
            "offering": {
              "description": "Android Remote Access Unmetered Device Slot",
              "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
              "platform": "ANDROID",
              "type": "RECURRING"
            },
            "quantity": 1,
            "type": "PURCHASE"
          },
          "transactionId": "d30614ed-1b03-404c-9893-12345EXAMPLE"
        }
      },
      "properties": {
        "offeringTransaction": {
          "$ref": "#/definitions/OfferingTransaction",
          "description": "Represents the offering transaction for the purchase result."
        }
      },
      "type": "object",
      "title": "PurchaseOfferingResult"
    },
    "PurchasedDevicesMap": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/DevicePlatform"
          },
          "value": {
            "$ref": "#/definitions/Integer"
          }
        },
        "type": "object"
      },
      "type": "array",
      "title": "PurchasedDevicesMap"
    },
    "Radios": {
      "description": "Represents the set of radios and their states on a device. Examples of radios include Wi-Fi, GPS, Bluetooth, and NFC.",
      "properties": {
        "bluetooth": {
          "$ref": "#/definitions/Boolean",
          "description": "True if Bluetooth is enabled at the beginning of the test; otherwise, false."
        },
        "gps": {
          "$ref": "#/definitions/Boolean",
          "description": "True if GPS is enabled at the beginning of the test; otherwise, false."
        },
        "nfc": {
          "$ref": "#/definitions/Boolean",
          "description": "True if NFC is enabled at the beginning of the test; otherwise, false."
        },
        "wifi": {
          "$ref": "#/definitions/Boolean",
          "description": "True if Wi-Fi is enabled at the beginning of the test; otherwise, false."
        }
      },
      "type": "object",
      "title": "Radios"
    },
    "RecurringCharge": {
      "description": "Specifies whether charges for devices will be recurring.",
      "properties": {
        "cost": {
          "$ref": "#/definitions/MonetaryAmount",
          "description": "The cost of the recurring charge."
        },
        "frequency": {
          "$ref": "#/definitions/RecurringChargeFrequency",
          "description": "The frequency in which charges will recur."
        }
      },
      "type": "object",
      "title": "RecurringCharge"
    },
    "RecurringChargeFrequency": {
      "enum": [
        "MONTHLY"
      ],
      "type": "string",
      "title": "RecurringChargeFrequency"
    },
    "RecurringCharges": {
      "items": {
        "$ref": "#/definitions/RecurringCharge"
      },
      "type": "array",
      "title": "RecurringCharges"
    },
    "RemoteAccessSession": {
      "description": "Represents information about the remote access session.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the remote access session."
        },
        "billingMethod": {
          "$ref": "#/definitions/BillingMethod",
          "description": "The billing method of the remote access session. Possible values include <code>METERED</code> or <code>UNMETERED</code>. For more information about metered devices, see <a href=\"http://docs.aws.amazon.com/devicefarm/latest/developerguide/welcome.html#welcome-terminology\">AWS Device Farm terminology</a>.\""
        },
        "created": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the remote access session was created."
        },
        "device": {
          "$ref": "#/definitions/Device",
          "description": "The device (phone or tablet) used in the remote access session."
        },
        "deviceMinutes": {
          "$ref": "#/definitions/DeviceMinutes",
          "description": "The number of minutes a device is used in a remote access sesssion (including setup and teardown minutes)."
        },
        "endpoint": {
          "$ref": "#/definitions/String",
          "description": "The endpoint for the remote access sesssion."
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the remote access session."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name of the remote access session."
        },
        "result": {
          "$ref": "#/definitions/ExecutionResult",
          "description": "<p>The result of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>"
        },
        "started": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the remote access session was started."
        },
        "status": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "<p>The status of the remote access session. Can be any of the following:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>"
        },
        "stopped": {
          "$ref": "#/definitions/DateTime",
          "description": "The date and time the remote access session was stopped."
        }
      },
      "type": "object",
      "title": "RemoteAccessSession"
    },
    "RemoteAccessSessions": {
      "items": {
        "$ref": "#/definitions/RemoteAccessSession"
      },
      "type": "array",
      "title": "RemoteAccessSessions"
    },
    "RenewOfferingRequest": {
      "description": "A request representing an offering renewal.",
      "example": {
        "offeringId": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
        "quantity": 1
      },
      "properties": {
        "offeringId": {
          "$ref": "#/definitions/OfferingIdentifier",
          "description": "The ID of a request to renew an offering."
        },
        "quantity": {
          "$ref": "#/definitions/Integer",
          "description": "The quantity requested in an offering renewal."
        }
      },
      "type": "object",
      "title": "RenewOfferingRequest"
    },
    "RenewOfferingResult": {
      "description": "The result of a renewal offering.",
      "example": {
        "offeringTransaction": {
          "cost": {
            "amount": 250,
            "currencyCode": "USD"
          },
          "createdOn": "1472648880",
          "offeringStatus": {
            "effectiveOn": "1472688000",
            "offering": {
              "description": "Android Remote Access Unmetered Device Slot",
              "id": "D68B3C05-1BA6-4360-BC69-12345EXAMPLE",
              "platform": "ANDROID",
              "type": "RECURRING"
            },
            "quantity": 1,
            "type": "RENEW"
          },
          "transactionId": "e90f1405-8c35-4561-be43-12345EXAMPLE"
        }
      },
      "properties": {
        "offeringTransaction": {
          "$ref": "#/definitions/OfferingTransaction",
          "description": "Represents the status of the offering transaction for the renewal."
        }
      },
      "type": "object",
      "title": "RenewOfferingResult"
    },
    "Resolution": {
      "description": "Represents the screen resolution of a device in height and width, expressed in pixels.",
      "properties": {
        "height": {
          "$ref": "#/definitions/Integer",
          "description": "The screen resolution's height, expressed in pixels."
        },
        "width": {
          "$ref": "#/definitions/Integer",
          "description": "The screen resolution's width, expressed in pixels."
        }
      },
      "type": "object",
      "title": "Resolution"
    },
    "Rule": {
      "description": "Represents a condition for a device pool.",
      "properties": {
        "attribute": {
          "$ref": "#/definitions/DeviceAttribute",
          "description": "<p>The rule's stringified attribute. For example, specify the value as <code>\"\\\"abc\\\"\"</code>.</p> <p>Allowed values include:</p> <ul> <li> <p>ARN: The ARN.</p> </li> <li> <p>FORM_FACTOR: The form factor (for example, phone or tablet).</p> </li> <li> <p>MANUFACTURER: The manufacturer.</p> </li> <li> <p>PLATFORM: The platform (for example, Android or iOS).</p> </li> <li> <p>REMOTE_ACCESS_ENABLED: Whether the device is enabled for remote access.</p> </li> <li> <p>APPIUM_VERSION: The Appium version for the test.</p> </li> </ul>"
        },
        "operator": {
          "$ref": "#/definitions/RuleOperator",
          "description": "<p>The rule's operator.</p> <ul> <li> <p>EQUALS: The equals operator.</p> </li> <li> <p>GREATER_THAN: The greater-than operator.</p> </li> <li> <p>IN: The in operator.</p> </li> <li> <p>LESS_THAN: The less-than operator.</p> </li> <li> <p>NOT_IN: The not-in operator.</p> </li> <li> <p>CONTAINS: The contains operator.</p> </li> </ul>"
        },
        "value": {
          "$ref": "#/definitions/String",
          "description": "The rule's value."
        }
      },
      "type": "object",
      "title": "Rule"
    },
    "RuleOperator": {
      "enum": [
        "EQUALS",
        "LESS_THAN",
        "GREATER_THAN",
        "IN",
        "NOT_IN",
        "CONTAINS"
      ],
      "type": "string",
      "title": "RuleOperator"
    },
    "Rules": {
      "items": {
        "$ref": "#/definitions/Rule"
      },
      "type": "array",
      "title": "Rules"
    },
    "Run": {
      "description": "Represents an app on a set of devices with a specific test and configuration.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The run's ARN."
        },
        "billingMethod": {
          "$ref": "#/definitions/BillingMethod",
          "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>."
        },
        "completedJobs": {
          "$ref": "#/definitions/Integer",
          "description": "The total number of completed jobs."
        },
        "counters": {
          "$ref": "#/definitions/Counters",
          "description": "The run's result counters."
        },
        "created": {
          "$ref": "#/definitions/DateTime",
          "description": "When the run was created."
        },
        "deviceMinutes": {
          "$ref": "#/definitions/DeviceMinutes",
          "description": "Represents the total (metered or unmetered) minutes used by the test run."
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the run's result."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The run's name."
        },
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "The network profile being used for a test run."
        },
        "platform": {
          "$ref": "#/definitions/DevicePlatform",
          "description": "<p>The run's platform.</p> <p>Allowed values include:</p> <ul> <li> <p>ANDROID: The Android platform.</p> </li> <li> <p>IOS: The iOS platform.</p> </li> </ul>"
        },
        "result": {
          "$ref": "#/definitions/ExecutionResult",
          "description": "<p>The run's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>"
        },
        "started": {
          "$ref": "#/definitions/DateTime",
          "description": "The run's start time."
        },
        "status": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "<p>The run's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>"
        },
        "stopped": {
          "$ref": "#/definitions/DateTime",
          "description": "The run's stop time."
        },
        "totalJobs": {
          "$ref": "#/definitions/Integer",
          "description": "The total number of jobs for the run."
        },
        "type": {
          "$ref": "#/definitions/TestType",
          "description": "<p>The run's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "Run"
    },
    "Runs": {
      "items": {
        "$ref": "#/definitions/Run"
      },
      "type": "array",
      "title": "Runs"
    },
    "Sample": {
      "description": "Represents a sample of performance data.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The sample's ARN."
        },
        "type": {
          "$ref": "#/definitions/SampleType",
          "description": "<p>The sample's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>CPU: A CPU sample type. This is expressed as the app processing CPU time (including child processes) as reported by process, as a percentage.</p> </li> <li> <p>MEMORY: A memory usage sample type. This is expressed as the total proportional set size of an app process, in kilobytes.</p> </li> <li> <p>NATIVE_AVG_DRAWTIME</p> </li> <li> <p>NATIVE_FPS</p> </li> <li> <p>NATIVE_FRAMES</p> </li> <li> <p>NATIVE_MAX_DRAWTIME</p> </li> <li> <p>NATIVE_MIN_DRAWTIME</p> </li> <li> <p>OPENGL_AVG_DRAWTIME</p> </li> <li> <p>OPENGL_FPS</p> </li> <li> <p>OPENGL_FRAMES</p> </li> <li> <p>OPENGL_MAX_DRAWTIME</p> </li> <li> <p>OPENGL_MIN_DRAWTIME</p> </li> <li> <p>RX</p> </li> <li> <p>RX_RATE: The total number of bytes per second (TCP and UDP) that are sent, by app process.</p> </li> <li> <p>THREADS: A threads sample type. This is expressed as the total number of threads per app process.</p> </li> <li> <p>TX</p> </li> <li> <p>TX_RATE: The total number of bytes per second (TCP and UDP) that are received, by app process.</p> </li> </ul>"
        },
        "url": {
          "$ref": "#/definitions/URL",
          "description": "The pre-signed Amazon S3 URL that can be used with a corresponding GET request to download the sample's file."
        }
      },
      "type": "object",
      "title": "Sample"
    },
    "SampleType": {
      "enum": [
        "CPU",
        "MEMORY",
        "THREADS",
        "RX_RATE",
        "TX_RATE",
        "RX",
        "TX",
        "NATIVE_FRAMES",
        "NATIVE_FPS",
        "NATIVE_MIN_DRAWTIME",
        "NATIVE_AVG_DRAWTIME",
        "NATIVE_MAX_DRAWTIME",
        "OPENGL_FRAMES",
        "OPENGL_FPS",
        "OPENGL_MIN_DRAWTIME",
        "OPENGL_AVG_DRAWTIME",
        "OPENGL_MAX_DRAWTIME"
      ],
      "type": "string",
      "title": "SampleType"
    },
    "Samples": {
      "items": {
        "$ref": "#/definitions/Sample"
      },
      "type": "array",
      "title": "Samples"
    },
    "ScheduleRunConfiguration": {
      "description": "Represents the settings for a run. Includes things like location, radio states, auxiliary apps, and network profiles.",
      "properties": {
        "auxiliaryApps": {
          "$ref": "#/definitions/AmazonResourceNames",
          "description": "A list of auxiliary apps for the run."
        },
        "billingMethod": {
          "$ref": "#/definitions/BillingMethod",
          "description": "Specifies the billing method for a test run: <code>metered</code> or <code>unmetered</code>. If the parameter is not specified, the default value is <code>metered</code>."
        },
        "extraDataPackageArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the extra data for the run. The extra data is a .zip file that AWS Device Farm will extract to external data for Android or the app's sandbox for iOS."
        },
        "locale": {
          "$ref": "#/definitions/String",
          "description": "Information about the locale that is used for the run."
        },
        "location": {
          "$ref": "#/definitions/Location",
          "description": "Information about the location that is used for the run."
        },
        "networkProfileArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "Reserved for internal use."
        },
        "radios": {
          "$ref": "#/definitions/Radios",
          "description": "Information about the radio states for the run."
        }
      },
      "type": "object",
      "title": "ScheduleRunConfiguration"
    },
    "ScheduleRunRequest": {
      "description": "Represents a request to the schedule run operation.",
      "example": {
        "devicePoolArn": "arn:aws:devicefarm:us-west-2:123456789101:pool:EXAMPLE-GUID-123-456",
        "name": "MyRun",
        "projectArn": "arn:aws:devicefarm:us-west-2:123456789101:project:EXAMPLE-GUID-123-456",
        "test": {
          "testPackageArn": "arn:aws:devicefarm:us-west-2:123456789101:test:EXAMPLE-GUID-123-456",
          "type": "APPIUM_JAVA_JUNIT"
        }
      },
      "properties": {
        "appArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the app to schedule a run."
        },
        "configuration": {
          "$ref": "#/definitions/ScheduleRunConfiguration",
          "description": "Information about the settings for the run to be scheduled."
        },
        "devicePoolArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the device pool for the run to be scheduled."
        },
        "executionConfiguration": {
          "$ref": "#/definitions/ExecutionConfiguration",
          "description": "Specifies configuration information about a test run, such as the execution timeout (in minutes)."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name for the run to be scheduled."
        },
        "projectArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the project for the run to be scheduled."
        },
        "test": {
          "$ref": "#/definitions/ScheduleRunTest",
          "description": "Information about the test for the run to be scheduled."
        }
      },
      "required": [
        "projectArn",
        "devicePoolArn",
        "test"
      ],
      "type": "object",
      "title": "ScheduleRunRequest"
    },
    "ScheduleRunResult": {
      "description": "Represents the result of a schedule run request.",
      "example": {
        "run": {}
      },
      "properties": {
        "run": {
          "$ref": "#/definitions/Run",
          "description": "Information about the scheduled run."
        }
      },
      "type": "object",
      "title": "ScheduleRunResult"
    },
    "ScheduleRunTest": {
      "description": "Represents additional test settings.",
      "properties": {
        "filter": {
          "$ref": "#/definitions/Filter",
          "description": "The test's filter."
        },
        "parameters": {
          "$ref": "#/definitions/TestParameters",
          "description": "<p>The test's parameters, such as the following test framework parameters and fixture settings:</p> <p>For Calabash tests:</p> <ul> <li> <p>profile: A cucumber profile, for example, \"my_profile_name\".</p> </li> <li> <p>tags: You can limit execution to features or scenarios that have (or don't have) certain tags, for example, \"@smoke\" or \"@smoke,~@wip\".</p> </li> </ul> <p>For Appium tests (all types):</p> <ul> <li> <p>appium_version: The Appium version. Currently supported values are \"1.4.16\", \"1.6.3\", \"latest\", and \"default\".</p> <ul> <li> <p>“latest” will run the latest Appium version supported by Device Farm (1.6.3).</p> </li> <li> <p>For “default”, Device Farm will choose a compatible version of Appium for the device. The current behavior is to run 1.4.16 on Android devices and iOS 9 and earlier, 1.6.3 for iOS 10 and later.</p> </li> <li> <p>This behavior is subject to change.</p> </li> </ul> </li> </ul> <p>For Fuzz tests (Android only):</p> <ul> <li> <p>event_count: The number of events, between 1 and 10000, that the UI fuzz test should perform.</p> </li> <li> <p>throttle: The time, in ms, between 0 and 1000, that the UI fuzz test should wait between events.</p> </li> <li> <p>seed: A seed to use for randomizing the UI fuzz test. Using the same seed value between tests ensures identical event sequences.</p> </li> </ul> <p>For Explorer tests:</p> <ul> <li> <p>username: A username to use if the Explorer encounters a login form. If not supplied, no username will be inserted.</p> </li> <li> <p>password: A password to use if the Explorer encounters a login form. If not supplied, no password will be inserted.</p> </li> </ul> <p>For Instrumentation:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul> <p>For XCTest and XCTestUI:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test class: \"LoginTests\"</p> </li> <li> <p>Running a multiple test classes: \"LoginTests,SmokeTests\"</p> </li> <li> <p>Running a single test: \"LoginTests/testValid\"</p> </li> <li> <p>Running multiple tests: \"LoginTests/testValid,LoginTests/testInvalid\"</p> </li> </ul> </li> </ul> <p>For UIAutomator:</p> <ul> <li> <p>filter: A test filter string. Examples:</p> <ul> <li> <p>Running a single test case: \"com.android.abc.Test1\"</p> </li> <li> <p>Running a single test: \"com.android.abc.Test1#smoke\"</p> </li> <li> <p>Running multiple tests: \"com.android.abc.Test1,com.android.abc.Test2\"</p> </li> </ul> </li> </ul>"
        },
        "testPackageArn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The ARN of the uploaded test that will be run."
        },
        "type": {
          "$ref": "#/definitions/TestType",
          "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>"
        }
      },
      "required": [
        "type"
      ],
      "type": "object",
      "title": "ScheduleRunTest"
    },
    "ServiceAccountException": {
      "description": "There was a problem with the service account.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "Any additional information about the exception."
        }
      },
      "type": "object",
      "title": "ServiceAccountException"
    },
    "StopRemoteAccessSessionRequest": {
      "description": "Represents the request to stop the remote access session.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the remote access session you wish to stop."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "StopRemoteAccessSessionRequest"
    },
    "StopRemoteAccessSessionResult": {
      "description": "Represents the response from the server that describes the remote access session when AWS Device Farm stops the session.",
      "properties": {
        "remoteAccessSession": {
          "$ref": "#/definitions/RemoteAccessSession",
          "description": "A container representing the metadata from the service about the remote access session you are stopping."
        }
      },
      "type": "object",
      "title": "StopRemoteAccessSessionResult"
    },
    "StopRunRequest": {
      "description": "Represents the request to stop a specific run.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:run:EXAMPLE-GUID-123-456"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "Represents the Amazon Resource Name (ARN) of the Device Farm run you wish to stop."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "StopRunRequest"
    },
    "StopRunResult": {
      "description": "Represents the results of your stop run attempt.",
      "example": {
        "run": {}
      },
      "properties": {
        "run": {
          "$ref": "#/definitions/Run",
          "description": "The run that was stopped."
        }
      },
      "type": "object",
      "title": "StopRunResult"
    },
    "String": {
      "type": "string",
      "title": "String"
    },
    "Suite": {
      "description": "Represents a collection of one or more tests.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The suite's ARN."
        },
        "counters": {
          "$ref": "#/definitions/Counters",
          "description": "The suite's result counters."
        },
        "created": {
          "$ref": "#/definitions/DateTime",
          "description": "When the suite was created."
        },
        "deviceMinutes": {
          "$ref": "#/definitions/DeviceMinutes",
          "description": "Represents the total (metered or unmetered) minutes used by the test suite."
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the suite's result."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The suite's name."
        },
        "result": {
          "$ref": "#/definitions/ExecutionResult",
          "description": "<p>The suite's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>"
        },
        "started": {
          "$ref": "#/definitions/DateTime",
          "description": "The suite's start time."
        },
        "status": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "<p>The suite's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>"
        },
        "stopped": {
          "$ref": "#/definitions/DateTime",
          "description": "The suite's stop time."
        },
        "type": {
          "$ref": "#/definitions/TestType",
          "description": "<p>The suite's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "Suite"
    },
    "Suites": {
      "items": {
        "$ref": "#/definitions/Suite"
      },
      "type": "array",
      "title": "Suites"
    },
    "Test": {
      "description": "Represents a condition that is evaluated.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The test's ARN."
        },
        "counters": {
          "$ref": "#/definitions/Counters",
          "description": "The test's result counters."
        },
        "created": {
          "$ref": "#/definitions/DateTime",
          "description": "When the test was created."
        },
        "deviceMinutes": {
          "$ref": "#/definitions/DeviceMinutes",
          "description": "Represents the total (metered or unmetered) minutes used by the test."
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the test's result."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The test's name."
        },
        "result": {
          "$ref": "#/definitions/ExecutionResult",
          "description": "<p>The test's result.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending condition.</p> </li> <li> <p>PASSED: A passing condition.</p> </li> <li> <p>WARNED: A warning condition.</p> </li> <li> <p>FAILED: A failed condition.</p> </li> <li> <p>SKIPPED: A skipped condition.</p> </li> <li> <p>ERRORED: An error condition.</p> </li> <li> <p>STOPPED: A stopped condition.</p> </li> </ul>"
        },
        "started": {
          "$ref": "#/definitions/DateTime",
          "description": "The test's start time."
        },
        "status": {
          "$ref": "#/definitions/ExecutionStatus",
          "description": "<p>The test's status.</p> <p>Allowed values include:</p> <ul> <li> <p>PENDING: A pending status.</p> </li> <li> <p>PENDING_CONCURRENCY: A pending concurrency status.</p> </li> <li> <p>PENDING_DEVICE: A pending device status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SCHEDULING: A scheduling status.</p> </li> <li> <p>PREPARING: A preparing status.</p> </li> <li> <p>RUNNING: A running status.</p> </li> <li> <p>COMPLETED: A completed status.</p> </li> <li> <p>STOPPING: A stopping status.</p> </li> </ul>"
        },
        "stopped": {
          "$ref": "#/definitions/DateTime",
          "description": "The test's stop time."
        },
        "type": {
          "$ref": "#/definitions/TestType",
          "description": "<p>The test's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>BUILTIN_FUZZ: The built-in fuzz type.</p> </li> <li> <p>BUILTIN_EXPLORER: For Android, an app explorer that will traverse an Android app, interacting with it and capturing screenshots at the same time.</p> </li> <li> <p>APPIUM_JAVA_JUNIT: The Appium Java JUnit type.</p> </li> <li> <p>APPIUM_JAVA_TESTNG: The Appium Java TestNG type.</p> </li> <li> <p>APPIUM_PYTHON: The Appium Python type.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT: The Appium Java JUnit type for Web apps.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG: The Appium Java TestNG type for Web apps.</p> </li> <li> <p>APPIUM_WEB_PYTHON: The Appium Python type for Web apps.</p> </li> <li> <p>CALABASH: The Calabash type.</p> </li> <li> <p>INSTRUMENTATION: The Instrumentation type.</p> </li> <li> <p>UIAUTOMATION: The uiautomation type.</p> </li> <li> <p>UIAUTOMATOR: The uiautomator type.</p> </li> <li> <p>XCTEST: The XCode test type.</p> </li> <li> <p>XCTEST_UI: The XCode UI test type.</p> </li> </ul>"
        }
      },
      "type": "object",
      "title": "Test"
    },
    "TestParameters": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/String"
          },
          "value": {
            "$ref": "#/definitions/String"
          }
        },
        "type": "object"
      },
      "type": "array",
      "title": "TestParameters"
    },
    "TestType": {
      "enum": [
        "BUILTIN_FUZZ",
        "BUILTIN_EXPLORER",
        "APPIUM_JAVA_JUNIT",
        "APPIUM_JAVA_TESTNG",
        "APPIUM_PYTHON",
        "APPIUM_WEB_JAVA_JUNIT",
        "APPIUM_WEB_JAVA_TESTNG",
        "APPIUM_WEB_PYTHON",
        "CALABASH",
        "INSTRUMENTATION",
        "UIAUTOMATION",
        "UIAUTOMATOR",
        "XCTEST",
        "XCTEST_UI"
      ],
      "type": "string",
      "title": "TestType"
    },
    "Tests": {
      "items": {
        "$ref": "#/definitions/Test"
      },
      "type": "array",
      "title": "Tests"
    },
    "TransactionIdentifier": {
      "minLength": 32,
      "type": "string",
      "title": "TransactionIdentifier"
    },
    "TrialMinutes": {
      "description": "Represents information about free trial device minutes for an AWS account.",
      "properties": {
        "remaining": {
          "$ref": "#/definitions/Double",
          "description": "The number of free trial minutes remaining in the account."
        },
        "total": {
          "$ref": "#/definitions/Double",
          "description": "The total number of free trial minutes that the account started with."
        }
      },
      "type": "object",
      "title": "TrialMinutes"
    },
    "URL": {
      "maxLength": 2048,
      "minLength": 0,
      "type": "string",
      "title": "URL"
    },
    "UniqueProblem": {
      "description": "A collection of one or more problems, grouped by their result.",
      "properties": {
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the unique problems' result."
        },
        "problems": {
          "$ref": "#/definitions/Problems",
          "description": "Information about the problems."
        }
      },
      "type": "object",
      "title": "UniqueProblem"
    },
    "UniqueProblems": {
      "items": {
        "$ref": "#/definitions/UniqueProblem"
      },
      "type": "array",
      "title": "UniqueProblems"
    },
    "UniqueProblemsByExecutionResultMap": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/ExecutionResult"
          },
          "value": {
            "$ref": "#/definitions/UniqueProblems"
          }
        },
        "type": "object"
      },
      "type": "array",
      "title": "UniqueProblemsByExecutionResultMap"
    },
    "UpdateDevicePoolRequest": {
      "description": "Represents a request to the update device pool operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2::devicepool:082d10e5-d7d7-48a5-ba5c-12345EXAMPLE",
        "description": "NewDescription",
        "name": "NewName",
        "rules": [
          {
            "attribute": "REMOTE_ACCESS_ENABLED",
            "operator": "EQUALS",
            "value": "True"
          }
        ]
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resourc Name (ARN) of the Device Farm device pool you wish to update."
        },
        "description": {
          "$ref": "#/definitions/Message",
          "description": "A description of the device pool you wish to update."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "A string representing the name of the device pool you wish to update."
        },
        "rules": {
          "$ref": "#/definitions/Rules",
          "description": "Represents the rules you wish to modify for the device pool. Updating rules is optional; however, if you choose to update rules for your request, the update will replace the existing rules."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "UpdateDevicePoolRequest"
    },
    "UpdateDevicePoolResult": {
      "description": "Represents the result of an update device pool request.",
      "example": {
        "devicePool": {}
      },
      "properties": {
        "devicePool": {
          "$ref": "#/definitions/DevicePool",
          "description": "The device pool you just updated."
        }
      },
      "type": "object",
      "title": "UpdateDevicePoolResult"
    },
    "UpdateNetworkProfileRequest": {
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project that you wish to update network profile settings."
        },
        "description": {
          "$ref": "#/definitions/Message",
          "description": "The descriptoin of the network profile about which you are returning information."
        },
        "downlinkBandwidthBits": {
          "$ref": "#/definitions/Long",
          "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600."
        },
        "downlinkDelayMs": {
          "$ref": "#/definitions/Long",
          "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000."
        },
        "downlinkJitterMs": {
          "$ref": "#/definitions/Long",
          "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000."
        },
        "downlinkLossPercent": {
          "$ref": "#/definitions/PercentInteger",
          "description": "Proportion of received packets that fail to arrive from 0 to 100 percent."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The name of the network profile about which you are returning information."
        },
        "type": {
          "$ref": "#/definitions/NetworkProfileType",
          "description": "The type of network profile you wish to return information about. Valid values are listed below."
        },
        "uplinkBandwidthBits": {
          "$ref": "#/definitions/Long",
          "description": "The data throughput rate in bits per second, as an integer from 0 to 104857600."
        },
        "uplinkDelayMs": {
          "$ref": "#/definitions/Long",
          "description": "Delay time for all packets to destination in milliseconds as an integer from 0 to 2000."
        },
        "uplinkJitterMs": {
          "$ref": "#/definitions/Long",
          "description": "Time variation in the delay of received packets in milliseconds as an integer from 0 to 2000."
        },
        "uplinkLossPercent": {
          "$ref": "#/definitions/PercentInteger",
          "description": "Proportion of transmitted packets that fail to arrive from 0 to 100 percent."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "UpdateNetworkProfileRequest"
    },
    "UpdateNetworkProfileResult": {
      "properties": {
        "networkProfile": {
          "$ref": "#/definitions/NetworkProfile",
          "description": "A list of the available network profiles."
        }
      },
      "type": "object",
      "title": "UpdateNetworkProfileResult"
    },
    "UpdateProjectRequest": {
      "description": "Represents a request to the update project operation.",
      "example": {
        "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE",
        "name": "NewName"
      },
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The Amazon Resource Name (ARN) of the project whose name you wish to update."
        },
        "defaultJobTimeoutMinutes": {
          "$ref": "#/definitions/JobTimeoutMinutes",
          "description": "The number of minutes a test run in the project will execute before it times out."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "A string representing the new name of the project that you are updating."
        }
      },
      "required": [
        "arn"
      ],
      "type": "object",
      "title": "UpdateProjectRequest"
    },
    "UpdateProjectResult": {
      "description": "Represents the result of an update project request.",
      "example": {
        "project": {
          "arn": "arn:aws:devicefarm:us-west-2:123456789101:project:8f75187d-101e-4625-accc-12345EXAMPLE",
          "created": "1448400709.927",
          "name": "NewName"
        }
      },
      "properties": {
        "project": {
          "$ref": "#/definitions/Project",
          "description": "The project you wish to update."
        }
      },
      "type": "object",
      "title": "UpdateProjectResult"
    },
    "Upload": {
      "description": "An app or a set of one or more tests to upload or that have been uploaded.",
      "properties": {
        "arn": {
          "$ref": "#/definitions/AmazonResourceName",
          "description": "The upload's ARN."
        },
        "contentType": {
          "$ref": "#/definitions/ContentType",
          "description": "The upload's content type (for example, \"application/octet-stream\")."
        },
        "created": {
          "$ref": "#/definitions/DateTime",
          "description": "When the upload was created."
        },
        "message": {
          "$ref": "#/definitions/Message",
          "description": "A message about the upload's result."
        },
        "metadata": {
          "$ref": "#/definitions/Metadata",
          "description": "The upload's metadata. For example, for Android, this contains information that is parsed from the manifest and is displayed in the AWS Device Farm console after the associated app is uploaded."
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "The upload's file name."
        },
        "status": {
          "$ref": "#/definitions/UploadStatus",
          "description": "<p>The upload's status.</p> <p>Must be one of the following values:</p> <ul> <li> <p>FAILED: A failed status.</p> </li> <li> <p>INITIALIZED: An initialized status.</p> </li> <li> <p>PROCESSING: A processing status.</p> </li> <li> <p>SUCCEEDED: A succeeded status.</p> </li> </ul>"
        },
        "type": {
          "$ref": "#/definitions/UploadType",
          "description": "<p>The upload's type.</p> <p>Must be one of the following values:</p> <ul> <li> <p>ANDROID_APP: An Android upload.</p> </li> <li> <p>IOS_APP: An iOS upload.</p> </li> <li> <p>WEB_APP: A web appliction upload.</p> </li> <li> <p>EXTERNAL_DATA: An external data upload.</p> </li> <li> <p>APPIUM_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE: An Appium Java JUnit test package upload.</p> </li> <li> <p>APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE: An Appium Java TestNG test package upload.</p> </li> <li> <p>APPIUM_WEB_PYTHON_TEST_PACKAGE: An Appium Python test package upload.</p> </li> <li> <p>CALABASH_TEST_PACKAGE: A Calabash test package upload.</p> </li> <li> <p>INSTRUMENTATION_TEST_PACKAGE: An instrumentation upload.</p> </li> <li> <p>UIAUTOMATION_TEST_PACKAGE: A uiautomation test package upload.</p> </li> <li> <p>UIAUTOMATOR_TEST_PACKAGE: A uiautomator test package upload.</p> </li> <li> <p>XCTEST_TEST_PACKAGE: An XCode test package upload.</p> </li> <li> <p>XCTEST_UI_TEST_PACKAGE: An XCode UI test package upload.</p> </li> </ul>"
        },
        "url": {
          "$ref": "#/definitions/URL",
          "description": "The pre-signed Amazon S3 URL that was used to store a file through a corresponding PUT request."
        }
      },
      "type": "object",
      "title": "Upload"
    },
    "UploadStatus": {
      "enum": [
        "INITIALIZED",
        "PROCESSING",
        "SUCCEEDED",
        "FAILED"
      ],
      "type": "string",
      "title": "UploadStatus"
    },
    "UploadType": {
      "enum": [
        "ANDROID_APP",
        "IOS_APP",
        "WEB_APP",
        "EXTERNAL_DATA",
        "APPIUM_JAVA_JUNIT_TEST_PACKAGE",
        "APPIUM_JAVA_TESTNG_TEST_PACKAGE",
        "APPIUM_PYTHON_TEST_PACKAGE",
        "APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE",
        "APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE",
        "APPIUM_WEB_PYTHON_TEST_PACKAGE",
        "CALABASH_TEST_PACKAGE",
        "INSTRUMENTATION_TEST_PACKAGE",
        "UIAUTOMATION_TEST_PACKAGE",
        "UIAUTOMATOR_TEST_PACKAGE",
        "XCTEST_TEST_PACKAGE",
        "XCTEST_UI_TEST_PACKAGE"
      ],
      "type": "string",
      "title": "UploadType"
    },
    "Uploads": {
      "items": {
        "$ref": "#/definitions/Upload"
      },
      "type": "array",
      "title": "Uploads"
    }
  },
  "actions": [
    {
      "id": "CreateDevicePool",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateDevicePoolRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateDevicePoolResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "CreateNetworkProfile",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateNetworkProfileRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateNetworkProfileResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "CreateProject",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateProjectRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateProjectResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "CreateRemoteAccessSession",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateRemoteAccessSessionRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateRemoteAccessSessionResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "CreateUpload",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateUploadRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateUploadResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "DeleteDevicePool",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteDevicePoolRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteDevicePoolResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "DeleteNetworkProfile",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteNetworkProfileRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteNetworkProfileResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "DeleteProject",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteProjectRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteProjectResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "DeleteRemoteAccessSession",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteRemoteAccessSessionRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteRemoteAccessSessionResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "DeleteRun",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteRunRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteRunResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "DeleteUpload",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteUploadRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteUploadResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetAccountSettings",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetAccountSettingsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetAccountSettingsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetDevice",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetDeviceRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetDeviceResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetDevicePool",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetDevicePoolRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetDevicePoolResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetDevicePoolCompatibility",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetDevicePoolCompatibilityRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetDevicePoolCompatibilityResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetJob",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetJobRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetJobResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetNetworkProfile",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetNetworkProfileRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetNetworkProfileResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetOfferingStatus",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/GetOfferingStatusRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetOfferingStatusResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetProject",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetProjectRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetProjectResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetRemoteAccessSession",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetRemoteAccessSessionRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetRemoteAccessSessionResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetRun",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetRunRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetRunResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetSuite",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetSuiteRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetSuiteResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetTest",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetTestRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetTestResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "GetUpload",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/GetUploadRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/GetUploadResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "InstallToRemoteAccessSession",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/InstallToRemoteAccessSessionRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/InstallToRemoteAccessSessionResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListArtifacts",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListArtifactsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListArtifactsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListDevicePools",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListDevicePoolsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListDevicePoolsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListDevices",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListDevicesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListDevicesResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListJobs",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListJobsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListJobsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListNetworkProfiles",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListNetworkProfilesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListNetworkProfilesResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListOfferingPromotions",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListOfferingPromotionsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListOfferingPromotionsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListOfferingTransactions",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListOfferingTransactionsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListOfferingTransactionsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListOfferings",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListOfferingsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListOfferingsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListProjects",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListProjectsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListProjectsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListRemoteAccessSessions",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ListRemoteAccessSessionsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListRemoteAccessSessionsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListRuns",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListRunsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListRunsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListSamples",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListSamplesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListSamplesResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListSuites",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListSuitesRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListSuitesResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListTests",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListTestsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTestsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListUniqueProblems",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListUniqueProblemsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListUniqueProblemsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ListUploads",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListUploadsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListUploadsResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "PurchaseOffering",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/PurchaseOfferingRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/PurchaseOfferingResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "RenewOffering",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/RenewOfferingRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/RenewOfferingResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "ScheduleRun",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/ScheduleRunRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ScheduleRunResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "StopRemoteAccessSession",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StopRemoteAccessSessionRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StopRemoteAccessSessionResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "StopRun",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StopRunRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/StopRunResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "UpdateDevicePool",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateDevicePoolRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateDevicePoolResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "UpdateNetworkProfile",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateNetworkProfileRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateNetworkProfileResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    },
    {
      "id": "UpdateProject",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateProjectRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateProjectResult"
      },
      "security": {
        "amazonaws_devicefarm": {
          "integration": "amazonaws_devicefarm"
        }
      }
    }
  ],
  "tags": [
    "cloud",
    "aws"
  ]
}