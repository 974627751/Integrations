{
  "id": "amazonaws_sagemaker",
  "title": "Amazon SageMaker Service",
  "description": "Definition of the public APIs exposed by SageMaker",
  "security": {
    "amazonaws_sagemaker": {
      "integration": "amazonaws_sagemaker",
      "fields": {
        "accessKeyId": "",
        "secretAccessKey": "",
        "region": "AWS region (if applicable)"
      }
    }
  },
  "logo": {
    "backgroundColor": "#FFFFFF",
    "url": "https://s3-us-west-2.amazonaws.com/datafire-logos/amazonaws_sagemaker.jpeg"
  },
  "actionCount": 29,
  "definitions": {
    "AddTagsInput": {
      "properties": {
        "ResourceArn": {
          "$ref": "#/definitions/ResourceArn",
          "description": "The Amazon Resource Name (ARN) of the resource that you want to tag. "
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "An array of <code>Tag</code> objects. Each tag is a key-value pair. Only the <code>key</code> parameter is required. If you don't specify a value, Amazon SageMaker sets the value to an empty string. "
        }
      },
      "required": [
        "ResourceArn",
        "Tags"
      ],
      "type": "object",
      "title": "AddTagsInput"
    },
    "AddTagsOutput": {
      "properties": {
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "A list of tags associated with the Amazon SageMaker resource."
        }
      },
      "type": "object",
      "title": "AddTagsOutput"
    },
    "AlgorithmImage": {
      "maxLength": 255,
      "type": "string",
      "title": "AlgorithmImage"
    },
    "AlgorithmSpecification": {
      "description": "<p>Specifies the training algorithm to use in a <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html\">CreateTrainingJob</a> request. </p> <p>For more information about algorithms provided by Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. For information about using your own algorithms, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/adv-topics-own-algo.html\">Bring Your Own Algorithms </a>. </p>",
      "properties": {
        "TrainingImage": {
          "$ref": "#/definitions/AlgorithmImage",
          "description": "The registry path of the Docker image that contains the training algorithm. For information about using your own algorithms, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos-docker-registry-paths.html\">Docker Registry Paths for Algorithms Provided by Amazon SageMaker </a>. "
        },
        "TrainingInputMode": {
          "$ref": "#/definitions/TrainingInputMode",
          "description": "<p>The input mode that the algorithm supports. For the input modes that Amazon SageMaker algorithms support, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. If an algorithm supports the <code>File</code> input mode, Amazon SageMaker downloads the training data from S3 to the provisioned ML storage Volume, and mounts the directory to docker volume for training container. If an algorithm supports the <code>Pipe</code> input mode, Amazon SageMaker streams data directly from S3 to the container. </p> <p> In File mode, make sure you provision ML storage volume with sufficient capacity to accomodate the data download from S3. In addition to the training data, the ML storage volume also stores the output model. The algorithm container use ML storage volume to also store intermediate information, if any. </p> <p> For distributed algorithms using File mode, training data is distributed uniformly, and your training duration is predictable if the input data objects size is approximately same. Amazon SageMaker does not split the files any further for model training. If the object sizes are skewed, training won't be optimal as the data distribution is also skewed where one host in a training cluster is overloaded, thus becoming bottleneck in training. </p>"
        }
      },
      "required": [
        "TrainingImage",
        "TrainingInputMode"
      ],
      "type": "object",
      "title": "AlgorithmSpecification"
    },
    "Channel": {
      "description": "A channel is a named input source that training algorithms can consume. ",
      "properties": {
        "ChannelName": {
          "$ref": "#/definitions/ChannelName",
          "description": "The name of the channel. "
        },
        "CompressionType": {
          "$ref": "#/definitions/CompressionType",
          "description": "If training data is compressed, the compression type. The default value is <code>None</code>. <code>CompressionType</code> is used only in PIPE input mode. In FILE mode, leave this field unset or set it to None."
        },
        "ContentType": {
          "$ref": "#/definitions/ContentType",
          "description": "The MIME type of the data."
        },
        "DataSource": {
          "$ref": "#/definitions/DataSource",
          "description": "The location of the channel data."
        },
        "RecordWrapperType": {
          "$ref": "#/definitions/RecordWrapper",
          "description": "<p/> <p>Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format, in which caseAmazon SageMaker wraps each individual S3 object in a RecordIO record. If the input data is already in RecordIO format, you don't need to set this attribute. For more information, see <a href=\"https://mxnet.incubator.apache.org/how_to/recordio.html?highlight=im2rec\">Create a Dataset Using RecordIO</a>. </p> <p>In FILE mode, leave this field unset or set it to None.</p> <p/>"
        }
      },
      "required": [
        "ChannelName",
        "DataSource"
      ],
      "type": "object",
      "title": "Channel"
    },
    "ChannelName": {
      "maxLength": 64,
      "minLength": 1,
      "pattern": "[A-Za-z0-9\\.\\-_]+",
      "type": "string",
      "title": "ChannelName"
    },
    "CompressionType": {
      "enum": [
        "None",
        "Gzip"
      ],
      "type": "string",
      "title": "CompressionType"
    },
    "ContainerDefinition": {
      "description": "Describes the container, as part of model definition.",
      "properties": {
        "ContainerHostname": {
          "$ref": "#/definitions/ContainerHostname",
          "description": "The DNS host name for the container after Amazon SageMaker deploys it."
        },
        "Environment": {
          "$ref": "#/definitions/EnvironmentMap",
          "description": "The environment variables to set in the Docker container. Each key and value in the <code>Environment</code> string to string map can have length of up to 1024. We support up to 16 entries in the map. "
        },
        "Image": {
          "$ref": "#/definitions/Image",
          "description": "The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored. If you are using your own custom algorithm instead of an algorithm provided by Amazon SageMaker, the inference code must meet Amazon SageMaker requirements. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/your-algorithms.html\">Using Your Own Algorithms with Amazon SageMaker</a> "
        },
        "ModelDataUrl": {
          "$ref": "#/definitions/Url",
          "description": "The S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix). "
        }
      },
      "required": [
        "Image"
      ],
      "type": "object",
      "title": "ContainerDefinition"
    },
    "ContainerDefinitionList": {
      "items": {
        "$ref": "#/definitions/ContainerDefinition"
      },
      "maxItems": 5,
      "type": "array",
      "title": "ContainerDefinitionList"
    },
    "ContainerHostname": {
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string",
      "title": "ContainerHostname"
    },
    "ContentType": {
      "maxLength": 256,
      "type": "string",
      "title": "ContentType"
    },
    "CreateEndpointConfigInput": {
      "properties": {
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "The name of the endpoint configuration. You specify this name in a <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html\">CreateEndpoint</a> request. "
        },
        "ProductionVariants": {
          "$ref": "#/definitions/ProductionVariantList",
          "description": "An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. "
        }
      },
      "required": [
        "EndpointConfigName",
        "ProductionVariants"
      ],
      "type": "object",
      "title": "CreateEndpointConfigInput"
    },
    "CreateEndpointConfigOutput": {
      "properties": {
        "EndpointConfigArn": {
          "$ref": "#/definitions/EndpointConfigArn",
          "description": "The Amazon Resource Name (ARN) of the endpoint configuration. "
        }
      },
      "required": [
        "EndpointConfigArn"
      ],
      "type": "object",
      "title": "CreateEndpointConfigOutput"
    },
    "CreateEndpointInput": {
      "properties": {
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "The name of an endpoint configuration. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpointConfig.html\">CreateEndpointConfig</a>. "
        },
        "EndpointName": {
          "$ref": "#/definitions/EndpointName",
          "description": "The name of the endpoint. The name must be unique within an AWS Region in your AWS account."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a>in the <i>AWS Billing and Cost Management User Guide</i>. "
        }
      },
      "required": [
        "EndpointName",
        "EndpointConfigName"
      ],
      "type": "object",
      "title": "CreateEndpointInput"
    },
    "CreateEndpointOutput": {
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/EndpointArn",
          "description": "The Amazon Resource Name (ARN) of the endpoint."
        }
      },
      "required": [
        "EndpointArn"
      ],
      "type": "object",
      "title": "CreateEndpointOutput"
    },
    "CreateModelInput": {
      "properties": {
        "ExecutionRoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "The Amazon Resource Name (ARN) of the IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute instances. Deploying on ML compute instances is part of model hosting. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. "
        },
        "ModelName": {
          "$ref": "#/definitions/ModelName",
          "description": "The name of the new model."
        },
        "PrimaryContainer": {
          "$ref": "#/definitions/ContainerDefinition",
          "description": "The location of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed into production. "
        },
        "SupplementalContainers": {
          "$ref": "#/definitions/ContainerDefinitionList",
          "description": "The additional optional containers to deploy."
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. "
        }
      },
      "required": [
        "ModelName",
        "PrimaryContainer"
      ],
      "type": "object",
      "title": "CreateModelInput"
    },
    "CreateModelOutput": {
      "properties": {
        "ModelArn": {
          "$ref": "#/definitions/ModelArn",
          "description": "The ARN of the model created in Amazon SageMaker."
        }
      },
      "required": [
        "ModelArn"
      ],
      "type": "object",
      "title": "CreateModelOutput"
    },
    "CreateNotebookInstanceInput": {
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The type of ML compute instance to launch for the notebook instance."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/KmsKeyId",
          "description": " If you provide a AWS KMS key ID, Amazon SageMaker uses it to encrypt data at rest on the ML storage volume that is attached to your notebook instance. "
        },
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the new notebook instance."
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": " When you send any requests to AWS resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. "
        },
        "SecurityGroupIds": {
          "$ref": "#/definitions/SecurityGroupIds",
          "description": "The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet. "
        },
        "SubnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance. "
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "A list of tags to associate with the notebook instance. You can add tags later by using the <code>CreateTags</code> API."
        }
      },
      "required": [
        "NotebookInstanceName",
        "InstanceType",
        "RoleArn"
      ],
      "type": "object",
      "title": "CreateNotebookInstanceInput"
    },
    "CreateNotebookInstanceOutput": {
      "properties": {
        "NotebookInstanceArn": {
          "$ref": "#/definitions/NotebookInstanceArn",
          "description": "The Amazon Resource Name (ARN) of the notebook instance. "
        }
      },
      "type": "object",
      "title": "CreateNotebookInstanceOutput"
    },
    "CreatePresignedNotebookInstanceUrlInput": {
      "properties": {
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the notebook instance."
        },
        "SessionExpirationDurationInSeconds": {
          "$ref": "#/definitions/SessionExpirationDurationInSeconds",
          "description": "The duration of the session, in seconds. The default is 12 hours."
        }
      },
      "required": [
        "NotebookInstanceName"
      ],
      "type": "object",
      "title": "CreatePresignedNotebookInstanceUrlInput"
    },
    "CreatePresignedNotebookInstanceUrlOutput": {
      "properties": {
        "AuthorizedUrl": {
          "$ref": "#/definitions/NotebookInstanceUrl",
          "description": "A JSON object that contains the URL string. "
        }
      },
      "type": "object",
      "title": "CreatePresignedNotebookInstanceUrlOutput"
    },
    "CreateTrainingJobRequest": {
      "properties": {
        "AlgorithmSpecification": {
          "$ref": "#/definitions/AlgorithmSpecification",
          "description": "The registry path of the Docker image that contains the training algorithm and algorithm-specific metadata, including the input mode. For more information about algorithms provided by Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. For information about providing your own algorithms, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/adv-topics-own-algo.html\">Bring Your Own Algorithms </a>. "
        },
        "HyperParameters": {
          "$ref": "#/definitions/HyperParameters",
          "description": "<p>Algorithm-specific parameters. You set hyperparameters before you start the learning process. Hyperparameters influence the quality of the model. For a list of hyperparameters for each training algorithm provided by Amazon SageMaker, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/algos.html\">Algorithms</a>. </p> <p>You can specify a maximum of 100 hyperparameters. Each hyperparameter is a key-value pair. Each key and value is limited to 256 characters, as specified by the <code>Length Constraint</code>. </p>"
        },
        "InputDataConfig": {
          "$ref": "#/definitions/InputDataConfig",
          "description": "<p>An array of <code>Channel</code> objects. Each channel is a named input source. <code>InputDataConfig</code> describes the input data and its location. </p> <p>Algorithms can accept input data from one or more channels. For example, an algorithm might have two channels of input data, <code>training_data</code> and <code>validation_data</code>. The configuration for each channel provides the S3 location where the input data is stored. It also provides information about the stored data: the MIME type, compression method, and whether the data is wrapped in RecordIO format. </p> <p>Depending on the input mode that the algorithm supports, Amazon SageMaker either copies input data files from an S3 bucket to a local directory in the Docker container, or makes it available as input streams. </p>"
        },
        "OutputDataConfig": {
          "$ref": "#/definitions/OutputDataConfig",
          "description": "Specifies the path to the S3 bucket where you want to store model artifacts. Amazon SageMaker creates subfolders for the artifacts. "
        },
        "ResourceConfig": {
          "$ref": "#/definitions/ResourceConfig",
          "description": "<p>The resources, including the ML compute instances and ML storage volumes, to use for model training. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use ML storage volumes for scratch space. If you want Amazon SageMaker to use the ML storage volume to store the training data, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. For distributed training algorithms, specify an instance count greater than 1.</p>"
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "<p>The Amazon Resource Name (ARN) of an IAM role that Amazon SageMaker can assume to perform tasks on your behalf. </p> <p>During model training, Amazon SageMaker needs your permission to read input data from an S3 bucket, download a Docker image that contains training code, write model artifacts to an S3 bucket, write logs to Amazon CloudWatch Logs, and publish metrics to Amazon CloudWatch. You grant permissions for all of these tasks to an IAM role. For more information, see <a href=\"http://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html\">Amazon SageMaker Roles</a>. </p>"
        },
        "StoppingCondition": {
          "$ref": "#/definitions/StoppingCondition",
          "description": "<p>Sets a duration for training. Use this parameter to cap model training costs. To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for 120 seconds. Algorithms might use this 120-second window to save the model artifacts. </p> <p>When Amazon SageMaker terminates a job because the stopping condition has been met, training algorithms provided by Amazon SageMaker save the intermediate results of the job. This intermediate data is a valid model artifact. You can use it to create a model using the <code>CreateModel</code> API. </p>"
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "An array of key-value pairs. For more information, see <a href=\"http://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html#allocation-what\">Using Cost Allocation Tags</a> in the <i>AWS Billing and Cost Management User Guide</i>. "
        },
        "TrainingJobName": {
          "$ref": "#/definitions/TrainingJobName",
          "description": "The name of the training job. The name must be unique within an AWS Region in an AWS account. It appears in the Amazon SageMaker console. "
        }
      },
      "required": [
        "TrainingJobName",
        "AlgorithmSpecification",
        "RoleArn",
        "InputDataConfig",
        "OutputDataConfig",
        "ResourceConfig",
        "StoppingCondition"
      ],
      "type": "object",
      "title": "CreateTrainingJobRequest"
    },
    "CreateTrainingJobResponse": {
      "properties": {
        "TrainingJobArn": {
          "$ref": "#/definitions/TrainingJobArn",
          "description": "The Amazon Resource Name (ARN) of the training job."
        }
      },
      "required": [
        "TrainingJobArn"
      ],
      "type": "object",
      "title": "CreateTrainingJobResponse"
    },
    "CreationTime": {
      "format": "date-time",
      "type": "string",
      "title": "CreationTime"
    },
    "DataSource": {
      "description": "Describes the location of the channel data.",
      "properties": {
        "S3DataSource": {
          "$ref": "#/definitions/S3DataSource",
          "description": "The S3 location of the data source that is associated with a channel."
        }
      },
      "required": [
        "S3DataSource"
      ],
      "type": "object",
      "title": "DataSource"
    },
    "DeleteEndpointConfigInput": {
      "properties": {
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "The name of the endpoint configuration that you want to delete."
        }
      },
      "required": [
        "EndpointConfigName"
      ],
      "type": "object",
      "title": "DeleteEndpointConfigInput"
    },
    "DeleteEndpointInput": {
      "properties": {
        "EndpointName": {
          "$ref": "#/definitions/EndpointName",
          "description": "The name of the endpoint that you want to delete."
        }
      },
      "required": [
        "EndpointName"
      ],
      "type": "object",
      "title": "DeleteEndpointInput"
    },
    "DeleteModelInput": {
      "properties": {
        "ModelName": {
          "$ref": "#/definitions/ModelName",
          "description": "The name of the model to delete."
        }
      },
      "required": [
        "ModelName"
      ],
      "type": "object",
      "title": "DeleteModelInput"
    },
    "DeleteNotebookInstanceInput": {
      "properties": {
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the Amazon SageMaker notebook instance to delete."
        }
      },
      "required": [
        "NotebookInstanceName"
      ],
      "type": "object",
      "title": "DeleteNotebookInstanceInput"
    },
    "DeleteTagsInput": {
      "properties": {
        "ResourceArn": {
          "$ref": "#/definitions/ResourceArn",
          "description": "The Amazon Resource Name (ARN) of the resource whose tags you want to delete."
        },
        "TagKeys": {
          "$ref": "#/definitions/TagKeyList",
          "description": "An array or one or more tag keys to delete."
        }
      },
      "required": [
        "ResourceArn",
        "TagKeys"
      ],
      "type": "object",
      "title": "DeleteTagsInput"
    },
    "DeleteTagsOutput": {
      "properties": {},
      "type": "object",
      "title": "DeleteTagsOutput"
    },
    "DescribeEndpointConfigInput": {
      "properties": {
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "The name of the endpoint configuration."
        }
      },
      "required": [
        "EndpointConfigName"
      ],
      "type": "object",
      "title": "DescribeEndpointConfigInput"
    },
    "DescribeEndpointConfigOutput": {
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the endpoint configuration was created."
        },
        "EndpointConfigArn": {
          "$ref": "#/definitions/EndpointConfigArn",
          "description": "The Amazon Resource Name (ARN) of the endpoint configuration."
        },
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "Name of the Amazon SageMaker endpoint configuration."
        },
        "ProductionVariants": {
          "$ref": "#/definitions/ProductionVariantList",
          "description": "An array of <code>ProductionVariant</code> objects, one for each model that you want to host at this endpoint."
        }
      },
      "required": [
        "EndpointConfigName",
        "EndpointConfigArn",
        "ProductionVariants",
        "CreationTime"
      ],
      "type": "object",
      "title": "DescribeEndpointConfigOutput"
    },
    "DescribeEndpointInput": {
      "properties": {
        "EndpointName": {
          "$ref": "#/definitions/EndpointName",
          "description": "The name of the endpoint."
        }
      },
      "required": [
        "EndpointName"
      ],
      "type": "object",
      "title": "DescribeEndpointInput"
    },
    "DescribeEndpointOutput": {
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the endpoint was created."
        },
        "EndpointArn": {
          "$ref": "#/definitions/EndpointArn",
          "description": "The Amazon Resource Name (ARN) of the endpoint."
        },
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "The name of the endpoint configuration associated with this endpoint."
        },
        "EndpointName": {
          "$ref": "#/definitions/EndpointName",
          "description": "Name of the endpoint."
        },
        "EndpointStatus": {
          "$ref": "#/definitions/EndpointStatus",
          "description": "The status of the endpoint."
        },
        "FailureReason": {
          "$ref": "#/definitions/FailureReason",
          "description": "If the status of the endpoint is <code>Failed</code>, the reason why it failed. "
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the endpoint was last modified."
        },
        "ProductionVariants": {
          "$ref": "#/definitions/ProductionVariantSummaryList",
          "description": " An array of ProductionVariant objects, one for each model hosted behind this endpoint. "
        }
      },
      "required": [
        "EndpointName",
        "EndpointArn",
        "EndpointConfigName",
        "EndpointStatus",
        "CreationTime",
        "LastModifiedTime"
      ],
      "type": "object",
      "title": "DescribeEndpointOutput"
    },
    "DescribeModelInput": {
      "properties": {
        "ModelName": {
          "$ref": "#/definitions/ModelName",
          "description": "The name of the model."
        }
      },
      "required": [
        "ModelName"
      ],
      "type": "object",
      "title": "DescribeModelInput"
    },
    "DescribeModelOutput": {
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the model was created."
        },
        "ExecutionRoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "The Amazon Resource Name (ARN) of the IAM role that you specified for the model."
        },
        "ModelArn": {
          "$ref": "#/definitions/ModelArn",
          "description": "The Amazon Resource Name (ARN) of the model."
        },
        "ModelName": {
          "$ref": "#/definitions/ModelName",
          "description": "Name of the Amazon SageMaker model."
        },
        "PrimaryContainer": {
          "$ref": "#/definitions/ContainerDefinition",
          "description": "The location of the primary inference code, associated artifacts, and custom environment map that the inference code uses when it is deployed in production. "
        },
        "SupplementalContainers": {
          "$ref": "#/definitions/ContainerDefinitionList",
          "description": "The description of additional optional containers that you defined when creating the model."
        }
      },
      "required": [
        "ModelName",
        "PrimaryContainer",
        "SupplementalContainers",
        "ExecutionRoleArn",
        "CreationTime",
        "ModelArn"
      ],
      "type": "object",
      "title": "DescribeModelOutput"
    },
    "DescribeNotebookInstanceInput": {
      "properties": {
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the notebook instance that you want information about."
        }
      },
      "required": [
        "NotebookInstanceName"
      ],
      "type": "object",
      "title": "DescribeNotebookInstanceInput"
    },
    "DescribeNotebookInstanceOutput": {
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/CreationTime",
          "description": "A timestamp. Use this parameter to return the time when the notebook instance was created"
        },
        "FailureReason": {
          "$ref": "#/definitions/FailureReason",
          "description": "If staus is failed, the reason it failed."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The type of ML compute instance running on the notebook instance."
        },
        "KmsKeyId": {
          "$ref": "#/definitions/KmsKeyId",
          "description": " AWS KMS key ID Amazon SageMaker uses to encrypt data when storing it on the ML storage volume attached to the instance. "
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/LastModifiedTime",
          "description": "A timestamp. Use this parameter to retrieve the time when the notebook instance was last modified. "
        },
        "NetworkInterfaceId": {
          "$ref": "#/definitions/NetworkInterfaceId",
          "description": " Network interface IDs that Amazon SageMaker created at the time of creating the instance. "
        },
        "NotebookInstanceArn": {
          "$ref": "#/definitions/NotebookInstanceArn",
          "description": "The Amazon Resource Name (ARN) of the notebook instance."
        },
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": " Name of the Amazon SageMaker notebook instance. "
        },
        "NotebookInstanceStatus": {
          "$ref": "#/definitions/NotebookInstanceStatus",
          "description": "The status of the notebook instance."
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": " Amazon Resource Name (ARN) of the IAM role associated with the instance. "
        },
        "SecurityGroups": {
          "$ref": "#/definitions/SecurityGroupIds",
          "description": "The IDs of the VPC security groups."
        },
        "SubnetId": {
          "$ref": "#/definitions/SubnetId",
          "description": "The ID of the VPC subnet."
        },
        "Url": {
          "$ref": "#/definitions/NotebookInstanceUrl",
          "description": "The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. "
        }
      },
      "type": "object",
      "title": "DescribeNotebookInstanceOutput"
    },
    "DescribeTrainingJobRequest": {
      "properties": {
        "TrainingJobName": {
          "$ref": "#/definitions/TrainingJobName",
          "description": "The name of the training job."
        }
      },
      "required": [
        "TrainingJobName"
      ],
      "type": "object",
      "title": "DescribeTrainingJobRequest"
    },
    "DescribeTrainingJobResponse": {
      "properties": {
        "AlgorithmSpecification": {
          "$ref": "#/definitions/AlgorithmSpecification",
          "description": "Information about the algorithm used for training, and algorithm metadata. "
        },
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that indicates when the training job was created."
        },
        "FailureReason": {
          "$ref": "#/definitions/FailureReason",
          "description": "If the training job failed, the reason it failed. "
        },
        "HyperParameters": {
          "$ref": "#/definitions/HyperParameters",
          "description": "Algorithm-specific parameters. "
        },
        "InputDataConfig": {
          "$ref": "#/definitions/InputDataConfig",
          "description": "An array of <code>Channel</code> objects that describes each data input channel. "
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that indicates when the status of the training job was last modified."
        },
        "ModelArtifacts": {
          "$ref": "#/definitions/ModelArtifacts",
          "description": "Information about the Amazon S3 location that is configured for storing model artifacts. "
        },
        "OutputDataConfig": {
          "$ref": "#/definitions/OutputDataConfig",
          "description": "The S3 path where model artifacts that you configured when creating the job are stored. Amazon SageMaker creates subfolders for model artifacts. "
        },
        "ResourceConfig": {
          "$ref": "#/definitions/ResourceConfig",
          "description": "Resources, including ML compute instances and ML storage volumes, that are configured for model training. "
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "The AWS Identity and Access Management (IAM) role configured for the training job. "
        },
        "SecondaryStatus": {
          "$ref": "#/definitions/SecondaryStatus",
          "description": " Provides granular information about the system state. For more information, see <code>TrainingJobStatus</code>. "
        },
        "StoppingCondition": {
          "$ref": "#/definitions/StoppingCondition",
          "description": "The condition under which to stop the training job. "
        },
        "TrainingEndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that indicates when model training ended."
        },
        "TrainingJobArn": {
          "$ref": "#/definitions/TrainingJobArn",
          "description": "The Amazon Resource Name (ARN) of the training job."
        },
        "TrainingJobName": {
          "$ref": "#/definitions/TrainingJobName",
          "description": " Name of the model training job. "
        },
        "TrainingJobStatus": {
          "$ref": "#/definitions/TrainingJobStatus",
          "description": "<p>The status of the training job. </p> <p>For the <code>InProgress</code> status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>Starting - Preparing for training.</p> </li> <li> <p>Downloading - Optional stage for algorithms that support File training input mode. It indicates data is being downloaded to ML storage volumes.</p> </li> <li> <p>Training - Training is in progress.</p> </li> <li> <p>Uploading - Training is complete and model upload is in progress.</p> </li> </ul> <p>For the <code>Stopped</code> training status, Amazon SageMaker can return these secondary statuses:</p> <ul> <li> <p>MaxRuntimeExceeded - Job stopped as a result of maximum allowed runtime exceeded.</p> </li> </ul>"
        },
        "TrainingStartTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that indicates when training started."
        }
      },
      "required": [
        "TrainingJobName",
        "TrainingJobArn",
        "ModelArtifacts",
        "TrainingJobStatus",
        "SecondaryStatus",
        "AlgorithmSpecification",
        "InputDataConfig",
        "ResourceConfig",
        "StoppingCondition",
        "CreationTime"
      ],
      "type": "object",
      "title": "DescribeTrainingJobResponse"
    },
    "DesiredWeightAndCapacity": {
      "description": "Specifies weight and capacity values for a production variant.",
      "properties": {
        "DesiredInstanceCount": {
          "$ref": "#/definitions/TaskCount",
          "description": "The variant's capacity."
        },
        "DesiredWeight": {
          "$ref": "#/definitions/VariantWeight",
          "description": "The variant's weight."
        },
        "VariantName": {
          "$ref": "#/definitions/VariantName",
          "description": "The name of the variant to update."
        }
      },
      "required": [
        "VariantName"
      ],
      "type": "object",
      "title": "DesiredWeightAndCapacity"
    },
    "DesiredWeightAndCapacityList": {
      "items": {
        "$ref": "#/definitions/DesiredWeightAndCapacity"
      },
      "minItems": 1,
      "type": "array",
      "title": "DesiredWeightAndCapacityList"
    },
    "EndpointArn": {
      "maxLength": 2048,
      "minLength": 20,
      "type": "string",
      "title": "EndpointArn"
    },
    "EndpointConfigArn": {
      "maxLength": 2048,
      "minLength": 20,
      "type": "string",
      "title": "EndpointConfigArn"
    },
    "EndpointConfigName": {
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string",
      "title": "EndpointConfigName"
    },
    "EndpointConfigNameContains": {
      "pattern": "[a-zA-Z0-9-]+",
      "type": "string",
      "title": "EndpointConfigNameContains"
    },
    "EndpointConfigSortKey": {
      "enum": [
        "Name",
        "CreationTime"
      ],
      "type": "string",
      "title": "EndpointConfigSortKey"
    },
    "EndpointConfigSummary": {
      "description": "Provides summary information for an endpoint configuration.",
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the endpoint configuration was created."
        },
        "EndpointConfigArn": {
          "$ref": "#/definitions/EndpointConfigArn",
          "description": "The Amazon Resource Name (ARN) of the endpoint configuration."
        },
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "The name of the endpoint configuration."
        }
      },
      "required": [
        "EndpointConfigName",
        "EndpointConfigArn",
        "CreationTime"
      ],
      "type": "object",
      "title": "EndpointConfigSummary"
    },
    "EndpointConfigSummaryList": {
      "items": {
        "$ref": "#/definitions/EndpointConfigSummary"
      },
      "type": "array",
      "title": "EndpointConfigSummaryList"
    },
    "EndpointName": {
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string",
      "title": "EndpointName"
    },
    "EndpointNameContains": {
      "pattern": "[a-zA-Z0-9-]+",
      "type": "string",
      "title": "EndpointNameContains"
    },
    "EndpointSortKey": {
      "enum": [
        "Name",
        "CreationTime",
        "Status"
      ],
      "type": "string",
      "title": "EndpointSortKey"
    },
    "EndpointStatus": {
      "enum": [
        "OutOfService",
        "Creating",
        "Updating",
        "RollingBack",
        "InService",
        "Deleting",
        "Failed"
      ],
      "type": "string",
      "title": "EndpointStatus"
    },
    "EndpointSummary": {
      "description": "Provides summary information for an endpoint.",
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the endpoint was created."
        },
        "EndpointArn": {
          "$ref": "#/definitions/EndpointArn",
          "description": "The Amazon Resource Name (ARN) of the endpoint."
        },
        "EndpointName": {
          "$ref": "#/definitions/EndpointName",
          "description": "The name of the endpoint."
        },
        "EndpointStatus": {
          "$ref": "#/definitions/EndpointStatus",
          "description": "The status of the endpoint."
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the endpoint was last modified."
        }
      },
      "required": [
        "EndpointName",
        "EndpointArn",
        "CreationTime",
        "LastModifiedTime",
        "EndpointStatus"
      ],
      "type": "object",
      "title": "EndpointSummary"
    },
    "EndpointSummaryList": {
      "items": {
        "$ref": "#/definitions/EndpointSummary"
      },
      "type": "array",
      "title": "EndpointSummaryList"
    },
    "EnvironmentKey": {
      "maxLength": 1024,
      "pattern": "[a-zA-Z_][a-zA-Z0-9_]*",
      "type": "string",
      "title": "EnvironmentKey"
    },
    "EnvironmentMap": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/EnvironmentKey"
          },
          "value": {
            "$ref": "#/definitions/EnvironmentValue"
          }
        },
        "type": "object"
      },
      "maxItems": 16,
      "type": "array",
      "title": "EnvironmentMap"
    },
    "EnvironmentValue": {
      "maxLength": 1024,
      "type": "string",
      "title": "EnvironmentValue"
    },
    "FailureReason": {
      "maxLength": 1024,
      "type": "string",
      "title": "FailureReason"
    },
    "HyperParameters": {
      "items": {
        "properties": {
          "key": {
            "$ref": "#/definitions/ParameterKey"
          },
          "value": {
            "$ref": "#/definitions/ParameterValue"
          }
        },
        "type": "object"
      },
      "maxItems": 100,
      "minItems": 0,
      "type": "array",
      "title": "HyperParameters"
    },
    "Image": {
      "maxLength": 255,
      "pattern": "[\\S]+",
      "type": "string",
      "title": "Image"
    },
    "InputDataConfig": {
      "items": {
        "$ref": "#/definitions/Channel"
      },
      "maxItems": 8,
      "minItems": 1,
      "type": "array",
      "title": "InputDataConfig"
    },
    "InstanceType": {
      "enum": [
        "ml.t2.medium",
        "ml.m4.xlarge",
        "ml.p2.xlarge"
      ],
      "type": "string",
      "title": "InstanceType"
    },
    "KmsKeyId": {
      "maxLength": 2048,
      "type": "string",
      "title": "KmsKeyId"
    },
    "LastModifiedTime": {
      "format": "date-time",
      "type": "string",
      "title": "LastModifiedTime"
    },
    "ListEndpointConfigsInput": {
      "properties": {
        "CreationTimeAfter": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only endpoint configurations created after the specified time (timestamp)."
        },
        "CreationTimeBefore": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only endpoint configurations created before the specified time (timestamp)."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of training jobs to return in the response."
        },
        "NameContains": {
          "$ref": "#/definitions/EndpointConfigNameContains",
          "description": "A string in the endpoint configuration name. This filter returns only endpoint configurations whose name contains the specified string. "
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the result of the previous <code>ListEndpointConfig</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoint configurations, use the token in the next request. "
        },
        "SortBy": {
          "$ref": "#/definitions/EndpointConfigSortKey",
          "description": "The field to sort results by. The default is <code>CreationTime</code>."
        },
        "SortOrder": {
          "$ref": "#/definitions/OrderKey",
          "description": "The sort order for results. The default is <code>Ascending</code>."
        }
      },
      "type": "object",
      "title": "ListEndpointConfigsInput"
    },
    "ListEndpointConfigsOutput": {
      "properties": {
        "EndpointConfigs": {
          "$ref": "#/definitions/EndpointConfigSummaryList",
          "description": "An array of endpoint configurations."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of endpoint configurations, use it in the subsequent request "
        }
      },
      "required": [
        "EndpointConfigs"
      ],
      "type": "object",
      "title": "ListEndpointConfigsOutput"
    },
    "ListEndpointsInput": {
      "properties": {
        "CreationTimeAfter": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only endpoints that were created after the specified time (timestamp)."
        },
        "CreationTimeBefore": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only endpoints that were created before the specified time (timestamp)."
        },
        "LastModifiedTimeAfter": {
          "$ref": "#/definitions/Timestamp",
          "description": " A filter that returns only endpoints that were modified after the specified timestamp. "
        },
        "LastModifiedTimeBefore": {
          "$ref": "#/definitions/Timestamp",
          "description": " A filter that returns only endpoints that were modified before the specified timestamp. "
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of endpoints to return in the response."
        },
        "NameContains": {
          "$ref": "#/definitions/EndpointNameContains",
          "description": "A string in endpoint names. This filter returns only endpoints whose name contains the specified string."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the result of a <code>ListEndpoints</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of endpoints, use the token in the next request."
        },
        "SortBy": {
          "$ref": "#/definitions/EndpointSortKey",
          "description": "Sorts the list of results. The default is <code>CreationTime</code>."
        },
        "SortOrder": {
          "$ref": "#/definitions/OrderKey",
          "description": "The sort order for results. The default is <code>Ascending</code>."
        },
        "StatusEquals": {
          "$ref": "#/definitions/EndpointStatus",
          "description": " A filter that returns only endpoints with the specified status. "
        }
      },
      "type": "object",
      "title": "ListEndpointsInput"
    },
    "ListEndpointsOutput": {
      "properties": {
        "Endpoints": {
          "$ref": "#/definitions/EndpointSummaryList",
          "description": " An array or endpoint objects. "
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request. "
        }
      },
      "required": [
        "Endpoints"
      ],
      "type": "object",
      "title": "ListEndpointsOutput"
    },
    "ListModelsInput": {
      "properties": {
        "CreationTimeAfter": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only models created after the specified time (timestamp)."
        },
        "CreationTimeBefore": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only models created before the specified time (timestamp)."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of models to return in the response."
        },
        "NameContains": {
          "$ref": "#/definitions/ModelNameContains",
          "description": "A string in the training job name. This filter returns only models in the training job whose name contains the specified string."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": "If the response to a previous <code>ListModels</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of models, use the token in the next request."
        },
        "SortBy": {
          "$ref": "#/definitions/ModelSortKey",
          "description": "Sorts the list of results. The default is <code>CreationTime</code>."
        },
        "SortOrder": {
          "$ref": "#/definitions/OrderKey",
          "description": "The sort order for results. The default is <code>Ascending</code>."
        }
      },
      "type": "object",
      "title": "ListModelsInput"
    },
    "ListModelsOutput": {
      "properties": {
        "Models": {
          "$ref": "#/definitions/ModelSummaryList",
          "description": "An array of <code>ModelSummary</code> objects, each of which lists a model."
        },
        "NextToken": {
          "$ref": "#/definitions/PaginationToken",
          "description": " If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of models, use it in the subsequent request. "
        }
      },
      "required": [
        "Models"
      ],
      "type": "object",
      "title": "ListModelsOutput"
    },
    "ListNotebookInstancesInput": {
      "properties": {
        "CreationTimeAfter": {
          "$ref": "#/definitions/CreationTime",
          "description": "A filter that returns only notebook instances that were created after the specified time (timestamp)."
        },
        "CreationTimeBefore": {
          "$ref": "#/definitions/CreationTime",
          "description": "A filter that returns only notebook instances that were created before the specified time (timestamp). "
        },
        "LastModifiedTimeAfter": {
          "$ref": "#/definitions/LastModifiedTime",
          "description": "A filter that returns only notebook instances that were modified after the specified time (timestamp)."
        },
        "LastModifiedTimeBefore": {
          "$ref": "#/definitions/LastModifiedTime",
          "description": "A filter that returns only notebook instances that were modified before the specified time (timestamp)."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of notebook instances to return."
        },
        "NameContains": {
          "$ref": "#/definitions/NotebookInstanceNameContains",
          "description": "A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string. "
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "<p> If the previous call to the <code>ListNotebookInstances</code> is truncated, the response includes a <code>NextToken</code>. You can use this token in your subsequent <code>ListNotebookInstances</code> request to fetch the next set of notebook instances. </p> <note> <p> You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request. </p> </note>"
        },
        "SortBy": {
          "$ref": "#/definitions/NotebookInstanceSortKey",
          "description": "The field to sort results by. The default is <code>Name</code>."
        },
        "SortOrder": {
          "$ref": "#/definitions/NotebookInstanceSortOrder",
          "description": "The sort order for results. "
        },
        "StatusEquals": {
          "$ref": "#/definitions/NotebookInstanceStatus",
          "description": "A filter that returns only notebook instances with the specified status."
        }
      },
      "type": "object",
      "title": "ListNotebookInstancesInput"
    },
    "ListNotebookInstancesOutput": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If the response to the previous <code>ListNotebookInstances</code> request was truncated, Amazon SageMaker returns this token. To retrieve the next set of notebook instances, use the token in the next request."
        },
        "NotebookInstances": {
          "$ref": "#/definitions/NotebookInstanceSummaryList",
          "description": "An array of <code>NotebookInstanceSummary</code> objects, one for each notebook instance."
        }
      },
      "type": "object",
      "title": "ListNotebookInstancesOutput"
    },
    "ListTagsInput": {
      "properties": {
        "MaxResults": {
          "$ref": "#/definitions/ListTagsMaxResults",
          "description": "Maximum number of tags to return."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": " If the response to the previous <code>ListTags</code> request is truncated, Amazon SageMaker returns this token. To retrieve the next set of tags, use it in the subsequent request. "
        },
        "ResourceArn": {
          "$ref": "#/definitions/ResourceArn",
          "description": "The Amazon Resource Name (ARN) of the resource whose tags you want to retrieve."
        }
      },
      "required": [
        "ResourceArn"
      ],
      "type": "object",
      "title": "ListTagsInput"
    },
    "ListTagsMaxResults": {
      "minimum": 50,
      "type": "integer",
      "title": "ListTagsMaxResults"
    },
    "ListTagsOutput": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": " If response is truncated, Amazon SageMaker includes a token in the response. You can use this token in your subsequent request to fetch next set of tokens. "
        },
        "Tags": {
          "$ref": "#/definitions/TagList",
          "description": "An array of <code>Tag</code> objects, each with a tag key and a value."
        }
      },
      "type": "object",
      "title": "ListTagsOutput"
    },
    "ListTrainingJobsRequest": {
      "properties": {
        "CreationTimeAfter": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that only training jobs created after the specified time (timestamp)."
        },
        "CreationTimeBefore": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only training jobs created before the specified time (timestamp)."
        },
        "LastModifiedTimeAfter": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only training jobs modified after the specified time (timestamp)."
        },
        "LastModifiedTimeBefore": {
          "$ref": "#/definitions/Timestamp",
          "description": "A filter that returns only training jobs modified before the specified time (timestamp)."
        },
        "MaxResults": {
          "$ref": "#/definitions/MaxResults",
          "description": "The maximum number of training jobs to return in the response."
        },
        "NameContains": {
          "$ref": "#/definitions/NameContains",
          "description": "A string in the training job name. This filter returns only models whose name contains the specified string."
        },
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If the result of the previous <code>ListTrainingJobs</code> request was truncated, the response includes a <code>NextToken</code>. To retrieve the next set of training jobs, use the token in the next request. "
        },
        "SortBy": {
          "$ref": "#/definitions/SortBy",
          "description": "The field to sort results by. The default is <code>CreationTime</code>."
        },
        "SortOrder": {
          "$ref": "#/definitions/SortOrder",
          "description": "The sort order for results. The default is <code>Ascending</code>."
        },
        "StatusEquals": {
          "$ref": "#/definitions/TrainingJobStatus",
          "description": "A filter that retrieves only training jobs with a specific status."
        }
      },
      "type": "object",
      "title": "ListTrainingJobsRequest"
    },
    "ListTrainingJobsResponse": {
      "properties": {
        "NextToken": {
          "$ref": "#/definitions/NextToken",
          "description": "If the response is truncated, Amazon SageMaker returns this token. To retrieve the next set of training jobs, use it in the subsequent request."
        },
        "TrainingJobSummaries": {
          "$ref": "#/definitions/TrainingJobSummaries",
          "description": "An array of <code>TrainingJobSummary</code> objects, each listing a training job."
        }
      },
      "required": [
        "TrainingJobSummaries"
      ],
      "type": "object",
      "title": "ListTrainingJobsResponse"
    },
    "MaxResults": {
      "maximum": 100,
      "minimum": 1,
      "type": "integer",
      "title": "MaxResults"
    },
    "MaxRuntimeInSeconds": {
      "minimum": 1,
      "type": "integer",
      "title": "MaxRuntimeInSeconds"
    },
    "ModelArn": {
      "maxLength": 2048,
      "minLength": 20,
      "type": "string",
      "title": "ModelArn"
    },
    "ModelArtifacts": {
      "description": "Provides information about the location that is configured for storing model artifacts. ",
      "properties": {
        "S3ModelArtifacts": {
          "$ref": "#/definitions/S3Uri",
          "description": "The path of the S3 object that contains the model artifacts. For example, <code>s3://bucket-name/keynameprefix/model.tar.gz</code>."
        }
      },
      "required": [
        "S3ModelArtifacts"
      ],
      "type": "object",
      "title": "ModelArtifacts"
    },
    "ModelName": {
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string",
      "title": "ModelName"
    },
    "ModelNameContains": {
      "pattern": "[a-zA-Z0-9-]+",
      "type": "string",
      "title": "ModelNameContains"
    },
    "ModelSortKey": {
      "enum": [
        "Name",
        "CreationTime"
      ],
      "type": "string",
      "title": "ModelSortKey"
    },
    "ModelSummary": {
      "description": "Provides summary information about a model.",
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that indicates when the model was created."
        },
        "ModelArn": {
          "$ref": "#/definitions/ModelArn",
          "description": "The Amazon Resource Name (ARN) of the model."
        },
        "ModelName": {
          "$ref": "#/definitions/ModelName",
          "description": "The name of the model that you want a summary for."
        }
      },
      "required": [
        "ModelName",
        "ModelArn",
        "CreationTime"
      ],
      "type": "object",
      "title": "ModelSummary"
    },
    "ModelSummaryList": {
      "items": {
        "$ref": "#/definitions/ModelSummary"
      },
      "type": "array",
      "title": "ModelSummaryList"
    },
    "NameContains": {
      "maxLength": 63,
      "pattern": "[a-zA-Z0-9\\-]+",
      "type": "string",
      "title": "NameContains"
    },
    "NetworkInterfaceId": {
      "type": "string",
      "title": "NetworkInterfaceId"
    },
    "NextToken": {
      "maxLength": 8192,
      "type": "string",
      "title": "NextToken"
    },
    "NotebookInstanceArn": {
      "maxLength": 256,
      "type": "string",
      "title": "NotebookInstanceArn"
    },
    "NotebookInstanceName": {
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string",
      "title": "NotebookInstanceName"
    },
    "NotebookInstanceNameContains": {
      "pattern": "[a-zA-Z0-9-]+",
      "type": "string",
      "title": "NotebookInstanceNameContains"
    },
    "NotebookInstanceSortKey": {
      "enum": [
        "Name",
        "CreationTime",
        "Status"
      ],
      "type": "string",
      "title": "NotebookInstanceSortKey"
    },
    "NotebookInstanceSortOrder": {
      "enum": [
        "Ascending",
        "Descending"
      ],
      "type": "string",
      "title": "NotebookInstanceSortOrder"
    },
    "NotebookInstanceStatus": {
      "enum": [
        "Pending",
        "InService",
        "Stopping",
        "Stopped",
        "Failed",
        "Deleting"
      ],
      "type": "string",
      "title": "NotebookInstanceStatus"
    },
    "NotebookInstanceSummary": {
      "description": "Provides summary information for an Amazon SageMaker notebook instance.",
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/CreationTime",
          "description": "A timestamp that shows when the notebook instance was created."
        },
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The type of ML compute instance that the notebook instance is running on."
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/LastModifiedTime",
          "description": "A timestamp that shows when the notebook instance was last modified."
        },
        "NotebookInstanceArn": {
          "$ref": "#/definitions/NotebookInstanceArn",
          "description": "The Amazon Resource Name (ARN) of the notebook instance."
        },
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the notebook instance that you want a summary for."
        },
        "NotebookInstanceStatus": {
          "$ref": "#/definitions/NotebookInstanceStatus",
          "description": "The status of the notebook instance."
        },
        "Url": {
          "$ref": "#/definitions/NotebookInstanceUrl",
          "description": "The URL that you use to connect to the Jupyter instance running in your notebook instance. "
        }
      },
      "required": [
        "NotebookInstanceName",
        "NotebookInstanceArn"
      ],
      "type": "object",
      "title": "NotebookInstanceSummary"
    },
    "NotebookInstanceSummaryList": {
      "items": {
        "$ref": "#/definitions/NotebookInstanceSummary"
      },
      "type": "array",
      "title": "NotebookInstanceSummaryList"
    },
    "NotebookInstanceUrl": {
      "type": "string",
      "title": "NotebookInstanceUrl"
    },
    "OrderKey": {
      "enum": [
        "Ascending",
        "Descending"
      ],
      "type": "string",
      "title": "OrderKey"
    },
    "OutputDataConfig": {
      "description": "Provides information about how to store model training results (model artifacts).",
      "properties": {
        "KmsKeyId": {
          "$ref": "#/definitions/KmsKeyId",
          "description": "<p>The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption. </p> <note> <p>If the configuration of the output S3 bucket requires server-side encryption for objects, and you don't provide the KMS key ID, Amazon SageMaker uses the default service key. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">KMS-Managed Encryption Keys</a> in Amazon Simple Storage Service developer guide.</p> </note> <note> <p> The KMS key policy must grant permission to the IAM role you specify in your <code>CreateTrainingJob</code> request. <a href=\"http://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html\">Using Key Policies in AWS KMS</a> in the AWS Key Management Service Developer Guide. </p> </note>"
        },
        "S3OutputPath": {
          "$ref": "#/definitions/S3Uri",
          "description": "Identifies the S3 path where you want Amazon SageMaker to store the model artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>. "
        }
      },
      "required": [
        "S3OutputPath"
      ],
      "type": "object",
      "title": "OutputDataConfig"
    },
    "PaginationToken": {
      "maxLength": 8192,
      "type": "string",
      "title": "PaginationToken"
    },
    "ParameterKey": {
      "maxLength": 256,
      "type": "string",
      "title": "ParameterKey"
    },
    "ParameterValue": {
      "maxLength": 256,
      "type": "string",
      "title": "ParameterValue"
    },
    "ProductionVariant": {
      "description": "Identifies a model that you want to host and the resources to deploy for hosting it. If you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights. ",
      "properties": {
        "InitialInstanceCount": {
          "$ref": "#/definitions/TaskCount",
          "description": "Number of instances to launch initially."
        },
        "InitialVariantWeight": {
          "$ref": "#/definitions/VariantWeight",
          "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. The traffic to a production variant is determined by the ratio of the <code>VariantWeight</code> to the sum of all <code>VariantWeight</code> values across all ProductionVariants. If unspecified, it defaults to 1.0. "
        },
        "InstanceType": {
          "$ref": "#/definitions/ProductionVariantInstanceType",
          "description": "The ML compute instance type."
        },
        "ModelName": {
          "$ref": "#/definitions/ModelName",
          "description": "The name of the model that you want to host. This is the name that you specified when creating the model."
        },
        "VariantName": {
          "$ref": "#/definitions/VariantName",
          "description": "The name of the production variant."
        }
      },
      "required": [
        "VariantName",
        "ModelName",
        "InitialInstanceCount",
        "InstanceType"
      ],
      "type": "object",
      "title": "ProductionVariant"
    },
    "ProductionVariantInstanceType": {
      "enum": [
        "ml.c4.2xlarge",
        "ml.c4.8xlarge",
        "ml.c4.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.9xlarge",
        "ml.c5.xlarge",
        "ml.m4.xlarge",
        "ml.p2.xlarge",
        "ml.p3.2xlarge",
        "ml.t2.medium"
      ],
      "type": "string",
      "title": "ProductionVariantInstanceType"
    },
    "ProductionVariantList": {
      "items": {
        "$ref": "#/definitions/ProductionVariant"
      },
      "minItems": 1,
      "type": "array",
      "title": "ProductionVariantList"
    },
    "ProductionVariantSummary": {
      "description": "Describes weight and capacities for a production variant associated with an endpoint. If you sent a request to the <code>UpdateWeightAndCapacities</code> API and the endpoint status is <code>Updating</code>, you get different desired and current values. ",
      "properties": {
        "CurrentInstanceCount": {
          "$ref": "#/definitions/TaskCount",
          "description": "The number of instances associated with the variant."
        },
        "CurrentWeight": {
          "$ref": "#/definitions/VariantWeight",
          "description": "The weight associated with the variant."
        },
        "DesiredInstanceCount": {
          "$ref": "#/definitions/TaskCount",
          "description": "The number of instances requested in the <code>UpdateWeightAndCapacities</code> request. "
        },
        "DesiredWeight": {
          "$ref": "#/definitions/VariantWeight",
          "description": "The requested weight, as specified in the <code>UpdateWeightAndCapacities</code> request. "
        },
        "VariantName": {
          "$ref": "#/definitions/VariantName",
          "description": "The name of the variant."
        }
      },
      "required": [
        "VariantName"
      ],
      "type": "object",
      "title": "ProductionVariantSummary"
    },
    "ProductionVariantSummaryList": {
      "items": {
        "$ref": "#/definitions/ProductionVariantSummary"
      },
      "minItems": 1,
      "type": "array",
      "title": "ProductionVariantSummaryList"
    },
    "RecordWrapper": {
      "enum": [
        "None",
        "RecordIO"
      ],
      "type": "string",
      "title": "RecordWrapper"
    },
    "ResourceArn": {
      "maxLength": 256,
      "type": "string",
      "title": "ResourceArn"
    },
    "ResourceConfig": {
      "description": "Describes the resources, including ML compute instances and ML storage volumes, to use for model training. ",
      "properties": {
        "InstanceCount": {
          "$ref": "#/definitions/TrainingInstanceCount",
          "description": "The number of ML compute instances to use. For distributed training, provide a value greater than 1. "
        },
        "InstanceType": {
          "$ref": "#/definitions/TrainingInstanceType",
          "description": "The ML compute instance type. "
        },
        "VolumeSizeInGB": {
          "$ref": "#/definitions/VolumeSizeInGB",
          "description": "<p>The size of the ML storage volume that you want to provision. </p> <p>ML storage volumes store model artifacts and incremental states. Training algorithms might also use the ML storage volume for scratch space. If you want to store the training data in the ML storage volume, choose <code>File</code> as the <code>TrainingInputMode</code> in the algorithm specification. </p> <p>You must specify sufficient ML storage for your scenario. </p> <note> <p> Amazon SageMaker supports only the General Purpose SSD (gp2) ML storage volume type. </p> </note>"
        }
      },
      "required": [
        "InstanceType",
        "InstanceCount",
        "VolumeSizeInGB"
      ],
      "type": "object",
      "title": "ResourceConfig"
    },
    "ResourceInUse": {
      "description": "Resource being accessed is in use.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/FailureReason"
        }
      },
      "type": "object",
      "title": "ResourceInUse"
    },
    "ResourceLimitExceeded": {
      "description": " You have exceeded an Amazon SageMaker resource limit. For example, you might have too many training jobs created. ",
      "properties": {
        "Message": {
          "$ref": "#/definitions/FailureReason"
        }
      },
      "type": "object",
      "title": "ResourceLimitExceeded"
    },
    "ResourceNotFound": {
      "description": "Resource being access is not found.",
      "properties": {
        "Message": {
          "$ref": "#/definitions/FailureReason"
        }
      },
      "type": "object",
      "title": "ResourceNotFound"
    },
    "RoleArn": {
      "maxLength": 2048,
      "minLength": 20,
      "pattern": "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$",
      "type": "string",
      "title": "RoleArn"
    },
    "S3DataDistribution": {
      "enum": [
        "FullyReplicated",
        "ShardedByS3Key"
      ],
      "type": "string",
      "title": "S3DataDistribution"
    },
    "S3DataSource": {
      "description": "Describes the S3 data source.",
      "properties": {
        "S3DataDistributionType": {
          "$ref": "#/definitions/S3DataDistribution",
          "description": "<p>If you want Amazon SageMaker to replicate the entire dataset on each ML compute instance that is launched for model training, specify <code>FullyReplicated</code>. </p> <p>If you want Amazon SageMaker to replicate a subset of data on each ML compute instance that is launched for model training, specify <code>ShardedByS3Key</code>. If there are <i>n</i> ML compute instances launched for a training job, each instance gets approximately 1/<i>n</i> of the number of S3 objects. In this case, model training on each machine uses only the subset of training data. </p> <p>Don't choose more ML compute instances for training than available S3 objects. If you do, some nodes won't get any data and you will pay for nodes that aren't getting any training data. This applies in both FILE and PIPE modes. Keep this in mind when developing algorithms. </p> <p>In distributed training, where you use multiple ML compute EC2 instances, you might choose <code>ShardedByS3Key</code>. If the algorithm requires copying training data to the ML storage volume (when <code>TrainingInputMode</code> is set to <code>File</code>), this copies 1/<i>n</i> of the number of objects. </p>"
        },
        "S3DataType": {
          "$ref": "#/definitions/S3DataType",
          "description": "<p>If you choose <code>S3Prefix</code>, <code>S3Uri</code> identifies a key name prefix. Amazon SageMaker uses all objects with the specified key name prefix for model training. </p> <p>If you choose <code>ManifestFile</code>, <code>S3Uri</code> identifies an object that is a manifest file containing a list of object keys that you want Amazon SageMaker to use for model training. </p>"
        },
        "S3Uri": {
          "$ref": "#/definitions/S3Uri",
          "description": "<p>Depending on the value specified for the <code>S3DataType</code>, identifies either a key name prefix or a manifest. For example: </p> <ul> <li> <p> A key name prefix might look like this: <code>s3://bucketname/exampleprefix</code>. </p> </li> <li> <p> A manifest might look like this: <code>s3://bucketname/example.manifest</code> </p> <p> The manifest is an S3 object which is a JSON file with the following format: </p> <p> <code>[</code> </p> <p> <code> {\"prefix\": \"s3://customer_bucket/some/prefix/\"},</code> </p> <p> <code> \"relative/path/to/custdata-1\",</code> </p> <p> <code> \"relative/path/custdata-2\",</code> </p> <p> <code> ...</code> </p> <p> <code> ]</code> </p> <p> The preceding JSON matches the following <code>s3Uris</code>: </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/to/custdata-1</code> </p> <p> <code>s3://customer_bucket/some/prefix/relative/path/custdata-1</code> </p> <p> <code>...</code> </p> <p> The complete set of <code>s3uris</code> in this manifest constitutes the input data for the channel for this datasource. The object that each <code>s3uris</code> points to must readable by the IAM role that Amazon SageMaker uses to perform tasks on your behalf. </p> </li> </ul>"
        }
      },
      "required": [
        "S3DataType",
        "S3Uri"
      ],
      "type": "object",
      "title": "S3DataSource"
    },
    "S3DataType": {
      "enum": [
        "ManifestFile",
        "S3Prefix"
      ],
      "type": "string",
      "title": "S3DataType"
    },
    "S3Uri": {
      "maxLength": 1024,
      "pattern": "^(https|s3)://([^/]+)/?(.*)$",
      "type": "string",
      "title": "S3Uri"
    },
    "SecondaryStatus": {
      "enum": [
        "Starting",
        "Downloading",
        "Training",
        "Uploading",
        "Stopping",
        "Stopped",
        "MaxRuntimeExceeded",
        "Completed",
        "Failed"
      ],
      "type": "string",
      "title": "SecondaryStatus"
    },
    "SecurityGroupId": {
      "maxLength": 32,
      "type": "string",
      "title": "SecurityGroupId"
    },
    "SecurityGroupIds": {
      "items": {
        "$ref": "#/definitions/SecurityGroupId"
      },
      "maxItems": 5,
      "type": "array",
      "title": "SecurityGroupIds"
    },
    "SessionExpirationDurationInSeconds": {
      "maximum": 43200,
      "minimum": 1800,
      "type": "integer",
      "title": "SessionExpirationDurationInSeconds"
    },
    "SortBy": {
      "enum": [
        "Name",
        "CreationTime",
        "Status"
      ],
      "type": "string",
      "title": "SortBy"
    },
    "SortOrder": {
      "enum": [
        "Ascending",
        "Descending"
      ],
      "type": "string",
      "title": "SortOrder"
    },
    "StartNotebookInstanceInput": {
      "properties": {
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the notebook instance to start."
        }
      },
      "required": [
        "NotebookInstanceName"
      ],
      "type": "object",
      "title": "StartNotebookInstanceInput"
    },
    "StopNotebookInstanceInput": {
      "properties": {
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the notebook instance to terminate."
        }
      },
      "required": [
        "NotebookInstanceName"
      ],
      "type": "object",
      "title": "StopNotebookInstanceInput"
    },
    "StopTrainingJobRequest": {
      "properties": {
        "TrainingJobName": {
          "$ref": "#/definitions/TrainingJobName",
          "description": "The name of the training job to stop."
        }
      },
      "required": [
        "TrainingJobName"
      ],
      "type": "object",
      "title": "StopTrainingJobRequest"
    },
    "StoppingCondition": {
      "description": "<p>Specifies how long model training can run. When model training reaches the limit, Amazon SageMaker ends the training job. Use this API to cap model training cost.</p> <p>To stop a job, Amazon SageMaker sends the algorithm the <code>SIGTERM</code> signal, which delays job termination for120 seconds. Algorithms might use this 120-second window to save the model artifacts, so the results of training is not lost. </p> <p>Training algorithms provided by Amazon SageMaker automatically saves the intermediate results of a model training job (it is best effort case, as model might not be ready to save as some stages, for example training just started). This intermediate data is a valid model artifact. You can use it to create a model (<code>CreateModel</code>). </p>",
      "properties": {
        "MaxRuntimeInSeconds": {
          "$ref": "#/definitions/MaxRuntimeInSeconds",
          "description": "The maximum length of time, in seconds, that the training job can run. If model training does not complete during this time, Amazon SageMaker ends the job. If value is not specified, default value is 1 day. Maximum value is 5 days."
        }
      },
      "type": "object",
      "title": "StoppingCondition"
    },
    "SubnetId": {
      "maxLength": 32,
      "type": "string",
      "title": "SubnetId"
    },
    "Tag": {
      "description": "Describes a tag. ",
      "properties": {
        "Key": {
          "$ref": "#/definitions/TagKey",
          "description": "The tag key."
        },
        "Value": {
          "$ref": "#/definitions/TagValue",
          "description": "The tag value."
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "type": "object",
      "title": "Tag"
    },
    "TagKey": {
      "maxLength": 128,
      "minLength": 1,
      "pattern": "^((?!aws:)[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string",
      "title": "TagKey"
    },
    "TagKeyList": {
      "items": {
        "$ref": "#/definitions/TagKey"
      },
      "maxItems": 50,
      "minItems": 1,
      "type": "array",
      "title": "TagKeyList"
    },
    "TagList": {
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 50,
      "minItems": 0,
      "type": "array",
      "title": "TagList"
    },
    "TagValue": {
      "maxLength": 256,
      "minLength": 0,
      "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
      "type": "string",
      "title": "TagValue"
    },
    "TaskCount": {
      "minimum": 1,
      "type": "integer",
      "title": "TaskCount"
    },
    "Timestamp": {
      "format": "date-time",
      "type": "string",
      "title": "Timestamp"
    },
    "TrainingInputMode": {
      "enum": [
        "Pipe",
        "File"
      ],
      "type": "string",
      "title": "TrainingInputMode"
    },
    "TrainingInstanceCount": {
      "minimum": 1,
      "type": "integer",
      "title": "TrainingInstanceCount"
    },
    "TrainingInstanceType": {
      "enum": [
        "ml.m4.xlarge",
        "ml.m4.4xlarge",
        "ml.m4.10xlarge",
        "ml.c4.xlarge",
        "ml.c4.2xlarge",
        "ml.c4.8xlarge",
        "ml.p2.xlarge",
        "ml.p2.8xlarge",
        "ml.p2.16xlarge",
        "ml.p3.2xlarge",
        "ml.p3.8xlarge",
        "ml.p3.16xlarge",
        "ml.c5.xlarge",
        "ml.c5.2xlarge",
        "ml.c5.4xlarge",
        "ml.c5.9xlarge",
        "ml.c5.18xlarge"
      ],
      "type": "string",
      "title": "TrainingInstanceType"
    },
    "TrainingJobArn": {
      "maxLength": 256,
      "pattern": "arn:aws:sagemaker:[\\p{Alnum}\\-]*:[0-9]{12}:training-job/.*",
      "type": "string",
      "title": "TrainingJobArn"
    },
    "TrainingJobName": {
      "maxLength": 63,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string",
      "title": "TrainingJobName"
    },
    "TrainingJobStatus": {
      "enum": [
        "InProgress",
        "Completed",
        "Failed",
        "Stopping",
        "Stopped"
      ],
      "type": "string",
      "title": "TrainingJobStatus"
    },
    "TrainingJobSummaries": {
      "items": {
        "$ref": "#/definitions/TrainingJobSummary"
      },
      "type": "array",
      "title": "TrainingJobSummaries"
    },
    "TrainingJobSummary": {
      "description": "Provides summary information about a training job.",
      "properties": {
        "CreationTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the training job was created."
        },
        "LastModifiedTime": {
          "$ref": "#/definitions/Timestamp",
          "description": " Timestamp when the training job was last modified. "
        },
        "TrainingEndTime": {
          "$ref": "#/definitions/Timestamp",
          "description": "A timestamp that shows when the training job ended. This field is set only if the training job has one of the terminal statuses (<code>Completed</code>, <code>Failed</code>, or <code>Stopped</code>). "
        },
        "TrainingJobArn": {
          "$ref": "#/definitions/TrainingJobArn",
          "description": "The Amazon Resource Name (ARN) of the training job."
        },
        "TrainingJobName": {
          "$ref": "#/definitions/TrainingJobName",
          "description": "The name of the training job that you want a summary for."
        },
        "TrainingJobStatus": {
          "$ref": "#/definitions/TrainingJobStatus",
          "description": "The status of the training job."
        }
      },
      "required": [
        "TrainingJobName",
        "TrainingJobArn",
        "CreationTime",
        "TrainingJobStatus"
      ],
      "type": "object",
      "title": "TrainingJobSummary"
    },
    "UpdateEndpointInput": {
      "properties": {
        "EndpointConfigName": {
          "$ref": "#/definitions/EndpointConfigName",
          "description": "The name of the new endpoint configuration."
        },
        "EndpointName": {
          "$ref": "#/definitions/EndpointName",
          "description": "The name of the endpoint whose configuration you want to update."
        }
      },
      "required": [
        "EndpointName",
        "EndpointConfigName"
      ],
      "type": "object",
      "title": "UpdateEndpointInput"
    },
    "UpdateEndpointOutput": {
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/EndpointArn",
          "description": "The Amazon Resource Name (ARN) of the endpoint."
        }
      },
      "required": [
        "EndpointArn"
      ],
      "type": "object",
      "title": "UpdateEndpointOutput"
    },
    "UpdateEndpointWeightsAndCapacitiesInput": {
      "properties": {
        "DesiredWeightsAndCapacities": {
          "$ref": "#/definitions/DesiredWeightAndCapacityList",
          "description": "An object that provides new capacity and weight values for a variant."
        },
        "EndpointName": {
          "$ref": "#/definitions/EndpointName",
          "description": "The name of an existing Amazon SageMaker endpoint."
        }
      },
      "required": [
        "EndpointName",
        "DesiredWeightsAndCapacities"
      ],
      "type": "object",
      "title": "UpdateEndpointWeightsAndCapacitiesInput"
    },
    "UpdateEndpointWeightsAndCapacitiesOutput": {
      "properties": {
        "EndpointArn": {
          "$ref": "#/definitions/EndpointArn",
          "description": "The Amazon Resource Name (ARN) of the updated endpoint."
        }
      },
      "required": [
        "EndpointArn"
      ],
      "type": "object",
      "title": "UpdateEndpointWeightsAndCapacitiesOutput"
    },
    "UpdateNotebookInstanceInput": {
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/InstanceType",
          "description": "The Amazon ML compute instance type."
        },
        "NotebookInstanceName": {
          "$ref": "#/definitions/NotebookInstanceName",
          "description": "The name of the notebook instance to update."
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn",
          "description": "Amazon Resource Name (ARN) of the IAM role to associate with the instance."
        }
      },
      "required": [
        "NotebookInstanceName"
      ],
      "type": "object",
      "title": "UpdateNotebookInstanceInput"
    },
    "UpdateNotebookInstanceOutput": {
      "properties": {},
      "type": "object",
      "title": "UpdateNotebookInstanceOutput"
    },
    "Url": {
      "maxLength": 1024,
      "pattern": "^(https|s3)://([^/]+)/?(.*)$",
      "type": "string",
      "title": "Url"
    },
    "VariantName": {
      "maxLength": 63,
      "pattern": "^[a-zA-Z0-9](-*[a-zA-Z0-9])*",
      "type": "string",
      "title": "VariantName"
    },
    "VariantWeight": {
      "format": "float",
      "minimum": 0,
      "type": "number",
      "title": "VariantWeight"
    },
    "VolumeSizeInGB": {
      "minimum": 1,
      "type": "integer",
      "title": "VolumeSizeInGB"
    }
  },
  "actions": [
    {
      "id": "AddTags",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/AddTagsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/AddTagsOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "CreateEndpoint",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateEndpointInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateEndpointOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "CreateEndpointConfig",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateEndpointConfigInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateEndpointConfigOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "CreateModel",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateModelInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateModelOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "CreateNotebookInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateNotebookInstanceInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateNotebookInstanceOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "CreatePresignedNotebookInstanceUrl",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreatePresignedNotebookInstanceUrlInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreatePresignedNotebookInstanceUrlOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "CreateTrainingJob",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/CreateTrainingJobRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/CreateTrainingJobResponse"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DeleteEndpoint",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteEndpointInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DeleteEndpointConfig",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteEndpointConfigInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DeleteModel",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteModelInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DeleteNotebookInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteNotebookInstanceInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DeleteTags",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DeleteTagsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DeleteTagsOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DescribeEndpoint",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEndpointInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEndpointOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DescribeEndpointConfig",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeEndpointConfigInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeEndpointConfigOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DescribeModel",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeModelInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeModelOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DescribeNotebookInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeNotebookInstanceInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeNotebookInstanceOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "DescribeTrainingJob",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/DescribeTrainingJobRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/DescribeTrainingJobResponse"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "ListEndpointConfigs",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxResults": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListEndpointConfigsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListEndpointConfigsOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "ListEndpoints",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxResults": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListEndpointsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListEndpointsOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "ListModels",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxResults": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListModelsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListModelsOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "ListNotebookInstances",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxResults": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListNotebookInstancesInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListNotebookInstancesOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "ListTags",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxResults": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListTagsInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTagsOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "ListTrainingJobs",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {
          "MaxResults": {
            "type": "string"
          },
          "NextToken": {
            "type": "string"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ListTrainingJobsRequest"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/ListTrainingJobsResponse"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "StartNotebookInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StartNotebookInstanceInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "StopNotebookInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StopNotebookInstanceInput"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "StopTrainingJob",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/StopTrainingJobRequest"
          }
        ]
      },
      "outputSchema": {},
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "UpdateEndpoint",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateEndpointInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateEndpointOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "UpdateEndpointWeightsAndCapacities",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateEndpointWeightsAndCapacitiesInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateEndpointWeightsAndCapacitiesOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    },
    {
      "id": "UpdateNotebookInstance",
      "title": "",
      "description": "",
      "inputSchema": {
        "type": "object",
        "properties": {},
        "allOf": [
          {
            "$ref": "#/definitions/UpdateNotebookInstanceInput"
          }
        ]
      },
      "outputSchema": {
        "$ref": "#/definitions/UpdateNotebookInstanceOutput"
      },
      "security": {
        "amazonaws_sagemaker": {
          "integration": "amazonaws_sagemaker"
        }
      }
    }
  ],
  "directory": "generated",
  "tags": [
    "cloud",
    "aws"
  ]
}