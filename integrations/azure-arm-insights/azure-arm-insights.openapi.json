{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "info": {
    "title": "InsightsManagementClient",
    "version": "2016-03-01",
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-insights/2016-03-01/swagger/insightsManagementClient.json",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "arm-insights",
    "x-tags": [
      "Azure",
      "Microsoft"
    ],
    "x-datafire-name": "azure-arm-insights"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "ApiVersionParameter": {
      "description": "Client Api Version.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string"
    },
    "FilterParameter": {
      "description": "The filter to apply on the operation. For more information please see https://msdn.microsoft.com/en-us/library/azure/dn931934.aspx",
      "in": "query",
      "name": "$filter",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "LogProfileNameParameter": {
      "description": "The name of the log profile.",
      "in": "path",
      "name": "logProfileName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupNameParameter": {
      "description": "The name of the resource group.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "RuleNameParameter": {
      "description": "The name of the rule.",
      "in": "path",
      "name": "ruleName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "description": "The Azure subscription Id.",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string"
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/providers/microsoft.insights/logprofiles": {
      "get": {
        "description": "List the log profiles.",
        "operationId": "LogProfiles_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to list log profiles",
            "schema": {
              "$ref": "#/definitions/LogProfileCollection"
            }
          }
        },
        "tags": [
          "LogProfiles"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/providers/microsoft.insights/logprofiles/{logProfileName}": {
      "delete": {
        "description": "Deletes the log profile.",
        "operationId": "LogProfiles_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/LogProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete a log profile"
          }
        },
        "tags": [
          "LogProfiles"
        ]
      },
      "get": {
        "description": "Gets the log profile.",
        "operationId": "LogProfiles_Get",
        "parameters": [
          {
            "$ref": "#/parameters/LogProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get more information about a log profile.",
            "schema": {
              "$ref": "#/definitions/LogProfileResource"
            }
          }
        },
        "tags": [
          "LogProfiles"
        ]
      },
      "put": {
        "description": "Create or update the log profile.",
        "operationId": "LogProfiles_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/LogProfileNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "Parameters supplied to the operation.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LogProfileCreateOrUpdateParameters"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to create or update a log profile",
            "schema": {
              "$ref": "#/definitions/LogProfileResource"
            }
          }
        },
        "tags": [
          "LogProfiles"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules": {
      "get": {
        "description": "List the alert rules within a resource group.",
        "operationId": "AlertRules_ListByResourceGroup",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/FilterParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of alert rules",
            "schema": {
              "$ref": "#/definitions/AlertRuleResourceCollection"
            }
          }
        },
        "tags": [
          "AlertRules"
        ],
        "x-ms-odata": "#/definitions/AlertRuleResource",
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}": {
      "delete": {
        "description": "Deletes an alert rule",
        "operationId": "AlertRules_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to delete an alert rule"
          },
          "204": {
            "description": "No content: the request was successful, but the response is empty"
          }
        },
        "tags": [
          "AlertRules"
        ]
      },
      "get": {
        "description": "Gets an alert rule",
        "operationId": "AlertRules_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to get an alert rule",
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          }
        },
        "tags": [
          "AlertRules"
        ]
      },
      "put": {
        "description": "Creates or updates an alert rule",
        "operationId": "AlertRules_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "The parameters of the rule to create or update.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request to create or update an alert rule",
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          },
          "201": {
            "description": "Created alert rule",
            "schema": {
              "$ref": "#/definitions/AlertRuleResource"
            }
          }
        },
        "tags": [
          "AlertRules"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}/incidents": {
      "get": {
        "description": "Gets a list of incidents associated to an alert rule",
        "operationId": "Incidents_ListByAlertRule",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for a list of alert rule related incidents",
            "schema": {
              "$ref": "#/definitions/IncidentListResult"
            }
          }
        },
        "tags": [
          "Incidents"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/microsoft.insights/alertrules/{ruleName}/incidents/{incidentName}": {
      "get": {
        "description": "Gets an incident associated to an alert rule",
        "operationId": "AlertRuleIncidents_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/RuleNameParameter"
          },
          {
            "description": "The name of the incident to retrieve.",
            "in": "path",
            "name": "incidentName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request for one alert rule related incident",
            "schema": {
              "$ref": "#/definitions/Incident"
            }
          }
        },
        "tags": [
          "AlertRuleIncidents"
        ]
      }
    }
  },
  "definitions": {
    "AlertRule": {
      "description": "An alert rule.",
      "properties": {
        "actions": {
          "description": "the actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
          "items": {
            "$ref": "#/definitions/RuleAction"
          },
          "type": "array"
        },
        "condition": {
          "$ref": "#/definitions/RuleCondition",
          "description": "the condition that results in the alert rule being activated."
        },
        "description": {
          "description": "the description of the alert rule that will be included in the alert email.",
          "type": "string"
        },
        "isEnabled": {
          "description": "the flag that indicates whether the alert rule is enabled.",
          "type": "boolean"
        },
        "lastUpdatedTime": {
          "description": "Last time the rule was updated in ISO8601 format.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "the name of the alert rule.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "isEnabled"
      ]
    },
    "AlertRuleResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The alert rule resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/AlertRule",
          "x-ms-client-flatten": true
        }
      },
      "required": [
        "properties"
      ],
      "type": "object"
    },
    "AlertRuleResourceCollection": {
      "description": "Represents a collection of alert rule resources.",
      "properties": {
        "value": {
          "description": "the values for the alert rule resources.",
          "items": {
            "$ref": "#/definitions/AlertRuleResource"
          },
          "type": "array"
        }
      }
    },
    "ConditionOperator": {
      "enum": [
        "GreaterThan",
        "GreaterThanOrEqual",
        "LessThan",
        "LessThanOrEqual"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "ConditionOperator"
      }
    },
    "Incident": {
      "description": "An alert incident indicates the activation status of an alert rule.",
      "properties": {
        "activatedTime": {
          "description": "The time at which the incident was activated in ISO8601 format.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "isActive": {
          "description": "A boolean to indicate whether the incident is active or resolved.",
          "readOnly": true,
          "type": "boolean"
        },
        "name": {
          "description": "Incident name.",
          "readOnly": true,
          "type": "string"
        },
        "resolvedTime": {
          "description": "The time at which the incident was resolved in ISO8601 format. If null, it means the incident is still active.",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "ruleName": {
          "description": "Rule name that is associated with the incident.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "IncidentListResult": {
      "description": "The List incidents operation response.",
      "properties": {
        "value": {
          "description": "the incident collection.",
          "items": {
            "$ref": "#/definitions/Incident"
          },
          "type": "array"
        }
      }
    },
    "LocationThresholdRuleCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/RuleCondition"
        }
      ],
      "description": "A rule condition based on a certain number of locations failing.",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/RuleDataSource",
          "description": "the resource from which the rule collects its data."
        },
        "failedLocationCount": {
          "description": "the number of locations that must fail to activate the alert.",
          "format": "int32",
          "type": "integer"
        },
        "windowSize": {
          "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.",
          "format": "duration",
          "type": "string"
        }
      },
      "required": [
        "failedLocationCount"
      ],
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition"
    },
    "LogProfile": {
      "description": "The log profile.",
      "properties": {
        "categories": {
          "description": " the categories.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "locations": {
          "description": "the locations.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "the retention policy for this log."
        },
        "serviceBusRuleId": {
          "description": "the resource id of the service bus rule.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "the resource id of the storage account.",
          "type": "string"
        }
      }
    },
    "LogProfileCollection": {
      "description": "Represents a collection of log profiles.",
      "properties": {
        "value": {
          "description": "the values of the log profiles.",
          "items": {
            "$ref": "#/definitions/LogProfileResource"
          },
          "type": "array"
        }
      }
    },
    "LogProfileCreateOrUpdateParameters": {
      "description": "Paramters to create a new Log Profile",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogProfile",
          "description": "The properties envelope to create a Log Profile.",
          "x-ms-client-flatten": true
        }
      }
    },
    "LogProfileResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The log profile resource.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/LogProfile",
          "x-ms-client-flatten": true
        }
      },
      "type": "object"
    },
    "ManagementEventAggregationCondition": {
      "description": "A management event aggregation condition.",
      "properties": {
        "operator": {
          "$ref": "#/definitions/ConditionOperator",
          "description": "the condition operator."
        },
        "threshold": {
          "description": "the condition threshold.",
          "format": "double",
          "type": "number"
        },
        "windowSize": {
          "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.",
          "format": "duration",
          "type": "string"
        }
      }
    },
    "ManagementEventRuleCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/RuleCondition"
        }
      ],
      "description": "A management event rule condition.",
      "properties": {
        "aggregation": {
          "$ref": "#/definitions/ManagementEventAggregationCondition",
          "description": "the aggregation condition."
        },
        "dataSource": {
          "$ref": "#/definitions/RuleDataSource",
          "description": "the resource from which the rule collects its data."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.ManagementEventRuleCondition"
    },
    "Resource": {
      "description": "An azure resource object",
      "properties": {
        "id": {
          "description": "Azure resource Id",
          "readOnly": true,
          "type": "string"
        },
        "location": {
          "description": "Resource location",
          "type": "string"
        },
        "name": {
          "description": "Azure resource name",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags"
        },
        "type": {
          "description": "Azure resource type",
          "readOnly": true,
          "type": "string"
        }
      },
      "required": [
        "location"
      ],
      "x-ms-azure-resource": true
    },
    "RetentionPolicy": {
      "description": "Specifies the retention policy for the log.",
      "properties": {
        "days": {
          "description": "the number of days for the retention.",
          "format": "int32",
          "type": "integer"
        },
        "enabled": {
          "description": "a value indicating whether the retention policy is enabled.",
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "days"
      ]
    },
    "RuleAction": {
      "description": "The action that is performed when the alert rule becomes active, and when an alert condition is resolved.",
      "discriminator": "odata.type",
      "properties": {
        "odata.type": {
          "type": "string"
        }
      },
      "required": [
        "odata.type"
      ],
      "type": "object"
    },
    "RuleCondition": {
      "description": "The condition that results in the alert rule being activated.",
      "discriminator": "odata.type",
      "properties": {
        "odata.type": {
          "description": "specifies the type of condition.",
          "type": "string"
        }
      },
      "required": [
        "odata.type"
      ],
      "type": "object"
    },
    "RuleDataSource": {
      "description": "The resource from which the rule collects its data.",
      "discriminator": "odata.type",
      "properties": {
        "odata.type": {
          "description": "specifies the type of data source.",
          "type": "string"
        }
      },
      "required": [
        "odata.type"
      ],
      "type": "object"
    },
    "RuleEmailAction": {
      "allOf": [
        {
          "$ref": "#/definitions/RuleAction"
        }
      ],
      "description": "Specifies the action to send email when the rule condition is evaluated.",
      "properties": {
        "customEmails": {
          "description": "the list of administrator's custom email addresses notifiy of the activation of the alert.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sendToServiceOwners": {
          "description": "the flag to send e-mails to the service owners. Whether the administrators (service and co-adiminstrators) of the service should be notified when the alert is activated.",
          "type": "boolean"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction"
    },
    "RuleManagementEventClaimsDataSource": {
      "description": "The claims for a rule management event data source.",
      "properties": {
        "emailAddress": {
          "description": "the email address.",
          "type": "string"
        }
      }
    },
    "RuleManagementEventDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/RuleDataSource"
        }
      ],
      "description": "A rule management event data source.",
      "properties": {
        "claims": {
          "$ref": "#/definitions/RuleManagementEventClaimsDataSource",
          "description": "the claims."
        },
        "eventName": {
          "description": "the event name.",
          "type": "string"
        },
        "eventSource": {
          "description": "the event source.",
          "type": "string"
        },
        "level": {
          "description": "the level.",
          "type": "string"
        },
        "operationName": {
          "description": "The name of the operation that should be checked for. If no name is provided, any operation will match.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "the resource group name.",
          "type": "string"
        },
        "resourceProviderName": {
          "description": "the resource provider name.",
          "type": "string"
        },
        "resourceUri": {
          "description": "the resource uri.",
          "type": "string"
        },
        "status": {
          "description": "The status of the operation that should be checked for. If no status is provided, any status will match.",
          "type": "string"
        },
        "subStatus": {
          "description": "the substatus.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleManagementEventDataSource"
    },
    "RuleMetricDataSource": {
      "allOf": [
        {
          "$ref": "#/definitions/RuleDataSource"
        }
      ],
      "description": "A rule metric data source.",
      "properties": {
        "metricName": {
          "description": "the name of the metric that defines what the rule monitors.",
          "type": "string"
        },
        "resourceUri": {
          "description": "the resource identifier of the resource the rule monitors.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource"
    },
    "RuleWebhookAction": {
      "allOf": [
        {
          "$ref": "#/definitions/RuleAction"
        }
      ],
      "description": "Specifies the action to post to service when the rule condition is evaluated.",
      "properties": {
        "properties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "the dictionary of custom properties to include with the post operation.",
          "type": "object"
        },
        "serviceUri": {
          "description": "the service uri to Post the notitication.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.RuleWebhookAction"
    },
    "ThresholdRuleCondition": {
      "allOf": [
        {
          "$ref": "#/definitions/RuleCondition"
        }
      ],
      "description": "A rule condition based on a metric crossing a threshold.",
      "properties": {
        "dataSource": {
          "$ref": "#/definitions/RuleDataSource",
          "description": "the resource from which the rule collects its data."
        },
        "operator": {
          "$ref": "#/definitions/ConditionOperator",
          "description": "the operator used to compare the data and the threshold."
        },
        "threshold": {
          "description": "the threshold value that activates the alert.",
          "format": "double",
          "type": "number"
        },
        "timeAggregation": {
          "$ref": "#/definitions/TimeAggregationOperator",
          "description": "the time aggregation operator. How the data that is collected should be combined over time. The default value is the PrimaryAggregationType of the Metric."
        },
        "windowSize": {
          "description": "the period of time (in ISO 8601 duration format) that is used to monitor alert activity based on the threshold. If specified then it must be between 5 minutes and 1 day.",
          "format": "duration",
          "type": "string"
        }
      },
      "required": [
        "threshold",
        "operator"
      ],
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition"
    },
    "TimeAggregationOperator": {
      "enum": [
        "Average",
        "Minimum",
        "Maximum",
        "Total",
        "Last"
      ],
      "type": "string",
      "x-ms-enum": {
        "modelAsString": false,
        "name": "TimeAggregationOperator"
      }
    }
  }
}