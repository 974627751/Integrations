{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "info": {
    "title": "RecoveryServicesBackupClient",
    "version": "2016-06-01",
    "x-apisguru-categories": [
      "cloud"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": {
      "format": "swagger",
      "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-recoveryservicesbackup/2016-06-01/swagger/recoveryservicesbackup.json",
      "version": "2.0"
    },
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "arm-recoveryservicesbackup",
    "x-tags": [
      "Azure",
      "Microsoft"
    ],
    "x-datafire": {
      "name": "azure-arm-recoveryservicesbackup",
      "type": "openapi"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "description": "Azure Active Directory OAuth2 Flow",
      "flow": "implicit",
      "scopes": {
        "user_impersonation": "impersonate your user account."
      },
      "type": "oauth2"
    }
  },
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "parameters": {
    "ApiVersion": {
      "description": "Client Api Version.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string"
    },
    "ResourceGroupName": {
      "description": "The name of the resource group where the recovery services vault is present.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionId": {
      "description": "The subscription Id.",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string"
    },
    "VaultName": {
      "description": "The name of the recovery services vault.",
      "in": "path",
      "name": "vaultName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  },
  "paths": {
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupEngines": {
      "get": {
        "deprecated": false,
        "description": "Backup management servers registered to Recovery Services Vault. Returns a pageable list of servers.",
        "operationId": "BackupEngines_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BackupEngineBaseResourceList"
            }
          }
        },
        "tags": [
          "BackupEngines"
        ],
        "x-ms-odata": "#/definitions/BMSBackupEngineQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/operationResults/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Provides the result of the refresh operation triggered by the BeginRefresh operation.",
        "operationId": "ProtectionContainerRefreshOperationResults_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Operation ID associated with the operation whose result needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectionContainerRefreshOperationResults"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}": {
      "get": {
        "deprecated": false,
        "description": "Gets details of the specific container registered to your Recovery Services Vault.",
        "operationId": "ProtectionContainers_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Name of the fabric where the container belongs.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Name of the container whose details need to be fetched.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerResource"
            }
          }
        },
        "tags": [
          "ProtectionContainers"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/operationResults/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Fetches the result of any operation on the container.",
        "operationId": "ProtectionContainerOperationResults_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name whose information should be fetched.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Operation ID which represents the operation whose result needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerResource"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectionContainerOperationResults"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}": {
      "delete": {
        "deprecated": false,
        "description": "Used to disable backup of an item within a container. This is an asynchronous operation. To know the status of the request, call the GetItemOperationResult API.",
        "operationId": "ProtectedItems_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backed up item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backed up item to be deleted.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectedItems"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Provides the details of the backed up item. This is an asynchronous operation. To know the status of the operation, call the GetItemOperationResult API.",
        "operationId": "ProtectedItems_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backed up item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backed up item name whose details are to be fetched.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectedItemResource"
            }
          }
        },
        "tags": [
          "ProtectedItems"
        ],
        "x-ms-odata": "#/definitions/GetProtectedItemQueryObject"
      },
      "put": {
        "deprecated": false,
        "description": "Enables backup of an item or to modifies the backup policy information of an already backed up item. This is an asynchronous operation. To know the status of the operation, call the GetItemOperationResult API.",
        "operationId": "ProtectedItems_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backup item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backup item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Item name to be backed up.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "resource backed up item",
            "in": "body",
            "name": "resourceProtectedItem",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectedItemResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ProtectedItems"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/backup": {
      "post": {
        "deprecated": false,
        "description": "Triggers backup for specified backed up item. This is an asynchronous operation. To know the status of the operation, call GetProtectedItemOperationResult API.",
        "operationId": "Backups_Trigger",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backup item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backup item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backup item for which backup needs to be triggered.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "resource backup request",
            "in": "body",
            "name": "resourceBackupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BackupRequestResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Backups"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/operationResults/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Fetches the result of any operation on the backup item.",
        "operationId": "ProtectedItemOperationResults_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backup item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backup item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backup item name whose details are to be fetched.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "OperationID which represents the operation whose result needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectedItemResource"
            }
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectedItemOperationResults"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/operationsStatus/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Fetches the status of an operation such as triggering a backup, restore. The status can be in progress, completed or failed. You can refer to the OperationStatus enum for all the possible states of the operation. Some operations create jobs. This method returns the list of jobs associated with the operation.",
        "operationId": "ProtectedItemOperationStatuses_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backup item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backup item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backup item name whose details are to be fetched.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "OperationID represents the operation whose status needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        },
        "tags": [
          "ProtectedItemOperationStatuses"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints": {
      "get": {
        "deprecated": false,
        "description": "Lists the backup copies for the backed up item.",
        "operationId": "RecoveryPoints_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backed up item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backed up item whose backup copies are to be fetched.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPointResourceList"
            }
          }
        },
        "tags": [
          "RecoveryPoints"
        ],
        "x-ms-odata": "#/definitions/BMSRPQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "null"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}": {
      "get": {
        "deprecated": false,
        "description": "Provides the information of the backed up data identified using RecoveryPointID. This is an asynchronous operation. To know the status of the operation, call the GetProtectedItemOperationResult API.",
        "operationId": "RecoveryPoints_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with backed up item.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with backed up item.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backed up item name whose backup data needs to be fetched.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "RecoveryPointID represents the backed up data to be fetched.",
            "in": "path",
            "name": "recoveryPointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecoveryPointResource"
            }
          }
        },
        "tags": [
          "RecoveryPoints"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/provisionInstantItemRecovery": {
      "post": {
        "deprecated": false,
        "description": "Provisions a script which invokes an iSCSI connection to the backup data. Executing this script opens a file explorer displaying all the recoverable files and folders. This is an asynchronous operation. To know the status of provisioning, call GetProtectedItemOperationResult API.",
        "operationId": "ItemLevelRecoveryConnections_Provision",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up items.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backed up items.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backed up item name whose files/folders are to be restored.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Recovery point ID which represents backed up data. iSCSI connection will be provisioned for this backed up data.",
            "in": "path",
            "name": "recoveryPointId",
            "required": true,
            "type": "string"
          },
          {
            "description": "resource ILR request",
            "in": "body",
            "name": "resourceILRRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ILRRequestResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ItemLevelRecoveryConnections"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/restore": {
      "post": {
        "deprecated": false,
        "description": "Restores the specified backed up data. This is an asynchronous operation. To know the status of this API call, use GetProtectedItemOperationResult API.",
        "operationId": "Restores_Trigger",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up items.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backed up items.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backed up item to be restored.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Recovery point ID which represents the backed up data to be restored.",
            "in": "path",
            "name": "recoveryPointId",
            "required": true,
            "type": "string"
          },
          {
            "description": "resource restore request",
            "in": "body",
            "name": "resourceRestoreRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestoreRequestResource"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Restores"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}/recoveryPoints/{recoveryPointId}/revokeInstantItemRecovery": {
      "post": {
        "deprecated": false,
        "description": "Revokes an iSCSI connection which can be used to download a script. Executing this script opens a file explorer displaying all recoverable files and folders. This is an asynchronous operation.",
        "operationId": "ItemLevelRecoveryConnections_Revoke",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated with the backed up items.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Container name associated with the backed up items.",
            "in": "path",
            "name": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Backed up item name whose files/folders are to be restored.",
            "in": "path",
            "name": "protectedItemName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Recovery point ID which represents backed up data. iSCSI connection will be revoked for this backed up data.",
            "in": "path",
            "name": "recoveryPointId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ItemLevelRecoveryConnections"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/refreshContainers": {
      "post": {
        "deprecated": false,
        "description": "Discovers all the containers in the subscription that can be backed up to Recovery Services Vault. This is an asynchronous operation. To know the status of the operation, call GetRefreshOperationResult API.",
        "operationId": "ProtectionContainers_Refresh",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Fabric name associated the container.",
            "in": "path",
            "name": "fabricName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ProtectionContainers"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs": {
      "get": {
        "deprecated": false,
        "description": "Provides a pageable list of jobs.",
        "operationId": "Jobs_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobResourceList"
            }
          }
        },
        "tags": [
          "Jobs"
        ],
        "x-ms-odata": "#/definitions/JobQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/operationResults/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Fetches the result of the operation triggered by the Export Job API.",
        "operationId": "ExportJobsOperationResults_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OperationID which represents the export job.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationResultInfoBaseResource"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ExportJobsOperationResults"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}": {
      "get": {
        "deprecated": false,
        "description": "Gets exteded information associated with the job.",
        "operationId": "JobDetails_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Name of the job whose details are to be fetched.",
            "in": "path",
            "name": "jobName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JobResource"
            }
          }
        },
        "tags": [
          "JobDetails"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}/cancel": {
      "post": {
        "deprecated": false,
        "description": "Cancels a job. This is an asynchronous operation. To know the status of the cancellation, call GetCancelOperationResult API.",
        "operationId": "JobCancellations_Trigger",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Name of the job to cancel.",
            "in": "path",
            "name": "jobName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "JobCancellations"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobs/{jobName}/operationResults/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Fetches the result of any operation.\r\n            the operation.",
        "operationId": "JobOperationResults_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Job name whose operation result has to be fetched.",
            "in": "path",
            "name": "jobName",
            "required": true,
            "type": "string"
          },
          {
            "description": "OperationID which represents the operation whose result has to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "JobOperationResults"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupJobsExport": {
      "post": {
        "deprecated": false,
        "description": "Exports all jobs for a given SAS URL. The SAS URL will expire within 15 minutes of its creation.",
        "operationId": "Jobs_Export",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Jobs"
        ],
        "x-ms-odata": "#/definitions/JobQueryObject"
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperationResults/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Provides the status of the delete operations such as deleting backed up item. Once the operation has started, the status code in the response would be Accepted. It will continue to be in this state till it reaches completion. On successful completion, the status code will be OK. This method expects OperationID as an argument. OperationID is part of the Location header of the operation response.",
        "operationId": "BackupOperationResults_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OperationID which represents the operation.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "BackupOperationResults"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupOperations/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Fetches the status of an operation such as triggering a backup, restore. The status can be in progress, completed or failed. You can refer to the OperationStatus enum for all the possible states of an operation. Some operations create jobs. This method returns the list of jobs when the operation is complete.",
        "operationId": "BackupOperationStatuses_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OperationID which represents the operation.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        },
        "tags": [
          "BackupOperationStatuses"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies": {
      "get": {
        "deprecated": false,
        "description": "Lists of backup policies associated with Recovery Services Vault. API provides pagination parameters to fetch scoped results.",
        "operationId": "ProtectionPolicies_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResourceList"
            }
          }
        },
        "tags": [
          "ProtectionPolicies"
        ],
        "x-ms-odata": "#/definitions/ProtectionPolicyQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "null"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}": {
      "delete": {
        "deprecated": false,
        "description": "Deletes specified backup policy from your Recovery Services Vault. This is an asynchronous operation. Status of the operation can be fetched using GetPolicyOperationResult API.",
        "operationId": "ProtectionPolicies_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Backup policy to be deleted.",
            "in": "path",
            "name": "policyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "ProtectionPolicies"
        ]
      },
      "get": {
        "deprecated": false,
        "description": "Provides the details of the backup policies associated to Recovery Services Vault. This is an asynchronous operation. Status of the operation can be fetched using GetPolicyOperationResult API.",
        "operationId": "ProtectionPolicies_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Backup policy information to be fetched.",
            "in": "path",
            "name": "policyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        },
        "tags": [
          "ProtectionPolicies"
        ]
      },
      "put": {
        "deprecated": false,
        "description": "Creates or modifies a backup policy. This is an asynchronous operation. Status of the operation can be fetched using GetPolicyOperationResult API.",
        "operationId": "ProtectionPolicies_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Backup policy to be created.",
            "in": "path",
            "name": "policyName",
            "required": true,
            "type": "string"
          },
          {
            "description": "resource backup policy",
            "in": "body",
            "name": "resourceProtectionPolicy",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ProtectionPolicies"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operationResults/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Provides the result of an operation.",
        "operationId": "ProtectionPolicyOperationResults_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Backup policy name whose operation's result needs to be fetched.",
            "in": "path",
            "name": "policyName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Operation ID which represents the operation whose result needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionPolicyResource"
            }
          }
        },
        "tags": [
          "ProtectionPolicyOperationResults"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupPolicies/{policyName}/operations/{operationId}": {
      "get": {
        "deprecated": false,
        "description": "Provides the status of the asynchronous operations like backup, restore. The status can be in progress, completed or failed. You can refer to the Operation Status enum for all the possible states of an operation. Some operations create jobs. This method returns the list of jobs associated with operation.",
        "operationId": "ProtectionPolicyOperationStatuses_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "Backup policy name whose operation's status needs to be fetched.",
            "in": "path",
            "name": "policyName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Operation ID which represents an operation whose status needs to be fetched.",
            "in": "path",
            "name": "operationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        },
        "tags": [
          "ProtectionPolicyOperationStatuses"
        ]
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectableItems": {
      "get": {
        "deprecated": false,
        "description": "Provides a pageable list of protectable objects within your subscription according to the query filter and the pagination parameters.",
        "operationId": "ProtectableItems_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WorkloadProtectableItemResourceList"
            }
          }
        },
        "tags": [
          "ProtectableItems"
        ],
        "x-ms-odata": "#/definitions/BMSPOQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectedItems": {
      "get": {
        "deprecated": false,
        "description": "Provides a pageable list of all items that can be backed up within a subscription.",
        "operationId": "ProtectedItems_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          },
          {
            "description": "skipToken Filter.",
            "in": "query",
            "name": "$skipToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectedItemResourceList"
            }
          }
        },
        "tags": [
          "ProtectedItems"
        ],
        "x-ms-odata": "#/definitions/ProtectedItemQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectionContainers": {
      "get": {
        "deprecated": false,
        "description": "Lists the containers registered to Recovery Services Vault.",
        "operationId": "ProtectionContainers_List",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersion"
          },
          {
            "$ref": "#/parameters/VaultName"
          },
          {
            "$ref": "#/parameters/ResourceGroupName"
          },
          {
            "$ref": "#/parameters/SubscriptionId"
          },
          {
            "description": "OData filter options.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProtectionContainerResourceList"
            }
          }
        },
        "tags": [
          "ProtectionContainers"
        ],
        "x-ms-odata": "#/definitions/BMSContainerQueryObject",
        "x-ms-pageable": {
          "nextLinkName": "null"
        }
      }
    }
  },
  "definitions": {
    "AzureBackupServerEngine": {
      "allOf": [
        {
          "$ref": "#/definitions/BackupEngineBase"
        }
      ],
      "description": "Backup engine type when Azure Backup Server is used to manage the backups.",
      "type": "object",
      "x-ms-discriminator-value": "AzureBackupServerEngine"
    },
    "AzureIaaSClassicComputeVMContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMContainer"
        }
      ],
      "description": "IaaS VM workload-specific backup item representing a classic virtual machine.",
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMProtectableItem": {
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMProtectableItem"
        }
      ],
      "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSClassicComputeVMProtectedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureIaaSVMProtectedItem"
        }
      ],
      "description": "IaaS VM workload-specific backup item representing the Classic Compute VM.",
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.ClassicCompute/virtualMachines"
    },
    "AzureIaaSComputeVMContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMContainer"
        }
      ],
      "description": "IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.",
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSComputeVMProtectableItem": {
      "allOf": [
        {
          "$ref": "#/definitions/IaaSVMProtectableItem"
        }
      ],
      "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSComputeVMProtectedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/AzureIaaSVMProtectedItem"
        }
      ],
      "description": "IaaS VM workload-specific backup item representing the Azure Resource Manager VM.",
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Compute/virtualMachines"
    },
    "AzureIaaSVMErrorInfo": {
      "description": "Azure IaaS VM workload-specific error information.",
      "properties": {
        "errorCode": {
          "description": "Error code.",
          "format": "int32",
          "type": "integer"
        },
        "errorString": {
          "description": "Localized error string.",
          "type": "string"
        },
        "errorTitle": {
          "description": "Title: Typically, the entity that the error pertains to.",
          "type": "string"
        },
        "recommendations": {
          "description": "List of localized recommendations for above error code.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AzureIaaSVMJob": {
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        }
      ],
      "description": "Azure IaaS VM workload-specifc job object.",
      "properties": {
        "actionsInfo": {
          "description": "Gets or sets the state/actions applicable on this job like cancel/retry.",
          "items": {
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobSupportedAction"
            }
          },
          "type": "array"
        },
        "duration": {
          "description": "Time elapsed during the execution of this job.",
          "format": "duration",
          "type": "string"
        },
        "errorDetails": {
          "description": "Error details on execution of this job.",
          "items": {
            "$ref": "#/definitions/AzureIaaSVMErrorInfo"
          },
          "type": "array"
        },
        "extendedInfo": {
          "$ref": "#/definitions/AzureIaaSVMJobExtendedInfo",
          "description": "Additional information for this job."
        },
        "virtualMachineVersion": {
          "description": "Specifies whether the backup item is a Classic or an Azure Resource Manager VM.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureIaaSVMJob"
    },
    "AzureIaaSVMJobExtendedInfo": {
      "description": "Azure IaaS VM workload-specific additional information for job.",
      "properties": {
        "dynamicErrorMessage": {
          "description": "Non localized error message on job execution.",
          "type": "string"
        },
        "progressPercentage": {
          "description": "Indicates progress of the job. Null if it has not started or completed.",
          "format": "double",
          "type": "number"
        },
        "propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Job properties.",
          "type": "object"
        },
        "tasksList": {
          "description": "List of tasks associated with this job.",
          "items": {
            "$ref": "#/definitions/AzureIaaSVMJobTaskDetails"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AzureIaaSVMJobTaskDetails": {
      "description": "Azure IaaS VM workload-specific job task details.",
      "properties": {
        "duration": {
          "description": "Time elapsed for task.",
          "format": "duration",
          "type": "string"
        },
        "endTime": {
          "description": "The end time.",
          "format": "date-time",
          "type": "string"
        },
        "instanceId": {
          "description": "The instanceId.",
          "type": "string"
        },
        "progressPercentage": {
          "description": "Progress of the task.",
          "format": "double",
          "type": "number"
        },
        "startTime": {
          "description": "The start time.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "taskId": {
          "description": "The task display name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AzureIaaSVMProtectedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "description": "IaaS VM workload-specific backup item.",
      "properties": {
        "extendedInfo": {
          "$ref": "#/definitions/AzureIaaSVMProtectedItemExtendedInfo",
          "description": "Additional information for this backup item."
        },
        "friendlyName": {
          "description": "Friendly name of the VM represented by this backup item.",
          "type": "string"
        },
        "lastBackupStatus": {
          "description": "Last backup operation status. Possible values: Healthy, Unhealthy.",
          "type": "string"
        },
        "lastBackupTime": {
          "description": "Timestamp of the last backup operation on this backup item.",
          "format": "date-time",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of this backup item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "ProtectionState"
          }
        },
        "protectionStatus": {
          "description": "Backup status of this backup item.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "Fully qualified ARM ID of the virtual machine represented by this item.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureIaaSVMProtectedItem"
    },
    "AzureIaaSVMProtectedItemExtendedInfo": {
      "description": "Additional information on Azure IaaS VM specific backup item.",
      "properties": {
        "oldestRecoveryPoint": {
          "description": "The oldest backup copy available for this backup item.",
          "format": "date-time",
          "type": "string"
        },
        "policyInconsistent": {
          "description": "Specifies if backup policy associated with the backup item is inconsistent.",
          "type": "boolean"
        },
        "recoveryPointCount": {
          "description": "Number of backup copies available for this backup item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AzureIaaSVMProtectionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "description": "IaaS VM workload-specific backup policy.",
      "properties": {
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy with the details on backup copy retention ranges."
        },
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule specified as part of backup policy."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureIaasVM"
    },
    "AzureSqlContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "description": "Azure Sql workload-specific container.",
      "type": "object",
      "x-ms-discriminator-value": "AzureSqlContainer"
    },
    "AzureSqlProtectedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "description": "Azure SQL workload-specific backup item.",
      "properties": {
        "extendedInfo": {
          "$ref": "#/definitions/AzureSqlProtectedItemExtendedInfo",
          "description": "Additional information for this backup item."
        },
        "protectedItemDataId": {
          "description": "Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.",
          "type": "string"
        },
        "protectionState": {
          "description": "Backup state of the backed up item.",
          "enum": [
            "Invalid",
            "IRPending",
            "Protected",
            "ProtectionError",
            "ProtectionStopped",
            "ProtectionPaused"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "ProtectedItemState"
          }
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "Microsoft.Sql/servers/databases"
    },
    "AzureSqlProtectedItemExtendedInfo": {
      "description": "Additional information on Azure SQL specific backup item.",
      "properties": {
        "oldestRecoveryPoint": {
          "description": "The oldest backup copy available for this item in the service.",
          "format": "date-time",
          "type": "string"
        },
        "policyState": {
          "description": "State of the backup policy associated with this backup item.",
          "type": "string"
        },
        "recoveryPointCount": {
          "description": "Number of available backup copies associated with this backup item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "AzureSqlProtectionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "description": "Azure SQL workload-specific backup policy.",
      "properties": {
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "AzureSql"
    },
    "BEKDetails": {
      "description": "BEK is bitlocker encrpytion key.",
      "properties": {
        "secretData": {
          "description": "BEK data.",
          "type": "string"
        },
        "secretUrl": {
          "description": "Secret is BEK.",
          "type": "string"
        },
        "secretVaultId": {
          "description": "ID of the Key Vault where this Secret is stored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BMSBackupEngineQueryObject": {
      "description": "Query parameters to fetch list of backup engines.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup engine.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        }
      },
      "type": "object"
    },
    "BMSContainerQueryObject": {
      "description": "The query filters that can be used with the list containers API.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for this container.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "friendlyName": {
          "description": "Friendly name of this container.",
          "type": "string"
        },
        "status": {
          "description": "Status of registration of this container with the Recovery Services Vault.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BMSPOQueryObject": {
      "description": "Filters to list items that can be backed up.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "friendlyName": {
          "description": "Friendly name.",
          "type": "string"
        },
        "status": {
          "description": "Backup status query parameter.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BMSRPQueryObject": {
      "description": "Filters to list backup copies.",
      "properties": {
        "endDate": {
          "description": "Backup copies created before this time.",
          "format": "date-time",
          "type": "string"
        },
        "startDate": {
          "description": "Backup copies created after this time.",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupEngineBase": {
      "description": "The base backup engine class. All workload specific backup engines derive from this class.",
      "discriminator": "backupEngineType",
      "properties": {
        "backupEngineId": {
          "description": "ID of the backup engine.",
          "type": "string"
        },
        "backupEngineType": {
          "description": "Type of the backup engine.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Type of backup management for the backup engine.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "canReRegister": {
          "description": "Flag indicating if the backup engine be registered, once already registered.",
          "type": "boolean"
        },
        "friendlyName": {
          "description": "Friendly name of the backup engine.",
          "type": "string"
        },
        "healthStatus": {
          "description": "Backup status of the backup engine.",
          "type": "string"
        },
        "registrationStatus": {
          "description": "Registration status of the backup engine with the Recovery Services Vault.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupEngineBaseResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "The base backup engine class. All workload specific backup engines derive from this class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupEngineBase"
        }
      }
    },
    "BackupEngineBaseResourceList": {
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "description": "List of BackupEngineBase resources",
      "properties": {
        "value": {
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/BackupEngineBaseResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BackupRequest": {
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BackupRequestResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class for backup request. Workload-specific backup requests are derived from this class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/BackupRequest"
        }
      }
    },
    "ClientScriptForConnect": {
      "description": "Client script details for file / folder restore.",
      "properties": {
        "osType": {
          "description": "OS type - Windows, Linux etc. for which this file / folder restore client script works.",
          "type": "string"
        },
        "scriptContent": {
          "description": "File content of the client script for file / folder restore.",
          "type": "string"
        },
        "scriptExtension": {
          "description": "File extension of the client script for file / folder restore - .ps1 , .sh , etc.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DailyRetentionFormat": {
      "description": "Daily retention format.",
      "properties": {
        "daysOfTheMonth": {
          "description": "List of days of the month.",
          "items": {
            "$ref": "#/definitions/Day"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DailyRetentionSchedule": {
      "description": "Daily retention schedule.",
      "properties": {
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "items": {
            "format": "date-time",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Day": {
      "description": "Day of the week.",
      "properties": {
        "date": {
          "format": "int32",
          "type": "integer"
        },
        "isLast": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DpmBackupEngine": {
      "allOf": [
        {
          "$ref": "#/definitions/BackupEngineBase"
        }
      ],
      "description": "Data Protection Manager (DPM) specific backup engine.",
      "type": "object",
      "x-ms-discriminator-value": "DpmBackupEngine"
    },
    "DpmErrorInfo": {
      "description": "DPM workload-specific error information.",
      "properties": {
        "errorString": {
          "description": "Localized error string.",
          "type": "string"
        },
        "recommendations": {
          "description": "List of localized recommendations for above error code.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DpmJob": {
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        }
      ],
      "description": "DPM workload-specifc job object.",
      "properties": {
        "actionsInfo": {
          "description": "The state/actions applicable on this job like cancel/retry.",
          "items": {
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobSupportedAction"
            }
          },
          "type": "array"
        },
        "containerName": {
          "description": "Name of cluster/server protecting current backup item, if any.",
          "type": "string"
        },
        "containerType": {
          "description": "Type of container.",
          "type": "string"
        },
        "dpmServerName": {
          "description": "DPM server name managing the backup item or backup job.",
          "type": "string"
        },
        "duration": {
          "description": "Time elapsed for job.",
          "format": "duration",
          "type": "string"
        },
        "errorDetails": {
          "description": "The errors.",
          "items": {
            "$ref": "#/definitions/DpmErrorInfo"
          },
          "type": "array"
        },
        "extendedInfo": {
          "$ref": "#/definitions/DpmJobExtendedInfo",
          "description": "Additional information for this job."
        },
        "workloadType": {
          "description": "Type of backup item.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "DpmJob"
    },
    "DpmJobExtendedInfo": {
      "description": "Additional information on the DPM workload-specific job.",
      "properties": {
        "dynamicErrorMessage": {
          "description": "Non localized error message on job execution.",
          "type": "string"
        },
        "propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The job properties.",
          "type": "object"
        },
        "tasksList": {
          "description": "List of tasks associated with this job.",
          "items": {
            "$ref": "#/definitions/DpmJobTaskDetails"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DpmJobTaskDetails": {
      "description": "DPM workload-specific job task details.",
      "properties": {
        "duration": {
          "description": "Time elapsed for task.",
          "format": "duration",
          "type": "string"
        },
        "endTime": {
          "description": "The end time.",
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "description": "The start time.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "taskId": {
          "description": "The task display name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EncryptionDetails": {
      "description": "Details needed if the VM was encrypted at the time of backup.",
      "properties": {
        "encryptionEnabled": {
          "description": "Identifies whether this backup copy represents an encrypted VM at the time of backup.",
          "type": "boolean"
        },
        "kekUrl": {
          "description": "Key Url.",
          "type": "string"
        },
        "kekVaultId": {
          "description": "ID of Key Vault where KEK is stored.",
          "type": "string"
        },
        "secretKeyUrl": {
          "description": "Secret Url.",
          "type": "string"
        },
        "secretKeyVaultId": {
          "description": "ID of Key Vault where Secret is stored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExportJobsOperationResultInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationResultInfoBase"
        }
      ],
      "description": "This class is used to send blob details after exporting jobs.",
      "properties": {
        "blobSasKey": {
          "description": "SAS key to access the blob. It expires in 15 mins.",
          "type": "string"
        },
        "blobUrl": {
          "description": "URL of the blob into which the serialized string of list of jobs is exported.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "ExportJobsOperationResultInfo"
    },
    "GenericRecoveryPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "description": "Generic backup copy.",
      "properties": {
        "friendlyName": {
          "description": "Friendly name of the backup copy.",
          "type": "string"
        },
        "recoveryPointAdditionalInfo": {
          "description": "Additional information associated with this backup copy.",
          "type": "string"
        },
        "recoveryPointTime": {
          "description": "Time at which this backup copy was created.",
          "format": "date-time",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "Type of the backup copy.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "GenericRecoveryPoint"
    },
    "GetProtectedItemQueryObject": {
      "description": "Filters to list backup items.",
      "properties": {
        "expand": {
          "description": "Specifies if the additional information should be provided for this item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ILRRequest": {
      "description": "Parameters to restore file/folders API.",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ILRRequestResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Parameters to restore file/folders API.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ILRRequest"
        }
      }
    },
    "IaaSVMContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "description": "IaaS VM workload-specific container.",
      "properties": {
        "resourceGroup": {
          "description": "Resource group name of Recovery Services Vault.",
          "type": "string"
        },
        "virtualMachineId": {
          "description": "Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.",
          "type": "string"
        },
        "virtualMachineVersion": {
          "description": "Specifies whether the container represents a Classic or an Azure Resource Manager VM.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "IaaSVMContainer"
    },
    "IaaSVMProtectableItem": {
      "allOf": [
        {
          "$ref": "#/definitions/WorkloadProtectableItem"
        }
      ],
      "description": "IaaS VM workload-specific backup item.",
      "properties": {
        "virtualMachineId": {
          "description": "Fully qualified ARM ID of the virtual machine.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "IaasVMBackupRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/BackupRequest"
        }
      ],
      "description": "IaaS VM workload-specific backup request.",
      "properties": {
        "recoveryPointExpiryTimeInUTC": {
          "description": "Backup copy will expire after the time specified (UTC).",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "IaasVMBackupRequest"
    },
    "IaasVMILRRegistrationRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/ILRRequest"
        }
      ],
      "description": "Restore files/folders from a backup copy of IaaS VM.",
      "properties": {
        "initiatorName": {
          "description": "iSCSI initiator name.",
          "type": "string"
        },
        "recoveryPointId": {
          "description": "ID of the IaaS VM backup copy from where the files/folders have to be restored.",
          "type": "string"
        },
        "renewExistingRegistration": {
          "description": "Whether to renew existing registration with the iSCSI server.",
          "type": "boolean"
        },
        "virtualMachineId": {
          "description": "Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "IaasVMILRRegistrationRequest"
    },
    "IaasVMRecoveryPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/RecoveryPoint"
        }
      ],
      "description": "IaaS VM workload specific backup copy.",
      "properties": {
        "isInstantILRSessionActive": {
          "description": "Is the session to recover items from this backup copy still active.",
          "type": "boolean"
        },
        "isSourceVMEncrypted": {
          "description": "Identifies whether the VM was encrypted when the backup copy is created.",
          "type": "boolean"
        },
        "keyAndSecret": {
          "$ref": "#/definitions/KeyAndSecretDetails",
          "description": "Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is true."
        },
        "recoveryPointAdditionalInfo": {
          "description": "Additional information associated with this backup copy.",
          "type": "string"
        },
        "recoveryPointTime": {
          "description": "Time at which this backup copy was created.",
          "format": "date-time",
          "type": "string"
        },
        "recoveryPointType": {
          "description": "Type of the backup copy.",
          "type": "string"
        },
        "sourceVMStorageType": {
          "description": "Storage type of the VM whose backup copy is created.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "IaasVMRecoveryPoint"
    },
    "IaasVMRestoreRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/RestoreRequest"
        }
      ],
      "description": "IaaS VM workload-specific restore.",
      "properties": {
        "affinityGroup": {
          "description": "Affinity group associated to VM to be restored. Used only for Classic Compute Virtual Machines.",
          "type": "string"
        },
        "createNewCloudService": {
          "description": "Should a new cloud service be created while restoring the VM. If this is false, VM will be restored to the same cloud service as it was at the time of backup.",
          "type": "boolean"
        },
        "encryptionDetails": {
          "$ref": "#/definitions/EncryptionDetails",
          "description": "Details needed if the VM was encrypted at the time of backup."
        },
        "recoveryPointId": {
          "description": "ID of the backup copy to be recovered.",
          "type": "string"
        },
        "recoveryType": {
          "description": "Type of this recovery.",
          "enum": [
            "Invalid",
            "OriginalLocation",
            "AlternateLocation",
            "RestoreDisks"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RecoveryType"
          }
        },
        "region": {
          "description": "Region in which the virtual machine is restored.",
          "type": "string"
        },
        "sourceResourceId": {
          "description": "Fully qualified ARM ID of the VM which is being recovered.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "Fully qualified ARM ID of the storage account to which the VM has to be restored.",
          "type": "string"
        },
        "subnetId": {
          "description": "Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource ID used to represent the subnet.",
          "type": "string"
        },
        "targetDomainNameId": {
          "description": "Fully qualified ARM ID of the domain name to be associated to the VM being restored. This applies only to Classic Virtual Machines.",
          "type": "string"
        },
        "targetResourceGroupId": {
          "description": "This is the ARM Id of the resource group that you want to create for this Virtual machine and other artifacts.\r\n            For e.g. /subscriptions/{subId}/resourcegroups/{rg}",
          "type": "string"
        },
        "targetVirtualMachineId": {
          "description": "This is the complete ARM Id of the VM that will be created.\r\n            For e.g. /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}",
          "type": "string"
        },
        "virtualNetworkId": {
          "description": "This is the virtual network Id of the vnet that will be attached to the virtual machine.\r\n            User will be validated for join action permissions in the linked access.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "IaasVMRestoreRequest"
    },
    "InstantItemRecoveryTarget": {
      "description": "Target details for file / folder restore.",
      "properties": {
        "clientScripts": {
          "description": "List of client scripts.",
          "items": {
            "$ref": "#/definitions/ClientScriptForConnect"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Job": {
      "description": "Defines workload agnostic properties for a job.",
      "discriminator": "jobType",
      "properties": {
        "activityId": {
          "description": "ActivityId of job.",
          "type": "string"
        },
        "backupManagementType": {
          "description": "Backup management type to execute the current job.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "endTime": {
          "description": "The end time.",
          "format": "date-time",
          "type": "string"
        },
        "entityFriendlyName": {
          "description": "Friendly name of the entity on which the current job is executing.",
          "type": "string"
        },
        "jobType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        },
        "operation": {
          "description": "The operation name.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "Job status.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JobQueryObject": {
      "description": "Filters to list the jobs.",
      "properties": {
        "backupManagementType": {
          "description": "Type of backup managmenent for the job.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "endTime": {
          "description": "Job has ended at this time. Value is in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "description": "JobID represents the job uniquely.",
          "type": "string"
        },
        "operation": {
          "description": "Type of operation.",
          "enum": [
            "Invalid",
            "ConfigureBackup",
            "Backup",
            "Restore",
            "DisableBackup",
            "DeleteBackupData"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "JobOperationType"
          }
        },
        "startTime": {
          "description": "Job has started at this time. Value is in UTC.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "Status of the job.",
          "enum": [
            "Invalid",
            "InProgress",
            "Completed",
            "Failed",
            "CompletedWithWarnings",
            "Cancelled",
            "Cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "JobStatus"
          }
        }
      },
      "type": "object"
    },
    "JobResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Defines workload agnostic properties for a job.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/Job"
        }
      }
    },
    "JobResourceList": {
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "description": "List of Job resources",
      "properties": {
        "value": {
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/JobResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "KEKDetails": {
      "description": "KEK is encryption key for BEK.",
      "properties": {
        "keyBackupData": {
          "description": "KEK data.",
          "type": "string"
        },
        "keyUrl": {
          "description": "Key is KEK.",
          "type": "string"
        },
        "keyVaultId": {
          "description": "Key Vault ID where this Key is stored.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "KeyAndSecretDetails": {
      "description": "BEK is bitlocker key.\r\n            KEK is encryption key for BEK\r\n            If the VM was encrypted then we will store follwing details :\r\n            1. Secret(BEK) - Url + Backup Data + vaultId.\r\n            2. Key(KEK) - Url + Backup Data + vaultId.\r\n            BEK and KEK can potentiallty have different vault ids.",
      "properties": {
        "bekDetails": {
          "$ref": "#/definitions/BEKDetails",
          "description": "BEK is bitlocker encrpytion key."
        },
        "kekDetails": {
          "$ref": "#/definitions/KEKDetails",
          "description": "KEK is encryption key for BEK."
        }
      },
      "type": "object"
    },
    "LongTermRetentionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "description": "Long term retention policy.",
      "properties": {
        "dailySchedule": {
          "$ref": "#/definitions/DailyRetentionSchedule",
          "description": "Daily retention schedule of the protection policy."
        },
        "monthlySchedule": {
          "$ref": "#/definitions/MonthlyRetentionSchedule",
          "description": "Monthly retention schedule of the protection policy."
        },
        "weeklySchedule": {
          "$ref": "#/definitions/WeeklyRetentionSchedule",
          "description": "Weekly retention schedule of the protection policy."
        },
        "yearlySchedule": {
          "$ref": "#/definitions/YearlyRetentionSchedule",
          "description": "Yearly retention schedule of the protection policy."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "LongTermRetentionPolicy"
    },
    "LongTermSchedulePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "description": "Long term policy schedule.",
      "type": "object"
    },
    "MabContainer": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionContainer"
        }
      ],
      "description": "Container with items backed up using MAB backup engine.",
      "properties": {
        "agentVersion": {
          "description": "Agent version of this container.",
          "type": "string"
        },
        "canReRegister": {
          "description": "Can the container be registered one more time.",
          "type": "boolean"
        },
        "containerId": {
          "description": "ContainerID represents the container.",
          "format": "int64",
          "type": "integer"
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabContainerExtendedInfo",
          "description": "Additional information for this container"
        },
        "protectedItemCount": {
          "description": "Number of items backed up in this container.",
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MABWindowsContainer"
    },
    "MabContainerExtendedInfo": {
      "description": "Additional information of the container.",
      "properties": {
        "backupItemType": {
          "description": "Type of backup items associated with this container.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupItemType"
          }
        },
        "backupItems": {
          "description": "List of backup items associated with this container.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lastBackupStatus": {
          "description": "Latest backup status of this container.",
          "type": "string"
        },
        "lastRefreshedAt": {
          "description": "Time stamp when this container was refreshed.",
          "format": "date-time",
          "type": "string"
        },
        "policyName": {
          "description": "Backup policy associated with this container.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MabErrorInfo": {
      "description": "MAB workload-specific error information.",
      "properties": {
        "errorString": {
          "description": "Localized error string.",
          "type": "string"
        },
        "recommendations": {
          "description": "List of localized recommendations.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MabFileFolderProtectedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectedItem"
        }
      ],
      "description": "MAB workload-specific backup item.",
      "properties": {
        "computerName": {
          "description": "Name of the computer associated with this backup item.",
          "type": "string"
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabFileFolderProtectedItemExtendedInfo",
          "description": "Additional information with this backup item."
        },
        "friendlyName": {
          "description": "Friendly name of this backup item.",
          "type": "string"
        },
        "isScheduledForDeferredDelete": {
          "type": "boolean"
        },
        "lastBackupStatus": {
          "description": "Status of last backup operation.",
          "type": "string"
        },
        "protectionState": {
          "description": "Protected, ProtectionStopped, IRPending or ProtectionError",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MabFileFolderProtectedItem"
    },
    "MabFileFolderProtectedItemExtendedInfo": {
      "description": "Additional information on the backed up item.",
      "properties": {
        "lastRefreshedAt": {
          "description": "Last time when the agent data synced to service.",
          "format": "date-time",
          "type": "string"
        },
        "oldestRecoveryPoint": {
          "description": "The oldest backup copy available.",
          "format": "date-time",
          "type": "string"
        },
        "recoveryPointCount": {
          "description": "Number of backup copies associated with the backup item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MabJob": {
      "allOf": [
        {
          "$ref": "#/definitions/Job"
        }
      ],
      "description": "MAB workload-specific job.",
      "properties": {
        "actionsInfo": {
          "description": "The state/actions applicable on jobs like cancel/retry.",
          "items": {
            "enum": [
              "Invalid",
              "Cancellable",
              "Retriable"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "JobSupportedAction"
            }
          },
          "type": "array"
        },
        "duration": {
          "description": "Time taken by job to run.",
          "format": "duration",
          "type": "string"
        },
        "errorDetails": {
          "description": "The errors.",
          "items": {
            "$ref": "#/definitions/MabErrorInfo"
          },
          "type": "array"
        },
        "extendedInfo": {
          "$ref": "#/definitions/MabJobExtendedInfo",
          "description": "Additional information on the job."
        },
        "mabServerName": {
          "description": "Name of server protecting the DS.",
          "type": "string"
        },
        "mabServerType": {
          "description": "Server type of MAB container.",
          "enum": [
            "Invalid",
            "Unknown",
            "IaasVMContainer",
            "IaasVMServiceContainer",
            "DPMContainer",
            "DPMVenusContainer",
            "MABContainer",
            "ClusterResource",
            "AzureSqlContainer",
            "WindowsServer",
            "Windows"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "MabServerType"
          }
        },
        "workloadType": {
          "description": "Workload type of backup item.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "WorkloadType"
          }
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MabJob"
    },
    "MabJobExtendedInfo": {
      "description": "Additional information for the MAB workload-specific job.",
      "properties": {
        "dynamicErrorMessage": {
          "description": "Non localized error message specific to this job.",
          "type": "string"
        },
        "propertyBag": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The job properties.",
          "type": "object"
        },
        "tasksList": {
          "description": "List of tasks for this job.",
          "items": {
            "$ref": "#/definitions/MabJobTaskDetails"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MabJobTaskDetails": {
      "description": "MAB workload-specific job task details.",
      "properties": {
        "duration": {
          "description": "Time elapsed for task.",
          "format": "duration",
          "type": "string"
        },
        "endTime": {
          "description": "The end time.",
          "format": "date-time",
          "type": "string"
        },
        "startTime": {
          "description": "The start time.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status.",
          "type": "string"
        },
        "taskId": {
          "description": "The task display name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "MabProtectionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      ],
      "description": "Mab container-specific backup policy.",
      "properties": {
        "retentionPolicy": {
          "$ref": "#/definitions/RetentionPolicy",
          "description": "Retention policy details."
        },
        "schedulePolicy": {
          "$ref": "#/definitions/SchedulePolicy",
          "description": "Backup schedule of backup policy."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "MAB"
    },
    "MonthlyRetentionSchedule": {
      "description": "Monthly retention schedule.",
      "properties": {
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for monthly retention policy."
        },
        "retentionScheduleFormatType": {
          "description": "Retention schedule format type for monthly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RetentionScheduleFormat"
          }
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for monthly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "items": {
            "format": "date-time",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Object": {
      "description": "Base of all objects.",
      "type": "object"
    },
    "OperationResultInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationResultInfoBase"
        }
      ],
      "description": "Operation result info.",
      "properties": {
        "jobList": {
          "description": "List of jobs created by this operation.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "OperationResultInfo"
    },
    "OperationResultInfoBase": {
      "description": "Base class for operation result info.",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationResultInfoBaseResource": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationWorkerResponse"
        }
      ],
      "description": "Base class for operation result info.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/OperationResultInfoBase"
        }
      }
    },
    "OperationStatus": {
      "description": "Operation status.",
      "properties": {
        "endTime": {
          "description": "Operation end time. Format: ISO-8601.",
          "format": "date-time",
          "type": "string"
        },
        "error": {
          "$ref": "#/definitions/OperationStatusError",
          "description": "Error information related to this operation."
        },
        "id": {
          "description": "ID of the operation.",
          "type": "string"
        },
        "name": {
          "description": "Name of the operation.",
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/OperationStatusExtendedInfo",
          "description": "Additional information associated with this operation."
        },
        "startTime": {
          "description": "Operation start time. Format: ISO-8601.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "Operation status.",
          "enum": [
            "Invalid",
            "InProgress",
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "OperationStatusValues"
          }
        }
      },
      "type": "object"
    },
    "OperationStatusError": {
      "description": "Error information associated with operation status call.",
      "properties": {
        "code": {
          "description": "Error code of the operation failure.",
          "type": "string"
        },
        "message": {
          "description": "Error message displayed if the operation failure.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationStatusExtendedInfo": {
      "description": "Base class for additional information of operation status.",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OperationStatusJobExtendedInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "description": "Operation status job extended info.",
      "properties": {
        "jobId": {
          "description": "ID of the job created for this protected item.",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "OperationStatusJobExtendedInfo"
    },
    "OperationStatusJobsExtendedInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "description": "Operation status extended info for list of jobs.",
      "properties": {
        "failedJobsError": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Stores all the failed jobs along with the corresponding error codes.",
          "type": "object"
        },
        "jobIds": {
          "description": "IDs of the jobs created for the protected item.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "OperationStatusJobsExtendedInfo"
    },
    "OperationStatusProvisionILRExtendedInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/OperationStatusExtendedInfo"
        }
      ],
      "description": "Operation status extended info for ILR provision action.",
      "properties": {
        "recoveryTarget": {
          "$ref": "#/definitions/InstantItemRecoveryTarget",
          "description": "Target details for file / folder restore."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "OperationStatusProvisionILRExtendedInfo"
    },
    "OperationWorkerResponse": {
      "description": "This is the base class for operation result responses.",
      "properties": {
        "Headers": {
          "additionalProperties": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": "HTTP headers associated with this operation.",
          "type": "object"
        },
        "statusCode": {
          "description": "HTTP Status Code of the operation.",
          "enum": [
            "Continue",
            "SwitchingProtocols",
            "OK",
            "Created",
            "Accepted",
            "NonAuthoritativeInformation",
            "NoContent",
            "ResetContent",
            "PartialContent",
            "MultipleChoices",
            "Ambiguous",
            "MovedPermanently",
            "Moved",
            "Found",
            "Redirect",
            "SeeOther",
            "RedirectMethod",
            "NotModified",
            "UseProxy",
            "Unused",
            "TemporaryRedirect",
            "RedirectKeepVerb",
            "BadRequest",
            "Unauthorized",
            "PaymentRequired",
            "Forbidden",
            "NotFound",
            "MethodNotAllowed",
            "NotAcceptable",
            "ProxyAuthenticationRequired",
            "RequestTimeout",
            "Conflict",
            "Gone",
            "LengthRequired",
            "PreconditionFailed",
            "RequestEntityTooLarge",
            "RequestUriTooLong",
            "UnsupportedMediaType",
            "RequestedRangeNotSatisfiable",
            "ExpectationFailed",
            "UpgradeRequired",
            "InternalServerError",
            "NotImplemented",
            "BadGateway",
            "ServiceUnavailable",
            "GatewayTimeout",
            "HttpVersionNotSupported"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "HttpStatusCode"
          }
        }
      },
      "type": "object"
    },
    "ProtectedItem": {
      "description": "Base class for backup items.",
      "discriminator": "protectedItemType",
      "properties": {
        "backupManagementType": {
          "description": "Type of backup managemenent for the backed up item.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "lastRecoveryPoint": {
          "description": "Timestamp when the last (latest) backup copy was created for this backup item.",
          "format": "date-time",
          "type": "string"
        },
        "policyId": {
          "description": "ID of the backup policy with which this item is backed up.",
          "type": "string"
        },
        "protectedItemType": {
          "description": "backup item type.",
          "type": "string"
        },
        "sourceResourceId": {
          "description": "ARM ID of the resource to be backed up.",
          "type": "string"
        },
        "workloadType": {
          "description": "Type of workload this item represents.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DataSourceType"
          }
        }
      },
      "type": "object"
    },
    "ProtectedItemQueryObject": {
      "description": "Filters to list backup items.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backed up item.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "containerName": {
          "description": "Name of the container.",
          "type": "string"
        },
        "itemType": {
          "description": "Type of workload this item represents.",
          "enum": [
            "Invalid",
            "VM",
            "FileFolder",
            "AzureSqlDb",
            "SQLDB",
            "Exchange",
            "Sharepoint",
            "DPMUnknown"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "DataSourceType"
          }
        },
        "policyName": {
          "description": "Backup policy name associated with the backup item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProtectedItemResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class for backup items.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectedItem"
        }
      }
    },
    "ProtectedItemResourceList": {
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "description": "List of ProtectedItem resources",
      "properties": {
        "value": {
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/ProtectedItemResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProtectionContainer": {
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "discriminator": "protectableObjectType",
      "properties": {
        "backupManagementType": {
          "description": "Type of backup managemenent for the container.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        },
        "containerType": {
          "description": "Type of the container. The value of this property for: 1. Compute Azure VM is Microsoft.Compute/virtualMachines 2. Classic Compute Azure VM is Microsoft.ClassicCompute/virtualMachines 3. Windows machines (like MAB, DPM etc) is Windows 4. Azure SQL instance is AzureSqlContainer.",
          "readOnly": true,
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the container.",
          "type": "string"
        },
        "healthStatus": {
          "description": "Status of health of the container.",
          "type": "string"
        },
        "protectableObjectType": {
          "description": "Type of the protectable object associated with this container.",
          "type": "string"
        },
        "registrationStatus": {
          "description": "Status of registration of the container with the Recovery Services Vault.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProtectionContainerResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class for container with backup items. Containers with specific workloads are derived from this class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionContainer"
        }
      }
    },
    "ProtectionContainerResourceList": {
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "description": "List of ProtectionContainer resources",
      "properties": {
        "value": {
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/ProtectionContainerResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProtectionPolicy": {
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "discriminator": "backupManagementType",
      "properties": {
        "backupManagementType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        },
        "protectedItemsCount": {
          "description": "Number of items associated with this policy.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ProtectionPolicyQueryObject": {
      "description": "Filters the list backup policies API.",
      "properties": {
        "backupManagementType": {
          "description": "Backup management type for the backup policy.",
          "enum": [
            "Invalid",
            "AzureIaasVM",
            "MAB",
            "DPM",
            "AzureBackupServer",
            "AzureSql"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "BackupManagementType"
          }
        }
      },
      "type": "object"
    },
    "ProtectionPolicyResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class for backup policy. Workload-specific backup policies are derived from this class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ProtectionPolicy"
        }
      }
    },
    "ProtectionPolicyResourceList": {
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "description": "List of ProtectionPolicy resources",
      "properties": {
        "value": {
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/ProtectionPolicyResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RecoveryPoint": {
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RecoveryPointResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class for backup copies. Workload-specific backup copies are derived from this class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecoveryPoint"
        }
      }
    },
    "RecoveryPointResourceList": {
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "description": "List of RecoveryPoint resources",
      "properties": {
        "value": {
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/RecoveryPointResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Resource": {
      "description": "Base for all resources.",
      "properties": {
        "eTag": {
          "description": "Optional ETag.",
          "type": "string"
        },
        "id": {
          "description": "Resource Id represents the complete path to the resource.",
          "type": "string"
        },
        "location": {
          "description": "Resource location.",
          "type": "string"
        },
        "name": {
          "description": "Resource name associated with the resource.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...",
          "type": "string"
        }
      },
      "type": "object",
      "x-ms-azure-resource": true
    },
    "ResourceList": {
      "description": "Base for all lists of resources.",
      "properties": {
        "nextLink": {
          "description": "The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestoreRequest": {
      "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
      "discriminator": "objectType",
      "properties": {
        "objectType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RestoreRequestResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class for restore request. Workload-specific restore requests are derived from this class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RestoreRequest"
        }
      }
    },
    "RetentionDuration": {
      "description": "Retention duration.",
      "properties": {
        "count": {
          "description": "Count of duration types. Retention duration is obtained by the counting the duration type Count times. \r\n            For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.",
          "format": "int32",
          "type": "integer"
        },
        "durationType": {
          "description": "Retention duration type of retention policy.",
          "enum": [
            "Invalid",
            "Days",
            "Weeks",
            "Months",
            "Years"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RetentionDurationType"
          }
        }
      },
      "type": "object"
    },
    "RetentionPolicy": {
      "description": "Base class for retention policy.",
      "discriminator": "retentionPolicyType",
      "properties": {
        "retentionPolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SchedulePolicy": {
      "description": "Base class for backup schedule.",
      "discriminator": "schedulePolicyType",
      "properties": {
        "schedulePolicyType": {
          "description": "This property will be used as the discriminator for deciding the specific types in the polymorhpic chain of types.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SimpleRetentionPolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy"
        }
      ],
      "description": "Simple policy retention.",
      "properties": {
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of the protection policy."
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "SimpleRetentionPolicy"
    },
    "SimpleSchedulePolicy": {
      "allOf": [
        {
          "$ref": "#/definitions/SchedulePolicy"
        }
      ],
      "description": "Simple policy schedule.",
      "properties": {
        "scheduleRunDays": {
          "description": "List of days of week this schedule has to be run.",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DayOfWeek"
            }
          },
          "type": "array"
        },
        "scheduleRunFrequency": {
          "description": "Frequency of the schedule operation of this policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "ScheduleRunType"
          }
        },
        "scheduleRunTimes": {
          "description": "List of times of day this schedule has to be run.",
          "items": {
            "format": "date-time",
            "type": "string"
          },
          "type": "array"
        },
        "scheduleWeeklyFrequency": {
          "description": "At every number weeks this schedule has to be run.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "x-ms-discriminator-value": "SimpleSchedulePolicy"
    },
    "WeeklyRetentionFormat": {
      "description": "Weekly retention format.",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of the week.",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DayOfWeek"
            }
          },
          "type": "array"
        },
        "weeksOfTheMonth": {
          "description": "List of weeks of month.",
          "items": {
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "WeekOfMonth"
            }
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WeeklyRetentionSchedule": {
      "description": "Weekly retention schedule.",
      "properties": {
        "daysOfTheWeek": {
          "description": "List of days of week for weekly retention policy.",
          "items": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "DayOfWeek"
            }
          },
          "type": "array"
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "items": {
            "format": "date-time",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkloadProtectableItem": {
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "discriminator": "protectableItemType",
      "properties": {
        "backupManagementType": {
          "description": "Type of backup managemenent to backup an item.",
          "type": "string"
        },
        "friendlyName": {
          "description": "Friendly name of the backup item.",
          "type": "string"
        },
        "protectableItemType": {
          "description": "Type of the backup item.",
          "type": "string"
        },
        "protectionState": {
          "description": "State of the back up item.",
          "enum": [
            "Invalid",
            "NotProtected",
            "Protecting",
            "Protected"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "ProtectionStatus"
          }
        }
      },
      "type": "object"
    },
    "WorkloadProtectableItemResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "Base class for backup item. Workload-specific backup items are derived from this class.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/WorkloadProtectableItem"
        }
      }
    },
    "WorkloadProtectableItemResourceList": {
      "allOf": [
        {
          "$ref": "#/definitions/ResourceList"
        }
      ],
      "description": "List of WorkloadProtectableItem resources",
      "properties": {
        "value": {
          "description": "List of resources.",
          "items": {
            "$ref": "#/definitions/WorkloadProtectableItemResource"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "YearlyRetentionSchedule": {
      "description": "Yearly retention schedule.",
      "properties": {
        "monthsOfYear": {
          "description": "List of months of year of yearly retention policy.",
          "items": {
            "enum": [
              "Invalid",
              "January",
              "February",
              "March",
              "April",
              "May",
              "June",
              "July",
              "August",
              "September",
              "October",
              "November",
              "December"
            ],
            "type": "string",
            "x-ms-enum": {
              "modelAsString": false,
              "name": "MonthOfYear"
            }
          },
          "type": "array"
        },
        "retentionDuration": {
          "$ref": "#/definitions/RetentionDuration",
          "description": "Retention duration of retention Policy."
        },
        "retentionScheduleDaily": {
          "$ref": "#/definitions/DailyRetentionFormat",
          "description": "Daily retention format for yearly retention policy."
        },
        "retentionScheduleFormatType": {
          "description": "Retention schedule format for yearly retention policy.",
          "enum": [
            "Invalid",
            "Daily",
            "Weekly"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": false,
            "name": "RetentionScheduleFormat"
          }
        },
        "retentionScheduleWeekly": {
          "$ref": "#/definitions/WeeklyRetentionFormat",
          "description": "Weekly retention format for yearly retention policy."
        },
        "retentionTimes": {
          "description": "Retention times of retention policy.",
          "items": {
            "format": "date-time",
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  }
}