{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "androiddeviceprovisioning.googleapis.com",
  "basePath": "/",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Android Device Provisioning Partner API",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Android Device Provisioning Partner",
    "version": "v1",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
    },
    "x-origin": [
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.0.1"
        },
        "format": "google",
        "url": "https://androiddeviceprovisioning.googleapis.com/$discovery/rest?version=v1",
        "version": "v1"
      }
    ],
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "androiddeviceprovisioning",
    "x-datafire": {
      "name": "google_androiddeviceprovisioning",
      "type": "openapi"
    }
  },
  "externalDocs": {
    "url": "https://www.android.com/work/"
  },
  "parameters": {
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "in": "query",
      "name": "$.xgafv",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "in": "query",
      "name": "access_token",
      "type": "string"
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "in": "query",
      "name": "alt",
      "type": "string"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "in": "query",
      "name": "bearer_token",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "in": "query",
      "name": "callback",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "in": "query",
      "name": "fields",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "in": "query",
      "name": "key",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "in": "query",
      "name": "oauth_token",
      "type": "string"
    },
    "pp": {
      "default": true,
      "description": "Pretty-print response.",
      "in": "query",
      "name": "pp",
      "type": "boolean"
    },
    "prettyPrint": {
      "default": true,
      "description": "Returns response with indentations and line breaks.",
      "in": "query",
      "name": "prettyPrint",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "in": "query",
      "name": "quotaUser",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "in": "query",
      "name": "uploadType",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "in": "query",
      "name": "upload_protocol",
      "type": "string"
    }
  },
  "tags": [
    {
      "name": "partners"
    }
  ],
  "paths": {
    "/v1/partners/{metadataOwnerId}/devices/{deviceId}/metadata": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "Update the metadata",
        "operationId": "partners.devices.metadata",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateDeviceMetadataRequest"
            }
          },
          {
            "description": "id of the partner.",
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          },
          {
            "description": "The owner of the newly set metadata. Should be partner id itself.",
            "in": "path",
            "name": "metadataOwnerId",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DeviceMetadata"
            }
          }
        },
        "tags": [
          "partners"
        ]
      }
    },
    "/v1/partners/{partnerId}/customers": {
      "get": {
        "description": "List all the customers that has delegates some role to this customer.",
        "operationId": "partners.customers.list",
        "parameters": [
          {
            "description": "the id of the partner.",
            "in": "path",
            "name": "partnerId",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListCustomersResponse"
            }
          }
        },
        "tags": [
          "partners"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ]
    },
    "/v1/partners/{partnerId}/devices:claim": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "Claim the device identified by device identifier.",
        "operationId": "partners.devices.claim",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ClaimDeviceRequest"
            }
          },
          {
            "description": "Id of the partner.",
            "in": "path",
            "name": "partnerId",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ClaimDeviceResponse"
            }
          }
        },
        "tags": [
          "partners"
        ]
      }
    },
    "/v1/partners/{partnerId}/devices:findByIdentifier": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "Find devices by device identifier.",
        "operationId": "partners.devices.findByIdentifier",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FindDevicesByDeviceIdentifierRequest"
            }
          },
          {
            "description": "id of the partner.",
            "in": "path",
            "name": "partnerId",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/FindDevicesByDeviceIdentifierResponse"
            }
          }
        },
        "tags": [
          "partners"
        ]
      }
    },
    "/v1/partners/{partnerId}/devices:findByOwner": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "Find devices by ownership.",
        "operationId": "partners.devices.findByOwner",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FindDevicesByOwnerRequest"
            }
          },
          {
            "description": "id of the partner.",
            "in": "path",
            "name": "partnerId",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/FindDevicesByOwnerResponse"
            }
          }
        },
        "tags": [
          "partners"
        ]
      }
    },
    "/v1/partners/{partnerId}/devices:unclaim": {
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ],
      "post": {
        "description": "Unclaim the device identified by device_id or identifier.",
        "operationId": "partners.devices.unclaim",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UnclaimDeviceRequest"
            }
          },
          {
            "description": "Id of the partner.",
            "in": "path",
            "name": "partnerId",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "tags": [
          "partners"
        ]
      }
    },
    "/v1/{name}": {
      "get": {
        "description": "Get a device",
        "operationId": "partners.devices.get",
        "parameters": [
          {
            "description": "resource name in 'partners/[PARTNER_ID]/devices/[DEVICE_ID]'.",
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "partners"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/$.xgafv"
        },
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        }
      ]
    }
  },
  "definitions": {
    "ClaimDeviceRequest": {
      "description": "Request message to claim a device on behalf of a customer.",
      "properties": {
        "customerId": {
          "description": "The customer to claim for.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "#/definitions/DeviceIdentifier",
          "description": "The device identifier of the device to claim."
        },
        "sectionType": {
          "description": "Section to claim",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClaimDeviceResponse": {
      "description": "Response message containing device id of the claim.",
      "properties": {
        "deviceId": {
          "description": "the device id of the claimed device.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Company": {
      "description": "Company",
      "properties": {
        "companyId": {
          "description": "company id",
          "format": "int64",
          "type": "string"
        },
        "companyName": {
          "description": "company name",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Device": {
      "description": "Device",
      "properties": {
        "claims": {
          "description": "claims",
          "items": {
            "$ref": "#/definitions/DeviceClaim"
          },
          "type": "array"
        },
        "deviceId": {
          "description": "Device id",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "#/definitions/DeviceIdentifier",
          "description": "Device identifier"
        },
        "deviceMetadata": {
          "$ref": "#/definitions/DeviceMetadata",
          "description": "Device metadata"
        },
        "name": {
          "description": "Resource name.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceClaim": {
      "description": "containing the necessary info about a claim for a partner.",
      "properties": {
        "ownerCompanyId": {
          "description": "owner id",
          "format": "int64",
          "type": "string"
        },
        "sectionType": {
          "description": "section type.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceIdentifier": {
      "description": "DeviceIdentifiers identifies an unique device.",
      "properties": {
        "imei": {
          "description": "IMEI (either IMEI or MEID is required).",
          "type": "string"
        },
        "manufacturer": {
          "description": "Manufacturer to match android.os.Build.MANUFACTURER (required).",
          "type": "string"
        },
        "meid": {
          "description": "MEID",
          "type": "string"
        },
        "model": {
          "description": "Model to match android.os.Build.MODEL (required).",
          "type": "string"
        },
        "serialNumber": {
          "description": "Serial number (optional)",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceMetadata": {
      "description": "metadata",
      "properties": {
        "entries": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata entries",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object"
    },
    "FindDevicesByDeviceIdentifierRequest": {
      "description": "Request to find devices.",
      "properties": {
        "deviceIdentifier": {
          "$ref": "#/definitions/DeviceIdentifier",
          "description": "The device identifier to search"
        },
        "limit": {
          "description": "Number of devices to show.",
          "format": "int64",
          "type": "string"
        },
        "pageToken": {
          "description": "Page token",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FindDevicesByDeviceIdentifierResponse": {
      "description": "Response containing found devices.",
      "properties": {
        "devices": {
          "description": "Found devices.",
          "items": {
            "$ref": "#/definitions/Device"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token of next page",
          "type": "string"
        }
      },
      "type": "object"
    },
    "FindDevicesByOwnerRequest": {
      "description": "Request to find devices by customers.",
      "properties": {
        "customerId": {
          "description": "List of customer ids to search for.",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array"
        },
        "limit": {
          "description": "The number of devices to show in the result.",
          "format": "int64",
          "type": "string"
        },
        "pageToken": {
          "description": "Page token",
          "type": "string"
        },
        "sectionType": {
          "description": "The section type.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "FindDevicesByOwnerResponse": {
      "description": "Response containing found devices.",
      "properties": {
        "devices": {
          "description": "Devices found.",
          "items": {
            "$ref": "#/definitions/Device"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token of next page",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListCustomersResponse": {
      "description": "Response message of all customers related to this partner.",
      "properties": {
        "customers": {
          "description": "List of customers related to this partner.",
          "items": {
            "$ref": "#/definitions/Company"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnclaimDeviceRequest": {
      "description": "Request message to unclaim a device.",
      "properties": {
        "deviceId": {
          "description": "The device id returned by ClaimDevice.",
          "format": "int64",
          "type": "string"
        },
        "deviceIdentifier": {
          "$ref": "#/definitions/DeviceIdentifier",
          "description": "The device identifier you use when you claimed this device."
        },
        "sectionType": {
          "description": "The section type to unclaim for.",
          "enum": [
            "SECTION_TYPE_UNSPECIFIED",
            "SECTION_TYPE_ZERO_TOUCH"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateDeviceMetadataRequest": {
      "description": "Request to set metadata for a device.",
      "properties": {
        "deviceMetadata": {
          "$ref": "#/definitions/DeviceMetadata",
          "description": "The metdata to set."
        }
      },
      "type": "object"
    }
  }
}