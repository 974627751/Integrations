{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "supportcases.googleapis.com",
  "basePath": "/v2",
  "info": {
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "description": "Support Cases API",
    "license": {
      "name": "Creative Commons Attribution 3.0",
      "url": "http://creativecommons.org/licenses/by/3.0/"
    },
    "termsOfService": "https://developers.google.com/terms/",
    "title": "Google Support Cases Private",
    "version": "v2",
    "x-apiClientRegistration": {
      "url": "https://console.developers.google.com"
    },
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png"
    },
    "x-origin": [
      {
        "converter": {
          "url": "https://github.com/lucybot/api-spec-converter",
          "version": "2.0.1"
        },
        "format": "google",
        "url": "https://www.googleapis.com/discovery/v1/apis/supportcases/v2/rest",
        "version": "v1"
      }
    ],
    "x-preferred": true,
    "x-providerName": "googleapis.com",
    "x-serviceName": "supportcases",
    "x-datafire": {
      "name": "google_supportcases",
      "type": "openapi"
    }
  },
  "externalDocs": {
    "url": "https://sites.google.com/a/google.com/cases/"
  },
  "securityDefinitions": {
    "Oauth2": {
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "description": "Oauth 2.0 authentication",
      "flow": "implicit",
      "scopes": {
        "https://www.googleapis.com/auth/cases": "View and manage your Google Support Cases",
        "https://www.googleapis.com/auth/cases.readonly": "View your Google Support Cases",
        "https://www.googleapis.com/auth/supportcontent": "View and manage your support data"
      },
      "type": "oauth2"
    },
    "offline": {
      "type": "oauth2",
      "flow": "accessCode",
      "scopes": {
        "https://www.googleapis.com/auth/cases": "View and manage your Google Support Cases",
        "https://www.googleapis.com/auth/cases.readonly": "View your Google Support Cases",
        "https://www.googleapis.com/auth/supportcontent": "View and manage your support data"
      },
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "tokenUrl": "https://www.googleapis.com/oauth2/v4/token",
      "description": "Allows offline access using a refresh_token"
    }
  },
  "parameters": {
    "alt": {
      "default": "json",
      "description": "Data format for the response.",
      "enum": [
        "json"
      ],
      "in": "query",
      "name": "alt",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "in": "query",
      "name": "fields",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "in": "query",
      "name": "key",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "in": "query",
      "name": "oauth_token",
      "type": "string"
    },
    "prettyPrint": {
      "default": true,
      "description": "Returns response with indentations and line breaks.",
      "in": "query",
      "name": "prettyPrint",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
      "in": "query",
      "name": "quotaUser",
      "type": "string"
    },
    "userIp": {
      "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
      "in": "query",
      "name": "userIp",
      "type": "string"
    }
  },
  "tags": [
    {
      "name": "agentActivities"
    },
    {
      "name": "agentSettings"
    },
    {
      "name": "attributes"
    },
    {
      "name": "cases"
    },
    {
      "name": "categoryInfos"
    },
    {
      "name": "communications"
    },
    {
      "name": "customerInteractions"
    },
    {
      "name": "customerIssues"
    },
    {
      "name": "devices"
    },
    {
      "name": "giftCards"
    },
    {
      "name": "ginlogs"
    },
    {
      "name": "hardwareAuditor"
    },
    {
      "name": "hardwareOrders"
    },
    {
      "name": "hardwareShipments"
    },
    {
      "name": "opportunities"
    },
    {
      "name": "play"
    },
    {
      "name": "products"
    },
    {
      "name": "resolutions"
    },
    {
      "name": "rma"
    },
    {
      "name": "rmas"
    },
    {
      "name": "teams"
    },
    {
      "name": "troubleshooterSessions"
    },
    {
      "name": "wallets"
    },
    {
      "name": "youtube"
    }
  ],
  "paths": {
    "/agentActivities": {
      "get": {
        "description": "Lists an agent activities.",
        "operationId": "agentActivities.list",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListAgentActivitiesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "agentActivities"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Adds an agent activity.",
        "operationId": "agentActivities.create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateAgentActivityRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgentActivity"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "agentActivities"
        ]
      }
    },
    "/agentActivities:createFromHelpCenterDeepLink": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates an agent activity from a help center deep link.",
        "operationId": "agentActivities.createFromHelpCenterDeepLink",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateFromHelpCenterDeepLinkRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AgentActivity"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "agentActivities"
        ]
      }
    },
    "/agentSettings": {
      "get": {
        "description": "List all agent settings.",
        "operationId": "agentSettings.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListAgentSettingsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "agentSettings"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/cases:GetAgentUnreadCasesInfo": {
      "get": {
        "description": "Gets information about unread cases for the calling agent. Only intended for use by the Cases frontend.",
        "operationId": "cases.getAgentUnreadCasesInfo",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetAgentUnreadCasesInfoResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/cases:autoAssign": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Auto assign a case to the calling user.",
        "operationId": "cases.autoAssign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AutoAssignRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AutoAssignResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/cases:createNewCase": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates a new case (Note this is not a true CRUD method as no resource is being passed in).",
        "operationId": "cases.createNewCase",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateNewCaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CreateNewCaseResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/cases:getAgentSearchCount": {
      "get": {
        "description": "Gets the search count for cases associated with the calling agent, and begin sending Tango notifications when the count changes.",
        "operationId": "cases.getAgentSearchCount",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetAgentSearchCountResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/cases:listByAgent": {
      "get": {
        "description": "Lists cases associated with the agent. Only intended for use by the Cases frontend.",
        "operationId": "cases.listByAgent",
        "parameters": [
          {
            "enum": [
              "ASSIGNED",
              "RECENT",
              "UNKNOWN_CASE_TYPE",
              "WAITING"
            ],
            "in": "query",
            "name": "caseType",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListCasesByAgentResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/cases:validateConsultForm": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Validates that consult forms are properly configured.",
        "operationId": "cases.validateConsultForm",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ValidateConsultFormRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ValidateConsultFormResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/categoryInfos:batchGet": {
      "get": {
        "description": "Batch gets category info. (Best effort, returns valid category infos only) Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "categoryInfos.batchGet",
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "names",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BatchGetCategoryInfosResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "categoryInfos"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/categoryInfos:listTopLevel": {
      "get": {
        "description": "Lists gKMS top level category info.",
        "operationId": "categoryInfos.listTopLevel",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListTopLevelCategoryInfosResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "categoryInfos"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/categoryInfos:search": {
      "get": {
        "description": "Searches category info. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "categoryInfos.search",
        "parameters": [
          {
            "in": "query",
            "name": "baselineOnly",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "filterByParentCategoryId",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "filterConsultCategories",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "maximumResults",
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "productIds",
            "type": "array"
          },
          {
            "in": "query",
            "name": "query",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "integer"
            },
            "name": "topCategoryPathNodeIds",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SearchCategoryInfosResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "categoryInfos"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/categoryInfos:searchMultiple": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Searches multiple category info.",
        "operationId": "categoryInfos.searchMultiple",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SearchMultipleCategoryInfosRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SearchCategoryInfosResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "categoryInfos"
        ]
      }
    },
    "/communications": {
      "get": {
        "description": "Lists communications that match the filter.",
        "operationId": "communications.list",
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "caseIds",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListCommunicationsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/communications:buildNewEmail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Builds an email template for the first email on a case.",
        "operationId": "communications.buildNewEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BuildNewEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BuildNewEmailResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/communications:buildReplyEmail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Builds an email template for a reply to an existing email.",
        "operationId": "communications.buildReplyEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BuildReplyEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BuildReplyEmailResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/communications:createConsultNote": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates a draft note that replies to a consult note.",
        "operationId": "communications.createConsultNote",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateConsultNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CreateConsultNoteResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/communications:createEmail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates a draft email and adds it to a case.",
        "operationId": "communications.createEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateEmailRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CreateEmailResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/communications:createNote": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates a note.",
        "operationId": "communications.createNote",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateNoteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CreateNoteResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/communications:listRelated": {
      "get": {
        "description": "Lists communications that are related to each other, including the communications on the requested case. Related communications include consult communications from target cases. Currently, only related communications from consult cases are supported.",
        "operationId": "communications.listRelated",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "contextCaseId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListRelatedCommunicationsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/communications:suggestReplyEmailHeaders": {
      "get": {
        "description": "Suggests a set of email headers for an email reply to another email. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "communications.suggestReplyEmailHeaders",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "messageId",
            "type": "string"
          },
          {
            "enum": [
              "REPLY",
              "REPLY_ALL",
              "UNKNOWN_REPLY_TYPE"
            ],
            "in": "query",
            "name": "replyType",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SuggestReplyEmailHeadersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/customerInteractions": {
      "get": {
        "description": "List customer interactions.",
        "operationId": "customerInteractions.list",
        "parameters": [
          {
            "in": "query",
            "name": "adwordsCid",
            "type": "string"
          },
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "enum": [
                "ADOPTION",
                "CHAT",
                "EMAIL",
                "GOAL",
                "HANGOUT",
                "INCENTIVE",
                "MARKETING_EMAIL",
                "MEETING",
                "NOTE",
                "PHONE",
                "STUB",
                "TRAX",
                "UNKNOWN_EVENT_TYPE",
                "WEB"
              ],
              "type": "string"
            },
            "name": "channels",
            "type": "array"
          },
          {
            "in": "query",
            "name": "emailAddress",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "excludeCases",
            "type": "array"
          },
          {
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageToken",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "products",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListInteractionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "customerInteractions"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/customerInteractions:summarize": {
      "get": {
        "description": "Summary statistics about the cutomer's interaction history. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "customerInteractions.summarize",
        "parameters": [
          {
            "in": "query",
            "name": "adwordsCid",
            "type": "string"
          },
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "emailAddress",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "excludeCases",
            "type": "array"
          },
          {
            "in": "query",
            "name": "startTime",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SummarizeResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "customerInteractions"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/customerIssues:list": {
      "get": {
        "description": "List issues and their resolutions for a customer.",
        "operationId": "customerIssues.list",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListCustomerIssuesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "customerIssues"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/devices": {
      "get": {
        "description": "List devices.",
        "operationId": "devices.list",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "type": "string"
          },
          {
            "in": "query",
            "name": "excludeGoogleStoreOrders",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "excludeRmaTypes",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageToken",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListDevicesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "devices"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/devices:getById": {
      "get": {
        "description": "Gets the specified device by any device ID.",
        "operationId": "devices.getById",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "deviceId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetByDeviceIdResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "devices"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/devices:updateOwner": {
      "get": {
        "description": "Updates the owner of a device. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "devices.updateOwner",
        "parameters": [
          {
            "in": "query",
            "name": "address.addressLine1",
            "type": "string"
          },
          {
            "in": "query",
            "name": "address.addressLine2",
            "type": "string"
          },
          {
            "in": "query",
            "name": "address.addressLine3",
            "type": "string"
          },
          {
            "in": "query",
            "name": "address.addressee",
            "type": "string"
          },
          {
            "in": "query",
            "name": "address.city",
            "type": "string"
          },
          {
            "in": "query",
            "name": "address.countryCode",
            "type": "string"
          },
          {
            "in": "query",
            "name": "address.postalCode",
            "type": "string"
          },
          {
            "in": "query",
            "name": "address.stateProvinceCode",
            "type": "string"
          },
          {
            "in": "query",
            "name": "deviceId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "email",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateOwnerResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "devices"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/giftCards:checkRedeemer": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "If the card is already redeemed by somebody else, customer can try a few users.",
        "operationId": "giftCards.checkRedeemer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CheckRedeemerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CheckRedeemerResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "giftCards"
        ]
      }
    },
    "/giftCards:lookup": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Finds a gift card based on its full redemption code or activation number. With full redemption code, returns redemption token on success.",
        "operationId": "giftCards.lookup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LookupGiftCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LookupGiftCardResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "giftCards"
        ]
      }
    },
    "/giftCards:redeem": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Redeems a gift card to a customer using the redemption token.",
        "operationId": "giftCards.redeem",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RedeemGiftCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RedeemGiftCardResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "giftCards"
        ]
      }
    },
    "/giftCards:verify": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Verifies ownership of a damaged GC by checking if the activation number and partial redemption code are valid and refers to the same card. Returns the redemption token on success.",
        "operationId": "giftCards.verify",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VerifyGiftCardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/VerifyGiftCardResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "giftCards"
        ]
      }
    },
    "/ginlogs:logDataAccess": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Logs data access.",
        "operationId": "ginlogs.logDataAccess",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogDataAccessRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "ginlogs"
        ]
      }
    },
    "/hardwareAuditor/orders:list": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists hardware orders.",
        "operationId": "hardwareAuditor.orders.list",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListHardwareOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListHardwareOrdersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareAuditor"
        ]
      }
    },
    "/hardwareOrders:hardwareSignals": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets hardware signals based on the case and customer.",
        "operationId": "hardwareOrders.hardwareSignals",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetHardwareSignalsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetHardwareSignalsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareOrders"
        ]
      }
    },
    "/hardwareOrders:list": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists hardware orders.",
        "operationId": "hardwareOrders.list",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListHardwareOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListHardwareOrdersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareOrders"
        ]
      }
    },
    "/hardwareOrders:listOtherDevices": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets a user's devices that are not in the ListHardwareOrders result.",
        "operationId": "hardwareOrders.listOtherDevices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListOtherDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListOtherDevicesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareOrders"
        ]
      }
    },
    "/opportunities": {
      "get": {
        "description": "Lists opportunities.",
        "operationId": "opportunities.list",
        "parameters": [
          {
            "in": "query",
            "name": "agentWhitelistedForApollo",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListOpportunitiesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "opportunities"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/opportunities/pitches:batchCreate": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Batch creates pitches.",
        "operationId": "opportunities.pitches.batchCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BatchCreatePitchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BatchCreatePitchResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "opportunities"
        ]
      }
    },
    "/play/digitalContent/orders:batchGet": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get a collection of orders.",
        "operationId": "play.digitalContent.orders.batchGet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetOrdersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/play/digitalContent/orders:refund": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Refund orders.",
        "operationId": "play.digitalContent.orders.refund",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefundOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RefundOrdersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/play/digitalContent/orders:search": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Search for orders.",
        "operationId": "play.digitalContent.orders.search",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SearchOrdersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SearchOrdersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/play/digitalContent/subscriptions:batchGet": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get a collection of subscriptions.",
        "operationId": "play.digitalContent.subscriptions.batchGet",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetSubscriptionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/play/digitalContent/subscriptions:cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Cancel subscription.",
        "operationId": "play.digitalContent.subscriptions.cancel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelSubscriptionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CancelSubscriptionResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/play/digitalContent/subscriptions:getCancellationStatus": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get cancellation status.",
        "operationId": "play.digitalContent.subscriptions.getCancellationStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetCancellationStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetCancellationStatusResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/play/digitalContent/subscriptions:list": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "List subscriptions.",
        "operationId": "play.digitalContent.subscriptions.list",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListSubscriptionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListSubscriptionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/play/digitalContent:getRefundStatus": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get refund status.",
        "operationId": "play.digitalContent.getRefundStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetRefundStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetRefundStatusResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "play"
        ]
      }
    },
    "/products": {
      "get": {
        "description": "Lists products.",
        "operationId": "products.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListProductsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "products"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/resolutions": {
      "get": {
        "description": "Query for resolutions.",
        "operationId": "resolutions.list",
        "parameters": [
          {
            "in": "query",
            "name": "autocompleteResults",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pageSize",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "pageToken",
            "type": "string"
          },
          {
            "in": "query",
            "name": "q",
            "type": "string"
          },
          {
            "in": "query",
            "name": "resultsToken",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchSessionId",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "enum": [
                "CANNED_RESPONSE",
                "HELP_CENTER",
                "TROUBLE_SHOOTER",
                "UNKNOWN_RESOLUTION_TYPE",
                "WORKFLOW"
              ],
              "type": "string"
            },
            "name": "type",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListResolutionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "resolutions"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/resolutions/cohorts:assign": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Query and assign cohorts for this case.",
        "operationId": "resolutions.cohorts.assign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AssignCohortsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AssignCohortsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "resolutions"
        ]
      }
    },
    "/resolutions:log": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Log a resolution.",
        "operationId": "resolutions.log",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogResolutionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "resolutions"
        ]
      }
    },
    "/resolutions:suggest": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Suggest some resolutions to a case based on provided signals.",
        "operationId": "resolutions.suggest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SuggestResolutionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SuggestResolutionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "resolutions"
        ]
      }
    },
    "/rma:save": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Saves (Insert/Update) an RMA.",
        "operationId": "rma.save",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SaveRmaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SaveRmaResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rma"
        ]
      }
    },
    "/rma:submit": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "DEPRECATED: Use SendRma instead. Submit an RMA.",
        "operationId": "rma.submit",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SubmitRmaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SubmitRmaResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rma"
        ]
      }
    },
    "/rmas": {
      "get": {
        "description": "Lists RMAs by Case ID and RMA state",
        "operationId": "rmas.list",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "enum": [
              "RMA_CANCELLED",
              "RMA_COMPLETED",
              "RMA_INCOMPLETE",
              "RMA_PENDING",
              "RMA_SUBMITTED",
              "UNKNOWN_RMA_STATE"
            ],
            "in": "query",
            "name": "state",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListRmasResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/rmas:createExchangeWithoutReturn": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Sends merchandise without expecting a return.",
        "operationId": "rmas.createExchangeWithoutReturn",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateExchangeWithoutReturnRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CreateExchangeWithoutReturnResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/rmas:listBuyersRemorseCountryCodes": {
      "get": {
        "description": "Lists two-character country codes valid for Buyer's Remorse RMAs.",
        "operationId": "rmas.listBuyersRemorseCountryCodes",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListBuyersRemorseCountryCodesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/rmas:runWorkflow": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "DEPRECATED: Use RunRmaSteps instead. Run the given workflow for an RMA.",
        "operationId": "rmas.runWorkflow",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RunWorkflowRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RunWorkflowResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/rmas:send": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Initiates a new RMA.",
        "operationId": "rmas.send",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SendRmaRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SendRmaResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/teams:getMyAssignStreamSearches": {
      "get": {
        "description": "Gets assign-stream-enabled searches associated with the agent.",
        "operationId": "teams.getMyAssignStreamSearches",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetMyAssignStreamSearchesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "teams"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/troubleshooterSessions:create": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Start a new troubleshooter session.",
        "operationId": "troubleshooterSessions.create",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateTroubleshooterSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TroubleshooterSession"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      }
    },
    "/troubleshooterSessions:listDevices": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists devices on a customer's account.",
        "operationId": "troubleshooterSessions.listDevices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListDevicesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListDevicesResponse1"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      }
    },
    "/troubleshooterSessions:listIssues": {
      "get": {
        "description": "Lists issues.",
        "operationId": "troubleshooterSessions.listIssues",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "issueId",
            "type": "string"
          },
          {
            "enum": [
              "NOE",
              "PLAY_APPS",
              "PLAY_PURCHASES",
              "TROUBLESHOOTER_TYPE_NOT_SET"
            ],
            "in": "query",
            "name": "troubleshooterType",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListIssuesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/troubleshooterSessions:listPurchasedApps": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists purchased apps on a customer's account.",
        "operationId": "troubleshooterSessions.listPurchasedApps",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListPurchasedAppsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListPurchasedAppsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      }
    },
    "/troubleshooterSessions:listPurchasedBooks": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists purchased books on a customer's account.",
        "operationId": "troubleshooterSessions.listPurchasedBooks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListPurchasedBooksRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListPurchasedBooksResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      }
    },
    "/troubleshooterSessions:listPurchasedVideos": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists purchased videos on a customer's account.",
        "operationId": "troubleshooterSessions.listPurchasedVideos",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListPurchasedVideosRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListPurchasedVideosResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      }
    },
    "/wallets/accounts/paymentInstruments:getHijackReviewsStatus": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Retrieve status for Payment Method Hijack (PMH) reviews. This is a POST API because it takes in a sso_ticket.",
        "operationId": "wallets.accounts.paymentInstruments.getHijackReviewsStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetPaymentMethodHijackReviewsStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetPaymentMethodHijackReviewsStatusResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets/accounts/paymentInstruments:initiateHijackReviews": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Initiate Payment Method Hijack (PMH) reviews.",
        "operationId": "wallets.accounts.paymentInstruments.initiateHijackReviews",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/InitiatePaymentMethodHijackReviewsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/InitiatePaymentMethodHijackReviewsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets/accounts:getPaymentsInfo": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Fetches Payments info, such as number of Payments accounts for the user.",
        "operationId": "wallets.accounts.getPaymentsInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetPaymentsInfoRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetPaymentsInfoResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets/accounts:getReviewStatus": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Fetches the review status of a wallet account. This is a POST API because it takes in a sso_ticket.",
        "operationId": "wallets.accounts.getReviewStatus",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetAccountReviewStatusRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetAccountReviewStatusResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets/accounts:getSignals": {
      "get": {
        "description": "Fetches Wallet account signals for troubleshooting Wallet issues.",
        "operationId": "wallets.accounts.getSignals",
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "enum": [
                "ACCOUNT_SIGNAL_TYPE_UNSPECIFIED",
                "CUSTOMER_BVID_DOCS_SUBMISSION_STATUS",
                "CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS",
                "CUSTOMER_RISK_DOCS_SUBMISSION_STATUS",
                "CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS",
                "GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS",
                "HAS_POSITIVE_WALLET_BALANCE",
                "IS_VIP",
                "MOST_RECENT_TRANSACTION_TYPE"
              ],
              "type": "string"
            },
            "name": "accountSignals",
            "type": "array"
          },
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetAccountSignalsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/wallets/accounts:searchReviews": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Initiates a review on the Wallet account. This is a POST API because it takes in a sso_ticket. This API could lead to a review escalation (increase in priority).",
        "operationId": "wallets.accounts.searchReviews",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SearchAccountReviewsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SearchAccountReviewsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets/bankAccountCountries": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "List supported Bank Account countries. Initially will only return supported Bank Account countries for Payment Method Hijacks (PMH). This is a POST API because it takes in a sso_ticket.",
        "operationId": "wallets.bankAccountCountries",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListBankAccountCountriesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListBankAccountCountriesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets/creditCardTypes": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "List supported Credit Card types. Initially will only return supported credit cards for Payment Method Hijacks (PMH). This is a POST API because it takes in a sso_ticket.",
        "operationId": "wallets.creditCardTypes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListCreditCardTypesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListCreditCardTypesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets/paymentInstrumentTypeInfos": {
      "get": {
        "description": "List supported payment instrument types. This API is not customer contextual.",
        "operationId": "wallets.paymentInstrumentTypeInfos.list",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListPaymentInstrumentTypeInfosResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/wallets/paymentInstruments:suggestIssuer": {
      "get": {
        "description": "Fetches suggestions for payment(credit card, bank, direct carrier billing) issuers.",
        "operationId": "wallets.paymentInstruments.suggestIssuer",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeDescription",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "instrumentTypeToken",
            "type": "string"
          },
          {
            "in": "query",
            "name": "searchKey",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SuggestPaymentInstrumentIssuerResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/wallets/transactions": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Query for transactions.",
        "operationId": "wallets.transactions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListTransactionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListTransactionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets:troubleshootAccount": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Troubleshoots a Wallet account for issues.",
        "operationId": "wallets.troubleshootAccount",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TroubleshootAccountRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TroubleshootAccountResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/wallets:troubleshootTransaction": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Troubleshoots a Wallet transaction for issues.",
        "operationId": "wallets.troubleshootTransaction",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TroubleshootTransactionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TroubleshootTransactionResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "wallets"
        ]
      }
    },
    "/youtube/components:cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Cancel/Downgrade component(s).",
        "operationId": "youtube.components.cancel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelComponentsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CancelComponentsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "youtube"
        ]
      }
    },
    "/youtube/entitlements:cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Cancel entitlement.",
        "operationId": "youtube.entitlements.cancel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelEntitlementRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CancelEntitlementResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "youtube"
        ]
      }
    },
    "/youtube/onetimepurchases": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets a list of one time purchases.",
        "operationId": "youtube.onetimepurchases",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetOneTimePurchasesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetOneTimePurchasesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "youtube"
        ]
      }
    },
    "/youtube/summary": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get Customer Summary Information for entitlements and refund history.",
        "operationId": "youtube.summary",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetCustomerSummaryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetCustomerSummaryResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "youtube"
        ]
      }
    },
    "/youtube/transactions:listByEntitlements": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get all transactions for entitlements.",
        "operationId": "youtube.transactions.listByEntitlements",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListTransactionsRequest1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListTransactionsResponse1"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "youtube"
        ]
      }
    },
    "/youtube/transactions:refund": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Refund a batch of transactions.",
        "operationId": "youtube.transactions.refund",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefundTransactionsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RefundTransactionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "youtube"
        ]
      }
    },
    "/{name}": {
      "delete": {
        "description": "Deletes an attachment from a draft.",
        "operationId": "communications.attachments.delete",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      },
      "get": {
        "description": "Gets the specified RMA.",
        "operationId": "rmas.get",
        "parameters": [
          {
            "in": "query",
            "name": "caseId",
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Rma"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates a new workflow state on a case.",
        "operationId": "cases.workflows.post",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateWorkflowRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CasesWorkflow"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "put": {
        "description": "Updates product for the specified case.",
        "operationId": "cases.issue.updateProduct",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateProductRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}/customer/billingAddresses": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists customer billing addresses. Only intended for use by the Cases frontend.",
        "operationId": "cases.customer.billingAddresses",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListBillingAddressesRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListBillingAddressesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}/customer/shippingAddresses": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists customer shipping addresses. Only intended for use by the Cases frontend.",
        "operationId": "cases.customer.shippingAddresses",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListShippingAddressesRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListShippingAddressesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}/properties": {
      "get": {
        "description": "Lists all properties associated with a category info.",
        "operationId": "categoryInfos.properties.list",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListPropertiesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "categoryInfos"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}/refunds": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Lists refunds for a hardware order. Get by shipmentId: /v2/hardwareShipments/:",
        "operationId": "hardwareShipments.refunds",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListHardwareRefundsRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListHardwareRefundsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareShipments"
        ]
      }
    },
    "/{name}:WaitForConsult": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Sets a case with an active consult case to IN_CONSULT state.",
        "operationId": "cases.waitForConsult",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WaitForConsultRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/WaitForConsultResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:assign": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Assigns the specified case.",
        "operationId": "cases.assign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AssignRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AssignResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:authenticate": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Authenticates a customer for a case.",
        "operationId": "cases.customer.authenticate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AuthenticateRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/AuthenticateResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:batchUpdate": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates attributes for a case in batch.",
        "operationId": "cases.attributes.batchUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAttributesRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BatchUpdateAttributesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:block": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Indicate the specified case is blocked by a bug/case/legal order, etc.",
        "operationId": "cases.block",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BlockRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BlockResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:callBack": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Makes a callback. Deauthenticates customer.",
        "operationId": "cases.callBack",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CallBackRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CallBackResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:cancel": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Cancel an RMA.",
        "operationId": "rmas.cancel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelRmaRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CancelRmaResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:cancelAuthHold": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Cancels an auth hold for an advanced exchange RMA.",
        "operationId": "rmas.cancelAuthHold",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelAuthHoldRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:cancelSend": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Cancel a pending send (for email only).",
        "operationId": "communications.cancelSend",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CancelSendRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:checkWalletAccount": {
      "get": {
        "description": "Check if a customer has a valid Wallet account. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "cases.customer.checkWalletAccount",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "type": "string"
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CheckWalletAccountResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}:createNoteConsult": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates a consult case via note channel for this case.",
        "operationId": "cases.createNoteConsult",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateNoteConsultCaseRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CreateNoteConsultCaseResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:createRealTimeConsult": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Creates a consult case via RealTime channel for this case.",
        "operationId": "cases.createRealTimeConsult",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateRealTimeConsultCaseRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CreateRealTimeConsultCaseResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:deauthenticate": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Deauthenticates a customer for a case.",
        "operationId": "cases.customer.deauthenticate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeauthenticateRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DeauthenticateResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:dedupe": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Deduplicates a case by closing duplicates cases.",
        "operationId": "cases.dedupe",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DedupeRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DedupeResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:discardDraft": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Discards a draft communication.",
        "operationId": "communications.discardDraft",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DiscardDraftRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/DiscardDraftResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:escalate": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Escalates a case.",
        "operationId": "cases.escalate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EscalateRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/EscalateResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:finalizeConsultNote": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Finalizes and sends a draft note for a consult case.",
        "operationId": "communications.finalizeConsultNote",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FinalizeConsultNoteRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/FinalizeConsultNoteResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:finalizeNote": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Finalize a note (a note cannot be updated after it is finalized).",
        "operationId": "communications.finalizeNote",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FinalizeNoteRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/FinalizeNoteResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:finish": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Sets the specified case to the finished state and triggers other finisher related workflows.",
        "operationId": "cases.finish",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FinishRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/FinishResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:getAuthenticationCreditCardTypes": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get credit card types for authentication.",
        "operationId": "cases.customer.getAuthenticationCreditCardTypes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetAuthenticationCreditCardTypesRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetAuthenticationCreditCardTypesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:getAuthenticationQuestions": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get authentication options for a customer for a case.",
        "operationId": "cases.customer.getAuthenticationQuestions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetAuthenticationQuestionsRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetAuthenticationQuestionsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:getAuthenticationResult": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get authentication status for a customer of a case.",
        "operationId": "cases.customer.getAuthenticationResult",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetAuthenticationResultRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetAuthenticationResultResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:getBusinessListings": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets the business listings for a customer.",
        "operationId": "cases.customer.getBusinessListings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetBusinessListingsRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetBusinessListingsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:getConsultSla": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Calculates the SLA due by time that a new consult case would have.",
        "operationId": "cases.getConsultSla",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetConsultSlaRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetConsultSlaResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:getDetail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets detail for a hardware order.",
        "operationId": "hardwareOrders.getDetail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetHardwareOrderDetailRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/HardwareOrderDetail"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareOrders"
        ]
      }
    },
    "/{name}:getEscalationTargets": {
      "get": {
        "description": "Gets the available escalation targets.",
        "operationId": "products.getEscalationTargets",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetEscalationTargetsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "products"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}:getLostStolenEligibility": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Determines the eligibility of a lost/stolen RMA.",
        "operationId": "rmas.getLostStolenEligibility",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetLostStolenEligibilityRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LostStolenEligibility"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:getLostStolenRefundEligibility": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets lost stolen refund eligibility for account Get by shipmentId: /v2/hardwareShipments/:",
        "operationId": "hardwareShipments.getLostStolenRefundEligibility",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetLostStolenRefundEligibilityRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LostStolenRefundEligibility"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareShipments"
        ]
      }
    },
    "/{name}:getMailingAddress": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get mailing address for an RMA",
        "operationId": "rmas.getMailingAddress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetMailingAddressRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/MailingAddress"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:getOrderDetail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets an RMA's order detail.",
        "operationId": "rmas.getOrderDetail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetRmaOrderDetailRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RmaOrderDetail"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:getReplacementDetail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Get details for a replacement device that is not associated with an order.",
        "operationId": "rmas.getReplacementDetail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetReplacementDetailRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ReplacementDetail"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:getRoutingTargets": {
      "get": {
        "description": "Gets the available routing targets.",
        "operationId": "products.getRoutingTargets",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GetRoutingTargetsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "products"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}:getShippingAddress": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "--------- Begin of shipment Id based calls ----------------- Gets shipping address for a purchase Get by shipmentId: /v2/hardwareShipments/:",
        "operationId": "hardwareShipments.getShippingAddress",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetShippingAddressRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ShippingAddress"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareShipments"
        ]
      }
    },
    "/{name}:getShippingCustomerName": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets the shipping customer name for a hardware order Get by shipmentId: /v2/hardwareShipments/:",
        "operationId": "hardwareShipments.getShippingCustomerName",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetShippingCustomerNameRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ShippingCustomerName"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareShipments"
        ]
      }
    },
    "/{name}:getShippingCustomerPhoneNumber": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Gets the shipping customer phone number for a hardware order Get by shipmentId: /v2/hardwareShipments/:",
        "operationId": "hardwareShipments.getShippingCustomerPhoneNumber",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/GetShippingCustomerPhoneNumberRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ShippingCustomerPhoneNumber"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "hardwareShipments"
        ]
      }
    },
    "/{name}:listChildren": {
      "get": {
        "description": "Lists children category info.",
        "operationId": "categoryInfos.listChildren",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListChildrenCategoryInfosResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "categoryInfos"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}:listSettings": {
      "get": {
        "description": "Lists product settings for an agent.",
        "operationId": "products.listSettings",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          },
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "enum": [
                "AGENT_SETTING",
                "SEARCH_SETTING",
                "UNKNOWN_AGENT_SETTING_TYPE"
              ],
              "type": "string"
            },
            "name": "requestedSettingTypes",
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListSettingsResponse1"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "products"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}:log": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Log troubleshooter activity.",
        "operationId": "troubleshooterSessions.log",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LogTroubleshooterActivityRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      }
    },
    "/{name}:markOriginalDeviceReceived": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Marks an original device as received in a Standard Exchange.",
        "operationId": "rmas.markOriginalDeviceReceived",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MarkOriginalDeviceReceivedRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:needsInfo": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Sets the specified case to the needs info state.",
        "operationId": "cases.needsInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NeedsInfoRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/NeedsInfoResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:offeredSolution": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Sets the specified case to the solution offered state indicating that a previous communication was a \"solution\".",
        "operationId": "cases.offeredSolution",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OfferedSolutionRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/OfferedSolutionResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:read": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Marks a case as read by the calling agent if they are the assignee.",
        "operationId": "cases.read",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReadCaseRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:refund": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Refunds a hardware shipment by shipment id.",
        "operationId": "hardwareShipments.refund",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RefundHardwareOrderRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RefundHardwareOrderResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "hardwareShipments"
        ]
      }
    },
    "/{name}:release": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Unassigns the specified case from the gaia user associated with this call.",
        "operationId": "cases.release",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReleaseRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ReleaseResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:route": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Routes the specified case to another product or team.",
        "operationId": "cases.route",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouteRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RouteResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:runRmaSteps": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Run the given RMA workflow steps.",
        "operationId": "rmas.runRmaSteps",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RunRmaStepsRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/RunRmaStepsResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "rmas"
        ]
      }
    },
    "/{name}:send": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Sends a draft email. This finalizes the email.",
        "operationId": "communications.send",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SendEmailRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SendEmailResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:spam": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Marks the specified case as spam.",
        "operationId": "cases.spam",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SpamRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SpamResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:split": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Move a case's communication into a new case.",
        "operationId": "cases.split",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SplitRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SplitResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:suggestNewEmailHeaders": {
      "get": {
        "description": "Suggests a set of headers (like from aliases) for a new email on a case. Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "cases.suggestNewEmailHeaders",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SuggestNewEmailHeadersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}:suggestNoteHeaders": {
      "get": {
        "description": "Suggests a set of headers (like from aliases) for a note Suppresses warning: GET requires method name starting with \"Get\" or \"List\"",
        "operationId": "cases.suggestNoteHeaders",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/SuggestNoteHeadersResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases.readonly"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{name}:take": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Assigns the specified case to the gaia user associated with this call.",
        "operationId": "cases.take",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TakeRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TakeResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:transfer": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Transfers the specified case from the gaia user associated with this call to another user.",
        "operationId": "cases.transfer",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TransferRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TransferResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:troubleshootIssue": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Troubleshoot issue.",
        "operationId": "troubleshooterSessions.troubleshootIssue",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TroubleshootIssueRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/TroubleshootIssueResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          },
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/supportcontent"
            ]
          }
        ],
        "tags": [
          "troubleshooterSessions"
        ]
      }
    },
    "/{name}:unassign": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Unassigns the specified case from its current assignee. Note that this also moves the case to the UNASSIGNED state.",
        "operationId": "cases.unassign",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UnassignRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UnassignResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:unblock": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Indicate the specified case is no longer blocked by a bug/case/ legal order, etc.",
        "operationId": "cases.unblock",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UnblockRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UnblockResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:unspam": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Unmark the specified case as spam.",
        "operationId": "cases.unspam",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UnspamRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UnspamResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:update": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates attributes for the specified case. Note: This call adds the attributes that are not present on the case to the case. If attribute is already present on the case, the value is replaced.",
        "operationId": "cases.attributes.update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateAttributesRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateAttributesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      },
      "put": {
        "description": "Updates workflow state.",
        "operationId": "cases.workflows.update",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateWorkflowRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CasesWorkflow"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateAgentCategories": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates agent categories for the specified case. Note: This call replaces categories on the case by new categories passed in the request.",
        "operationId": "cases.issue.product.updateAgentCategories",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateAgentCategoriesRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateAgentCategoriesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateConsultNote": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates a draft consult note with new content.",
        "operationId": "communications.updateConsultNote",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateConsultNoteRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateConsultNoteResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:updateContactEmail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates contact email for the specified case.",
        "operationId": "cases.customer.updateContactEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateContactEmailRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateContactEmailResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateContactName": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates contact name for the specified case.",
        "operationId": "cases.customer.updateContactName",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateContactNameRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateContactNameResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateCustomerAttributes": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates customer attributes for the specified case.",
        "operationId": "cases.customer.updateCustomerAttributes",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerAttributesRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateCustomerAttributesResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateDisconnectedChannel": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates disconnected channel for the specified case.",
        "operationId": "cases.updateDisconnectedChannel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateDisconnectedChannelRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateEligibleProgram": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Update customer attributes indicating eligibility for opportunities.",
        "operationId": "cases.updateEligibleProgram",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateEligibleProgramRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateEligibleProgramResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateEmail": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates a draft email.",
        "operationId": "communications.updateEmail",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateEmailRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateEmailResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:updateLocale": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates the case's issue locale.",
        "operationId": "cases.issue.updateLocale",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateLocaleRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateLocaleResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    },
    "/{name}:updateNote": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates a draft note.",
        "operationId": "communications.updateNote",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateNoteRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateNoteResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "communications"
        ]
      }
    },
    "/{name}:updateSummary": {
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ],
      "post": {
        "description": "Updates case's issue summary.",
        "operationId": "cases.issue.updateSummary",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateSummaryRequest"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string",
            "x-reservedExpansion": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UpdateSummaryResponse"
            }
          }
        },
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cases"
            ]
          }
        ],
        "tags": [
          "cases"
        ]
      }
    }
  },
  "definitions": {
    "Account": {
      "properties": {
        "accountId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountLookupTool": {
      "properties": {
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "urlTemplate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountReview": {
      "properties": {
        "reviewKey": {
          "$ref": "#/definitions/ReviewKey"
        },
        "reviewState": {
          "enum": [
            "ASSIGNED",
            "CLOSED",
            "REVIEW_STATE_UNSPECIFIED",
            "UNASSIGNED",
            "UNKNOWN_REVIEW_STATE"
          ],
          "type": "string"
        },
        "reviewType": {
          "enum": [
            "ACCOUNT_REVIEW_TYPE_UNSPECIFIED",
            "AML",
            "BVID_COMPLIANCE_FRAUD",
            "ID_VERIFICATION_UNKNOWN_TYPE",
            "LEGACY_HOLD_REVIEW",
            "OFFLINE_SANCTIONS_COMPLIANCE_FRAUD",
            "ONLINE_SANCTIONS",
            "RISK_FRAUD"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountSignalResult": {
      "properties": {
        "bvidDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "gaiaCheckoutServiceStatus": {
          "enum": [
            "GAIA_ACCOUNT_SERVICE_STATUS_DISABLED",
            "GAIA_ACCOUNT_SERVICE_STATUS_REGISTERED",
            "GAIA_ACCOUNT_SERVICE_STATUS_SUSPENDED",
            "GAIA_ACCOUNT_SERVICE_STATUS_UNSPECIFIED"
          ],
          "type": "string"
        },
        "hasPositiveWalletBalance": {
          "type": "boolean"
        },
        "isVip": {
          "type": "boolean"
        },
        "mostRecentTransactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        },
        "offlineCheckDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "riskDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "sanctionsDocsSubmissionStatus": {
          "$ref": "#/definitions/CustomerDocsSubmissionStatus"
        },
        "type": {
          "enum": [
            "ACCOUNT_SIGNAL_TYPE_UNSPECIFIED",
            "CUSTOMER_BVID_DOCS_SUBMISSION_STATUS",
            "CUSTOMER_OFFLINE_CHECK_DOCS_SUBMISSION_STATUS",
            "CUSTOMER_RISK_DOCS_SUBMISSION_STATUS",
            "CUSTOMER_SANCTIONS_DOCS_SUBMISSION_STATUS",
            "GAIA_ACCOUNT_CHECKOUT_SERVICE_STATUS",
            "HAS_POSITIVE_WALLET_BALANCE",
            "IS_VIP",
            "MOST_RECENT_TRANSACTION_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Action": {
      "properties": {
        "cannedResponses": {
          "$ref": "#/definitions/CannedResponseAction"
        },
        "issueCategories": {
          "$ref": "#/definitions/IssueCategoryAction"
        },
        "nextState": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Action1": {
      "properties": {
        "alertMessage": {
          "type": "string"
        },
        "consultAction": {
          "$ref": "#/definitions/ConsultAction"
        },
        "difmAction": {
          "$ref": "#/definitions/DifmAction"
        },
        "scriptId": {
          "format": "int32",
          "type": "integer"
        },
        "showSummaryAction": {
          "$ref": "#/definitions/ShowSummaryAction"
        },
        "transferAction": {
          "$ref": "#/definitions/TransferAction"
        }
      },
      "type": "object"
    },
    "Address": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressee": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "stateProvinceCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AfterSendSetting": {
      "properties": {
        "stateAfterSend": {
          "enum": [
            "NEEDS_INFO",
            "SOLUTION_OFFERED",
            "UNKNOWN_STATE_AFTER_SEND"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentActivity": {
      "properties": {
        "agentActivityId": {
          "type": "string"
        },
        "assignee": {
          "$ref": "#/definitions/Assignee"
        },
        "caseId": {
          "type": "string"
        },
        "cohortMetadataCollection": {
          "$ref": "#/definitions/CohortMetadataCollection"
        },
        "description": {
          "type": "string"
        },
        "desktopScreenshareEvent": {
          "$ref": "#/definitions/DesktopScreenshareEvent"
        },
        "mobileScreenshareEvent": {
          "$ref": "#/definitions/MobileScreenshareEvent"
        },
        "phoneCall": {
          "$ref": "#/definitions/PhoneCall"
        },
        "pitch": {
          "$ref": "#/definitions/Pitch"
        },
        "relation": {
          "$ref": "#/definitions/Relation"
        },
        "requestDeviceSignalsEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsEvent"
        },
        "resolutionOpened": {
          "$ref": "#/definitions/ResolutionOpened"
        },
        "startTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentActivitySource": {
      "type": "object"
    },
    "AgentSetting": {
      "properties": {
        "agentSettingId": {
          "type": "string"
        },
        "aliasInfo": {
          "$ref": "#/definitions/AliasInfo"
        },
        "defaultLocale": {
          "type": "string"
        },
        "defaultProductId": {
          "type": "string"
        },
        "employmentInfo": {
          "$ref": "#/definitions/EmploymentInfo"
        },
        "firstName": {
          "type": "string"
        },
        "focusInfo": {
          "$ref": "#/definitions/FocusInfo"
        },
        "includeReassignedInAutoassign": {
          "type": "boolean"
        },
        "languageCode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phoneSetting": {
          "$ref": "#/definitions/PhoneSetting"
        },
        "preferredName": {
          "type": "string"
        },
        "sidewinderRole": {
          "$ref": "#/definitions/SidewinderRole"
        },
        "status": {
          "enum": [
            "ACTIVE",
            "DELETED",
            "INACTIVE",
            "UNKNOWN_AGENT_STATUS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AgentTransfer": {
      "properties": {
        "sourceAgent": {
          "$ref": "#/definitions/Identity"
        },
        "targetAgent": {
          "$ref": "#/definitions/Identity"
        }
      },
      "type": "object"
    },
    "AgentUnreadCasesInfo": {
      "properties": {
        "unreadCasesInfo": {
          "items": {
            "$ref": "#/definitions/UnreadCaseInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AliasInfo": {
      "properties": {
        "externalName": {
          "type": "string"
        },
        "personalAlias": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Answer": {
      "properties": {
        "question": {
          "enum": [
            "DEVICE_TYPE",
            "PURCHASED_APP_NAME",
            "PURCHASED_BOOK_NAME",
            "PURCHASED_VIDEO_NAME",
            "QUESTION_NOT_SET"
          ],
          "type": "string"
        },
        "skipReason": {
          "enum": [
            "DOES_NOT_KNOW",
            "NOT_LISTED",
            "SKIP_REASON_NOT_SET"
          ],
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AnswerSet": {
      "properties": {
        "customerAnswers": {
          "items": {
            "$ref": "#/definitions/CustomerAnswer"
          },
          "type": "array"
        },
        "questionSetType": {
          "enum": [
            "PAYMENT_METHOD_QUESTION_SET",
            "PHONE_NUMBER_QUESTION_SET",
            "POSTAL_CODE_QUESTION_SET",
            "UNKNOWN_QUESTION_SET_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignCohortsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignCohortsResponse": {
      "properties": {
        "cohorts": {
          "items": {
            "$ref": "#/definitions/Cohort2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AssignRequest": {
      "properties": {
        "assignedByScreenPop": {
          "type": "boolean"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AssignResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Assignee": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Assignee1": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Assignee2": {
      "properties": {
        "ldap": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attachment": {
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attachment1": {
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AttachmentInfo": {
      "properties": {
        "attachmentId": {
          "type": "string"
        },
        "contentId": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "mimeType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attribute": {
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "enumValue": {
          "items": {
            "$ref": "#/definitions/EnumValue"
          },
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "valueType": {
          "enum": [
            "BOOL",
            "DOUBLE",
            "ENUM",
            "INT",
            "INT64",
            "STRING",
            "TIMESTAMP",
            "UNKNOWN_VALUE_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attribute1": {
      "properties": {
        "attributeId": {
          "type": "string"
        },
        "attributeName": {
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "#/definitions/Entry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "AuthenticateRequest": {
      "properties": {
        "agentSsoCookie": {
          "type": "string"
        },
        "answerSets": {
          "items": {
            "$ref": "#/definitions/AnswerSet"
          },
          "type": "array"
        },
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticateResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        },
        "verificationResults": {
          "items": {
            "$ref": "#/definitions/VerificationResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Authentication": {
      "properties": {
        "authenticateTime": {
          "type": "string"
        },
        "channel": {
          "enum": [
            "AGENT",
            "CLICK_TO_CALL",
            "CUF",
            "REALTIME",
            "UNKNOWN_CHANNEL"
          ],
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationBankAccount": {
      "properties": {
        "bankAccountTypeDisplayName": {
          "type": "string"
        },
        "bankAccountTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationCreditCard": {
      "properties": {
        "creditCardDisplayName": {
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationCreditCard1": {
      "properties": {
        "creditCardDisplayName": {
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationInfo": {
      "properties": {
        "status": {
          "enum": [
            "FAILED",
            "SUCCESS",
            "UNKNOWN_AUTH_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AuthenticationSettings": {
      "properties": {
        "authenticationSupported": {
          "type": "boolean"
        },
        "exemptFromAuthentication": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "AutoAssignRequest": {
      "type": "object"
    },
    "AutoAssignResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        },
        "searchName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AutocheckResult": {
      "properties": {
        "autocheckId": {
          "type": "string"
        },
        "autocheckTime": {
          "type": "string"
        },
        "descriptionId": {
          "type": "string"
        },
        "scriptId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "AUTOCHECK_STATUS_NOT_SET",
            "ERROR",
            "FAIL",
            "NO",
            "NOT_RUN",
            "PASS",
            "YES"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "AvailableQuestion": {
      "properties": {
        "authenticationCreditCards": {
          "items": {
            "$ref": "#/definitions/AuthenticationCreditCard1"
          },
          "type": "array"
        },
        "question": {
          "enum": [
            "BANK_ACCOUNT",
            "CREDIT_CARD",
            "DCB",
            "PAYPAL",
            "PHONE_NUMBER",
            "PLAY_BALANCE",
            "POSTAL_CODE",
            "UNKNOWN_QUESTION",
            "WALLET_BALANCE"
          ],
          "type": "string"
        },
        "questionSources": {
          "items": {
            "$ref": "#/definitions/QuestionSource"
          },
          "type": "array"
        },
        "questionToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankAccount": {
      "properties": {
        "accountSuffix": {
          "type": "string"
        },
        "bankAccountToken": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankAccount1": {
      "properties": {
        "accountNumberSuffix": {
          "type": "string"
        },
        "bankAccountTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BankAccountCountry": {
      "properties": {
        "bankAccountToken": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BatchCreatePitchRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "eventId": {
          "type": "string"
        },
        "opportunityIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "pitches": {
          "items": {
            "$ref": "#/definitions/Pitch1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchCreatePitchResponse": {
      "properties": {
        "responses": {
          "items": {
            "$ref": "#/definitions/CreatePitchResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchGetCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchUpdateAttributesRequest": {
      "properties": {
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BatchUpdateAttributesResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "BlockRequest": {
      "properties": {
        "borgAlertId": {
          "type": "string"
        },
        "buganizerId": {
          "format": "int64",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pcrId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BlockResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "BuildNewEmailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BuildNewEmailResponse": {
      "properties": {
        "emailTemplate": {
          "$ref": "#/definitions/Email"
        },
        "footerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "headerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BuildReplyEmailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "messageId": {
          "type": "string"
        },
        "replyType": {
          "enum": [
            "REPLY",
            "REPLY_ALL",
            "UNKNOWN_REPLY_TYPE"
          ],
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BuildReplyEmailResponse": {
      "properties": {
        "emailTemplate": {
          "$ref": "#/definitions/Email"
        }
      },
      "type": "object"
    },
    "Business": {
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "listingId": {
          "format": "uint64",
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CallBackRequest": {
      "type": "object"
    },
    "CallBackResponse": {
      "properties": {
        "callbackStatus": {
          "enum": [
            "AGENT_BUSY",
            "AGENT_HUNG_UP_EARLY",
            "AGENT_NOT_ANSWERED",
            "AGENT_NOT_CONNECTED",
            "AGENT_NOT_LOGGED_IN",
            "AUTHENTICATION_ERROR",
            "CALLBACK_STATUS_UNSPECIFIED",
            "CALL_CONNECTED",
            "CALL_IN_PROGRESS",
            "CUSTOMER_BUSY",
            "CUSTOMER_NOT_ANSWERED",
            "CUSTOMER_NOT_CONNECTED",
            "INTERNAL_ERROR",
            "INVALID_AGENT_SETTING",
            "INVALID_CUSTOMER_NUMBER"
          ],
          "type": "string"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "Campaign": {
      "properties": {
        "campaignId": {
          "format": "int64",
          "type": "string"
        },
        "campaignName": {
          "type": "string"
        },
        "rank": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CancelAuthHoldRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelComponentsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "componentTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "revokeAccess": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelComponentsResponse": {
      "properties": {
        "componentTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "result": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelEntitlementRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "entitlementToken": {
          "type": "string"
        },
        "entitlementTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "revokeAccess": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelEntitlementResponse": {
      "properties": {
        "cancelResultInfo": {
          "items": {
            "$ref": "#/definitions/CancelResultInfo"
          },
          "type": "array"
        },
        "entitlementToken": {
          "type": "string"
        },
        "result": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelHardwareOrderRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelHistorySummaryInfo": {
      "properties": {
        "cancelResult": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        },
        "numberOfCancels": {
          "format": "int32",
          "type": "integer"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "revoke": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CancelInfo": {
      "properties": {
        "cancelReason": {
          "enum": [
            "CANCEL_REASON_NOT_SET",
            "INVALID_ADDRESS",
            "OTHER",
            "PAYMENT_ISSUE",
            "USER_INITIATED",
            "USER_REQUESTED"
          ],
          "type": "string"
        },
        "cancelTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelResultInfo": {
      "properties": {
        "entitlementToken": {
          "type": "string"
        },
        "result": {
          "enum": [
            "ALREADY_CANCELED",
            "APPROVED",
            "CANCEL_RESULT_UNKNOWN",
            "CANCEL_RETRIABLE",
            "PERMANENT_CANCEL_FAILED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelRmaRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "reason": {
          "enum": [
            "CANCEL_REASON_NOT_SET",
            "CUSTOMER_CHANGED_MIND",
            "FIX_AGENT_ERROR",
            "OTHER"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelRmaResponse": {
      "properties": {
        "result": {
          "enum": [
            "CANCEL_RESULT_NOT_SET",
            "SUCCESSFUL",
            "UNSUCCESSFUL_CART_LINK_USED",
            "UNSUCCESSFUL_NOT_PENDING",
            "UNSUCCESSFUL_UNKNOWN"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelSendRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CancelSubscriptionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "reason": {
          "enum": [
            "CANCEL_REASON_ACCIDENTAL_PURCHASE",
            "CANCEL_REASON_DEFECTIVE",
            "CANCEL_REASON_DID_NOT_RECEIVE",
            "CANCEL_REASON_FRAUD",
            "CANCEL_REASON_FRIENDLY_FRAUD",
            "CANCEL_REASON_REMORSE",
            "CANCEL_REASON_UNSPECIFIED"
          ],
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        }
      },
      "type": "object"
    },
    "CancelSubscriptionResponse": {
      "properties": {
        "cancelRejectionReason": {
          "enum": [
            "CANCEL_REJECTION_REASON_UNSPECIFIED",
            "SUBSCRIPTION_IS_NOT_CANCELLABLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CannedResponse": {
      "properties": {
        "kmsId": {
          "format": "int32",
          "type": "integer"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CHAT",
            "EMAIL",
            "EMAIL_AND_CHAT",
            "UNKNOWN_CHANNEL_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CannedResponse1": {
      "properties": {
        "kmsId": {
          "format": "int32",
          "type": "integer"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CHAT",
            "EMAIL",
            "UNKNOWN_CHANNEL_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CannedResponseAction": {
      "properties": {
        "cannedResponseIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CardLookupCriteria": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "redemptionCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Case": {
      "properties": {
        "agentUpdateTimeMap": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "assignee": {
          "$ref": "#/definitions/Assignee1"
        },
        "attributeMap": {
          "additionalProperties": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "object"
        },
        "caseId": {
          "type": "string"
        },
        "communicationInfo": {
          "$ref": "#/definitions/CommunicationInfo"
        },
        "createTime": {
          "type": "string"
        },
        "creator": {
          "$ref": "#/definitions/Source"
        },
        "customer": {
          "$ref": "#/definitions/Customer"
        },
        "dueByTime": {
          "type": "string"
        },
        "issue": {
          "$ref": "#/definitions/Issue"
        },
        "name": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "relations": {
          "items": {
            "$ref": "#/definitions/Relation1"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        },
        "transitionTime": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        },
        "workflowInfo": {
          "$ref": "#/definitions/WorkflowInfo"
        }
      },
      "type": "object"
    },
    "CaseData": {
      "properties": {
        "assignee": {
          "$ref": "#/definitions/Assignee2"
        },
        "caseId": {
          "type": "string"
        },
        "categories": {
          "items": {
            "$ref": "#/definitions/Category1"
          },
          "type": "array"
        },
        "productName": {
          "type": "string"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CasesReviewKey": {
      "properties": {
        "review3Id": {
          "type": "string"
        },
        "reviewId": {
          "type": "string"
        },
        "targetUnderReview": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CasesTransactionIdentifier": {
      "properties": {
        "orderId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CasesWorkflow": {
      "properties": {
        "hardwareOrderWorkflow": {
          "$ref": "#/definitions/HardwareOrderWorkflow"
        },
        "walletUnauthCharges": {
          "$ref": "#/definitions/UnauthorizedChargesWorkflow"
        }
      },
      "type": "object"
    },
    "Category": {
      "properties": {
        "isBaseline": {
          "type": "boolean"
        },
        "path": {
          "$ref": "#/definitions/Path"
        }
      },
      "type": "object"
    },
    "Category1": {
      "properties": {
        "isBaseline": {
          "type": "boolean"
        },
        "path": {
          "$ref": "#/definitions/Path1"
        }
      },
      "type": "object"
    },
    "Category2": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Category3": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node3"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Category4": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node4"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Category5": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node5"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CategoryInfo": {
      "properties": {
        "children": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        },
        "matchDetail": {
          "$ref": "#/definitions/MatchDetail"
        },
        "name": {
          "type": "string"
        },
        "numChildren": {
          "format": "int32",
          "type": "integer"
        },
        "pathIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "pathNames": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CategoryPath": {
      "properties": {
        "pathIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CategoryPath1": {
      "properties": {
        "nodes": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ChannelCount": {
      "properties": {
        "channel": {
          "enum": [
            "ADOPTION",
            "CHAT",
            "EMAIL",
            "GOAL",
            "HANGOUT",
            "INCENTIVE",
            "MARKETING_EMAIL",
            "MEETING",
            "NOTE",
            "PHONE",
            "STUB",
            "TRAX",
            "UNKNOWN_EVENT_TYPE",
            "WEB"
          ],
          "type": "string"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Charge": {
      "properties": {
        "chargeTime": {
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/TransactionLineItem"
          },
          "type": "array"
        },
        "localizedChargeTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "priceIncludesTax": {
          "type": "boolean"
        },
        "prorated": {
          "type": "boolean"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "Chat": {
      "properties": {
        "chatPools": {
          "items": {
            "$ref": "#/definitions/ChatPool1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Chat1": {
      "properties": {
        "chatPools": {
          "items": {
            "$ref": "#/definitions/ChatPool2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ChatMessage": {
      "properties": {
        "isAgent": {
          "type": "boolean"
        },
        "payload": {
          "type": "string"
        },
        "senderName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatPool": {
      "properties": {
        "chatPoolId": {
          "type": "string"
        },
        "chatPoolName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatPool1": {
      "properties": {
        "chatPoolId": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatPool2": {
      "properties": {
        "chatPoolId": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChatTransfer": {
      "properties": {
        "sourceChatPool": {
          "$ref": "#/definitions/ChatPool"
        },
        "targetChatPool": {
          "$ref": "#/definitions/ChatPool"
        }
      },
      "type": "object"
    },
    "CheckRedeemerRequest": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "emailToCheck": {
          "type": "string"
        },
        "redemptionCode": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CheckRedeemerResponse": {
      "properties": {
        "emailToCheck": {
          "type": "string"
        },
        "isRedeemer": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CheckWalletAccountResponse": {
      "properties": {
        "hasValidWalletAccount": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Cohort": {
      "properties": {
        "canonicalName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "treatmentsId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Cohort1": {
      "properties": {
        "canonicalName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayStateRestriction": {
          "enum": [
            "HIDE",
            "NONE",
            "SHOW",
            "UNKNOWN_DISPLAY_STATE_RESTRICTION"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Cohort2": {
      "properties": {
        "canonicalName": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "displayStateRestriction": {
          "enum": [
            "HIDE",
            "NONE",
            "SHOW",
            "UNKNOWN_DISPLAY_STATE_RESTRICTION"
          ],
          "type": "string"
        },
        "formId": {
          "type": "string"
        },
        "helpcenterName": {
          "type": "string"
        },
        "treatmentsId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CohortMetadataCollection": {
      "properties": {
        "cohort": {
          "$ref": "#/definitions/Cohort"
        },
        "formMetadata": {
          "$ref": "#/definitions/FormMetadata"
        }
      },
      "type": "object"
    },
    "Communication": {
      "properties": {
        "allowsCaseSplit": {
          "type": "boolean"
        },
        "attachments": {
          "items": {
            "$ref": "#/definitions/AttachmentInfo"
          },
          "type": "array"
        },
        "authenticationInfo": {
          "$ref": "#/definitions/AuthenticationInfo"
        },
        "caseId": {
          "type": "string"
        },
        "communicationId": {
          "type": "string"
        },
        "consultInfo": {
          "$ref": "#/definitions/ConsultInfo"
        },
        "contentInfo": {
          "$ref": "#/definitions/ContentInfo"
        },
        "draftInfo": {
          "$ref": "#/definitions/DraftInfo"
        },
        "email": {
          "$ref": "#/definitions/Email"
        },
        "escalationInfo": {
          "$ref": "#/definitions/EscalationInfo"
        },
        "form": {
          "$ref": "#/definitions/Form"
        },
        "inResponseTo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "note": {
          "$ref": "#/definitions/Note"
        },
        "phoneInfo": {
          "$ref": "#/definitions/PhoneInfo"
        },
        "realTime": {
          "$ref": "#/definitions/RealTime"
        },
        "recipients": {
          "items": {
            "$ref": "#/definitions/Identity"
          },
          "type": "array"
        },
        "routingInfo": {
          "$ref": "#/definitions/RoutingInfo"
        },
        "sender": {
          "$ref": "#/definitions/Identity"
        },
        "source": {
          "$ref": "#/definitions/Source"
        },
        "subject": {
          "type": "string"
        },
        "updateTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CommunicationInfo": {
      "properties": {
        "lastClosedTime": {
          "type": "string"
        },
        "lastCommunicationTime": {
          "type": "string"
        },
        "lastIncomingEmailTime": {
          "type": "string"
        },
        "lastOutgoingCommunicationTime": {
          "type": "string"
        },
        "lastOutgoingEmailTime": {
          "type": "string"
        },
        "numCommunications": {
          "format": "int32",
          "type": "integer"
        },
        "numConsults": {
          "format": "int32",
          "type": "integer"
        },
        "numIncomingEmails": {
          "format": "int32",
          "type": "integer"
        },
        "numOutgoingEmails": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ComponentData": {
      "properties": {
        "components": {
          "items": {
            "$ref": "#/definitions/SubscriptionComponent"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ComponentToken": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConsultAction": {
      "properties": {
        "consultDifm": {
          "$ref": "#/definitions/DifmAction"
        },
        "postConsultAnswerHelpCenter": {
          "type": "string"
        },
        "postConsultAnswerId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ConsultInfo": {
      "type": "object"
    },
    "ConsultSettings": {
      "properties": {
        "topCategory": {
          "$ref": "#/definitions/Category2"
        }
      },
      "type": "object"
    },
    "Contact": {
      "properties": {
        "contactName": {
          "type": "string"
        },
        "emailAddress": {
          "$ref": "#/definitions/EmailAddress"
        }
      },
      "type": "object"
    },
    "ContactInfo": {
      "properties": {
        "callbackNumber": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "contactName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ContentInfo": {
      "properties": {
        "bodyCrIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "footerCrIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "headerCrIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "helpcenterLinkIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateAgentActivityRequest": {
      "properties": {
        "agentActivity": {
          "$ref": "#/definitions/AgentActivity"
        }
      },
      "type": "object"
    },
    "CreateConsultNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateConsultNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "CreateEmailRequest": {
      "properties": {
        "afterSendSetting": {
          "$ref": "#/definitions/AfterSendSetting"
        },
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "footerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fromAddress": {
          "type": "string"
        },
        "headerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateEmailResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "CreateExchangeWithoutReturnRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "device": {
          "$ref": "#/definitions/LostStolenDevice"
        },
        "shipment": {
          "$ref": "#/definitions/LostStolenShipment"
        },
        "skipAddressValidation": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        },
        "updatedAddress": {
          "$ref": "#/definitions/MailingAddress"
        }
      },
      "type": "object"
    },
    "CreateExchangeWithoutReturnResponse": {
      "properties": {
        "failureType": {
          "enum": [
            "FAILURE_TYPE_NOT_SET",
            "FAILURE_TYPE_UNKNOWN",
            "NOTES_INVALID",
            "PHONE_NUMBER_INVALID",
            "RMA_ALREADY_OPEN_FOR_ASSET",
            "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
            "SHIPPING_ADDRESS_CITY_INVALID",
            "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
            "SHIPPING_ADDRESS_INVALID",
            "SHIPPING_ADDRESS_LINE_1_INVALID",
            "SHIPPING_ADDRESS_LINE_2_INVALID",
            "SHIPPING_ADDRESS_LINE_3_INVALID",
            "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
            "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
            "WALLET_ACCOUNT_REQUIRED"
          ],
          "type": "string"
        },
        "failures": {
          "items": {
            "$ref": "#/definitions/RmaFailure"
          },
          "type": "array"
        },
        "rmaNumber": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateFromHelpCenterDeepLinkRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNewCaseRequest": {
      "type": "object"
    },
    "CreateNewCaseResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "CreateNoteConsultCaseRequest": {
      "properties": {
        "attachments": {
          "items": {
            "$ref": "#/definitions/Attachment"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "formFields": {
          "items": {
            "$ref": "#/definitions/FormField1"
          },
          "type": "array"
        },
        "issueCategory": {
          "$ref": "#/definitions/Category3"
        },
        "subject": {
          "type": "string"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/Category3"
          },
          "type": "array"
        },
        "targetTeamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNoteConsultCaseResponse": {
      "properties": {
        "targetCaseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "noteType": {
          "enum": [
            "PHONE",
            "UNKNOWN_NOTE_TYPE",
            "USER"
          ],
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "CreatePitchResponse": {
      "properties": {
        "opportunityId": {
          "type": "string"
        },
        "pitchId": {
          "$ref": "#/definitions/PitchId"
        },
        "status": {
          "$ref": "#/definitions/Status"
        }
      },
      "type": "object"
    },
    "CreateRealTimeConsultCaseRequest": {
      "properties": {
        "attachments": {
          "items": {
            "$ref": "#/definitions/Attachment1"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "chatPoolId": {
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "formFields": {
          "items": {
            "$ref": "#/definitions/FormField2"
          },
          "type": "array"
        },
        "issueCategory": {
          "$ref": "#/definitions/Category4"
        },
        "subject": {
          "type": "string"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/Category4"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreateRealTimeConsultCaseResponse": {
      "properties": {
        "targetCaseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateTroubleshooterSessionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "issueId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreateWorkflowRequest": {
      "properties": {
        "workflow": {
          "$ref": "#/definitions/CasesWorkflow"
        }
      },
      "type": "object"
    },
    "CreditCard": {
      "properties": {
        "billingName": {
          "type": "string"
        },
        "billingPostalCode": {
          "type": "string"
        },
        "cardNumberSuffix": {
          "type": "string"
        },
        "creditCardToken": {
          "type": "string"
        },
        "creditCardType": {
          "$ref": "#/definitions/CreditCardType"
        }
      },
      "type": "object"
    },
    "CreditCard1": {
      "properties": {
        "creditCardSuffix": {
          "type": "string"
        },
        "creditCardType": {
          "enum": [
            "AMEX",
            "CARTES_BANCAIRES",
            "DISCOVER",
            "JCB",
            "MASTERCARD",
            "UKNOWN_AUTHENTICATION_CARD_TYPE",
            "VISA"
          ],
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditCardType": {
      "properties": {
        "backgroundUrl": {
          "type": "string"
        },
        "creditCardTypeToken": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "logoUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Customer": {
      "properties": {
        "attributeMap": {
          "additionalProperties": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "object"
        },
        "authentication": {
          "$ref": "#/definitions/Authentication"
        },
        "cohorts": {
          "items": {
            "$ref": "#/definitions/Cohort1"
          },
          "type": "array"
        },
        "contact": {
          "$ref": "#/definitions/ContactInfo"
        },
        "gaiaAccountStatus": {
          "enum": [
            "ACTIVE",
            "DELETED",
            "DISABLED",
            "INVALID",
            "PURGED",
            "UNKNOWN_GAIA_ACCOUNT_STATUS"
          ],
          "type": "string"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "timezone": {
          "$ref": "#/definitions/Timezone"
        }
      },
      "type": "object"
    },
    "CustomerAnswer": {
      "properties": {
        "bankAccount": {
          "$ref": "#/definitions/BankAccount1"
        },
        "creditCard": {
          "$ref": "#/definitions/CreditCard1"
        },
        "dcb": {
          "$ref": "#/definitions/Dcb"
        },
        "paypal": {
          "$ref": "#/definitions/Paypal1"
        },
        "phoneNumber": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "playBalance": {
          "$ref": "#/definitions/Money"
        },
        "postalCode": {
          "type": "string"
        },
        "questionToken": {
          "type": "string"
        },
        "walletBalance": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "CustomerDocsSubmissionStatus": {
      "properties": {
        "hasSubmittedDocs": {
          "type": "boolean"
        },
        "submitTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerIssue": {
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "issueFailures": {
          "items": {
            "$ref": "#/definitions/IssueFailure"
          },
          "type": "array"
        },
        "issueId": {
          "type": "string"
        },
        "issueStatus": {
          "enum": [
            "FAIL",
            "ISSUE_STATUS_UNSPECIFIED",
            "NOT_RUN",
            "PASS"
          ],
          "type": "string"
        },
        "rank": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Date": {
      "properties": {
        "day": {
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Dcb": {
      "properties": {
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeauthenticateRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeauthenticateResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "DedupeRequest": {
      "properties": {
        "duplicateCaseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DedupeResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "DeliveryInfo": {
      "properties": {
        "deliveryStatus": {
          "enum": [
            "FAILED",
            "NOT_SCHEDULED",
            "PENDING",
            "SENT",
            "UNKNOWN_DELIVERY_STATUS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareAcceptEvent": {
      "type": "object"
    },
    "DesktopScreenshareAutoDeclineEvent": {
      "properties": {
        "declineType": {
          "enum": [
            "NOT_SUPPORTED",
            "UNKNOWN_AUTO_DECLINE_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareCancelEvent": {
      "type": "object"
    },
    "DesktopScreenshareCleanupEvent": {
      "type": "object"
    },
    "DesktopScreenshareConnectEvent": {
      "type": "object"
    },
    "DesktopScreenshareDeclineEvent": {
      "type": "object"
    },
    "DesktopScreenshareDisconnectEvent": {
      "type": "object"
    },
    "DesktopScreenshareEndEvent": {
      "properties": {
        "agentEnded": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareEvent": {
      "properties": {
        "acceptEvent": {
          "$ref": "#/definitions/DesktopScreenshareAcceptEvent"
        },
        "autoDeclineEvent": {
          "$ref": "#/definitions/DesktopScreenshareAutoDeclineEvent"
        },
        "cancelEvent": {
          "$ref": "#/definitions/DesktopScreenshareCancelEvent"
        },
        "cleanupEvent": {
          "$ref": "#/definitions/DesktopScreenshareCleanupEvent"
        },
        "connectEvent": {
          "$ref": "#/definitions/DesktopScreenshareConnectEvent"
        },
        "declineEvent": {
          "$ref": "#/definitions/DesktopScreenshareDeclineEvent"
        },
        "disconnectEvent": {
          "$ref": "#/definitions/DesktopScreenshareDisconnectEvent"
        },
        "endEvent": {
          "$ref": "#/definitions/DesktopScreenshareEndEvent"
        },
        "initiateEvent": {
          "$ref": "#/definitions/DesktopScreenshareInitiateEvent"
        },
        "invitationId": {
          "type": "string"
        },
        "inviteEvent": {
          "$ref": "#/definitions/DesktopScreenshareInviteEvent"
        },
        "joinEvent": {
          "$ref": "#/definitions/DesktopScreenshareJoinEvent"
        },
        "leaveEvent": {
          "$ref": "#/definitions/DesktopScreenshareLeaveEvent"
        },
        "receivedEvent": {
          "$ref": "#/definitions/DesktopScreenshareReceivedEvent"
        },
        "revivedEvent": {
          "$ref": "#/definitions/DesktopScreenshareRevivedEvent"
        },
        "startingConnectEvent": {
          "$ref": "#/definitions/DesktopScreenshareStartingConnectEvent"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareInitiateEvent": {
      "properties": {
        "screensharingState": {
          "enum": [
            "SUPPORTED",
            "UNKNOWN",
            "UNKNOWN_SCREENSHARING_STATE",
            "UNSUPPORTED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareInviteEvent": {
      "type": "object"
    },
    "DesktopScreenshareJoinEvent": {
      "properties": {
        "agentJoined": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareLeaveEvent": {
      "properties": {
        "agentLeft": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DesktopScreenshareReceivedEvent": {
      "type": "object"
    },
    "DesktopScreenshareRevivedEvent": {
      "type": "object"
    },
    "DesktopScreenshareStartingConnectEvent": {
      "type": "object"
    },
    "Device": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "ADVANCED_EXCHANGE",
              "EXCHANGE",
              "EXCHANGE_WITHOUT_RETURN",
              "REPAIR",
              "RETURN",
              "UNKNOWN_ACTION",
              "WARRANTY_REFUND"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "countryOfPurchase": {
          "type": "string"
        },
        "deviceClass": {
          "enum": [
            "CHROMEBOOK",
            "UNKNOWN_DEVICE_CLASS"
          ],
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "doaEndDate": {
          "type": "string"
        },
        "doaExpired": {
          "type": "boolean"
        },
        "exchangeGpn": {
          "type": "string"
        },
        "extendedWarrantyActive": {
          "type": "boolean"
        },
        "extendedWarrantyContractId": {
          "type": "string"
        },
        "extendedWarrantyEndDate": {
          "type": "string"
        },
        "extendedWarrantyExpired": {
          "type": "boolean"
        },
        "gpn": {
          "type": "string"
        },
        "hashedFullDeviceId": {
          "type": "string"
        },
        "noRmaTypeReason": {
          "enum": [
            "CONVERTED_TO_DASH_R",
            "GOOGLE_SHOPPING_EXPRESS",
            "NO_DATA_AVAILABLE",
            "NO_LONGER_SUPPORTED",
            "NO_RMA_REASON_SET",
            "UNKNOWN_NO_RMA_REASON",
            "UNSUPPORTED_3PR_DEVICE",
            "WALK_IN_CENTERS_ONLY"
          ],
          "type": "string"
        },
        "orderNumber": {
          "type": "string"
        },
        "pointOfPurchase": {
          "enum": [
            "BULK_ORDER",
            "EVENT_GIVEAWAY",
            "GOOGLER_GIFT",
            "GOOGLE_PLAY",
            "RETAIL",
            "UNKNOWN_POINT_OF_PURCHASE"
          ],
          "type": "string"
        },
        "purchaseDate": {
          "type": "string"
        },
        "remorseEndDate": {
          "type": "string"
        },
        "remorseExpired": {
          "type": "boolean"
        },
        "replacementDevices": {
          "items": {
            "$ref": "#/definitions/ReplacementDevice"
          },
          "type": "array"
        },
        "rmaTypes": {
          "items": {
            "$ref": "#/definitions/RmaType"
          },
          "type": "array"
        },
        "rmas": {
          "items": {
            "$ref": "#/definitions/DeviceRma"
          },
          "type": "array"
        },
        "shipDate": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "supportedBy3pr": {
          "type": "boolean"
        },
        "warrantyEndDate": {
          "type": "string"
        },
        "warrantyExpired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Device1": {
      "properties": {
        "action": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "RMA_ACTION_NOT_SET",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "hashedFullDeviceId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "state": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_STATE_NOT_SET",
            "RMA_SUBMITTED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Device2": {
      "properties": {
        "androidId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "imei": {
          "type": "string"
        },
        "lastUsedTime": {
          "type": "string"
        },
        "manufacturer": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "registrationTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeviceRma": {
      "properties": {
        "authHold": {
          "type": "boolean"
        },
        "availableFlows": {
          "items": {
            "enum": [
              "GENERATE_PACKING_LABEL",
              "GENERATE_REPLACEMENT_CART_LINK",
              "GENERATE_SHIPPING_LABEL",
              "SUBMIT_RMA",
              "UNKNOWN_FLOW",
              "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "cancelable": {
          "type": "boolean"
        },
        "identifier": {
          "$ref": "#/definitions/RmaIdentifier"
        },
        "state": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_SUBMITTED",
            "UNKNOWN_RMA_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DifmAction": {
      "properties": {
        "difmId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "DirectCarrierBilling": {
      "properties": {
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscardDraftRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscardDraftResponse": {
      "type": "object"
    },
    "Docid": {
      "properties": {
        "backend": {
          "type": "string"
        },
        "backendDocid": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANDROID_APK",
            "ANDROID_APP",
            "ANDROID_DEVELOPER",
            "ANDROID_DYNAMIC_MODULE",
            "ANDROID_IN_APP_ITEM",
            "APK",
            "APPS_RECS_TOPIC_METADATA",
            "APPS_TOPIC",
            "BADGE",
            "BADGE_CONTAINER",
            "BOOKS_EDITORIAL_ARTICLE",
            "BOOKS_EXPLORE_ANNOUNCEMENT",
            "BOOKS_EXPLORE_NEWSSTAND_POST",
            "BOOKS_EXPLORE_YOUTUBE_VIDEO",
            "BUNDLE",
            "CHROME_APP",
            "CLUSTER",
            "CONTAINER",
            "DOCUMENT_TYPE_UNSPECIFIED",
            "DYNAMIC_ANDROID_IN_APP_ITEM",
            "DYNAMIC_SUBSCRIPTION",
            "EDITORIAL",
            "ENTERTAINMENT_STORY",
            "HARDWARE",
            "HARDWARE_PROMOTION",
            "HARDWARE_SHIPPING",
            "LINK",
            "MAGAZINE",
            "MAGAZINE_ISSUE",
            "MOVIES_PERSISTED_CLUSTER",
            "MOVIE_PERSON",
            "MUSIC_ACCESS",
            "MUSIC_ADAPTIVE_HOME_CARD_IMAGE",
            "MUSIC_ALBUM",
            "MUSIC_ARTIST",
            "MUSIC_AUDIO_AD",
            "MUSIC_BROWSE_CATEGORY",
            "MUSIC_CONCERT",
            "MUSIC_NOW_MODULE_HEADING",
            "MUSIC_PODCAST_EPISODE",
            "MUSIC_PODCAST_SERIES",
            "MUSIC_SITUATION",
            "MUSIC_SONG",
            "MUSIC_STATION",
            "MUSIC_USER_PLAYLIST",
            "MUSIC_VENUE",
            "NEWS_EDITION",
            "NEWS_ISSUE",
            "OCEAN_AUDIOBOOK",
            "OCEAN_AUTHOR",
            "OCEAN_BOOK",
            "OCEAN_BOOK_SERIES",
            "PERSON",
            "PLAY_BALANCE_TOP_UP",
            "PLAY_STORED_VALUE",
            "STREAM",
            "SUBSCRIPTION",
            "SUGGEST_CONTAINER",
            "TALENT",
            "TOPIC",
            "TV_BROADCASTER",
            "TV_EPISODE",
            "TV_SEASON",
            "TV_SHOW",
            "VETTED_APP_FEATURE",
            "VIDEO_DISTRIBUTOR",
            "VOUCHER",
            "YOUTUBE_MOVIE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DraftInfo": {
      "properties": {
        "transitionToState": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Duplicate": {
      "properties": {
        "sourceCaseId": {
          "type": "string"
        },
        "targetCaseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EasterEggSettings": {
      "properties": {
        "disableBoostCard": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Email": {
      "properties": {
        "body": {
          "type": "string"
        },
        "deliveryInfo": {
          "$ref": "#/definitions/DeliveryInfo"
        },
        "headers": {
          "$ref": "#/definitions/Headers"
        },
        "isHtml": {
          "type": "boolean"
        },
        "type": {
          "enum": [
            "NEW",
            "REPLY",
            "REPLY_ALL",
            "UNKNOWN_EMAIL_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Email1": {
      "properties": {
        "sla": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Email2": {
      "properties": {
        "locale": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "sla": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmailAddress": {
      "properties": {
        "type": {
          "enum": [
            "EXTERNAL",
            "PERSONAL_ALIAS",
            "PRODUCT_ALIAS",
            "TEAM_ALIAS",
            "UNKNOWN_EMAIL_ADDRESS_TYPE"
          ],
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmploymentInfo": {
      "properties": {
        "employmentType": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "tvcStaffingPartner": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Empty": {
      "type": "object"
    },
    "Entitlement": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "CANCELABLE",
              "ENTITLEMENT_ACTIONS_UNKNOWN",
              "REVOKABLE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "badges": {
          "items": {
            "$ref": "#/definitions/EntitlementBadge"
          },
          "type": "array"
        },
        "billingBackend": {
          "enum": [
            "BILLING",
            "CDP",
            "PAYMENT_BACKEND_UNDEFINED"
          ],
          "type": "string"
        },
        "billingPeriod": {
          "$ref": "#/definitions/Period"
        },
        "cancelTime": {
          "type": "string"
        },
        "componentData": {
          "$ref": "#/definitions/ComponentData"
        },
        "customerTimezone": {
          "type": "string"
        },
        "entitlementToken": {
          "type": "string"
        },
        "hasFuturePayments": {
          "type": "boolean"
        },
        "inFreeTrial": {
          "type": "boolean"
        },
        "isActive": {
          "type": "boolean"
        },
        "isCancelable": {
          "type": "boolean"
        },
        "isRevokable": {
          "type": "boolean"
        },
        "localizedCancelTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedPurchaseTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "name": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        },
        "redSignals": {
          "$ref": "#/definitions/RedSignals"
        },
        "shmoovieSignals": {
          "$ref": "#/definitions/ShmoovieSignals"
        },
        "state": {
          "enum": [
            "ACTIVE_NOT_RENEWING",
            "ACTIVE_RENEWING",
            "ENTITLEMENT_STATE_ERROR",
            "ENTITLEMENT_STATE_UNKNOWN",
            "INACTIVE"
          ],
          "type": "string"
        },
        "unpluggedSignals": {
          "$ref": "#/definitions/UnpluggedSignals"
        },
        "url": {
          "type": "string"
        },
        "utcOffset": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntitlementBadge": {
      "properties": {
        "type": {
          "enum": [
            "FAMILY_HEAD",
            "FAMILY_MEMBER",
            "FREE_TRIAL",
            "GRACE_PERIOD",
            "IN_FREE_TRIAL",
            "IOS",
            "UNDEFINED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntitlementComponent": {
      "properties": {
        "accessExpiryTime": {
          "type": "string"
        },
        "accessStartTime": {
          "type": "string"
        },
        "actions": {
          "items": {
            "enum": [
              "CANCELABLE",
              "ENTITLEMENT_ACTIONS_UNKNOWN",
              "REVOKABLE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "cancelTime": {
          "type": "string"
        },
        "componentToken": {
          "type": "string"
        },
        "entitlementId": {
          "type": "string"
        },
        "hasFuturePayments": {
          "type": "boolean"
        },
        "introductoryPrice": {
          "$ref": "#/definitions/Money"
        },
        "isActive": {
          "type": "boolean"
        },
        "isBasePackage": {
          "type": "boolean"
        },
        "isCancelable": {
          "type": "boolean"
        },
        "isRevokable": {
          "type": "boolean"
        },
        "itemId": {
          "type": "string"
        },
        "lineItemKey": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "localizedAccessExpiryTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedAccessStartTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedCancelTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedTrialEndTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "monthlyPrice": {
          "$ref": "#/definitions/Money"
        },
        "state": {
          "enum": [
            "ACTIVE_NOT_RENEWING",
            "ACTIVE_RENEWING",
            "ENTITLEMENT_STATE_ERROR",
            "ENTITLEMENT_STATE_UNKNOWN",
            "INACTIVE"
          ],
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "trialEndTime": {
          "type": "string"
        },
        "trialPeriod": {
          "$ref": "#/definitions/Period"
        }
      },
      "type": "object"
    },
    "Entry": {
      "properties": {
        "boolValue": {
          "type": "boolean"
        },
        "doubleValue": {
          "format": "double",
          "type": "number"
        },
        "enumValue": {
          "type": "string"
        },
        "int64Value": {
          "format": "int64",
          "type": "string"
        },
        "intValue": {
          "format": "int32",
          "type": "integer"
        },
        "sources": {
          "items": {
            "$ref": "#/definitions/Source"
          },
          "type": "array"
        },
        "stringValue": {
          "type": "string"
        },
        "timeValue": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EnumValue": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EscalateRequest": {
      "properties": {
        "escalationId": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EscalateResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "EscalateSettings": {
      "type": "object"
    },
    "EscalationInfo": {
      "properties": {
        "agentTransfer": {
          "$ref": "#/definitions/AgentTransfer"
        },
        "chatTransfer": {
          "$ref": "#/definitions/ChatTransfer"
        },
        "escalationTargetName": {
          "type": "string"
        },
        "localeTransfer": {
          "$ref": "#/definitions/LocaleTransfer"
        }
      },
      "type": "object"
    },
    "EscalationTarget": {
      "properties": {
        "chat": {
          "$ref": "#/definitions/Chat"
        },
        "email": {
          "$ref": "#/definitions/Email1"
        },
        "targetId": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ExtendedWarrantyInfo": {
      "properties": {
        "contractId": {
          "type": "string"
        },
        "lineItemId": {
          "format": "int32",
          "type": "integer"
        },
        "price": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "ExternalToolSettings": {
      "properties": {
        "accountLookupTools": {
          "items": {
            "$ref": "#/definitions/AccountLookupTool"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FinalizeConsultNoteRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FinalizeConsultNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "FinalizeNoteRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FinalizeNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "FinishRequest": {
      "type": "object"
    },
    "FinishResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "FocusInfo": {
      "properties": {
        "profileImageUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Form": {
      "type": "object"
    },
    "FormField": {
      "properties": {
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "values": {
          "items": {
            "$ref": "#/definitions/FormFieldValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormField1": {
      "properties": {
        "formFieldDisplayValues": {
          "items": {
            "$ref": "#/definitions/FormFieldValue1"
          },
          "type": "array"
        },
        "formFieldLabel": {
          "type": "string"
        },
        "formFieldName": {
          "type": "string"
        },
        "formFieldValues": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormField2": {
      "properties": {
        "formFieldDisplayValues": {
          "items": {
            "$ref": "#/definitions/FormFieldValue2"
          },
          "type": "array"
        },
        "formFieldLabel": {
          "type": "string"
        },
        "formFieldName": {
          "type": "string"
        },
        "formFieldValues": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "FormFieldValue": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FormFieldValue1": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FormFieldValue2": {
      "properties": {
        "displayValue": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "FormMetadata": {
      "properties": {
        "formFields": {
          "items": {
            "$ref": "#/definitions/FormField"
          },
          "type": "array"
        },
        "formId": {
          "type": "string"
        },
        "helpcenterName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAccountReviewStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "reviewKey": {
          "$ref": "#/definitions/ReviewKey"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAccountReviewStatusResponse": {
      "properties": {
        "reviewAction": {
          "enum": [
            "REVIEW_FIX_ACTION_UNSPECIFIED"
          ],
          "type": "string"
        },
        "reviewKey": {
          "$ref": "#/definitions/ReviewKey"
        },
        "reviewState": {
          "enum": [
            "ASSIGNED",
            "CLOSED",
            "REVIEW_STATE_UNSPECIFIED",
            "UNASSIGNED",
            "UNKNOWN_REVIEW_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAccountSignalsResponse": {
      "properties": {
        "results": {
          "items": {
            "$ref": "#/definitions/AccountSignalResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAgentSearchCountResponse": {
      "properties": {
        "searchCounts": {
          "items": {
            "$ref": "#/definitions/SearchCount"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAgentUnreadCasesInfoResponse": {
      "properties": {
        "agentUnreadCasesInfo": {
          "$ref": "#/definitions/AgentUnreadCasesInfo"
        }
      },
      "type": "object"
    },
    "GetAuthenticationCreditCardTypesRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAuthenticationCreditCardTypesResponse": {
      "properties": {
        "authenticationCreditCards": {
          "items": {
            "$ref": "#/definitions/AuthenticationCreditCard"
          },
          "type": "array"
        },
        "creditCardTypes": {
          "items": {
            "enum": [
              "AMEX",
              "CARTES_BANCAIRES",
              "DISCOVER",
              "JCB",
              "MASTERCARD",
              "UKNOWN_AUTHENTICATION_CARD_TYPE",
              "VISA"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAuthenticationQuestionsRequest": {
      "properties": {
        "agentSsoCookie": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAuthenticationQuestionsResponse": {
      "properties": {
        "questionSets": {
          "items": {
            "$ref": "#/definitions/QuestionSet"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetAuthenticationResultRequest": {
      "properties": {
        "agentSsoCookie": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetAuthenticationResultResponse": {
      "properties": {
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetBusinessListingsRequest": {
      "properties": {
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetBusinessListingsResponse": {
      "properties": {
        "listings": {
          "items": {
            "$ref": "#/definitions/Business"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetByDeviceIdResponse": {
      "properties": {
        "device": {
          "$ref": "#/definitions/Device"
        }
      },
      "type": "object"
    },
    "GetCancellationStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCancellationStatusResponse": {
      "properties": {
        "reason": {
          "enum": [
            "CANCEL_REASON_ACCIDENTAL_PURCHASE",
            "CANCEL_REASON_DEFECTIVE",
            "CANCEL_REASON_DID_NOT_RECEIVE",
            "CANCEL_REASON_FRAUD",
            "CANCEL_REASON_FRIENDLY_FRAUD",
            "CANCEL_REASON_REMORSE",
            "CANCEL_REASON_UNSPECIFIED"
          ],
          "type": "string"
        },
        "subscription": {
          "$ref": "#/definitions/Subscription"
        }
      },
      "type": "object"
    },
    "GetConsultSlaRequest": {
      "properties": {
        "channel": {
          "enum": [
            "NOTE",
            "UNKNOWN_CHANNEL"
          ],
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "dynamicAttributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        },
        "issueCategory": {
          "$ref": "#/definitions/Category5"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/Category5"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetConsultSlaResponse": {
      "properties": {
        "dueByDuration": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCustomerSummaryRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "disableEventHistory": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "historyCutoff": {
          "type": "string"
        },
        "lastNumberDays": {
          "format": "int64",
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "productTypes": {
          "items": {
            "enum": [
              "BUNDLE",
              "LIVE_EVENT",
              "MOVIE",
              "PRODUCT_TYPE_UNKNOWN",
              "RED",
              "SEASON",
              "SHOW",
              "UNPLUGGED"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetCustomerSummaryResponse": {
      "properties": {
        "cancelHistory": {
          "items": {
            "$ref": "#/definitions/CancelHistorySummaryInfo"
          },
          "type": "array"
        },
        "entitlements": {
          "items": {
            "$ref": "#/definitions/Entitlement"
          },
          "type": "array"
        },
        "hasOneTimeContentPurchase": {
          "type": "boolean"
        },
        "nextPageToken": {
          "type": "string"
        },
        "offsetFromUtc": {
          "format": "double",
          "type": "number"
        },
        "oneTimeContentPurchaseCount": {
          "format": "int32",
          "type": "integer"
        },
        "refundHistory": {
          "items": {
            "$ref": "#/definitions/RefundHistorySummaryInfo"
          },
          "type": "array"
        },
        "timezone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetEscalationTargetsResponse": {
      "properties": {
        "escalationTargets": {
          "items": {
            "$ref": "#/definitions/EscalationTarget"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetHardwareOrderDetailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetHardwareSignalsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetHardwareSignalsResponse": {
      "properties": {
        "hasStandardExchange": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GetLostStolenEligibilityRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetLostStolenRefundEligibilityRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetMailingAddressRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "isRequiredAction": {
          "type": "boolean"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetMyAssignStreamSearchesResponse": {
      "properties": {
        "searches": {
          "items": {
            "$ref": "#/definitions/Search"
          },
          "type": "array"
        },
        "teams": {
          "items": {
            "$ref": "#/definitions/Team"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetOneTimePurchasesRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetOneTimePurchasesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "purchases": {
          "items": {
            "$ref": "#/definitions/Purchase"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "finskyPurchaseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "locale": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetOrdersResponse": {
      "properties": {
        "orders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetPaymentMethodHijackReviewsStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "reviewKeys": {
          "items": {
            "$ref": "#/definitions/ReviewKey"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetPaymentMethodHijackReviewsStatusResponse": {
      "properties": {
        "allTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "alreadyRefundedTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "chargedBackTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "newlyRefundedTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "notFoundTransactions": {
          "items": {
            "$ref": "#/definitions/PaymentMethodHijackTransaction"
          },
          "type": "array"
        },
        "notRefundedTransactions": {
          "items": {
            "$ref": "#/definitions/PaymentMethodHijackTransaction"
          },
          "type": "array"
        },
        "resolvedTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        },
        "reviewAgentLdaps": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "reviewKeys": {
          "items": {
            "$ref": "#/definitions/ReviewKey"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "CLOSED",
            "REVIEW_STATE_UNSPECIFIED",
            "UNASSIGNED",
            "UNKNOWN_REVIEW_STATE"
          ],
          "type": "string"
        },
        "underReviewTransactions": {
          "items": {
            "$ref": "#/definitions/TransactionsSummary"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetPaymentsInfoRequest": {
      "properties": {
        "agentSso": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetPaymentsInfoResponse": {
      "properties": {
        "paymentsInfo": {
          "$ref": "#/definitions/PaymentsInfo"
        }
      },
      "type": "object"
    },
    "GetPhoneSettingResponse": {
      "properties": {
        "phoneSetting": {
          "$ref": "#/definitions/PhoneSetting"
        }
      },
      "type": "object"
    },
    "GetRefundStatusRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetRefundStatusResponse": {
      "properties": {
        "approvedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "approvedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "escalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "escalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "failedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "failedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "inProgress": {
          "type": "boolean"
        },
        "inProgressOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "inProgressOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "optionalEscalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "optionalEscalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "processLaterOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "processLaterOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "ACCIDENTAL_PURCHASE",
            "DEFECTIVE",
            "DID_NOT_RECEIVE",
            "FRAUD",
            "FRIENDLY_FRAUD",
            "REFUND_REASON_UNSPECIFIED",
            "REMORSE"
          ],
          "type": "string"
        },
        "rejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "rejectedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "sidewinderRejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetReplacementDetailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetRmaOrderDetailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetRoutingTargetsResponse": {
      "properties": {
        "products": {
          "items": {
            "$ref": "#/definitions/Product2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetShippingAddressRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "isRequiredAction": {
          "type": "boolean"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetShippingCustomerNameRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetShippingCustomerPhoneNumberRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "GetSubscriptionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "subscriptionIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GetSubscriptionsResponse": {
      "properties": {
        "subscriptions": {
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GiftCard": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "redemptionDate": {
          "$ref": "#/definitions/Date"
        },
        "redemptionToken": {
          "$ref": "#/definitions/RedemptionToken"
        },
        "status": {
          "enum": [
            "ACTIVATED",
            "CANCELED",
            "CREATED",
            "EXPIRED",
            "GIFT_CARD_STATUS_UNSPECIFIED",
            "REDEEMED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareDiscount": {
      "properties": {
        "description": {
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareId": {
      "properties": {
        "esn": {
          "type": "string"
        },
        "imei": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        },
        "meid": {
          "type": "string"
        },
        "serialNumber": {
          "type": "string"
        },
        "unknown": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareOrderDetail": {
      "properties": {
        "hasRefund": {
          "type": "boolean"
        },
        "orderId": {
          "type": "string"
        },
        "orderTime": {
          "type": "string"
        },
        "shipments": {
          "items": {
            "$ref": "#/definitions/HardwareShipment"
          },
          "type": "array"
        },
        "taxAmount": {
          "$ref": "#/definitions/Money"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        },
        "totalAmountExcludingTax": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareOrderLineItem": {
      "properties": {
        "description": {
          "type": "string"
        },
        "discounts": {
          "items": {
            "$ref": "#/definitions/HardwareDiscount"
          },
          "type": "array"
        },
        "extendedWarrantyInfo": {
          "$ref": "#/definitions/ExtendedWarrantyInfo"
        },
        "finskyLineNumber": {
          "format": "int32",
          "type": "integer"
        },
        "hardwareId": {
          "$ref": "#/definitions/HardwareId"
        },
        "hasRefund": {
          "type": "boolean"
        },
        "hashedFullHardwareId": {
          "$ref": "#/definitions/HardwareId"
        },
        "lineItemId": {
          "type": "string"
        },
        "listPrice": {
          "$ref": "#/definitions/Money"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "productSku": {
          "type": "string"
        },
        "rmaInfo": {
          "$ref": "#/definitions/RmaInfo"
        },
        "totalWithDiscountsWithoutTax": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareOrderLineItemRefund": {
      "properties": {
        "description": {
          "type": "string"
        },
        "hardwareId": {
          "$ref": "#/definitions/HardwareId"
        },
        "lineItemId": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "shippingInfo": {
          "$ref": "#/definitions/ShippingInfo"
        }
      },
      "type": "object"
    },
    "HardwareOrderListItem": {
      "properties": {
        "authHold": {
          "type": "boolean"
        },
        "orderId": {
          "type": "string"
        },
        "orderTime": {
          "type": "string"
        },
        "replacement": {
          "type": "boolean"
        },
        "rmaNumber": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareOrderRefund": {
      "type": "object"
    },
    "HardwareOrderWorkflow": {
      "properties": {
        "hardwareShipmentInvestigation": {
          "$ref": "#/definitions/HardwareShipmentInvestigation"
        },
        "state": {
          "enum": [
            "DEFAULT",
            "IN_SHIPPING_SPECIALIST_CONSULT_FOR_LOST_STOLEN",
            "SHIPPING_SPECIALIST_CONSULT_FOR_LOST_STOLEN_COMPLETE",
            "STATE_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareRefund": {
      "properties": {
        "lineItemRefund": {
          "$ref": "#/definitions/HardwareOrderLineItemRefund"
        },
        "orderRefund": {
          "$ref": "#/definitions/HardwareOrderRefund"
        },
        "paymentDetail": {
          "$ref": "#/definitions/PaymentDetail"
        },
        "refundActions": {
          "items": {
            "enum": [
              "REFUND_ACTION_NOT_SET",
              "SEND_REFUND_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "DELIVERY_RETURNED",
            "EXTENDED_WARRANTY_CANCELATION",
            "IN_BOX_ACCESSORIES",
            "LOST_STOLEN",
            "OTHER",
            "PRICE_PROTECTION",
            "REFUND_REASON_NOT_SET",
            "RMA",
            "SHIPPING",
            "TAX_EXEMPT",
            "UNDELIVERABLE"
          ],
          "type": "string"
        },
        "refundRequestTime": {
          "type": "string"
        },
        "refundedTime": {
          "type": "string"
        },
        "shipmentRefund": {
          "$ref": "#/definitions/HardwareShipmentRefund"
        },
        "status": {
          "enum": [
            "REFUNDED",
            "REFUND_ERROR",
            "REFUND_PENDING",
            "REFUND_PENDING_RETURN",
            "REFUND_PENDING_STUCK",
            "STATUS_NOT_SET"
          ],
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareShipment": {
      "properties": {
        "addressLastUpdated": {
          "type": "string"
        },
        "addressUpdateable": {
          "type": "boolean"
        },
        "authHold": {
          "type": "boolean"
        },
        "cancelInfo": {
          "$ref": "#/definitions/CancelInfo"
        },
        "financialStatus": {
          "enum": [
            "ABANDONED",
            "ADDED",
            "APPROVED",
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "CONFIRMED",
            "DENIED",
            "DISBURSED",
            "EXPIRED",
            "FAILED",
            "FINANCIAL_STATUS_NOT_SET",
            "INDETERMINATE",
            "PENDING",
            "REFUNDED",
            "UNAVAILABLE",
            "WAITING_FOR_CLIENT_RETRY"
          ],
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/HardwareOrderLineItem"
          },
          "type": "array"
        },
        "orderActions": {
          "items": {
            "enum": [
              "CANCEL_EXTENDED_WARRANTY",
              "CANCEL_ORDER",
              "ESCALATE_CANCELED",
              "HARDWARE_ORDER_ACTION_NOT_SET",
              "INITIATE_RMA",
              "INVESTIGATE_AUTH_HOLD",
              "INVESTIGATE_CANCELED",
              "INVESTIGATE_GOOGLE_FINANCING",
              "INVESTIGATE_SHIPPING",
              "REJECT_OR_RETURN",
              "REVIEW_REFUND",
              "REVIEW_RMA",
              "REVIEW_RMA_REFUND",
              "SEND_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "paymentDetail": {
          "$ref": "#/definitions/PaymentDetail"
        },
        "shipmentId": {
          "type": "string"
        },
        "shipmentNumber": {
          "format": "int32",
          "type": "integer"
        },
        "shipmentState": {
          "enum": [
            "CANCEL",
            "FC_TRANSFER",
            "HARDWARE_SHIPMENT_STATE_NOT_SET",
            "ON_HOLD_CHARGEABLE",
            "ON_HOLD_QUANTITY",
            "ON_HOLD_WAIT",
            "READY_TO_SHIP",
            "SENT",
            "SHIPPED",
            "SPLIT"
          ],
          "type": "string"
        },
        "shippingInfo": {
          "$ref": "#/definitions/ShippingInfo"
        },
        "state": {
          "enum": [
            "CANCELED",
            "HARDWARE_ORDER_STATE_NOT_SET",
            "PROCESSING",
            "SHIPPED"
          ],
          "type": "string"
        },
        "stuckOrderAlert": {
          "enum": [
            "STUCK_INVENTORY",
            "STUCK_ORDER_ALERT_NOT_SET",
            "STUCK_PAYMENT",
            "STUCK_PROCESSING",
            "STUCK_TRANSIT"
          ],
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "HardwareShipmentInvestigation": {
      "properties": {
        "isOrderFromStore": {
          "type": "boolean"
        },
        "issue": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HardwareShipmentRefund": {
      "properties": {
        "shipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Headers": {
      "properties": {
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fromAddress": {
          "type": "string"
        },
        "inReplyTo": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "HelpCenterContent": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterContent1": {
      "properties": {
        "contentId": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterContent2": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterContent3": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "requirementTypes": {
          "items": {
            "enum": [
              "INTERNET",
              "OPERATE",
              "REQUIREMENT_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "requirementsSnippetId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "enum": [
            "ANSWER",
            "TOPIC",
            "TROUBLESHOOTER",
            "UNKNOWN_CONTENT_TYPE",
            "UNSUPPORTED_TYPE"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "HelpCenterDeepLinkSource": {
      "type": "object"
    },
    "Identity": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "profileImageUrl": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InitiatePaymentMethodHijackReviewsRequest": {
      "properties": {
        "bankAccount": {
          "$ref": "#/definitions/BankAccount"
        },
        "caseId": {
          "type": "string"
        },
        "creditCard": {
          "$ref": "#/definitions/CreditCard"
        },
        "dcb": {
          "$ref": "#/definitions/DirectCarrierBilling"
        },
        "instrumentIssuerToken": {
          "type": "string"
        },
        "paypal": {
          "$ref": "#/definitions/Paypal"
        },
        "ssoCookie": {
          "type": "string"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/PaymentMethodHijackTransaction"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InitiatePaymentMethodHijackReviewsResponse": {
      "properties": {
        "result": {
          "enum": [
            "INITIATE_PAYMENT_METHOD_HIJACK_POSSIBLE_ACCOUNT_TAKEOVER",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_CREATED",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_NOT_FOUND",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_NOT_UNIQUE",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_RESOLVED",
            "INITIATE_PAYMENT_METHOD_HIJACK_REVIEWS_RESULT_UNSPECIFIED"
          ],
          "type": "string"
        },
        "reviewKeys": {
          "items": {
            "$ref": "#/definitions/ReviewKey"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Interaction": {
      "properties": {
        "caseData": {
          "$ref": "#/definitions/CaseData"
        },
        "endTime": {
          "type": "string"
        },
        "eventTypes": {
          "items": {
            "enum": [
              "ADOPTION",
              "CHAT",
              "EMAIL",
              "GOAL",
              "HANGOUT",
              "INCENTIVE",
              "MARKETING_EMAIL",
              "MEETING",
              "NOTE",
              "PHONE",
              "STUB",
              "TRAX",
              "UNKNOWN_EVENT_TYPE",
              "WEB"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "startTime": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InteractionCount": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "startTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Issue": {
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        },
        "localeCode": {
          "type": "string"
        },
        "previewText": {
          "type": "string"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "subProducts": {
          "items": {
            "$ref": "#/definitions/Product"
          },
          "type": "array"
        },
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Issue1": {
      "properties": {
        "categoryPath": {
          "type": "string"
        },
        "issueId": {
          "type": "string"
        },
        "partialCategoryPath": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "unresolvedDifmId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "IssueCategoryAction": {
      "properties": {
        "issueCategories": {
          "items": {
            "$ref": "#/definitions/CategoryPath1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "IssueCategorySettings": {
      "properties": {
        "allowUncategorizedCases": {
          "type": "boolean"
        },
        "categoryRootName": {
          "type": "string"
        },
        "secondaryProductRequirementCategoryId": {
          "type": "string"
        },
        "subProductTopCategories": {
          "items": {
            "$ref": "#/definitions/Category2"
          },
          "type": "array"
        },
        "topCategory": {
          "$ref": "#/definitions/Category2"
        }
      },
      "type": "object"
    },
    "IssueFailure": {
      "properties": {
        "difmId": {
          "type": "string"
        },
        "helpCenterContent": {
          "$ref": "#/definitions/HelpCenterContent1"
        },
        "reason": {
          "type": "string"
        },
        "reasonDescription": {
          "type": "string"
        },
        "supportLinks": {
          "items": {
            "$ref": "#/definitions/SupportLink"
          },
          "type": "array"
        },
        "targetId": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        },
        "targetType": {
          "enum": [
            "TARGET_TYPE_UNSPECIFIED",
            "URL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LineItem": {
      "properties": {
        "description": {
          "type": "string"
        },
        "hardwareId": {
          "type": "string"
        },
        "hashedHardwareId": {
          "type": "string"
        },
        "productSku": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "unmaskedHardwareId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListAgentActivitiesResponse": {
      "properties": {
        "agentActivities": {
          "items": {
            "$ref": "#/definitions/AgentActivity"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListAgentSettingsResponse": {
      "properties": {
        "agentSettings": {
          "items": {
            "$ref": "#/definitions/AgentSetting"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListBankAccountCountriesRequest": {
      "properties": {
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListBankAccountCountriesResponse": {
      "properties": {
        "bankAccountCountries": {
          "items": {
            "$ref": "#/definitions/BankAccountCountry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListBillingAddressesRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListBillingAddressesResponse": {
      "properties": {
        "billingAddresses": {
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListBuyersRemorseCountryCodesResponse": {
      "properties": {
        "countryCodes": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCasesByAgentResponse": {
      "properties": {
        "cases": {
          "items": {
            "$ref": "#/definitions/Case"
          },
          "type": "array"
        },
        "pageToken": {
          "type": "string"
        },
        "searchCount": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ListChildrenCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCommunicationsResponse": {
      "properties": {
        "communications": {
          "items": {
            "$ref": "#/definitions/Communication"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCreditCardTypesRequest": {
      "properties": {
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListCreditCardTypesResponse": {
      "properties": {
        "creditCardTypes": {
          "items": {
            "$ref": "#/definitions/CreditCardType"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListCustomerIssuesResponse": {
      "properties": {
        "customerIssues": {
          "items": {
            "$ref": "#/definitions/CustomerIssue"
          },
          "type": "array"
        },
        "supportLinks": {
          "items": {
            "$ref": "#/definitions/SupportLink"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListDevicesRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListDevicesResponse": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "#/definitions/Device"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListDevicesResponse1": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "#/definitions/Device2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListHardwareOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListHardwareOrdersResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "#/definitions/HardwareOrderListItem"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListHardwareRefundsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListHardwareRefundsResponse": {
      "properties": {
        "refunds": {
          "items": {
            "$ref": "#/definitions/HardwareRefund"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListInteractionsResponse": {
      "properties": {
        "interactions": {
          "items": {
            "$ref": "#/definitions/Interaction"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListIssuesResponse": {
      "properties": {
        "issues": {
          "items": {
            "$ref": "#/definitions/Issue1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListOpportunitiesResponse": {
      "properties": {
        "eventId": {
          "type": "string"
        },
        "ineligibleReasons": {
          "items": {
            "enum": [
              "CASE_SIGNALS",
              "OTHER",
              "UNKNOWN_INELIGIBLE_REASON"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "opportunities": {
          "items": {
            "$ref": "#/definitions/Opportunity1"
          },
          "type": "array"
        },
        "program": {
          "$ref": "#/definitions/Program1"
        }
      },
      "type": "object"
    },
    "ListOtherDevicesRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListOtherDevicesResponse": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "#/definitions/Device1"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPaymentInstrumentTypeInfosResponse": {
      "properties": {
        "paymentInstrumentTypes": {
          "items": {
            "$ref": "#/definitions/PaymentInstrumentTypeInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListProductsResponse": {
      "properties": {
        "allowedProductIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "products": {
          "items": {
            "$ref": "#/definitions/Product1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPropertiesResponse": {
      "properties": {
        "properties": {
          "items": {
            "$ref": "#/definitions/Property"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPurchasedAppsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPurchasedAppsResponse": {
      "properties": {
        "apps": {
          "items": {
            "$ref": "#/definitions/PurchasedApp"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPurchasedBooksRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPurchasedBooksResponse": {
      "properties": {
        "books": {
          "items": {
            "$ref": "#/definitions/PurchasedBook"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListPurchasedVideosRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "filter": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListPurchasedVideosResponse": {
      "properties": {
        "videos": {
          "items": {
            "$ref": "#/definitions/PurchasedVideo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListRelatedCommunicationsResponse": {
      "properties": {
        "relatedCommunications": {
          "items": {
            "$ref": "#/definitions/RelatedCommunications"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListResolutionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "resolutions": {
          "items": {
            "$ref": "#/definitions/Resolution"
          },
          "type": "array"
        },
        "resultsToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListRmasResponse": {
      "properties": {
        "rmas": {
          "items": {
            "$ref": "#/definitions/Rma"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListSettingsResponse": {
      "properties": {
        "agentSetting": {
          "$ref": "#/definitions/AgentSetting"
        },
        "searchSetting": {
          "$ref": "#/definitions/SearchSetting"
        }
      },
      "type": "object"
    },
    "ListSettingsResponse1": {
      "properties": {
        "allowedProductIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "settings": {
          "items": {
            "$ref": "#/definitions/Settings"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListShippingAddressesRequest": {
      "properties": {
        "customerEmail": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListShippingAddressesResponse": {
      "properties": {
        "shippingAddresses": {
          "items": {
            "$ref": "#/definitions/Address"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListSubscriptionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListSubscriptionsResponse": {
      "properties": {
        "activeSubscriptions": {
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "type": "array"
        },
        "inactiveSubscriptions": {
          "items": {
            "$ref": "#/definitions/Subscription"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTopLevelCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        },
        "consultCategoryInfo": {
          "$ref": "#/definitions/CategoryInfo"
        }
      },
      "type": "object"
    },
    "ListTransactionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "endAmount": {
          "$ref": "#/definitions/Money"
        },
        "endDate": {
          "type": "string"
        },
        "instrumentLastFourCharacters": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queryId": {
          "type": "string"
        },
        "queryIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        },
        "startAmount": {
          "$ref": "#/definitions/Money"
        },
        "startDate": {
          "type": "string"
        },
        "statuses": {
          "items": {
            "enum": [
              "CANCELLED",
              "CHARGED",
              "CHARGED_BACK",
              "DECLINED",
              "OTHER_STATUS",
              "PENDING",
              "REFUNDED",
              "REJECTED",
              "UNKNOWN_WALLET_TRANSACTION_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTransactionsRequest1": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "entitlementToken": {
          "type": "string"
        },
        "entitlementTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "includeUpcomingCharges": {
          "type": "boolean"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "productTypes": {
          "items": {
            "enum": [
              "BUNDLE",
              "LIVE_EVENT",
              "MOVIE",
              "PRODUCT_TYPE_UNKNOWN",
              "RED",
              "SEASON",
              "SHOW",
              "UNPLUGGED"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListTransactionsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "results": {
          "items": {
            "$ref": "#/definitions/WalletTransaction"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ListTransactionsResponse1": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "transactions": {
          "items": {
            "$ref": "#/definitions/Transaction"
          },
          "type": "array"
        },
        "upcomingCharge": {
          "items": {
            "$ref": "#/definitions/Charge"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LocaleTransfer": {
      "properties": {
        "sourceLocale": {
          "type": "string"
        },
        "targetLocale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocalizedTimestamp": {
      "properties": {
        "timestamp": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "utcOffset": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LogDataAccessRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "event": {
          "enum": [
            "CLICK_TO_REVEAL_PHONE_NUMBER",
            "DATA_ACCESS_EVENT_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "LogResolutionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "resolutionEvent": {
          "$ref": "#/definitions/ResolutionEvent"
        }
      },
      "type": "object"
    },
    "LogTroubleshooterActivityRequest": {
      "properties": {
        "activity": {
          "$ref": "#/definitions/ResolutionActivity"
        },
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LookupGiftCardRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "lookupCriteria": {
          "$ref": "#/definitions/CardLookupCriteria"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LookupGiftCardResponse": {
      "properties": {
        "giftCard": {
          "$ref": "#/definitions/GiftCard"
        }
      },
      "type": "object"
    },
    "LostStolenDevice": {
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "deviceSku": {
          "type": "string"
        },
        "originalOrderId": {
          "type": "string"
        },
        "originalShipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LostStolenEligibility": {
      "properties": {
        "reasons": {
          "items": {
            "enum": [
              "DEVICE_ACTIVATED",
              "INELIGIBLE_REASON_NOT_SET",
              "TOO_MANY_CLAIMS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LostStolenRefundEligibility": {
      "properties": {
        "isEligible": {
          "type": "boolean"
        },
        "reasons": {
          "items": {
            "enum": [
              "DEVICE_ACTIVATED",
              "INELIGIBLE_REASON_NOT_SET",
              "TOO_MANY_CLAIMS"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LostStolenShipment": {
      "properties": {
        "originalOrderId": {
          "type": "string"
        },
        "originalShipmentId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MailingAddress": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressee": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "stateProvinceCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MarkOriginalDeviceReceivedRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MatchDetail": {
      "properties": {
        "matchPairs": {
          "items": {
            "$ref": "#/definitions/MatchPair"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "MatchPair": {
      "properties": {
        "matchTypes": {
          "items": {
            "enum": [
              "EXACT",
              "PREFIX",
              "SPELLING_CORRECTION",
              "STEMMING",
              "SYNONYM",
              "UNKNOWN_MATCH_TYPE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "matchedTerm": {
          "type": "string"
        },
        "queryTerm": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MobileScreenshareAcceptEvent": {
      "type": "object"
    },
    "MobileScreenshareAutoDeclineEvent": {
      "properties": {
        "declineType": {
          "enum": [
            "APP_UPDATE",
            "EXISTING_INVITATION",
            "NEWER_INVITATION",
            "SAFE_MODE",
            "UNKNOWN_AUTO_DECLINE_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "MobileScreenshareCancelEvent": {
      "type": "object"
    },
    "MobileScreenshareCleanupEvent": {
      "type": "object"
    },
    "MobileScreenshareConnectEvent": {
      "type": "object"
    },
    "MobileScreenshareDeclineEvent": {
      "type": "object"
    },
    "MobileScreenshareDisconnectEvent": {
      "type": "object"
    },
    "MobileScreenshareEndEvent": {
      "properties": {
        "agentEnded": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "MobileScreenshareEvent": {
      "properties": {
        "acceptEvent": {
          "$ref": "#/definitions/MobileScreenshareAcceptEvent"
        },
        "autoDeclineEvent": {
          "$ref": "#/definitions/MobileScreenshareAutoDeclineEvent"
        },
        "cancelEvent": {
          "$ref": "#/definitions/MobileScreenshareCancelEvent"
        },
        "cleanupEvent": {
          "$ref": "#/definitions/MobileScreenshareCleanupEvent"
        },
        "connectEvent": {
          "$ref": "#/definitions/MobileScreenshareConnectEvent"
        },
        "declineEvent": {
          "$ref": "#/definitions/MobileScreenshareDeclineEvent"
        },
        "disconnectEvent": {
          "$ref": "#/definitions/MobileScreenshareDisconnectEvent"
        },
        "endEvent": {
          "$ref": "#/definitions/MobileScreenshareEndEvent"
        },
        "initiateEvent": {
          "$ref": "#/definitions/MobileScreenshareInitiateEvent"
        },
        "invitationId": {
          "type": "string"
        },
        "inviteEvent": {
          "$ref": "#/definitions/MobileScreenshareInviteEvent"
        },
        "receivedEvent": {
          "$ref": "#/definitions/MobileScreenshareReceivedEvent"
        },
        "startingConnectEvent": {
          "$ref": "#/definitions/MobileScreenshareStartingConnectEvent"
        }
      },
      "type": "object"
    },
    "MobileScreenshareInitiateEvent": {
      "type": "object"
    },
    "MobileScreenshareInviteEvent": {
      "type": "object"
    },
    "MobileScreenshareReceivedEvent": {
      "type": "object"
    },
    "MobileScreenshareStartingConnectEvent": {
      "type": "object"
    },
    "Money": {
      "properties": {
        "currencyCode": {
          "type": "string"
        },
        "nanos": {
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "NeedsInfoRequest": {
      "type": "object"
    },
    "NeedsInfoResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Node": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        },
        "categoryName": {
          "type": "string"
        },
        "isInvalid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Node1": {
      "properties": {
        "isValid": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nodeId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node2": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node3": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node4": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Node5": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Note": {
      "properties": {
        "author": {
          "$ref": "#/definitions/Identity"
        },
        "inResponseTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "noteType": {
          "enum": [
            "PHONE",
            "RESOLUTION_EVENT",
            "UNKNOWN_NOTE_TYPE",
            "USER"
          ],
          "type": "string"
        },
        "payload": {
          "type": "string"
        },
        "recipients": {
          "items": {
            "$ref": "#/definitions/Identity"
          },
          "type": "array"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferedSolutionRequest": {
      "properties": {
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "OfferedSolutionResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Opportunity": {
      "properties": {
        "campaignName": {
          "type": "string"
        },
        "opportunityName": {
          "type": "string"
        },
        "opportunityType": {
          "enum": [
            "ACCOUNT_FEATURE_ADOPTION",
            "CAMPAIGN_GOAL",
            "UNKNOWN_OPPORTUNITY_TYPE"
          ],
          "type": "string"
        },
        "points": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Opportunity1": {
      "properties": {
        "campaigns": {
          "items": {
            "$ref": "#/definitions/Campaign"
          },
          "type": "array"
        },
        "category": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "opportunityType": {
          "enum": [
            "ACCOUNT_FEATURE_ADOPTION",
            "CAMPAIGN_GOAL",
            "UNKNOWN_OPPORTUNITY_TYPE"
          ],
          "type": "string"
        },
        "points": {
          "format": "int32",
          "type": "integer"
        },
        "rank": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Order": {
      "properties": {
        "checkoutOrderId": {
          "type": "string"
        },
        "finskyPurchaseId": {
          "type": "string"
        },
        "isNotRefundable": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "orderItems": {
          "items": {
            "$ref": "#/definitions/OrderItem"
          },
          "type": "array"
        },
        "orderValue": {
          "$ref": "#/definitions/Money"
        },
        "paymentMethod": {
          "enum": [
            "ACCOUNTING",
            "BILLING_ACCOUNT",
            "CARD",
            "CARRIER_BILLING",
            "DIRECT_DEBIT",
            "ELECTRONIC_FUNDS_TRANSFER",
            "GIFT_CARD",
            "MONETIZATION_CHANNEL",
            "PAYMENT_METHOD_UNSPECIFIED",
            "PAYPAL",
            "PROXY_CARD",
            "REDIRECT",
            "STORED_VALUE",
            "TERMS"
          ],
          "type": "string"
        },
        "paymentState": {
          "enum": [
            "ADDED",
            "CANCELLED",
            "CANCELLING",
            "CHARGEABLE",
            "CHARGED",
            "CHARGING",
            "COMPING",
            "CONTESTED",
            "CONTESTING",
            "ONE_SIDED_REFUNDED",
            "ONE_SIDED_REFUNDING",
            "PARTIAL_REFUNDING",
            "PAYMENT_DECLINED",
            "PAYMENT_STATE_UNSPECIFIED",
            "PENDING",
            "REFUNDED",
            "REFUNDING",
            "REJECTED",
            "REVIEW",
            "STUCK",
            "UNRECOVERABLE"
          ],
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        },
        "vertical": {
          "enum": [
            "ANDROID_APPS",
            "BOOKS",
            "COMMERCE",
            "DEVICES",
            "MAGAZINES",
            "MOVIES_AND_TV",
            "MULTI_CONTAINER",
            "MUSIC",
            "VERTICAL_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderItem": {
      "properties": {
        "contentType": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "offerType": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "vertical": {
          "enum": [
            "ANDROID_APPS",
            "BOOKS",
            "COMMERCE",
            "DEVICES",
            "MAGAZINES",
            "MOVIES_AND_TV",
            "MULTI_CONTAINER",
            "MUSIC",
            "VERTICAL_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderRefundStatusInfo": {
      "properties": {
        "order": {
          "$ref": "#/definitions/Order"
        },
        "statusMessage": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Path": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Path1": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/Node1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "Path2": {
      "properties": {
        "categoryIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentDetail": {
      "properties": {
        "instrumentDescription": {
          "type": "string"
        },
        "instrumentType": {
          "enum": [
            "BANK_ACCOUNT",
            "BILLING_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "FINANCING",
            "GOOGLE_STANDARD_TOKENIZED",
            "INSTRUMENT_TYPE_NOT_SET",
            "MONETIZATION_CHANNEL",
            "NETBANKING",
            "PAYPAL",
            "STORED_VALUE_CLOSED_LOOP_PLAY",
            "STORED_VALUE_OPEN_LOOP"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentDetail1": {
      "properties": {
        "instrumentDescription": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentInstrumentTypeInfo": {
      "properties": {
        "instrumentDescription": {
          "type": "string"
        },
        "instrumentTypeToken": {
          "type": "string"
        },
        "type": {
          "enum": [
            "BANK_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "OTHER",
            "PAYMENT_METHOD_TYPE_UNSPECIFIED",
            "PAYPAL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodHijackTransaction": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "date": {
          "$ref": "#/definitions/Date"
        }
      },
      "type": "object"
    },
    "PaymentsInfo": {
      "properties": {
        "numPaymentsAccounts": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PaymentsSuggestion": {
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Paypal": {
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Paypal1": {
      "properties": {
        "account": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Period": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "enum": [
            "DAY",
            "MONTH",
            "UNITS_UNKNOWN",
            "YEAR"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneCall": {
      "properties": {
        "callId": {
          "type": "string"
        },
        "countryCode": {
          "format": "int32",
          "type": "integer"
        },
        "obfuscatedLineNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneInfo": {
      "properties": {
        "ucid": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneNumber": {
      "properties": {
        "countryCode": {
          "format": "int32",
          "type": "integer"
        },
        "countryCodeSource": {
          "enum": [
            "COUNTRY_CODE_SOURCE_UNSPECIFIED",
            "FROM_DEFAULT_COUNTRY",
            "FROM_NUMBER_WITHOUT_PLUS_SIGN",
            "FROM_NUMBER_WITH_IDD",
            "FROM_NUMBER_WITH_PLUS_SIGN"
          ],
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "isValid": {
          "type": "boolean"
        },
        "lineNumber": {
          "type": "string"
        },
        "nationalNumber": {
          "format": "uint64",
          "type": "string"
        },
        "numberOfLeadingZeros": {
          "format": "int32",
          "type": "integer"
        },
        "preferredDomesticCarrierCode": {
          "type": "string"
        },
        "rawInput": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhoneSetting": {
      "properties": {
        "agentId": {
          "type": "string"
        },
        "extension": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PhysicalMailingAddress": {
      "properties": {
        "addressLine1": {
          "type": "string"
        },
        "addressLine2": {
          "type": "string"
        },
        "addressLine3": {
          "type": "string"
        },
        "addressee": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        },
        "stateProvinceCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Pitch": {
      "properties": {
        "opportunities": {
          "items": {
            "$ref": "#/definitions/Opportunity"
          },
          "type": "array"
        },
        "opportunitiesDisplayType": {
          "enum": [
            "APOLLO",
            "TRADITIONAL",
            "UNKNOWN_OPPORTUNITIES_DISPLAY_TYPE"
          ],
          "type": "string"
        },
        "program": {
          "$ref": "#/definitions/Program"
        },
        "totalPoints": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Pitch1": {
      "properties": {
        "campaignIndex": {
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "$ref": "#/definitions/PitchId"
        },
        "opportunityIndex": {
          "format": "int32",
          "type": "integer"
        },
        "opportunityType": {
          "enum": [
            "ACCOUNT_FEATURE_ADOPTION",
            "CAMPAIGN_GOAL",
            "UNKNOWN_OPPORTUNITY_TYPE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PitchId": {
      "properties": {
        "campaignId": {
          "format": "int64",
          "type": "string"
        },
        "opportunityId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Product": {
      "properties": {
        "agentCategories": {
          "items": {
            "$ref": "#/definitions/Category"
          },
          "type": "array"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "routingCategory": {
          "$ref": "#/definitions/Category"
        }
      },
      "type": "object"
    },
    "Product1": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Product2": {
      "properties": {
        "isPinned": {
          "type": "boolean"
        },
        "locales": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "routingTargets": {
          "items": {
            "$ref": "#/definitions/RoutingTarget"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ProductCount": {
      "properties": {
        "count": {
          "format": "int32",
          "type": "integer"
        },
        "productName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductTransfer": {
      "properties": {
        "sourceProduct": {
          "$ref": "#/definitions/Product"
        },
        "targetProduct": {
          "$ref": "#/definitions/Product"
        }
      },
      "type": "object"
    },
    "Program": {
      "properties": {
        "programName": {
          "type": "string"
        },
        "targetPoints": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Program1": {
      "properties": {
        "name": {
          "type": "string"
        },
        "targetPoints": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Property": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Purchase": {
      "properties": {
        "accessEndTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "cancelTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "eligibleForSelfServeRefund": {
          "type": "boolean"
        },
        "entitlementToken": {
          "type": "string"
        },
        "isPreorder": {
          "type": "boolean"
        },
        "isRefundable": {
          "type": "boolean"
        },
        "isRefunded": {
          "type": "boolean"
        },
        "isRevokable": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "paymentDescription": {
          "type": "string"
        },
        "paymentMethod": {
          "enum": [
            "BANK_ACCOUNT",
            "BILLING_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "FINANCING",
            "GOOGLE_STANDARD_TOKENIZED",
            "MONETIZATION_CHANNEL",
            "NETBANKING",
            "PAYMENT_METHOD_UNKNOWN",
            "PAYPAL",
            "STORED_VALUE_CLOSED_LOOP_PLAY",
            "STORED_VALUE_OPEN_LOOP"
          ],
          "type": "string"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "purchaseTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "purchaseType": {
          "enum": [
            "PURCHASE",
            "PURCHASE_TYPE_UNKNOWN",
            "RENTAL"
          ],
          "type": "string"
        },
        "qualityCap": {
          "enum": [
            "HD",
            "SD",
            "UHD",
            "UNKNOWN_CAP"
          ],
          "type": "string"
        },
        "source": {
          "enum": [
            "CONTENT_PURCHASE_SOURCE_UNKNOWN",
            "GOOGLE_PLAY",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "transactionAmount": {
          "$ref": "#/definitions/Money"
        },
        "transactionStatus": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "TRANSACTION_STATUS_UNKNOWN"
          ],
          "type": "string"
        },
        "transactionTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "transactionToken": {
          "type": "string"
        },
        "viewTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        }
      },
      "type": "object"
    },
    "PurchasedApp": {
      "properties": {
        "appId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchasedBook": {
      "properties": {
        "bookId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchasedVideo": {
      "properties": {
        "name": {
          "type": "string"
        },
        "purchaseTime": {
          "type": "string"
        },
        "videoId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuestionSet": {
      "properties": {
        "attemptsRemaining": {
          "format": "int32",
          "type": "integer"
        },
        "authenticationBankAccounts": {
          "items": {
            "$ref": "#/definitions/AuthenticationBankAccount"
          },
          "type": "array"
        },
        "authenticationCreditCards": {
          "items": {
            "$ref": "#/definitions/AuthenticationCreditCard1"
          },
          "type": "array"
        },
        "availableQuestions": {
          "items": {
            "enum": [
              "BANK_ACCOUNT",
              "CREDIT_CARD",
              "DCB",
              "PAYPAL",
              "PHONE_NUMBER",
              "PLAY_BALANCE",
              "POSTAL_CODE",
              "UNKNOWN_QUESTION",
              "WALLET_BALANCE"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "questionSetType": {
          "enum": [
            "PAYMENT_METHOD_QUESTION_SET",
            "PHONE_NUMBER_QUESTION_SET",
            "POSTAL_CODE_QUESTION_SET",
            "UNKNOWN_QUESTION_SET_TYPE"
          ],
          "type": "string"
        },
        "questions": {
          "items": {
            "$ref": "#/definitions/AvailableQuestion"
          },
          "type": "array"
        },
        "result": {
          "enum": [
            "FAIL",
            "PASS",
            "PENDING",
            "UNKNOWN_RESULT"
          ],
          "type": "string"
        },
        "totalNumberOfAttempts": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "QuestionSource": {
      "properties": {
        "questionSourceType": {
          "enum": [
            "FOCUS",
            "PAYMENTS",
            "UNKNOWN_QUESTION_SOURCE_TYPE"
          ],
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "QuickResponse": {
      "properties": {
        "quickResponseName": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReadCaseRequest": {
      "properties": {
        "readTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RealTime": {
      "properties": {
        "attributeMap": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "issue": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/RealTimePool"
        },
        "realTimeEvents": {
          "items": {
            "$ref": "#/definitions/RealTimeEvent"
          },
          "type": "array"
        },
        "requester": {
          "$ref": "#/definitions/Identity"
        }
      },
      "type": "object"
    },
    "RealTimeEvent": {
      "properties": {
        "chatMessage": {
          "$ref": "#/definitions/ChatMessage"
        },
        "createTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RealTimePool": {
      "properties": {
        "poolId": {
          "type": "string"
        },
        "poolName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RealTimeSetting": {
      "properties": {
        "agentSettingId": {
          "type": "string"
        },
        "enableChatQueueSounds": {
          "type": "boolean"
        },
        "enableModalChatNotifications": {
          "type": "boolean"
        },
        "forceChatQueueNotifications": {
          "type": "boolean"
        },
        "gaiaRobotEntityId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "plusPageEntityId": {
          "type": "string"
        },
        "quickResponses": {
          "items": {
            "$ref": "#/definitions/QuickResponse"
          },
          "type": "array"
        },
        "realTimeSettingId": {
          "type": "string"
        },
        "supportIdentityType": {
          "enum": [
            "GAIA_ROBOT",
            "PLUS_PAGE",
            "UNKNOWN_SUPPORT_IDENTITY_TYPE"
          ],
          "type": "string"
        },
        "switchCaseOnChatFocus": {
          "type": "boolean"
        },
        "useSupportIdentity": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RecentlyViewedSource": {
      "type": "object"
    },
    "RedSignals": {
      "properties": {
        "source": {
          "enum": [
            "FAMILY_MEMBER",
            "GOOGLE_PLAY",
            "ITUNES",
            "OTHER",
            "RED_SOURCE_UNKNOWN",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "subscriptionSignals": {
          "$ref": "#/definitions/SubscriptionSignals"
        }
      },
      "type": "object"
    },
    "RedeemGiftCardRequest": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "redemptionToken": {
          "$ref": "#/definitions/RedemptionToken"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RedeemGiftCardResponse": {
      "properties": {
        "amountRedeemed": {
          "$ref": "#/definitions/Money"
        },
        "availableBalance": {
          "$ref": "#/definitions/Money"
        },
        "redemptionStatus": {
          "enum": [
            "CURRENCY_MISMATCH",
            "CUSTOMER_CONTROLS_FORBID",
            "EXCEEDS_BALANCE_LIMITS",
            "MULTIPLE_PAYMENT_ACCOUNTS",
            "NO_STORED_VALUE_INSTRUMENT",
            "REDEMPTION_STATUS_UNSPECIFIED",
            "SUCCESS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RedemptionToken": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundDetail": {
      "properties": {
        "paymentDetail": {
          "$ref": "#/definitions/PaymentDetail1"
        },
        "refundEntries": {
          "items": {
            "$ref": "#/definitions/RefundEntry"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "DELIVERY_RETURNED",
            "EXTENDED_WARRANTY_CANCELATION",
            "IN_BOX_ACCESSORIES",
            "LOST_STOLEN",
            "OTHER",
            "PRICE_PROTECTION",
            "REFUND_REASON_NOT_SET",
            "RMA",
            "SHIPPING",
            "TAX_EXEMPT",
            "UNDELIVERABLE"
          ],
          "type": "string"
        },
        "refundTotal": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "RefundEntry": {
      "properties": {
        "refundAmount": {
          "$ref": "#/definitions/Money"
        },
        "refundDescription": {
          "type": "string"
        },
        "refundRequestTime": {
          "type": "string"
        },
        "refundTime": {
          "type": "string"
        },
        "status": {
          "enum": [
            "REFUNDED",
            "REFUND_ERROR",
            "REFUND_PENDING",
            "REFUND_PENDING_RETURN",
            "REFUND_PENDING_STUCK",
            "STATUS_NOT_SET"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundHardwareOrderRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoTicket": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundHardwareOrderResponse": {
      "properties": {
        "reason": {
          "enum": [
            "FAILURE_REASON_NOT_SET",
            "REQUEST_ALREADY_EXISTS"
          ],
          "type": "string"
        },
        "refundId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundHistorySummaryInfo": {
      "properties": {
        "numberOfRefunds": {
          "format": "int32",
          "type": "integer"
        },
        "productType": {
          "enum": [
            "BUNDLE",
            "LIVE_EVENT",
            "MOVIE",
            "PRODUCT_TYPE_UNKNOWN",
            "RED",
            "SEASON",
            "SHOW",
            "UNPLUGGED"
          ],
          "type": "string"
        },
        "refundResult": {
          "enum": [
            "ALREADY_REFUNDED",
            "DENIED_CUSTOMER_ABUSE",
            "DENIED_FRAUD",
            "DENIED_REFUND_EXCEEDS_COURTESY_LIMIT",
            "ISSUED",
            "PERMANENT_REFUND_FAILED",
            "REFUND_RESULT_UNKNOWN",
            "REFUND_RETRIABLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "orders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "refundReason": {
          "enum": [
            "ACCIDENTAL_PURCHASE",
            "DEFECTIVE",
            "DID_NOT_RECEIVE",
            "FRAUD",
            "FRIENDLY_FRAUD",
            "REFUND_REASON_UNSPECIFIED",
            "REMORSE"
          ],
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundOrdersResponse": {
      "properties": {
        "approvedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "approvedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "escalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "escalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "failedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "failedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "inProgress": {
          "type": "boolean"
        },
        "inProgressOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "inProgressOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "optionalEscalateOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "optionalEscalateOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "processLaterOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "processLaterOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "rejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        },
        "rejectedOrders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        },
        "sidewinderRejectedOrderInfos": {
          "items": {
            "$ref": "#/definitions/OrderRefundStatusInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundTransactionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "forceRefund": {
          "type": "boolean"
        },
        "refundRequestEntries": {
          "items": {
            "$ref": "#/definitions/TransactionRefundRequestEntry"
          },
          "type": "array"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundTransactionsResponse": {
      "properties": {
        "refundStatuses": {
          "items": {
            "$ref": "#/definitions/TransactionRefundResponseStatus"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RelatedCommunications": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "communications": {
          "items": {
            "$ref": "#/definitions/Communication"
          },
          "type": "array"
        },
        "relations": {
          "items": {
            "$ref": "#/definitions/Relation1"
          },
          "type": "array"
        },
        "slaTime": {
          "type": "string"
        },
        "state": {
          "enum": [
            "ASSIGNED",
            "BLOCKED_BY",
            "FINISHED",
            "IN_CONSULT",
            "NEED_INFO",
            "NEW",
            "SOLUTION_OFFERED",
            "UNASSIGNED",
            "UNKNOWN_CASE_STATE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Relation": {
      "properties": {
        "duplicate": {
          "$ref": "#/definitions/Duplicate"
        }
      },
      "type": "object"
    },
    "Relation1": {
      "properties": {
        "borgAlertId": {
          "type": "string"
        },
        "buganizerId": {
          "format": "int64",
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "legalId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pcrId": {
          "format": "int32",
          "type": "integer"
        },
        "sourceCaseId": {
          "type": "string"
        },
        "sourceCommunicationId": {
          "type": "string"
        },
        "spixerId": {
          "type": "string"
        },
        "state": {
          "enum": [
            "PENDING",
            "RESOLVED",
            "UNKNOWN_RELATION_STATUS"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "BLOCKING",
            "CONSULT",
            "DUPLICATE",
            "SPLIT",
            "UNKNOWN_RELATION_TYPE"
          ],
          "type": "string"
        },
        "walletPaymentMethodHijackReviewIds": {
          "$ref": "#/definitions/WalletPaymentMethodHijackReviewIds"
        },
        "walletSignInReviewIds": {
          "$ref": "#/definitions/WalletSignInReviewIds"
        }
      },
      "type": "object"
    },
    "ReleaseRequest": {
      "type": "object"
    },
    "ReleaseResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "ReplacementDetail": {
      "properties": {
        "shipments": {
          "items": {
            "$ref": "#/definitions/ReplacementShipment"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ReplacementDevice": {
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "countryExceptionEligible": {
          "type": "boolean"
        },
        "device": {
          "type": "string"
        },
        "gpn": {
          "type": "string"
        },
        "rmaType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReplacementShipment": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "INITIATE_RMA",
              "INVESTIGATE_AUTH_HOLD",
              "INVESTIGATE_SHIPPING",
              "REPLACEMENT_SHIPMENT_ACTION_NOT_SET",
              "REVIEW_RMA",
              "SEND_SHIPMENT_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "actualDeliveryTime": {
          "type": "string"
        },
        "actualShipDate": {
          "$ref": "#/definitions/Date"
        },
        "carrierName": {
          "type": "string"
        },
        "estimatedDeliveryEndDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedDeliveryStartDate": {
          "$ref": "#/definitions/Date"
        },
        "isPastEstimatedDeliveryDate": {
          "type": "boolean"
        },
        "lastEventTime": {
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/LineItem"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "DELIVERED",
            "ERROR",
            "IN_TRANSIT",
            "NOT_SHIPPED",
            "REPLACEMENT_SHIPMENT_STATE_NOT_SET",
            "REPLACEMENT_SHIPMENT_STATE_UNKNOWN"
          ],
          "type": "string"
        },
        "trackingNumber": {
          "type": "string"
        },
        "trackingUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestDeviceSignalsAcceptEvent": {
      "properties": {
        "deviceId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RequestDeviceSignalsCancelEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsCleanupEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsDeclineEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsEvent": {
      "properties": {
        "acceptEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsAcceptEvent"
        },
        "cancelEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsCancelEvent"
        },
        "cleanupEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsCleanupEvent"
        },
        "declineEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsDeclineEvent"
        },
        "initiateEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsInitiateEvent"
        },
        "invitationId": {
          "type": "string"
        },
        "inviteEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsInviteEvent"
        },
        "receivedEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsReceivedEvent"
        },
        "timeoutEvent": {
          "$ref": "#/definitions/RequestDeviceSignalsTimeoutEvent"
        }
      },
      "type": "object"
    },
    "RequestDeviceSignalsInitiateEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsInviteEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsReceivedEvent": {
      "type": "object"
    },
    "RequestDeviceSignalsTimeoutEvent": {
      "type": "object"
    },
    "Requirement": {
      "properties": {
        "requirementType": {
          "enum": [
            "INTERNET",
            "OPERATE",
            "REQUIREMENT_NOT_SET"
          ],
          "type": "string"
        },
        "snippetId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Resolution": {
      "properties": {
        "cannedResponse": {
          "$ref": "#/definitions/CannedResponse1"
        },
        "helpCenter": {
          "$ref": "#/definitions/HelpCenterContent2"
        },
        "matchReason": {
          "type": "string"
        },
        "matchTerms": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "postActions": {
          "items": {
            "$ref": "#/definitions/Action"
          },
          "type": "array"
        },
        "preActions": {
          "items": {
            "$ref": "#/definitions/Action"
          },
          "type": "array"
        },
        "score": {
          "format": "int32",
          "type": "integer"
        },
        "snippet": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "troubleshooter": {
          "$ref": "#/definitions/TroubleShooter"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow1"
        }
      },
      "type": "object"
    },
    "Resolution1": {
      "properties": {
        "helpCenterContent": {
          "$ref": "#/definitions/HelpCenterContent3"
        },
        "score": {
          "format": "float",
          "type": "number"
        },
        "status": {
          "enum": [
            "ESCALATED",
            "FAILED",
            "RESOLUTION_STATUS_NOT_SET",
            "SUCCEEDED"
          ],
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResolutionActivity": {
      "properties": {
        "helpCenterArticleId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "ESCALATED",
            "FAILED",
            "RESOLUTION_STATUS_NOT_SET",
            "SUCCEEDED"
          ],
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResolutionEvent": {
      "properties": {
        "articleId": {
          "type": "string"
        },
        "categories": {
          "items": {
            "$ref": "#/definitions/CategoryPath1"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "resolutionId": {
          "type": "string"
        },
        "troubleshooterId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ResolutionOpened": {
      "properties": {
        "agentActivitySource": {
          "$ref": "#/definitions/AgentActivitySource"
        },
        "cannedResponse": {
          "$ref": "#/definitions/CannedResponse"
        },
        "deepLinkSource": {
          "$ref": "#/definitions/HelpCenterDeepLinkSource"
        },
        "helpCenterContent": {
          "$ref": "#/definitions/HelpCenterContent"
        },
        "recentlyViewedSource": {
          "$ref": "#/definitions/RecentlyViewedSource"
        },
        "searchSource": {
          "$ref": "#/definitions/ResolutionSearchSource"
        },
        "workflow": {
          "$ref": "#/definitions/Workflow"
        }
      },
      "type": "object"
    },
    "ResolutionSearchSource": {
      "properties": {
        "query": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReviewKey": {
      "properties": {
        "review3Id": {
          "type": "string"
        },
        "reviewId": {
          "type": "string"
        },
        "targetUnderReview": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Rma": {
      "properties": {
        "addressUpdateable": {
          "type": "boolean"
        },
        "bizappSubmitted": {
          "type": "boolean"
        },
        "caseId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "exchangeDeviceName": {
          "type": "string"
        },
        "exchangeGpn": {
          "type": "string"
        },
        "extendedWarrantyClaimId": {
          "type": "string"
        },
        "failureReason": {
          "type": "string"
        },
        "failureType": {
          "enum": [
            "FAILURE_TYPE_NOT_SET",
            "FAILURE_TYPE_UNKNOWN",
            "NOTES_INVALID",
            "PHONE_NUMBER_INVALID",
            "RMA_ALREADY_OPEN_FOR_ASSET",
            "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
            "SHIPPING_ADDRESS_CITY_INVALID",
            "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
            "SHIPPING_ADDRESS_INVALID",
            "SHIPPING_ADDRESS_LINE_1_INVALID",
            "SHIPPING_ADDRESS_LINE_2_INVALID",
            "SHIPPING_ADDRESS_LINE_3_INVALID",
            "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
            "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
            "WALLET_ACCOUNT_REQUIRED"
          ],
          "type": "string"
        },
        "failures": {
          "items": {
            "$ref": "#/definitions/RmaFailure"
          },
          "type": "array"
        },
        "gpn": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "orderNumber": {
          "type": "string"
        },
        "packingLabelRequired": {
          "type": "boolean"
        },
        "reasonCodeIdentifier": {
          "type": "string"
        },
        "replacementCartLink": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "rmaCategory": {
          "type": "string"
        },
        "rmaId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "rmaSubcategory": {
          "type": "string"
        },
        "rmaType": {
          "type": "string"
        },
        "shipmentId": {
          "type": "string"
        },
        "shippingAddress": {
          "$ref": "#/definitions/MailingAddress"
        },
        "shippingLabelRequired": {
          "type": "boolean"
        },
        "shippingProvider": {
          "enum": [
            "FEDEX",
            "UNKNOWN_SHIPPING_PROVIDER",
            "UPS"
          ],
          "type": "string"
        },
        "shippingTrackingNumber": {
          "type": "string"
        },
        "state": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_SUBMITTED",
            "UNKNOWN_RMA_STATE"
          ],
          "type": "string"
        },
        "submitTime": {
          "type": "string"
        },
        "warrantyException": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaCategory": {
      "properties": {
        "categoryName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "reasonCodes": {
          "items": {
            "$ref": "#/definitions/RmaReasonCode"
          },
          "type": "array"
        },
        "subcategories": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RmaDescription": {
      "properties": {
        "notes": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "rmaCategory": {
          "type": "string"
        },
        "rmaSubcategory": {
          "type": "string"
        },
        "rmaType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaDevice": {
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "hashedFullDeviceId": {
          "type": "string"
        },
        "shipmentInfo": {
          "$ref": "#/definitions/ShippingInfo1"
        }
      },
      "type": "object"
    },
    "RmaFailure": {
      "properties": {
        "failureExceptionMessage": {
          "type": "string"
        },
        "failureType": {
          "enum": [
            "FAILURE_TYPE_NOT_SET",
            "FAILURE_TYPE_UNKNOWN",
            "NOTES_INVALID",
            "PHONE_NUMBER_INVALID",
            "RMA_ALREADY_OPEN_FOR_ASSET",
            "SHIPPING_ADDRESS_ADDRESSEE_INVALID",
            "SHIPPING_ADDRESS_CITY_INVALID",
            "SHIPPING_ADDRESS_COUNTRY_CODE_INVALID",
            "SHIPPING_ADDRESS_INVALID",
            "SHIPPING_ADDRESS_LINE_1_INVALID",
            "SHIPPING_ADDRESS_LINE_2_INVALID",
            "SHIPPING_ADDRESS_LINE_3_INVALID",
            "SHIPPING_ADDRESS_POSTAL_CODE_INVALID",
            "SHIPPING_ADDRESS_STATE_PROVINCE_CODE_INVALID",
            "WALLET_ACCOUNT_REQUIRED"
          ],
          "type": "string"
        },
        "validationReason": {
          "enum": [
            "INVALID",
            "TOO_LONG",
            "VALIDATION_FAILURE_NOT_SET"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaIdentifier": {
      "properties": {
        "rmaId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaInfo": {
      "properties": {
        "originalRmaNumber": {
          "type": "string"
        },
        "originalRmaState": {
          "enum": [
            "RMA_CANCELLED",
            "RMA_COMPLETED",
            "RMA_INCOMPLETE",
            "RMA_PENDING",
            "RMA_STATE_NOT_SET",
            "RMA_SUBMITTED"
          ],
          "type": "string"
        },
        "replacementRmaNumber": {
          "type": "string"
        },
        "rmaAction": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "RMA_ACTION_NOT_SET",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaOrderDetail": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "ACTION_NOT_SET",
              "CANCEL_AUTH_HOLD",
              "CANCEL_RMA",
              "MARK_ORIGINAL_DEVICE_RECEIVED_IN_STANDARD_EXCHANGE",
              "OTHER_ACTIONS_REQUIRE_AUTH",
              "REGENERATE_CART_LINK",
              "RESEND_PACKING_LABEL",
              "RESEND_SHIPPING_LABEL",
              "SEND_STATUS"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "authHold": {
          "type": "boolean"
        },
        "description": {
          "$ref": "#/definitions/RmaDescription"
        },
        "originalDevice": {
          "$ref": "#/definitions/RmaDevice"
        },
        "originalOrderId": {
          "type": "string"
        },
        "originalShipmentId": {
          "type": "string"
        },
        "refundDetails": {
          "$ref": "#/definitions/RefundDetail"
        },
        "replacementDevice": {
          "$ref": "#/definitions/RmaDevice"
        },
        "replacementOrderId": {
          "type": "string"
        },
        "replacementShipmentId": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCEL_AUTH_HOLD_PENDING",
            "CLOSED",
            "PENDING_RETURN",
            "RECEIVED_OLD_DEVICE",
            "REFUND_PENDING",
            "RMA_INCOMPLETE",
            "STATUS_NOT_SET",
            "STATUS_UNAVAILABLE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaReasonCode": {
      "properties": {
        "id": {
          "type": "string"
        },
        "subcategory": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RmaType": {
      "properties": {
        "actions": {
          "items": {
            "enum": [
              "ADVANCED_EXCHANGE",
              "EXCHANGE",
              "EXCHANGE_WITHOUT_RETURN",
              "REPAIR",
              "RETURN",
              "UNKNOWN_ACTION",
              "WARRANTY_REFUND"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "rmaCategories": {
          "items": {
            "$ref": "#/definitions/RmaCategory"
          },
          "type": "array"
        },
        "typeName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RouteRequest": {
      "properties": {
        "locale": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "routingId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RouteResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "RoutingInfo": {
      "properties": {
        "agentTransfer": {
          "$ref": "#/definitions/AgentTransfer"
        },
        "chatTransfer": {
          "$ref": "#/definitions/ChatTransfer"
        },
        "localeTransfer": {
          "$ref": "#/definitions/LocaleTransfer"
        },
        "productTransfer": {
          "$ref": "#/definitions/ProductTransfer"
        },
        "routingTargetName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RoutingTarget": {
      "properties": {
        "chat": {
          "$ref": "#/definitions/Chat1"
        },
        "email": {
          "$ref": "#/definitions/Email2"
        },
        "targetId": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RunRmaStepsRequest": {
      "properties": {
        "action": {
          "enum": [
            "ADVANCED_EXCHANGE",
            "EXCHANGE",
            "EXCHANGE_WITHOUT_RETURN",
            "REPAIR",
            "RETURN",
            "UNKNOWN_ACTION",
            "WARRANTY_REFUND"
          ],
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "draftMessageId": {
          "type": "string"
        },
        "shippingAddress": {
          "$ref": "#/definitions/MailingAddress"
        },
        "skipAddressValidation": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        },
        "steps": {
          "items": {
            "enum": [
              "GENERATE_PACKING_LABEL_STEP",
              "GENERATE_REPLACEMENT_CART_LINK_STEP",
              "GENERATE_SHIPPING_LABEL_STEP",
              "RMA_RUN_STEP_NOT_SET",
              "UNKNOWN_RMA_STEP",
              "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL_STEP"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RunRmaStepsResponse": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "RunWorkflowRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "draftMessageId": {
          "type": "string"
        },
        "rmaId": {
          "type": "string"
        },
        "rmaNumber": {
          "type": "string"
        },
        "shippingAddress": {
          "$ref": "#/definitions/MailingAddress"
        },
        "ssoCookie": {
          "type": "string"
        },
        "steps": {
          "items": {
            "enum": [
              "GENERATE_PACKING_LABEL",
              "GENERATE_REPLACEMENT_CART_LINK",
              "GENERATE_SHIPPING_LABEL",
              "SUBMIT_RMA",
              "UNKNOWN_FLOW",
              "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RunWorkflowResponse": {
      "properties": {
        "result": {
          "$ref": "#/definitions/WorkflowResult"
        }
      },
      "type": "object"
    },
    "SaveRmaRequest": {
      "properties": {
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "SaveRmaResponse": {
      "properties": {
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "Search": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "searchId": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchAccountReviewsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchAccountReviewsResponse": {
      "properties": {
        "review": {
          "items": {
            "$ref": "#/definitions/AccountReview"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchCategoryInfosResponse": {
      "properties": {
        "categoryInfos": {
          "items": {
            "$ref": "#/definitions/CategoryInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchCount": {
      "properties": {
        "casesType": {
          "enum": [
            "ASSIGNED",
            "UNKNOWN_CASE_TYPE",
            "WAITING"
          ],
          "type": "string"
        },
        "dueByStatus": {
          "enum": [
            "NONE",
            "OVERDUE",
            "UNKNOWN_DUE_BY_STATUS",
            "URGENT"
          ],
          "type": "string"
        },
        "searchCount": {
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchMultipleCategoryInfosRequest": {
      "properties": {
        "filterConsultCategories": {
          "type": "boolean"
        },
        "maximumResults": {
          "format": "int32",
          "type": "integer"
        },
        "productIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "query": {
          "type": "string"
        },
        "topCategoryPaths": {
          "items": {
            "$ref": "#/definitions/CategoryPath"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchOrdersRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "customerEmail": {
          "type": "string"
        },
        "endAmount": {
          "$ref": "#/definitions/Money"
        },
        "endDate": {
          "type": "string"
        },
        "includeFreeOrders": {
          "type": "boolean"
        },
        "instrumentLastFourCharacters": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer"
        },
        "pageToken": {
          "type": "string"
        },
        "q": {
          "type": "string"
        },
        "queryId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "startAmount": {
          "$ref": "#/definitions/Money"
        },
        "startDate": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SearchOrdersResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "orders": {
          "items": {
            "$ref": "#/definitions/Order"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SearchSetting": {
      "properties": {
        "activeTeamSearches": {
          "items": {
            "$ref": "#/definitions/TeamSearches"
          },
          "type": "array"
        },
        "disabledTeamSearches": {
          "items": {
            "$ref": "#/definitions/TeamSearches"
          },
          "type": "array"
        },
        "enableAssignStream": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SendEmailRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "sendDelay": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SendEmailResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "SendRmaRequest": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        },
        "skipAddressValidation": {
          "type": "boolean"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SendRmaResponse": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "SetCallbackNumberRequest": {
      "properties": {
        "phoneNumber": {
          "$ref": "#/definitions/PhoneNumber"
        }
      },
      "type": "object"
    },
    "SetCallbackNumberResponse": {
      "type": "object"
    },
    "Settings": {
      "properties": {
        "authenticationSettings": {
          "$ref": "#/definitions/AuthenticationSettings"
        },
        "consultSettings": {
          "$ref": "#/definitions/ConsultSettings"
        },
        "displayName": {
          "type": "string"
        },
        "dueTimeCalculationMethod": {
          "enum": [
            "DUE_TIME_CALCULATION_METHOD_NOT_SET",
            "RESOLUTION_TARGET",
            "SLA"
          ],
          "type": "string"
        },
        "easterEggSettings": {
          "$ref": "#/definitions/EasterEggSettings"
        },
        "escalateSettings": {
          "$ref": "#/definitions/EscalateSettings"
        },
        "externalToolSettings": {
          "$ref": "#/definitions/ExternalToolSettings"
        },
        "feedbackProductId": {
          "type": "string"
        },
        "issueCategorySettings": {
          "$ref": "#/definitions/IssueCategorySettings"
        },
        "name": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "productName": {
          "type": "string"
        },
        "supportedLocales": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ShippingAddress": {
      "properties": {
        "address": {
          "$ref": "#/definitions/PhysicalMailingAddress"
        },
        "addressLines": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ShippingCustomerName": {
      "properties": {
        "customerName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingCustomerPhoneNumber": {
      "properties": {
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingInfo": {
      "properties": {
        "actualDeliveryTime": {
          "type": "string"
        },
        "actualShipDate": {
          "$ref": "#/definitions/Date"
        },
        "carrierName": {
          "type": "string"
        },
        "estimatedDeliveryEndDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedDeliveryStartDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedShipDate": {
          "$ref": "#/definitions/Date"
        },
        "isDelivered": {
          "type": "boolean"
        },
        "isPastEstimatedDeliveryDate": {
          "type": "boolean"
        },
        "lastEventTime": {
          "type": "string"
        },
        "shippingType": {
          "enum": [
            "BUDGET_GROUND",
            "GROUND",
            "INTERNATIONAL_PRIORITY",
            "OVERNIGHT",
            "SHIPPING_TYPE_NOT_SET",
            "STANDARD",
            "TWO_DAY_AIR"
          ],
          "type": "string"
        },
        "totalAmount": {
          "$ref": "#/definitions/Money"
        },
        "trackingNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingInfo1": {
      "properties": {
        "actualDeliveryTime": {
          "type": "string"
        },
        "actualShipDate": {
          "$ref": "#/definitions/Date"
        },
        "carrierName": {
          "type": "string"
        },
        "estimatedDeliveryEndDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedDeliveryStartDate": {
          "$ref": "#/definitions/Date"
        },
        "estimatedShipDate": {
          "$ref": "#/definitions/Date"
        },
        "shipmentState": {
          "enum": [
            "NOT_YET_SHIPPED",
            "SHIPMENT_ERROR",
            "SHIPPED",
            "SHIPPING_INFO_STATE_NOT_SET"
          ],
          "type": "string"
        },
        "trackingNumber": {
          "type": "string"
        },
        "trackingUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShmoovieSignals": {
      "properties": {
        "episode": {
          "type": "string"
        },
        "expireTimeFromPurchaseTime": {
          "type": "string"
        },
        "localizedExpireTimeFromPurchaseTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedRentalExpireTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedRentalStartWatchByTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedRentalStartWatchTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "model": {
          "enum": [
            "PURCHASE",
            "RENTAL",
            "SELLING_MODEL_UNKNOWN"
          ],
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "rentalExpireTime": {
          "type": "string"
        },
        "rentalStartWatchByTime": {
          "type": "string"
        },
        "rentalStartWatchTime": {
          "type": "string"
        },
        "season": {
          "type": "string"
        },
        "source": {
          "enum": [
            "GOOGLE_PLAY",
            "SHMOOVIE_SOURCE_UNKNOWN",
            "YOUTUBE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShowSummaryAction": {
      "properties": {
        "accountInfo": {
          "items": {
            "enum": [
              "ACCOUNT_INFO_UNSPECIFIED",
              "ALERT_REVIEW"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "declinedTxCount": {
          "format": "int32",
          "type": "integer"
        },
        "pendingTxCount": {
          "format": "int32",
          "type": "integer"
        },
        "recentStartTime": {
          "type": "string"
        },
        "rejectedTxCount": {
          "format": "int32",
          "type": "integer"
        },
        "searchContext": {
          "type": "string"
        },
        "transactionNotFoundDifmId": {
          "format": "int32",
          "type": "integer"
        },
        "transactionNotFoundScriptId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SidewinderRole": {
      "properties": {
        "isOnsite": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Source": {
      "properties": {
        "agentEmailAddress": {
          "type": "string"
        },
        "atlasProduct": {
          "type": "string"
        },
        "casesService": {
          "enum": [
            "BACKEND",
            "CHAT",
            "EMAIL_PROCESSOR",
            "FINISHER",
            "OUTBOX_SENDER",
            "QUALITY_REVIEW_SELECTOR",
            "UNKNOWN_CASES_SERVICE",
            "WIPEOUT"
          ],
          "type": "string"
        },
        "externalService": {
          "enum": [
            "CUF",
            "MEDLEY",
            "MOJO",
            "UDS",
            "UNKNOWN_EXTERNAL_SERVICE"
          ],
          "type": "string"
        },
        "robotEmailAddress": {
          "type": "string"
        },
        "routingRuleId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SpamRequest": {
      "type": "object"
    },
    "SpamResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "SplitRequest": {
      "properties": {
        "communicationId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SplitResponse": {
      "properties": {
        "sourceCase": {
          "$ref": "#/definitions/Case"
        },
        "targetCase": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "SplitTender": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "instrument": {
          "type": "string"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "UNKNOWN_WALLET_TRANSACTION_STATUS"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Status": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "additionalProperties": {},
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "StepResult": {
      "properties": {
        "errorMessage": {
          "type": "string"
        },
        "status": {
          "enum": [
            "FAILED",
            "NOT_PROCESSED",
            "SUCCESSFUL",
            "UNKNOWN_STEP_STATUS"
          ],
          "type": "string"
        },
        "step": {
          "enum": [
            "GENERATE_PACKING_LABEL",
            "GENERATE_REPLACEMENT_CART_LINK",
            "GENERATE_SHIPPING_LABEL",
            "SUBMIT_RMA",
            "UNKNOWN_FLOW",
            "UPDATE_ADDRESS_AND_SEND_SHIPPING_EMAIL"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubmitRmaRequest": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubmitRmaResponse": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "isDraftMessageUpdated": {
          "type": "boolean"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        }
      },
      "type": "object"
    },
    "Subscription": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "billingPeriod": {
          "enum": [
            "BILLING_PERIOD_UNSPECIFIED",
            "DAY",
            "HOUR",
            "MONTH",
            "SEASONAL",
            "SIX_MONTHS",
            "THREE_MONTHS",
            "WEEK",
            "YEAR"
          ],
          "type": "string"
        },
        "cancelDate": {
          "type": "string"
        },
        "docid": {
          "$ref": "#/definitions/Docid"
        },
        "firstChargedDate": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isTrial": {
          "type": "boolean"
        },
        "offerType": {
          "enum": [
            "BUNDLED",
            "GROUP_LICENSE",
            "LICENSE",
            "NONE",
            "OFFER_TYPE_UNSPECIFIED",
            "PREORDER",
            "PURCHASE",
            "PURCHASE_HIGH_DEF",
            "RENTAL",
            "RENTAL_HIGH_DEF",
            "SAMPLE",
            "SUBSCRIPTION",
            "SUBSCRIPTION_CONTENT"
          ],
          "type": "string"
        },
        "paymentDeclinedDate": {
          "type": "string"
        },
        "purchaseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "renewDate": {
          "type": "string"
        },
        "state": {
          "enum": [
            "ACTIVE",
            "CANCELED",
            "EXPIRED",
            "IN_GRACE_PERIOD",
            "SUBSCRIPTION_STATE_UNSPECIFIED"
          ],
          "type": "string"
        },
        "terminateDate": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "vertical": {
          "enum": [
            "ANDROID_APPS",
            "BOOKS",
            "COMMERCE",
            "DEVICES",
            "MAGAZINES",
            "MOVIES_AND_TV",
            "MULTI_CONTAINER",
            "MUSIC",
            "VERTICAL_UNSPECIFIED"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubscriptionComponent": {
      "properties": {
        "componentData": {
          "$ref": "#/definitions/ComponentData"
        },
        "name": {
          "type": "string"
        },
        "token": {
          "$ref": "#/definitions/ComponentToken"
        }
      },
      "type": "object"
    },
    "SubscriptionSignals": {
      "properties": {
        "featureExpireTime": {
          "type": "string"
        },
        "freeTrialPeriod": {
          "$ref": "#/definitions/Period"
        },
        "introductoryPeriod": {
          "$ref": "#/definitions/Period"
        },
        "introductoryPrice": {
          "$ref": "#/definitions/Money"
        },
        "localizedFeatureExpireTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedNextPaymentTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "nextPaymentTime": {
          "type": "string"
        },
        "pricePerMonth": {
          "$ref": "#/definitions/Money"
        }
      },
      "type": "object"
    },
    "SuggestNewEmailHeadersResponse": {
      "properties": {
        "fromHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "toHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestNoteHeadersResponse": {
      "properties": {
        "fromHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "toHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestPaymentInstrumentIssuerResponse": {
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "#/definitions/PaymentsSuggestion"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestReplyEmailHeadersResponse": {
      "properties": {
        "ccHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "fromHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        },
        "toHeaders": {
          "items": {
            "$ref": "#/definitions/Contact"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestResolutionsRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuggestResolutionsResponse": {
      "properties": {
        "resolutions": {
          "items": {
            "$ref": "#/definitions/SuggestedResolution"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "SuggestedResolution": {
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CANNED_RESPONSE",
            "EXTERNAL_HC",
            "INTERNAL_HC",
            "SUGGESTED_RESOLUTION_TYPE_UNSPECIFIED",
            "TROUBLESHOOTER",
            "WORKFLOW"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SummarizeResponse": {
      "properties": {
        "adwordsCid": {
          "type": "boolean"
        },
        "emailAddress": {
          "type": "boolean"
        },
        "summary": {
          "$ref": "#/definitions/Summary"
        }
      },
      "type": "object"
    },
    "Summary": {
      "properties": {
        "casesByChannel": {
          "items": {
            "$ref": "#/definitions/ChannelCount"
          },
          "type": "array"
        },
        "casesByProduct": {
          "items": {
            "$ref": "#/definitions/ProductCount"
          },
          "type": "array"
        },
        "mostRecentClosedCase": {
          "$ref": "#/definitions/Interaction"
        },
        "mostRecentOpenCase": {
          "$ref": "#/definitions/Interaction"
        },
        "openCases": {
          "$ref": "#/definitions/InteractionCount"
        },
        "totalCases": {
          "$ref": "#/definitions/InteractionCount"
        }
      },
      "type": "object"
    },
    "SupportLink": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "linkUrl": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TakeRequest": {
      "type": "object"
    },
    "TakeResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "Tax": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "type": {
          "enum": [
            "SALES_TAX",
            "TELECOM_TAX",
            "UNKNOWN_TAX"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "Team": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TeamSearches": {
      "properties": {
        "searchIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Timezone": {
      "properties": {
        "utcOffset": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "Transaction": {
      "properties": {
        "billingBackend": {
          "enum": [
            "BILLING",
            "CDP",
            "PAYMENT_BACKEND_UNDEFINED"
          ],
          "type": "string"
        },
        "isProratedCharge": {
          "type": "boolean"
        },
        "isRefund": {
          "type": "boolean"
        },
        "isRefundable": {
          "type": "boolean"
        },
        "isRefunded": {
          "type": "boolean"
        },
        "lineItems": {
          "items": {
            "$ref": "#/definitions/TransactionLineItem"
          },
          "type": "array"
        },
        "localizedRefundTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "localizedTransactionTime": {
          "$ref": "#/definitions/LocalizedTimestamp"
        },
        "name": {
          "type": "string"
        },
        "orderCode": {
          "type": "string"
        },
        "paymentDescription": {
          "type": "string"
        },
        "paymentMethod": {
          "enum": [
            "BANK_ACCOUNT",
            "BILLING_ACCOUNT",
            "CARRIER_BILLING",
            "CREDIT_CARD",
            "FINANCING",
            "GOOGLE_STANDARD_TOKENIZED",
            "MONETIZATION_CHANNEL",
            "NETBANKING",
            "PAYMENT_METHOD_UNKNOWN",
            "PAYPAL",
            "STORED_VALUE_CLOSED_LOOP_PLAY",
            "STORED_VALUE_OPEN_LOOP"
          ],
          "type": "string"
        },
        "refundReason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "refundTime": {
          "type": "string"
        },
        "state": {
          "enum": [
            "TRANSACTION_NOT_REFUNDABLE",
            "TRANSACTION_REFUNDABLE",
            "TRANSACTION_REFUNDED",
            "TRANSACTION_STATE_UNKNOWN"
          ],
          "type": "string"
        },
        "textDescription": {
          "type": "string"
        },
        "transactionAmount": {
          "$ref": "#/definitions/Money"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionStatus": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "TRANSACTION_STATUS_UNKNOWN"
          ],
          "type": "string"
        },
        "transactionTime": {
          "type": "string"
        },
        "transactionToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransactionIdentifier": {
      "properties": {
        "orderId": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        },
        "youtubeVideoId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransactionLineItem": {
      "properties": {
        "componentKey": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "lineItemIndex": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/Money"
        },
        "tax": {
          "items": {
            "$ref": "#/definitions/Tax"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TransactionRefundRequestEntry": {
      "properties": {
        "refundReason": {
          "enum": [
            "CANCEL_REFUND_REASON_UNKNOWN",
            "FEATURE_NOT_WORKING",
            "FRIEND_OR_FAMILY_CHARGES",
            "NO_LONGER_WANTED_REMORSE",
            "PURCHASE_BY_ACCIDENT",
            "SELF_SERVICE_REFUND",
            "UNRECOGNIZED_CHARGES_PAYMENT_FRAUD"
          ],
          "type": "string"
        },
        "transactionTokens": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TransactionRefundResponseStatus": {
      "properties": {
        "refundResult": {
          "enum": [
            "ALREADY_REFUNDED",
            "DENIED_CUSTOMER_ABUSE",
            "DENIED_FRAUD",
            "DENIED_REFUND_EXCEEDS_COURTESY_LIMIT",
            "ISSUED",
            "PERMANENT_REFUND_FAILED",
            "REFUND_RESULT_UNKNOWN",
            "REFUND_RETRIABLE"
          ],
          "type": "string"
        },
        "transactionToken": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransactionsSummary": {
      "properties": {
        "amount": {
          "$ref": "#/definitions/Money"
        },
        "count": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TransferAction": {
      "properties": {
        "resolutionId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TransferRequest": {
      "properties": {
        "emailAddress": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TransferResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "TroubleShooter": {
      "properties": {
        "hcId": {
          "type": "string"
        },
        "helpCenter": {
          "type": "string"
        },
        "isPublic": {
          "type": "boolean"
        },
        "locale": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootAccountRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "searchRecentStartTimestamp": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootAccountResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/Action1"
        }
      },
      "type": "object"
    },
    "TroubleshootIssueRequest": {
      "properties": {
        "answers": {
          "items": {
            "$ref": "#/definitions/Answer"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootIssueResponse": {
      "properties": {
        "autocheckResults": {
          "items": {
            "$ref": "#/definitions/AutocheckResult"
          },
          "type": "array"
        },
        "issues": {
          "items": {
            "$ref": "#/definitions/Issue1"
          },
          "type": "array"
        },
        "questions": {
          "items": {
            "enum": [
              "DEVICE_TYPE",
              "PURCHASED_APP_NAME",
              "PURCHASED_BOOK_NAME",
              "PURCHASED_VIDEO_NAME",
              "QUESTION_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "requirements": {
          "items": {
            "$ref": "#/definitions/Requirement"
          },
          "type": "array"
        },
        "resolutions": {
          "items": {
            "$ref": "#/definitions/Resolution1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TroubleshootTransactionRequest": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "searchContext": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        },
        "transactionId": {
          "type": "string"
        },
        "transactionIdentifier": {
          "$ref": "#/definitions/TransactionIdentifier"
        },
        "transactionType": {
          "enum": [
            "GOOGLE_PLAY",
            "GOOGLE_STORE",
            "P2P_RECEIVER",
            "P2P_SENDER",
            "TAP_AND_PAY",
            "UNKNOWN_WALLET_TRANSACTION_TYPE",
            "WALLET_CARD",
            "YOUTUBE_PURCHASE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TroubleshootTransactionResponse": {
      "properties": {
        "action": {
          "$ref": "#/definitions/Action1"
        }
      },
      "type": "object"
    },
    "TroubleshooterSession": {
      "properties": {
        "autocheckResults": {
          "items": {
            "$ref": "#/definitions/AutocheckResult"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "issueId": {
          "type": "string"
        },
        "questions": {
          "items": {
            "enum": [
              "DEVICE_TYPE",
              "PURCHASED_APP_NAME",
              "PURCHASED_BOOK_NAME",
              "PURCHASED_VIDEO_NAME",
              "QUESTION_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "requirements": {
          "items": {
            "$ref": "#/definitions/Requirement"
          },
          "type": "array"
        },
        "resolutions": {
          "items": {
            "$ref": "#/definitions/Resolution1"
          },
          "type": "array"
        },
        "sessionId": {
          "type": "string"
        },
        "subIssues": {
          "items": {
            "$ref": "#/definitions/Issue1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnassignRequest": {
      "type": "object"
    },
    "UnassignResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UnauthorizedChargesWorkflow": {
      "properties": {
        "paymentMethodHijackReviewKeys": {
          "items": {
            "$ref": "#/definitions/CasesReviewKey"
          },
          "type": "array"
        },
        "state": {
          "enum": [
            "ACCOUNT_TAKE_OVER_PLAYDC_REFUNDING",
            "CANCELLED",
            "COMPLETED",
            "FRIENDLY_FRAUD_PLAYDC_REFUNDING",
            "INITITIATED",
            "PAYMENT_METHOD_HIJACK_REVIEWING",
            "PAYMENT_METHOD_HIJACK_REVIEW_COMPLETED",
            "STATE_UNSPECIFIED"
          ],
          "type": "string"
        },
        "userTransactionIds": {
          "items": {
            "$ref": "#/definitions/CasesTransactionIdentifier"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UnblockRequest": {
      "properties": {
        "borgAlertId": {
          "type": "string"
        },
        "buganizerId": {
          "format": "int64",
          "type": "string"
        },
        "orderId": {
          "type": "string"
        },
        "pcrId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "UnblockResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UnpluggedSignals": {
      "properties": {
        "components": {
          "items": {
            "$ref": "#/definitions/EntitlementComponent"
          },
          "type": "array"
        },
        "source": {
          "enum": [
            "FAMILY_MEMBER",
            "INDIVIDUAL",
            "ITUNES",
            "OTHER",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "subscriptionSignals": {
          "$ref": "#/definitions/SubscriptionSignals"
        }
      },
      "type": "object"
    },
    "UnreadCaseInfo": {
      "properties": {
        "caseId": {
          "type": "string"
        },
        "isAssigned": {
          "type": "boolean"
        },
        "unreadTime": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UnspamRequest": {
      "type": "object"
    },
    "UnspamResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UpdateAccountsRequest": {
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAccountsResponse": {
      "properties": {
        "accounts": {
          "items": {
            "$ref": "#/definitions/Account"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAgentCategoriesRequest": {
      "properties": {
        "paths": {
          "items": {
            "$ref": "#/definitions/Path2"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAgentCategoriesResponse": {
      "properties": {
        "product": {
          "$ref": "#/definitions/Product"
        },
        "subProducts": {
          "items": {
            "$ref": "#/definitions/Product"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAttributesRequest": {
      "properties": {
        "attributes": {
          "items": {
            "$ref": "#/definitions/Attribute1"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateAttributesResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "UpdateConsultNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateConsultNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "UpdateContactEmailRequest": {
      "properties": {
        "contactEmail": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateContactEmailResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateContactNameRequest": {
      "properties": {
        "contactName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateContactNameResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateCustomerAttributesRequest": {
      "properties": {
        "adwordsExternalCid": {
          "type": "string"
        },
        "adwordsInternalCid": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateCustomerAttributesResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateDisconnectedChannelRequest": {
      "properties": {
        "channel": {
          "enum": [
            "CHANNEL_UNSPECIFIED",
            "CHAT",
            "PHONE"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateEligibleProgramRequest": {
      "properties": {
        "programName": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateEligibleProgramResponse": {
      "properties": {
        "customer": {
          "$ref": "#/definitions/Customer"
        }
      },
      "type": "object"
    },
    "UpdateEmailRequest": {
      "properties": {
        "afterSendSetting": {
          "$ref": "#/definitions/AfterSendSetting"
        },
        "bccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "ccAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "footerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "fromAddress": {
          "type": "string"
        },
        "headerIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "inReplyTo": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "subject": {
          "type": "string"
        },
        "toAddresses": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "UpdateEmailResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "UpdateLocaleRequest": {
      "properties": {
        "locale": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateLocaleResponse": {
      "properties": {
        "issue": {
          "$ref": "#/definitions/Issue"
        }
      },
      "type": "object"
    },
    "UpdateNoteRequest": {
      "properties": {
        "body": {
          "type": "string"
        },
        "cannedResponseIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "caseId": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        },
        "noteType": {
          "enum": [
            "PHONE",
            "UNKNOWN_NOTE_TYPE",
            "USER"
          ],
          "type": "string"
        },
        "subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateNoteResponse": {
      "properties": {
        "communication": {
          "$ref": "#/definitions/Communication"
        }
      },
      "type": "object"
    },
    "UpdateOwnerResponse": {
      "type": "object"
    },
    "UpdateProductRequest": {
      "properties": {
        "fieldMask": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "product": {
          "$ref": "#/definitions/Product"
        }
      },
      "type": "object"
    },
    "UpdateSummaryRequest": {
      "properties": {
        "summary": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "UpdateSummaryResponse": {
      "properties": {
        "issue": {
          "$ref": "#/definitions/Issue"
        }
      },
      "type": "object"
    },
    "UpdateWorkflowRequest": {
      "properties": {
        "fieldMask": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "workflow": {
          "$ref": "#/definitions/CasesWorkflow"
        }
      },
      "type": "object"
    },
    "ValidateConsultCategory": {
      "properties": {
        "nodes": {
          "items": {
            "$ref": "#/definitions/ValidateConsultNode"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ValidateConsultFormRequest": {
      "properties": {
        "consultFormHelpCenterName": {
          "type": "string"
        },
        "consultFormId": {
          "type": "string"
        },
        "originatingCategory": {
          "$ref": "#/definitions/ValidateConsultCategory"
        },
        "poolId": {
          "type": "string"
        },
        "productId": {
          "type": "string"
        },
        "targetCaseCategories": {
          "items": {
            "$ref": "#/definitions/ValidateConsultCategory"
          },
          "type": "array"
        },
        "teamId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ValidateConsultFormResponse": {
      "properties": {
        "validationErrors": {
          "items": {
            "enum": [
              "CATEGORY",
              "CONSULT_FORM",
              "POOL",
              "TEAM",
              "VALIDATION_ERROR_NOT_SET"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ValidateConsultNode": {
      "properties": {
        "categoryId": {
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VerificationResult": {
      "properties": {
        "answerResults": {
          "items": {
            "enum": [
              "FAILED",
              "PASSED",
              "UNABLE_TO_VERIFY",
              "UNKNOWN_ANSWER_RESULT"
            ],
            "type": "string"
          },
          "type": "array"
        },
        "attemptsRemaining": {
          "format": "int32",
          "type": "integer"
        },
        "questionSetType": {
          "enum": [
            "PAYMENT_METHOD_QUESTION_SET",
            "PHONE_NUMBER_QUESTION_SET",
            "POSTAL_CODE_QUESTION_SET",
            "UNKNOWN_QUESTION_SET_TYPE"
          ],
          "type": "string"
        },
        "verificationResults": {
          "items": {
            "$ref": "#/definitions/Status"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VerifyGiftCardRequest": {
      "properties": {
        "activationNumber": {
          "type": "string"
        },
        "caseId": {
          "type": "string"
        },
        "partialCode": {
          "type": "string"
        },
        "ssoCookie": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VerifyGiftCardResponse": {
      "properties": {
        "redemptionToken": {
          "$ref": "#/definitions/RedemptionToken"
        }
      },
      "type": "object"
    },
    "WaitForConsultRequest": {
      "type": "object"
    },
    "WaitForConsultResponse": {
      "properties": {
        "case": {
          "$ref": "#/definitions/Case"
        }
      },
      "type": "object"
    },
    "WalletPaymentMethodHijackReviewIds": {
      "properties": {
        "ids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WalletSignInReviewIds": {
      "properties": {
        "ids": {
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WalletTransaction": {
      "properties": {
        "creationTime": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "instrument": {
          "type": "string"
        },
        "isAuthorizationHold": {
          "type": "boolean"
        },
        "originalAmount": {
          "$ref": "#/definitions/Money"
        },
        "playSubscriptionId": {
          "type": "string"
        },
        "productLinks": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "productVertical": {
          "enum": [
            "DRIVE",
            "FI",
            "HARDWARE",
            "PLAY_APPS",
            "PLAY_BOOKS",
            "PLAY_GIFT_CARDS",
            "PLAY_MOVIES",
            "PLAY_MUSIC",
            "PLAY_NEWSSTAND",
            "PRODUCT_VERTICAL_UNSPECIFIED",
            "UNKNOWN",
            "WALLET_ANDROID_PAY",
            "WALLET_APP",
            "WALLET_HANDS_FREE",
            "YOUTUBE"
          ],
          "type": "string"
        },
        "qualityCap": {
          "enum": [
            "HD",
            "SD",
            "UHD",
            "UNKNOWN_QUALITY",
            "VR"
          ],
          "type": "string"
        },
        "splitTenders": {
          "items": {
            "$ref": "#/definitions/SplitTender"
          },
          "type": "array"
        },
        "status": {
          "enum": [
            "CANCELLED",
            "CHARGED",
            "CHARGED_BACK",
            "DECLINED",
            "OTHER_STATUS",
            "PENDING",
            "REFUNDED",
            "REJECTED",
            "UNKNOWN_WALLET_TRANSACTION_STATUS"
          ],
          "type": "string"
        },
        "transactionId": {
          "$ref": "#/definitions/TransactionIdentifier"
        }
      },
      "type": "object"
    },
    "Workflow": {
      "properties": {
        "troubleshooterType": {
          "enum": [
            "NOE",
            "PLAY_APPS",
            "PLAY_PURCHASES",
            "TROUBLESHOOTER_TYPE_NOT_SET"
          ],
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Workflow1": {
      "properties": {
        "checkForDraft": {
          "type": "boolean"
        },
        "troubleshooterType": {
          "enum": [
            "NOE",
            "PLAY_APPS",
            "PLAY_PURCHASES",
            "TROUBLESHOOTER_TYPE_NOT_SET"
          ],
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "workflowId": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "WorkflowInfo": {
      "properties": {
        "workflowIds": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "WorkflowResult": {
      "properties": {
        "draftMessageId": {
          "type": "string"
        },
        "rma": {
          "$ref": "#/definitions/Rma"
        },
        "stepResults": {
          "items": {
            "$ref": "#/definitions/StepResult"
          },
          "type": "array"
        }
      },
      "type": "object"
    }
  }
}