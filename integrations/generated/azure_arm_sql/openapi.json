{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "management.azure.com",
  "info": {
    "description": "Provides create, read, update and delete functionality for Azure SQL Database resources including servers, databases, elastic pools, recommendations, operations, and usage metrics.",
    "title": "Azure SQL Database",
    "version": "2014-04-01",
    "x-apisguru-categories": [
      "enterprise"
    ],
    "x-logo": {
      "url": "https://api.apis.guru/v2/cache/logo/https_assets.onestore.ms_cdnfiles_onestorerolling-1606-01000_shell_v3_images_logo_microsoft.png"
    },
    "x-origin": [
      {
        "format": "swagger",
        "url": "https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-sql/2014-04-01/swagger/sql.core.json",
        "version": "2.0"
      }
    ],
    "x-preferred": true,
    "x-providerName": "azure.com",
    "x-serviceName": "arm-sql",
    "x-tags": [
      "Azure",
      "Microsoft"
    ],
    "x-datafire": {
      "name": "azure_arm_sql",
      "type": "openapi"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "parameters": {
    "ApiVersionParameter": {
      "description": "The API version to use for the request.",
      "in": "query",
      "name": "api-version",
      "required": true,
      "type": "string"
    },
    "DatabaseExpandParameter": {
      "description": "A comma separated list of child objects to expand in the response. Possible properties: serviceTierAdvisors, transparentDataEncryption.",
      "in": "query",
      "name": "$expand",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ResourceGroupParameter": {
      "description": "The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.",
      "in": "path",
      "name": "resourceGroupName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ServerNameParameter": {
      "description": "The name of the server.",
      "in": "path",
      "name": "serverName",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SubscriptionIdParameter": {
      "description": "The subscription ID that identifies an Azure subscription.",
      "in": "path",
      "name": "subscriptionId",
      "required": true,
      "type": "string"
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases": {
      "get": {
        "description": "Returns a list of databases in a server.",
        "operationId": "Databases_ListByServer",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "$ref": "#/parameters/DatabaseExpandParameter"
          },
          {
            "description": "An OData filter expression that describes a subset of databases to return.",
            "in": "query",
            "name": "$filter",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          }
        },
        "tags": [
          "Databases"
        ],
        "x-ms-examples": {
          "List databases by server": {
            "parameters": {
              "api-version": "2014-04-01",
              "resourceGroupName": "sqlcrudtest-6845",
              "serverName": "sqlcrudtest-7177",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6845/providers/Microsoft.Sql/servers/sqlcrudtest-7177/databases/master",
                      "kind": "v12.0,system",
                      "location": "Japan East",
                      "name": "master",
                      "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "containmentState": 2,
                        "creationDate": "2017-02-10T00:59:33.483Z",
                        "currentServiceObjectiveId": "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
                        "databaseId": "e760a51c-3dce-4d8c-976b-a2b929a73e08",
                        "defaultSecondaryLocation": "Japan West",
                        "earliestRestoreDate": null,
                        "edition": "System",
                        "elasticPoolName": null,
                        "failoverGroupId": null,
                        "maxSizeBytes": "32212254720",
                        "readScale": "Disabled",
                        "requestedServiceObjectiveId": "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
                        "requestedServiceObjectiveName": "System2",
                        "sampleName": null,
                        "serviceLevelObjective": "System2",
                        "status": "Online"
                      },
                      "type": "Microsoft.Sql/servers/databases"
                    },
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6845/providers/Microsoft.Sql/servers/sqlcrudtest-7177/databases/sqlcrudtest-1142",
                      "kind": "v12.0,user",
                      "location": "Japan East",
                      "name": "sqlcrudtest-1142",
                      "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "containmentState": 2,
                        "creationDate": "2017-02-10T01:03:34.04Z",
                        "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "databaseId": "11c1813c-52db-4d17-95d7-119eda1850b1",
                        "defaultSecondaryLocation": "Japan West",
                        "earliestRestoreDate": "2017-02-10T01:14:10.233Z",
                        "edition": "Standard",
                        "elasticPoolName": null,
                        "failoverGroupId": null,
                        "maxSizeBytes": "268435456000",
                        "readScale": "Disabled",
                        "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "requestedServiceObjectiveName": "S0",
                        "sampleName": null,
                        "serviceLevelObjective": "S0",
                        "status": "Online"
                      },
                      "type": "Microsoft.Sql/servers/databases"
                    },
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6845/providers/Microsoft.Sql/servers/sqlcrudtest-7177/databases/sqlcrudtest-2788",
                      "kind": "v12.0,user",
                      "location": "Japan East",
                      "name": "sqlcrudtest-2788",
                      "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "containmentState": 2,
                        "creationDate": "2017-02-10T01:00:21.067Z",
                        "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "databaseId": "d63e118b-41cf-49b9-8dac-aa6ef6f91731",
                        "defaultSecondaryLocation": "Japan West",
                        "earliestRestoreDate": "2017-02-10T01:10:52.25Z",
                        "edition": "Standard",
                        "elasticPoolName": null,
                        "failoverGroupId": null,
                        "maxSizeBytes": "268435456000",
                        "readScale": "Disabled",
                        "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "requestedServiceObjectiveName": "S0",
                        "sampleName": null,
                        "serviceLevelObjective": "S0",
                        "status": "Online"
                      },
                      "type": "Microsoft.Sql/servers/databases"
                    },
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6845/providers/Microsoft.Sql/servers/sqlcrudtest-7177/databases/sqlcrudtest-6877",
                      "kind": "v12.0,user",
                      "location": "Japan East",
                      "name": "sqlcrudtest-6877",
                      "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "containmentState": 2,
                        "creationDate": "2017-02-10T01:02:28.853Z",
                        "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "databaseId": "40ac16e8-855c-439c-b495-c97e918a771c",
                        "defaultSecondaryLocation": "Japan West",
                        "earliestRestoreDate": "2017-02-10T01:13:21.66Z",
                        "edition": "Standard",
                        "elasticPoolName": null,
                        "failoverGroupId": null,
                        "maxSizeBytes": "268435456000",
                        "readScale": "Disabled",
                        "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "requestedServiceObjectiveName": "S0",
                        "sampleName": null,
                        "serviceLevelObjective": "S0",
                        "status": "Online"
                      },
                      "type": "Microsoft.Sql/servers/databases"
                    },
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6845/providers/Microsoft.Sql/servers/sqlcrudtest-7177/databases/sqlcrudtest-9888",
                      "kind": "v12.0,user",
                      "location": "Japan East",
                      "name": "sqlcrudtest-9888",
                      "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "containmentState": 2,
                        "creationDate": "2017-02-10T01:01:25.347Z",
                        "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "databaseId": "59daf4ad-082f-4ac5-b38a-ed656b937980",
                        "defaultSecondaryLocation": "Japan West",
                        "earliestRestoreDate": "2017-02-10T01:12:05.303Z",
                        "edition": "Standard",
                        "elasticPoolName": null,
                        "failoverGroupId": null,
                        "maxSizeBytes": "268435456000",
                        "readScale": "Disabled",
                        "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                        "requestedServiceObjectiveName": "S0",
                        "sampleName": null,
                        "serviceLevelObjective": "S0",
                        "status": "Online"
                      },
                      "type": "Microsoft.Sql/servers/databases"
                    }
                  ]
                }
              }
            }
          },
          "List databases by server with filter": {
            "parameters": {
              "$filter": "properties/edition eq 'System'",
              "api-version": "2014-04-01",
              "resourceGroupName": "sqlcrudtest-6845",
              "serverName": "sqlcrudtest-7177",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6845/providers/Microsoft.Sql/servers/sqlcrudtest-7177/databases/master",
                      "kind": "v12.0,system",
                      "location": "Japan East",
                      "name": "master",
                      "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "containmentState": 2,
                        "creationDate": "2017-02-10T00:59:33.483Z",
                        "currentServiceObjectiveId": "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
                        "databaseId": "e760a51c-3dce-4d8c-976b-a2b929a73e08",
                        "defaultSecondaryLocation": "Japan West",
                        "earliestRestoreDate": null,
                        "edition": "System",
                        "elasticPoolName": null,
                        "failoverGroupId": null,
                        "maxSizeBytes": "32212254720",
                        "readScale": "Disabled",
                        "requestedServiceObjectiveId": "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
                        "requestedServiceObjectiveName": "System2",
                        "sampleName": null,
                        "serviceLevelObjective": "System2",
                        "status": "Online"
                      },
                      "type": "Microsoft.Sql/servers/databases"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}": {
      "delete": {
        "description": "Deletes a database.",
        "operationId": "Databases_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database to be deleted.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "NoContent"
          }
        },
        "tags": [
          "Databases"
        ],
        "x-ms-examples": {
          "Delete a database": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "sqlcrudtest-331",
              "resourceGroupName": "sqlcrudtest-6852",
              "serverName": "sqlcrudtest-2080",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": ""
              },
              "204": {
                "body": ""
              }
            }
          }
        }
      },
      "get": {
        "description": "Gets a database.",
        "operationId": "Databases_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database to be retrieved.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          },
          {
            "$ref": "#/parameters/DatabaseExpandParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        },
        "tags": [
          "Databases"
        ],
        "x-ms-examples": {
          "Get a database": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "sqlcrudtest-9187",
              "resourceGroupName": "sqlcrudtest-6852",
              "serverName": "sqlcrudtest-2080",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-6852/providers/Microsoft.Sql/servers/sqlcrudtest-2080/databases/sqlcrudtest-9187",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "sqlcrudtest-9187",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-10T00:56:19.2Z",
                    "currentServiceObjectiveId": "dd6d99bb-f193-4ec1-86f2-43d3bccbc49c",
                    "databaseId": "200216b2-dc19-4866-85aa-f73fe4a1ebac",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:06:29.78Z",
                    "edition": "Basic",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "2147483648",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "dd6d99bb-f193-4ec1-86f2-43d3bccbc49c",
                    "requestedServiceObjectiveName": "Basic",
                    "sampleName": null,
                    "serviceLevelObjective": "Basic",
                    "status": "Online"
                  },
                  "tags": {
                    "tagKey1": "TagValue1"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Creates a new database or updates an existing database. Location is a required property in the request body, and it must be the same as the location of the SQL server.",
        "operationId": "Databases_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database to be operated on (updated or created).",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The required parameters for creating or updating a database.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "Databases"
        ],
        "x-ms-examples": {
          "Create a database as a copy": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "createMode": "Copy",
                  "sourceDatabaseId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb"
                }
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-6440",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Create a database as a non-readable secondary": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "createMode": "NonReadableSecondary",
                  "sourceDatabaseId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb"
                }
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-6440",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Create a database as a point in time restore": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "createMode": "PointInTimeRestore",
                  "restorePointInTime": "2017-02-16T21:24:37.467Z",
                  "sourceDatabaseId": "/subscriptions/00000000-1111-2222-3333-444444444444 /resourceGroups/sqlcrudtest-8412/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb"
                }
              },
              "resourceGroupName": "sqlcrudtest-8412",
              "serverName": "sqlcrudtest-3584",
              "subscriptionId": "00000000-1111-2222-3333-444444444444 "
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Create a database as an online secondary": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "createMode": "OnlineSecondary",
                  "sourceDatabaseId": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb"
                }
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-6440",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-3782/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Create a database max": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "collation": "SQL_Latin1_General_CP1_CI_AS",
                  "containmentState": 2,
                  "createMode": "Default",
                  "creationDate": "2017-02-10T01:37:18.847Z",
                  "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                  "databaseId": "816c5f7e-0e36-4eec-9c51-eee7a276c14c",
                  "defaultSecondaryLocation": "Japan West",
                  "earliestRestoreDate": "2017-02-10T01:48:08.237Z",
                  "edition": "Standard",
                  "maxSizeBytes": "268435456000",
                  "readScale": "Disabled",
                  "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                  "requestedServiceObjectiveName": "S0",
                  "sampleName": "AdventureWorksLT",
                  "serviceLevelObjective": "S0",
                  "status": "Online"
                }
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-6440",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-8931/providers/Microsoft.Sql/servers/sqlcrudtest-1932/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "createMode": "Default",
                    "creationDate": "2017-02-10T01:37:18.847Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "databaseId": "816c5f7e-0e36-4eec-9c51-eee7a276c14c",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:48:08.237Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "sourceDatabaseId": null,
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-8931/providers/Microsoft.Sql/servers/sqlcrudtest-1932/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "createMode": "Default",
                    "creationDate": "2017-02-10T01:37:18.847Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "databaseId": "816c5f7e-0e36-4eec-9c51-eee7a276c14c",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:48:08.237Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "sourceDatabaseId": null,
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Create a database min": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East"
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-5961",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Update a database max": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "collation": "SQL_Latin1_General_CP1_CI_AS",
                  "containmentState": 2,
                  "createMode": "Default",
                  "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                  "defaultSecondaryLocation": "Japan West",
                  "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                  "edition": "Standard",
                  "maxSizeBytes": "268435456000",
                  "readScale": "Disabled",
                  "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                  "requestedServiceObjectiveName": "S0",
                  "serviceLevelObjective": "S0",
                  "status": "Online"
                }
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-5961",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Update a database min": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East"
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-5961",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-5961/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "creationDate": "2017-02-24T22:39:46.547Z",
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          },
          "Update a database's elastic pool'": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "testdb",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "elasticPoolName": "7537"
                }
              },
              "resourceGroupName": "sqlcrudtest-4799",
              "serverName": "sqlcrudtest-6440",
              "subscriptionId": "9d4e2ad0-e20b-4464-9219-353bded52513"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4799/providers/Microsoft.Sql/servers/sqlcrudtest-6440/databases/testdb",
                  "kind": "v12.0,user",
                  "location": "Japan East",
                  "name": "testdb",
                  "properties": {
                    "collation": "SQL_Latin1_General_CP1_CI_AS",
                    "containmentState": 2,
                    "currentServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "defaultSecondaryLocation": "Japan West",
                    "earliestRestoreDate": "2017-02-10T01:52:52.923Z",
                    "edition": "Standard",
                    "elasticPoolName": null,
                    "failoverGroupId": null,
                    "maxSizeBytes": "268435456000",
                    "readScale": "Disabled",
                    "requestedServiceObjectiveId": "f1173c43-91bd-4aaa-973c-54e79e15235b",
                    "requestedServiceObjectiveName": "S0",
                    "sampleName": null,
                    "serviceLevelObjective": "S0",
                    "status": "Online"
                  },
                  "type": "Microsoft.Sql/servers/databases"
                }
              },
              "202": {}
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause": {
      "post": {
        "description": "Pauses a data warehouse.",
        "operationId": "Databases_Pause",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the data warehouse to pause.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "DatabaseActivation"
        ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume": {
      "post": {
        "description": "Resumes a data warehouse.",
        "operationId": "Databases_Resume",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the data warehouse to resume.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "DatabaseActivation"
        ],
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors": {
      "get": {
        "description": "Returns service tier advisors for specified database.",
        "operationId": "Databases_ListServiceTierAdvisors",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of database.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTierAdvisorListResult"
            }
          }
        },
        "tags": [
          "ServiceTierAdvisors"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/serviceTierAdvisors/{serviceTierAdvisorName}": {
      "get": {
        "description": "Gets a service tier advisor.",
        "operationId": "Databases_GetServiceTierAdvisor",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of database.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of service tier advisor.",
            "in": "path",
            "name": "serviceTierAdvisorName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceTierAdvisor"
            }
          }
        },
        "tags": [
          "ServiceTierAdvisors"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/current": {
      "get": {
        "description": "Gets a database's transparent data encryption configuration.",
        "operationId": "Databases_GetTransparentDataEncryptionConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database for which the transparent data encryption applies.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryption"
            }
          }
        },
        "tags": [
          "TransparentDataEncryption"
        ]
      },
      "put": {
        "description": "Creates or updates a database's transparent data encryption configuration.",
        "operationId": "Databases_CreateOrUpdateTransparentDataEncryptionConfiguration",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database for which setting the transparent data encryption applies.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The required parameters for creating or updating transparent data encryption.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryption"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryption"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryption"
            }
          }
        },
        "tags": [
          "TransparentDataEncryption"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/current/operationResults": {
      "get": {
        "description": "Returns a database's transparent data encryption operation result.",
        "operationId": "Databases_ListTransparentDataEncryptionActivity",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database for which the transparent data encryption applies.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TransparentDataEncryptionActivityListResult"
            }
          }
        },
        "tags": [
          "TransparentDataEncryption"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/usages": {
      "get": {
        "description": "Returns database usages.",
        "operationId": "Databases_ListUsages",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the database.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseMetricListResult"
            }
          }
        },
        "tags": [
          "Databases"
        ],
        "x-ms-examples": {
          "List database usage metrics": {
            "parameters": {
              "api-version": "2014-04-01",
              "databaseName": "3481",
              "resourceGroupName": "sqlcrudtest-6730",
              "serverName": "sqlcrudtest-9007",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "currentValue": 4194304,
                      "displayName": "Database Size",
                      "limit": 268435456000,
                      "name": "database_size",
                      "nextResetTime": null,
                      "resourceName": "3481",
                      "unit": "Bytes"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools": {
      "get": {
        "description": "Returns a list of elastic pools in a server.",
        "operationId": "ElasticPools_ListByServer",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElasticPoolListResult"
            }
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "x-ms-examples": {
          "List elastic pools": {
            "parameters": {
              "api-version": "2014-04-01",
              "resourceGroupName": "sqlcrudtest-2369",
              "serverName": "sqlcrudtest-8069",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-2729",
                      "kind": null,
                      "location": "Japan East",
                      "name": "sqlcrudtest-2729",
                      "properties": {
                        "creationDate": "2017-02-10T01:27:21.32Z",
                        "databaseDtuMax": 5,
                        "databaseDtuMin": 0,
                        "dtu": 50,
                        "edition": "Basic",
                        "state": "Ready",
                        "storageMB": 5000
                      },
                      "type": "Microsoft.Sql/servers/elasticPools"
                    },
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-3191",
                      "kind": null,
                      "location": "Japan East",
                      "name": "sqlcrudtest-3191",
                      "properties": {
                        "creationDate": "2017-02-10T01:26:26.45Z",
                        "databaseDtuMax": 5,
                        "databaseDtuMin": 0,
                        "dtu": 50,
                        "edition": "Basic",
                        "state": "Ready",
                        "storageMB": 5000
                      },
                      "type": "Microsoft.Sql/servers/elasticPools"
                    },
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                      "kind": null,
                      "location": "Japan East",
                      "name": "sqlcrudtest-8102",
                      "properties": {
                        "creationDate": "2017-02-10T01:25:25.033Z",
                        "databaseDtuMax": 5,
                        "databaseDtuMin": 0,
                        "dtu": 50,
                        "edition": "Basic",
                        "state": "Ready",
                        "storageMB": 5000
                      },
                      "type": "Microsoft.Sql/servers/elasticPools"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}": {
      "delete": {
        "description": "Deletes the elastic pool.",
        "operationId": "ElasticPools_Delete",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool to be deleted.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "x-ms-examples": {
          "Delete elastic pool": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "sqlcrudtest-3851",
              "resourceGroupName": "sqlcrudtest-3129",
              "serverName": "sqlcrudtest-228",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": ""
              },
              "204": {
                "body": ""
              }
            }
          }
        }
      },
      "get": {
        "description": "Gets an elastic pool.",
        "operationId": "ElasticPools_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool to be retrieved.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "x-ms-examples": {
          "Get elastic pool": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "sqlcrudtest-8102",
              "resourceGroupName": "sqlcrudtest-2369",
              "serverName": "sqlcrudtest-8069",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 5,
                    "databaseDtuMin": 0,
                    "dtu": 50,
                    "edition": "Basic",
                    "state": "Ready",
                    "storageMB": 5000
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Creates a new elastic pool or updates an existing elastic pool.",
        "operationId": "ElasticPools_CreateOrUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool to be operated on (updated or created).",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The required parameters for creating or updating an elastic pool.",
            "in": "body",
            "name": "parameters",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/ElasticPool"
            }
          },
          "202": {
            "description": "Accepted"
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "x-ms-examples": {
          "Create elastic pool max": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "sqlcrudtest-8102",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "creationDate": "2017-02-10T01:25:25.033Z",
                  "databaseDtuMax": 5,
                  "databaseDtuMin": 0,
                  "dtu": 50,
                  "edition": "Basic",
                  "state": "Ready",
                  "storageMB": 5000
                }
              },
              "resourceGroupName": "sqlcrudtest-2369",
              "serverName": "sqlcrudtest-8069",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 5,
                    "databaseDtuMin": 0,
                    "dtu": 50,
                    "edition": "Basic",
                    "state": "Ready",
                    "storageMB": 5000
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 5,
                    "databaseDtuMin": 0,
                    "dtu": 50,
                    "edition": "Basic",
                    "state": "Ready",
                    "storageMB": 5000
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "202": {}
            }
          },
          "Create elastic pool min": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "sqlcrudtest-8102",
              "parameters": {
                "location": "Japan East"
              },
              "resourceGroupName": "sqlcrudtest-2369",
              "serverName": "sqlcrudtest-8069",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 100,
                    "databaseDtuMin": 0,
                    "dtu": 100,
                    "edition": "Standard",
                    "state": "Ready",
                    "storageMB": 102400
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 100,
                    "databaseDtuMin": 0,
                    "dtu": 100,
                    "edition": "Standard",
                    "state": "Ready",
                    "storageMB": 102400
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "202": {}
            }
          },
          "Update elastic pool max": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "sqlcrudtest-8102",
              "parameters": {
                "location": "Japan East",
                "properties": {
                  "creationDate": "2017-02-10T01:25:25.033Z",
                  "databaseDtuMax": 5,
                  "databaseDtuMin": 0,
                  "dtu": 50,
                  "edition": "Basic",
                  "state": "Ready",
                  "storageMB": 5000
                }
              },
              "resourceGroupName": "sqlcrudtest-2369",
              "serverName": "sqlcrudtest-8069",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 5,
                    "databaseDtuMin": 0,
                    "dtu": 50,
                    "edition": "Basic",
                    "state": "Ready",
                    "storageMB": 5000
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 5,
                    "databaseDtuMin": 0,
                    "dtu": 50,
                    "edition": "Basic",
                    "state": "Ready",
                    "storageMB": 5000
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "202": {}
            }
          },
          "Update elastic pool min": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "sqlcrudtest-8102",
              "parameters": {
                "location": "Japan East"
              },
              "resourceGroupName": "sqlcrudtest-2369",
              "serverName": "sqlcrudtest-8069",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 5,
                    "databaseDtuMin": 0,
                    "dtu": 50,
                    "edition": "Basic",
                    "state": "Ready",
                    "storageMB": 5000
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "201": {
                "body": {
                  "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-2369/providers/Microsoft.Sql/servers/sqlcrudtest-8069/elasticPools/sqlcrudtest-8102",
                  "kind": null,
                  "location": "Japan East",
                  "name": "sqlcrudtest-8102",
                  "properties": {
                    "creationDate": "2017-02-10T01:25:25.033Z",
                    "databaseDtuMax": 5,
                    "databaseDtuMin": 0,
                    "dtu": 50,
                    "edition": "Basic",
                    "state": "Ready",
                    "storageMB": 5000
                  },
                  "type": "Microsoft.Sql/servers/elasticPools"
                }
              },
              "202": {}
            }
          }
        },
        "x-ms-long-running-operation": true
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/databases": {
      "get": {
        "description": "Returns a list of databases in an elastic pool.",
        "operationId": "ElasticPools_ListDatabases",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool to be retrieved.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/databases/{databaseName}": {
      "get": {
        "description": "Gets a database inside of an elastic pool.",
        "operationId": "ElasticPools_GetDatabase",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool to be retrieved.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the database to be retrieved.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        },
        "tags": [
          "ElasticPools"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolActivity": {
      "get": {
        "description": "Returns elastic pool activities.",
        "operationId": "ElasticPools_ListActivity",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool for which to get the current activity.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElasticPoolActivityListResult"
            }
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "x-ms-examples": {
          "List Elastic pool activity": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "8749",
              "resourceGroupName": "sqlcrudtest-4291",
              "serverName": "sqlcrudtest-6574",
              "subscriptionId": "00000000-1111-2222-3333-444444444444"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/sqlcrudtest-4291/providers/Microsoft.Sql/servers/sqlcrudtest-6574/elasticPools/8749/elasticPoolActivity/851f1672-f7f0-46f6-a262-ee9b51e18e97",
                      "location": "Japan East",
                      "name": "851f1672-f7f0-46f6-a262-ee9b51e18e97",
                      "properties": {
                        "elasticPoolName": "8749",
                        "endTime": "2017-02-10T02:03:23.263Z",
                        "errorCode": null,
                        "errorMessage": null,
                        "errorSeverity": null,
                        "operation": "CREATE",
                        "operationId": "851f1672-f7f0-46f6-a262-ee9b51e18e97",
                        "percentComplete": 100,
                        "requestedDatabaseDtuCap": 5,
                        "requestedDatabaseDtuGuarantee": 0,
                        "requestedDtuGuarantee": 100,
                        "requestedElasticPoolName": null,
                        "requestedStorageLimitInGB": 9,
                        "requestedStorageLimitInMB": 10000,
                        "serverName": "sqlcrudtest-6574",
                        "startTime": "2017-02-10T02:03:06.16Z",
                        "state": "COMPLETED"
                      },
                      "type": "Microsoft.Sql/servers/elasticPools/elasticPoolActivity"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolDatabaseActivity": {
      "get": {
        "description": "Returns activity on databases inside of an elastic pool.",
        "operationId": "ElasticPools_ListDatabaseActivity",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool.",
            "in": "path",
            "name": "elasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ElasticPoolDatabaseActivityListResult"
            }
          }
        },
        "tags": [
          "ElasticPools"
        ],
        "x-ms-examples": {
          "List elastic pool database activity": {
            "parameters": {
              "api-version": "2014-04-01",
              "elasticPoolName": "7537",
              "resourceGroupName": "sqlcrudtest-4673",
              "serverName": "sqlcrudtest-603",
              "subscriptionId": "9d4e2ad0-e20b-4464-9219-353bded52513"
            },
            "responses": {
              "200": {
                "body": {
                  "value": [
                    {
                      "id": "/subscriptions/9d4e2ad0-e20b-4464-9219-353bded52513/resourceGroups/sqlcrudtest-4673/providers/Microsoft.Sql/servers/sqlcrudtest-603/elasticPools/7537/elasticPoolDatabaseActivity/3a3272b3-f1fe-423c-9feb-7b843157eda5",
                      "location": "Japan East",
                      "name": "3a3272b3-f1fe-423c-9feb-7b843157eda5",
                      "properties": {
                        "currentElasticPoolName": "7537",
                        "currentServiceObjective": "ElasticPool",
                        "databaseName": "2396",
                        "endTime": "2016-10-23T03:08:02.95",
                        "errorCode": null,
                        "errorMessage": null,
                        "errorSeverity": null,
                        "operation": "UPDATE",
                        "operationId": "3a3272b3-f1fe-423c-9feb-7b843157eda5",
                        "percentComplete": 100,
                        "requestedElasticPoolName": null,
                        "requestedServiceObjective": null,
                        "serverName": "sqlcrudtest-603",
                        "startTime": "2016-10-23T03:07:12.577",
                        "state": "COMPLETED"
                      },
                      "type": "Microsoft.Sql/servers/elasticPools/elasticPoolDatabaseActivity"
                    },
                    {
                      "id": "/subscriptions/9d4e2ad0-e20b-4464-9219-353bded52513/resourceGroups/sqlcrudtest-4673/providers/Microsoft.Sql/servers/sqlcrudtest-603/elasticPools/7537/elasticPoolDatabaseActivity/95108a78-384e-48d3-b4de-7bf23b93a26d",
                      "location": "Japan East",
                      "name": "95108a78-384e-48d3-b4de-7bf23b93a26d",
                      "properties": {
                        "currentElasticPoolName": "7537",
                        "currentServiceObjective": "ElasticPool",
                        "databaseName": "2396",
                        "endTime": "2016-10-23T03:06:49.197",
                        "errorCode": null,
                        "errorMessage": null,
                        "errorSeverity": null,
                        "operation": "CREATE",
                        "operationId": "95108a78-384e-48d3-b4de-7bf23b93a26d",
                        "percentComplete": 100,
                        "requestedElasticPoolName": null,
                        "requestedServiceObjective": null,
                        "serverName": "sqlcrudtest-603",
                        "startTime": "2016-10-23T03:06:11.19",
                        "state": "COMPLETED"
                      },
                      "type": "Microsoft.Sql/servers/elasticPools/elasticPoolDatabaseActivity"
                    }
                  ]
                }
              }
            }
          }
        },
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools": {
      "get": {
        "description": "Returns recommended elastic pools.",
        "operationId": "RecommendedElasticPools_ListByServer",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendedElasticPoolListResult"
            }
          }
        },
        "tags": [
          "RecommendedElasticPools"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}": {
      "get": {
        "description": "Gets a recommented elastic pool.",
        "operationId": "RecommendedElasticPools_Get",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the recommended elastic pool to be retrieved.",
            "in": "path",
            "name": "recommendedElasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendedElasticPool"
            }
          }
        },
        "tags": [
          "RecommendedElasticPools"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/databases": {
      "get": {
        "description": "Returns a list of databases inside a recommented elastic pool.",
        "operationId": "RecommendedElasticPools_ListDatabases",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the recommended elastic pool to be retrieved.",
            "in": "path",
            "name": "recommendedElasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DatabaseListResult"
            }
          }
        },
        "tags": [
          "RecommendedElasticPools"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/databases/{databaseName}": {
      "get": {
        "description": "Gets a database inside of a recommented elastic pool.",
        "operationId": "RecommendedElasticPools_GetDatabases",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the elastic pool to be retrieved.",
            "in": "path",
            "name": "recommendedElasticPoolName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the database to be retrieved.",
            "in": "path",
            "name": "databaseName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Database"
            }
          }
        },
        "tags": [
          "RecommendedElasticPools"
        ]
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recommendedElasticPools/{recommendedElasticPoolName}/metrics": {
      "get": {
        "description": "Returns a recommented elastic pool metrics.",
        "operationId": "RecommendedElasticPools_ListMetrics",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the recommended elastic pool to be retrieved.",
            "in": "path",
            "name": "recommendedElasticPoolName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RecommendedElasticPoolListMetricsResult"
            }
          }
        },
        "tags": [
          "RecommendedElasticPools"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives": {
      "get": {
        "description": "Returns database service objectives.",
        "operationId": "Servers_ListServiceObjectives",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceObjectiveListResult"
            }
          }
        },
        "tags": [
          "ServiceObjectives"
        ],
        "x-ms-pageable": {}
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives/{serviceObjectiveName}": {
      "get": {
        "description": "Gets a database service objective.",
        "operationId": "Servers_GetServiceObjective",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupParameter"
          },
          {
            "$ref": "#/parameters/ServerNameParameter"
          },
          {
            "description": "The name of the service objective to retrieve.",
            "in": "path",
            "name": "serviceObjectiveName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceObjective"
            }
          }
        },
        "tags": [
          "ServiceObjectives"
        ]
      }
    }
  },
  "definitions": {
    "Database": {
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a database.",
      "properties": {
        "kind": {
          "description": "Kind of database.  This is metadata used for the Azure portal experience.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/DatabaseProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "DatabaseListResult": {
      "description": "Represents the response to a list database request.",
      "properties": {
        "value": {
          "description": "The list of databases housed in the server.",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatabaseMetric": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Represents database metrics.",
      "properties": {
        "currentValue": {
          "description": "The current value of the metric.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "displayName": {
          "description": "The metric display name.",
          "readOnly": true,
          "type": "string"
        },
        "limit": {
          "description": "The current limit of the metric.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "nextResetTime": {
          "description": "The next reset time for the metric (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "resourceName": {
          "description": "The name of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "unit": {
          "description": "The units of the metric.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "DatabaseMetricListResult": {
      "description": "Represents the response to a list database metrics request.",
      "properties": {
        "value": {
          "description": "The list of database metrics for the database.",
          "items": {
            "$ref": "#/definitions/DatabaseMetric"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "DatabaseProperties": {
      "description": "Represents the properties of a database.",
      "properties": {
        "collation": {
          "description": "The collation of the database. If createMode is not Default, this value is ignored.",
          "type": "string",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "containmentState": {
          "description": "The containment state of the database.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "createMode": {
          "description": "Specifies the mode of database creation.\n\nDefault: regular database creation.\n\nCopy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\n\nOnlineSecondary/NonReadableSecondary: creates a database as a (readable or nonreadable) secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\n\nPointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\n\nRecovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\n\nRestore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\n\nRestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\n\nCopy, NonReadableSecondary, OnlineSecondary and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.",
          "enum": [
            "Copy",
            "Default",
            "NonReadableSecondary",
            "OnlineSecondary",
            "PointInTimeRestore",
            "Recovery",
            "Restore",
            "RestoreLongTermRetentionBackup"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "CreateMode"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "creationDate": {
          "description": "The creation date of the database (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "currentServiceObjectiveId": {
          "description": "The current service level objective ID of the database. This is the ID of the service level objective that is currently active.",
          "enum": [
            "dd6d99bb-f193-4ec1-86f2-43d3bccbc49c",
            "f1173c43-91bd-4aaa-973c-54e79e15235b",
            "1b1ebd4d-d903-4baa-97f9-4ea675f5e928",
            "455330e1-00cd-488b-b5fa-177c226f28b7",
            "789681b8-ca10-4eb0-bdf2-e0b050601b40",
            "7203483a-c4fb-4304-9e9f-17c71c904f5d",
            "a7d1b92d-c987-4375-b54d-2b1d0e0f5bb0",
            "a7c4c615-cfb1-464b-b252-925be0a19446",
            "26e021db-f1f9-4c98-84c6-92af8ef433d7",
            "29dd7459-4a7c-4e56-be22-f0adda49440d",
            "c99ac918-dbea-463f-a475-16ec020fdc12",
            "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
            "33d0db1f-6893-4210-99f9-463fb9b496a4",
            "da24338c-a6c9-46c2-a4bf-4ac95b496ae4"
          ],
          "format": "uuid",
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveId"
          }
        },
        "databaseId": {
          "description": "The ID of the database.",
          "readOnly": true,
          "type": "string"
        },
        "defaultSecondaryLocation": {
          "description": "The default secondary region for this database.",
          "readOnly": true,
          "type": "string"
        },
        "earliestRestoreDate": {
          "description": "This records the earliest start date and time that restore is available for this database (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "edition": {
          "description": "The edition of the database. The DatabaseEditions enumeration contains all the valid editions. If createMode is NonReadableSecondary or OnlineSecondary, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\"",
          "enum": [
            "Web",
            "Business",
            "Basic",
            "Standard",
            "Premium",
            "Free",
            "Stretch",
            "DataWarehouse",
            "System",
            "System2"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DatabaseEdition"
          }
        },
        "elasticPoolName": {
          "description": "The name of the elastic pool the database is in. If elasticPoolName and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveName is ignored. Not supported for DataWarehouse edition.",
          "type": "string"
        },
        "failoverGroupId": {
          "description": "The id indicating the failover group containing this database.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "maxSizeBytes": {
          "description": "The max size of the database expressed in bytes. If createMode is not Default, this value is ignored. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\"",
          "type": "string"
        },
        "readScale": {
          "description": "Conditional. If the database is a geo-secondary, readScale indicates whether read-only connections are allowed to this database or not. Not supported for DataWarehouse edition.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ReadScale"
          }
        },
        "recommendedIndex": {
          "description": "The recommended indices for this database.",
          "items": {
            "$ref": "#/definitions/RecommendedIndex"
          },
          "readOnly": true,
          "type": "array"
        },
        "recoveryServicesRecoveryPointResourceId": {
          "description": "Conditional. If createMode is RestoreLongTermRetentionBackup, then this value is required. Specifies the resource ID of the recovery point to restore from.",
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "requestedServiceObjectiveId": {
          "description": "The configured service level objective ID of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of currentServiceObjectiveId property. If requestedServiceObjectiveId and requestedServiceObjectiveName are both updated, the value of requestedServiceObjectiveId overrides the value of requestedServiceObjectiveName. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\"",
          "enum": [
            "dd6d99bb-f193-4ec1-86f2-43d3bccbc49c",
            "f1173c43-91bd-4aaa-973c-54e79e15235b",
            "1b1ebd4d-d903-4baa-97f9-4ea675f5e928",
            "455330e1-00cd-488b-b5fa-177c226f28b7",
            "789681b8-ca10-4eb0-bdf2-e0b050601b40",
            "7203483a-c4fb-4304-9e9f-17c71c904f5d",
            "a7d1b92d-c987-4375-b54d-2b1d0e0f5bb0",
            "a7c4c615-cfb1-464b-b252-925be0a19446",
            "26e021db-f1f9-4c98-84c6-92af8ef433d7",
            "29dd7459-4a7c-4e56-be22-f0adda49440d",
            "c99ac918-dbea-463f-a475-16ec020fdc12",
            "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
            "33d0db1f-6893-4210-99f9-463fb9b496a4",
            "da24338c-a6c9-46c2-a4bf-4ac95b496ae4"
          ],
          "format": "uuid",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveId"
          }
        },
        "requestedServiceObjectiveName": {
          "description": "The name of the configured service level objective of the database. This is the service level objective that is in the process of being applied to the database. Once successfully updated, it will match the value of serviceLevelObjective property. To see possible values, query the capabilities API (/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationID}/capabilities) referred to by operationId: \"Capabilities_ListByLocation.\"",
          "enum": [
            "Basic",
            "S0",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P11",
            "P15",
            "System",
            "System2",
            "ElasticPool"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveName"
          }
        },
        "restorePointInTime": {
          "description": "Conditional. If createMode is PointInTimeRestore, this value is required. If createMode is Restore, this value is optional. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. Must be greater than or equal to the source database's earliestRestoreDate value.",
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "sampleName": {
          "description": "Indicates the name of the sample schema to apply when creating this database. If createMode is not Default, this value is ignored. Not supported for DataWarehouse edition.",
          "enum": [
            "AdventureWorksLT"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "SampleName"
          },
          "x-ms-mutability": [
            "create"
          ]
        },
        "serviceLevelObjective": {
          "description": "The current service level objective of the database.",
          "enum": [
            "Basic",
            "S0",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P11",
            "P15",
            "System",
            "System2",
            "ElasticPool"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveName"
          }
        },
        "serviceTierAdvisors": {
          "description": "The list of service tier advisors for this database. Expanded property",
          "items": {
            "$ref": "#/definitions/ServiceTierAdvisor"
          },
          "readOnly": true,
          "type": "array"
        },
        "sourceDatabaseDeletionDate": {
          "description": "Conditional. If createMode is Restore and sourceDatabaseId is the deleted database's original resource id when it existed (as opposed to its current restorable dropped database id), then this value is required. Specifies the time that the database was deleted.",
          "format": "date-time",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "sourceDatabaseId": {
          "description": "Conditional. If createMode is Copy, NonReadableSecondary, OnlineSecondary, PointInTimeRestore, Recovery, or Restore, then this value is required. Specifies the resource ID of the source database. If createMode is NonReadableSecondary or OnlineSecondary, the name of the source database must be the same as the new database being created.",
          "type": "string",
          "x-ms-mutability": [
            "create"
          ]
        },
        "status": {
          "description": "The status of the database.",
          "readOnly": true,
          "type": "string"
        },
        "transparentDataEncryption": {
          "description": "The transparent data encryption info for this database.",
          "items": {
            "$ref": "#/definitions/TransparentDataEncryption"
          },
          "readOnly": true,
          "type": "array"
        }
      }
    },
    "ElasticPool": {
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ],
      "description": "Represents a database elastic pool.",
      "properties": {
        "kind": {
          "description": "Kind of elastic pool.  This is metadata used for the Azure portal experience.",
          "readOnly": true,
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/ElasticPoolProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ElasticPoolActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents the activity on an elastic pool.",
      "properties": {
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "$ref": "#/definitions/ElasticPoolActivityProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ElasticPoolActivityListResult": {
      "description": "Represents the response to a list elastic pool activity request.",
      "properties": {
        "value": {
          "description": "The list of elastic pool activities.",
          "items": {
            "$ref": "#/definitions/ElasticPoolActivity"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "ElasticPoolActivityProperties": {
      "description": "Represents the properties of an elastic pool.",
      "properties": {
        "elasticPoolName": {
          "description": "The name of the elastic pool.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "The time the operation finished (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "errorCode": {
          "description": "The error code if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "errorMessage": {
          "description": "The error message if available.",
          "readOnly": true,
          "type": "string"
        },
        "errorSeverity": {
          "description": "The error severity if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "operation": {
          "description": "The operation name.",
          "readOnly": true,
          "type": "string"
        },
        "operationId": {
          "description": "The unique operation ID.",
          "readOnly": true,
          "type": "string"
        },
        "percentComplete": {
          "description": "The percentage complete if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedDatabaseDtuCap": {
          "description": "The requested per database DTU cap.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedDatabaseDtuGuarantee": {
          "description": "The requested per database DTU guarantee.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedDatabaseDtuMax": {
          "description": "The requested max DTU per database if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedDatabaseDtuMin": {
          "description": "The requested min DTU per database if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedDtu": {
          "description": "The requested DTU for the pool if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedDtuGuarantee": {
          "description": "The requested DTU guarantee.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedElasticPoolName": {
          "description": "The requested name for the elastic pool if available.",
          "readOnly": true,
          "type": "string"
        },
        "requestedStorageLimitInGB": {
          "description": "The requested storage limit for the pool in GB if available.",
          "format": "int64",
          "readOnly": true,
          "type": "integer"
        },
        "requestedStorageLimitInMB": {
          "description": "The requested storage limit in MB.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "serverName": {
          "description": "The name of the server the elastic pool is in.",
          "readOnly": true,
          "type": "string"
        },
        "startTime": {
          "description": "The time the operation started (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "The current state of the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ElasticPoolDatabaseActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents the activity on an elastic pool.",
      "properties": {
        "location": {
          "description": "The geo-location where the resource lives",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "$ref": "#/definitions/ElasticPoolDatabaseActivityProperties",
          "description": "The properties representing the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ElasticPoolDatabaseActivityListResult": {
      "description": "Represents the response to a list elastic pool database activity request.",
      "properties": {
        "value": {
          "description": "The list of elastic pool database activities.",
          "items": {
            "$ref": "#/definitions/ElasticPoolDatabaseActivity"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "ElasticPoolDatabaseActivityProperties": {
      "description": "Represents the properties of an elastic pool database activity.",
      "properties": {
        "currentElasticPoolName": {
          "description": "The name of the current elastic pool the database is in if available.",
          "readOnly": true,
          "type": "string"
        },
        "currentServiceObjective": {
          "description": "The name of the current service objective if available.",
          "readOnly": true,
          "type": "string"
        },
        "databaseName": {
          "description": "The database name.",
          "readOnly": true,
          "type": "string"
        },
        "endTime": {
          "description": "The time the operation finished (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "errorCode": {
          "description": "The error code if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "errorMessage": {
          "description": "The error message if available.",
          "readOnly": true,
          "type": "string"
        },
        "errorSeverity": {
          "description": "The error severity if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "operation": {
          "description": "The operation name.",
          "readOnly": true,
          "type": "string"
        },
        "operationId": {
          "description": "The unique operation ID.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "percentComplete": {
          "description": "The percentage complete if available.",
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "requestedElasticPoolName": {
          "description": "The name for the elastic pool the database is moving into if available.",
          "readOnly": true,
          "type": "string"
        },
        "requestedServiceObjective": {
          "description": "The name of the requested service objective if available.",
          "readOnly": true,
          "type": "string"
        },
        "serverName": {
          "description": "The name of the server the elastic pool is in.",
          "readOnly": true,
          "type": "string"
        },
        "startTime": {
          "description": "The time the operation started (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "The current state of the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ElasticPoolListResult": {
      "description": "Represents the response to a list elastic pool request.",
      "properties": {
        "value": {
          "description": "The list of elastic pools hosted in the server.",
          "items": {
            "$ref": "#/definitions/ElasticPool"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "ElasticPoolProperties": {
      "description": "Represents the properties of an elastic pool.",
      "properties": {
        "creationDate": {
          "description": "The creation date of the elastic pool (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "databaseDtuMax": {
          "description": "The maximum DTU any one database can consume.",
          "format": "int32",
          "type": "integer"
        },
        "databaseDtuMin": {
          "description": "The minimum DTU all databases are guaranteed.",
          "format": "int32",
          "type": "integer"
        },
        "dtu": {
          "description": "The total shared DTU for the database elastic pool.",
          "format": "int32",
          "type": "integer"
        },
        "edition": {
          "description": "The edition of the elastic pool.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ElasticPoolEdition"
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "state": {
          "description": "The state of the elastic pool.",
          "enum": [
            "Creating",
            "Ready",
            "Disabled"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ElasticPoolState"
          }
        },
        "storageMB": {
          "description": "Gets storage limit for the database elastic pool in MB.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "OperationImpact": {
      "description": "Represents impact of an operation, both in absolute and relative terms.",
      "properties": {
        "changeValueAbsolute": {
          "description": "The absolute impact to dimension.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "changeValueRelative": {
          "description": "The relative impact to dimension (null if not applicable)",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "name": {
          "description": "The name of the impact dimension.",
          "readOnly": true,
          "type": "string"
        },
        "unit": {
          "description": "The unit in which estimated impact to dimension is measured.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ProxyResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "ARM proxy resource."
    },
    "RecommendedElasticPool": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a recommented elastic pool.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecommendedElasticPoolProperties",
          "description": "The properites representing the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "RecommendedElasticPoolListMetricsResult": {
      "description": "Represents the response to a list recommended elastic pool metrics request.",
      "properties": {
        "value": {
          "description": "The list of recommended elastic pools metrics.",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPoolMetric"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "RecommendedElasticPoolListResult": {
      "description": "Represents the response to a list recommended elastic pool request.",
      "properties": {
        "value": {
          "description": "The list of recommended elastic pools hosted in the server.",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPool"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "RecommendedElasticPoolMetric": {
      "description": "Represents recommended elastic pool metric.",
      "properties": {
        "dateTime": {
          "description": "The time of metric (ISO8601 format).",
          "format": "date-time",
          "type": "string"
        },
        "dtu": {
          "description": "Gets or sets the DTUs (Database Transaction Units). See https://azure.microsoft.com/documentation/articles/sql-database-what-is-a-dtu/",
          "format": "double",
          "type": "number"
        },
        "sizeGB": {
          "description": "Gets or sets size in gigabytes.",
          "format": "double",
          "type": "number"
        }
      }
    },
    "RecommendedElasticPoolProperties": {
      "description": "Represents the properties of a recommented elastic pool.",
      "properties": {
        "databaseDtuMax": {
          "description": "The maximum DTU for the database.",
          "format": "double",
          "type": "number"
        },
        "databaseDtuMin": {
          "description": "The minimum DTU for the database.",
          "format": "double",
          "type": "number"
        },
        "databaseEdition": {
          "description": "The edition of the recommended elastic pool. The ElasticPoolEdition enumeration contains all the valid editions.",
          "enum": [
            "Basic",
            "Standard",
            "Premium"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ElasticPoolEdition"
          }
        },
        "databases": {
          "description": "The list of databases in this pool. Expanded property",
          "items": {
            "$ref": "#/definitions/Database"
          },
          "readOnly": true,
          "type": "array"
        },
        "dtu": {
          "description": "The DTU for the recommended elastic pool.",
          "format": "double",
          "type": "number"
        },
        "maxObservedDtu": {
          "description": "Gets maximum observed DTU.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "maxObservedStorageMB": {
          "description": "Gets maximum observed storage in megabytes.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "metrics": {
          "description": "The list of databases housed in the server. Expanded property",
          "items": {
            "$ref": "#/definitions/RecommendedElasticPoolMetric"
          },
          "readOnly": true,
          "type": "array"
        },
        "observationPeriodEnd": {
          "description": "The observation period start (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "observationPeriodStart": {
          "description": "The observation period start (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "storageMB": {
          "description": "Gets storage size in megabytes.",
          "format": "double",
          "type": "number"
        }
      }
    },
    "RecommendedIndex": {
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ],
      "description": "Represents a database recommended index.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/RecommendedIndexProperties",
          "description": "The properties representing the resource.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "RecommendedIndexProperties": {
      "description": "Represents the properties of a database recommended index.",
      "properties": {
        "action": {
          "description": "The proposed index action. You can create a missing index, drop an unused index, or rebuild an existing index to improve its performance.",
          "enum": [
            "Create",
            "Drop",
            "Rebuild"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "RecommendedIndexAction"
          }
        },
        "columns": {
          "description": "Columns over which to build index",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "created": {
          "description": "The UTC datetime showing when this resource was created (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "estimatedImpact": {
          "description": "The estimated impact of doing recommended index action.",
          "items": {
            "$ref": "#/definitions/OperationImpact"
          },
          "readOnly": true,
          "type": "array"
        },
        "includedColumns": {
          "description": "The list of column names to be included in the index",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "type": "array"
        },
        "indexScript": {
          "description": "The full build index script",
          "readOnly": true,
          "type": "string"
        },
        "indexType": {
          "description": "The type of index (CLUSTERED, NONCLUSTERED, COLUMNSTORE, CLUSTERED COLUMNSTORE)",
          "enum": [
            "CLUSTERED",
            "NONCLUSTERED",
            "COLUMNSTORE",
            "CLUSTERED COLUMNSTORE"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "RecommendedIndexType"
          }
        },
        "lastModified": {
          "description": "The UTC datetime of when was this resource last changed (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "reportedImpact": {
          "description": "The values reported after index action is complete.",
          "items": {
            "$ref": "#/definitions/OperationImpact"
          },
          "readOnly": true,
          "type": "array"
        },
        "schema": {
          "description": "The schema where table to build index over resides",
          "readOnly": true,
          "type": "string"
        },
        "state": {
          "description": "The current recommendation state.",
          "enum": [
            "Active",
            "Pending",
            "Executing",
            "Verifying",
            "Pending Revert",
            "Reverting",
            "Reverted",
            "Ignored",
            "Expired",
            "Blocked",
            "Success"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "name": "RecommendedIndexState"
          }
        },
        "table": {
          "description": "The table on which to build index.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "Resource": {
      "description": "ARM resource.",
      "properties": {
        "id": {
          "description": "Resource ID.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Resource name.",
          "readOnly": true,
          "type": "string"
        },
        "type": {
          "description": "Resource type.",
          "readOnly": true,
          "type": "string"
        }
      },
      "x-ms-azure-resource": true
    },
    "ServerMetric": {
      "description": "Represents server metrics.",
      "properties": {
        "currentValue": {
          "description": "The current value of the metric.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "displayName": {
          "description": "The metric display name.",
          "readOnly": true,
          "type": "string"
        },
        "limit": {
          "description": "The current limit of the metric.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "name": {
          "description": "Name of the server usage metric.",
          "readOnly": true,
          "type": "string"
        },
        "nextResetTime": {
          "description": "The next reset time for the metric (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "resourceName": {
          "description": "The name of the resource.",
          "readOnly": true,
          "type": "string"
        },
        "unit": {
          "description": "The units of the metric.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ServerMetricListResult": {
      "description": "Represents the response to a list server metrics request.",
      "properties": {
        "value": {
          "description": "The list of server metrics for the server.",
          "items": {
            "$ref": "#/definitions/ServerMetric"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceObjective": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Represents a database service objective.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceObjectiveProperties",
          "description": "Represents the properties of the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "ServiceObjectiveListResult": {
      "description": "Represents the response to a get database service objectives request.",
      "properties": {
        "value": {
          "description": "The list of database service objectives.",
          "items": {
            "$ref": "#/definitions/ServiceObjective"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceObjectiveProperties": {
      "description": "Represents the properties of a database service objective.",
      "properties": {
        "description": {
          "description": "The description for the service level objective.",
          "readOnly": true,
          "type": "string"
        },
        "enabled": {
          "description": "Gets whether the service level objective is enabled.",
          "readOnly": true,
          "type": "boolean"
        },
        "isDefault": {
          "description": "Gets whether the service level objective is the default service objective.",
          "readOnly": true,
          "type": "boolean"
        },
        "isSystem": {
          "description": "Gets whether the service level objective is a system service objective.",
          "readOnly": true,
          "type": "boolean"
        },
        "serviceObjectiveName": {
          "description": "The name for the service objective.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "ServiceTierAdvisor": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Represents a Service Tier Advisor.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/ServiceTierAdvisorProperties",
          "description": "The properites representing the resource.",
          "readOnly": true,
          "x-ms-client-flatten": true
        }
      }
    },
    "ServiceTierAdvisorListResult": {
      "description": "Represents the response to a list service tier advisor request.",
      "properties": {
        "value": {
          "description": "The list of service tier advisors for specified database.",
          "items": {
            "$ref": "#/definitions/ServiceTierAdvisor"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "ServiceTierAdvisorProperties": {
      "description": "Represents the properties of a Service Tier Advisor.",
      "properties": {
        "activeTimeRatio": {
          "description": "The activeTimeRatio for service tier advisor.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "avgDtu": {
          "description": "Gets or sets avgDtu for service tier advisor.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "confidence": {
          "description": "Gets or sets confidence for service tier advisor.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "currentServiceLevelObjective": {
          "description": "Gets or sets currentServiceLevelObjective for service tier advisor.",
          "readOnly": true,
          "type": "string"
        },
        "currentServiceLevelObjectiveId": {
          "description": "Gets or sets currentServiceLevelObjectiveId for service tier advisor.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "databaseSizeBasedRecommendationServiceLevelObjective": {
          "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for service tier advisor.",
          "readOnly": true,
          "type": "string"
        },
        "databaseSizeBasedRecommendationServiceLevelObjectiveId": {
          "description": "Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "disasterPlanBasedRecommendationServiceLevelObjective": {
          "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for service tier advisor.",
          "readOnly": true,
          "type": "string"
        },
        "disasterPlanBasedRecommendationServiceLevelObjectiveId": {
          "description": "Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "maxDtu": {
          "description": "Gets or sets maxDtu for service tier advisor.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "maxSizeInGB": {
          "description": "Gets or sets maxSizeInGB for service tier advisor.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "minDtu": {
          "description": "Gets or sets minDtu for service tier advisor.",
          "format": "double",
          "readOnly": true,
          "type": "number"
        },
        "observationPeriodEnd": {
          "description": "The observation period start (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "observationPeriodStart": {
          "description": "The observation period start (ISO8601 format).",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "overallRecommendationServiceLevelObjective": {
          "description": "Gets or sets overallRecommendationServiceLevelObjective for service tier advisor.",
          "readOnly": true,
          "type": "string"
        },
        "overallRecommendationServiceLevelObjectiveId": {
          "description": "Gets or sets overallRecommendationServiceLevelObjectiveId for service tier advisor.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "serviceLevelObjectiveUsageMetrics": {
          "description": "Gets or sets serviceLevelObjectiveUsageMetrics for the service tier advisor.",
          "items": {
            "$ref": "#/definitions/SloUsageMetric"
          },
          "readOnly": true,
          "type": "array"
        },
        "usageBasedRecommendationServiceLevelObjective": {
          "description": "Gets or sets usageBasedRecommendationServiceLevelObjective for service tier advisor.",
          "readOnly": true,
          "type": "string"
        },
        "usageBasedRecommendationServiceLevelObjectiveId": {
          "description": "Gets or sets usageBasedRecommendationServiceLevelObjectiveId for service tier advisor.",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "SloUsageMetric": {
      "description": "Represents a Slo Usage Metric.",
      "properties": {
        "inRangeTimeRatio": {
          "description": "Gets or sets inRangeTimeRatio for SLO usage metric.",
          "format": "double",
          "type": "number"
        },
        "serviceLevelObjective": {
          "description": "The serviceLevelObjective for SLO usage metric.",
          "enum": [
            "Basic",
            "S0",
            "S1",
            "S2",
            "S3",
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P11",
            "P15",
            "System",
            "System2",
            "ElasticPool"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveName"
          }
        },
        "serviceLevelObjectiveId": {
          "description": "The serviceLevelObjectiveId for SLO usage metric.",
          "enum": [
            "dd6d99bb-f193-4ec1-86f2-43d3bccbc49c",
            "f1173c43-91bd-4aaa-973c-54e79e15235b",
            "1b1ebd4d-d903-4baa-97f9-4ea675f5e928",
            "455330e1-00cd-488b-b5fa-177c226f28b7",
            "789681b8-ca10-4eb0-bdf2-e0b050601b40",
            "7203483a-c4fb-4304-9e9f-17c71c904f5d",
            "a7d1b92d-c987-4375-b54d-2b1d0e0f5bb0",
            "a7c4c615-cfb1-464b-b252-925be0a19446",
            "26e021db-f1f9-4c98-84c6-92af8ef433d7",
            "29dd7459-4a7c-4e56-be22-f0adda49440d",
            "c99ac918-dbea-463f-a475-16ec020fdc12",
            "620323bf-2879-4807-b30d-c2e6d7b3b3aa",
            "33d0db1f-6893-4210-99f9-463fb9b496a4",
            "da24338c-a6c9-46c2-a4bf-4ac95b496ae4"
          ],
          "format": "uuid",
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceObjectiveId"
          }
        }
      }
    },
    "SubResource": {
      "description": "Subresource properties",
      "properties": {
        "id": {
          "description": "The resource ID.",
          "readOnly": true,
          "type": "string"
        },
        "name": {
          "description": "Resource name",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "TrackedResource": {
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ],
      "description": "ARM tracked top level resource.",
      "properties": {
        "location": {
          "description": "Resource location.",
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource tags.",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        }
      },
      "required": [
        "location"
      ]
    },
    "TransparentDataEncryption": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Represents a database transparent data encryption .",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransparentDataEncryptionProperties",
          "description": "Represents the properties of the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TransparentDataEncryptionActivity": {
      "allOf": [
        {
          "$ref": "#/definitions/SubResource"
        }
      ],
      "description": "Represents a database transparent data encryption Scan.",
      "properties": {
        "properties": {
          "$ref": "#/definitions/TransparentDataEncryptionActivityProperties",
          "description": "Represents the properties of the resource.",
          "x-ms-client-flatten": true
        }
      }
    },
    "TransparentDataEncryptionActivityListResult": {
      "description": "Represents the response to a list database transparent data encryption activity request.",
      "properties": {
        "value": {
          "description": "The list of database transparent data encryption activities.",
          "items": {
            "$ref": "#/definitions/TransparentDataEncryptionActivity"
          },
          "type": "array"
        }
      },
      "required": [
        "value"
      ]
    },
    "TransparentDataEncryptionActivityProperties": {
      "description": "Represents the properties of a database transparent data encryption Scan.",
      "properties": {
        "percentComplete": {
          "description": "The percent complete of the transparent data encryption scan for a database.",
          "format": "float",
          "readOnly": true,
          "type": "number"
        },
        "status": {
          "description": "The status of the database.",
          "enum": [
            "Encrypting",
            "Decrypting"
          ],
          "readOnly": true,
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "TransparentDataEncryptionActivityStatus"
          }
        }
      }
    },
    "TransparentDataEncryptionProperties": {
      "description": "Represents the properties of a database transparent data encryption.",
      "properties": {
        "status": {
          "description": "The status of the database transparent data encryption.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TransparentDataEncryptionStatus"
          }
        }
      }
    }
  }
}