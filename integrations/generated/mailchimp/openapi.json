{
  "x-doc-structure": {
    "resources": {
      "root": {
        "title": "API Root",
        "description": "The API root resource links to all other resources available in the API. Calling the root directory also returns details about the MailChimp user account.",
        "paths": [
          "/"
        ],
        "subResources": []
      },
      "authorized-apps": {
        "title": "Authorized Apps",
        "description": "Manage registered, connected apps for your MailChimp account with the Authorized Apps endpoints.",
        "paths": [
          "/authorized-apps",
          "/authorized-apps/{app_id}"
        ]
      },
      "automation": {
        "title": "Automations",
        "description": "MailChimp's free [Automation](http://kb.mailchimp.com/automation/about-automation?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) feature lets you build a series of emails that send to subscribers when triggered by a specific date, activity, or event. Use the API to manage Automation workflows, emails, and queues.",
        "paths": [
          "/automations",
          "/automations/{workflow_id}",
          "/automations/{workflow_id}/actions/start-all-emails",
          "/automations/{workflow_id}/actions/pause-all-emails"
        ],
        "subResources": [
          "automation-email",
          "automation-removed-subscribers"
        ]
      },
      "automation-email": {
        "title": "Emails",
        "description": "Manage individual emails in an Automation workflow.",
        "paths": [
          "/automations/{workflow_id}/emails",
          "/automations/{workflow_id}/emails/{workflow_email_id}",
          "/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause",
          "/automations/{workflow_id}/emails/{workflow_email_id}/actions/start"
        ],
        "subResources": [
          "automation-email-queue"
        ]
      },
      "automation-email-queue": {
        "title": "Queue",
        "description": "Manage list member queues for Automation emails.",
        "paths": [
          "/automations/{workflow_id}/emails/{workflow_email_id}/queue",
          "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}"
        ],
        "subResources": []
      },
      "automation-removed-subscribers": {
        "title": "Removed Subscribers",
        "description": "Remove subscribers from an Automation workflow.",
        "paths": [
          "/automations/{workflow_id}/removed-subscribers"
        ],
        "subResources": []
      },
      "batch-operations": {
        "title": "Batch Operations",
        "description": "Use [batch operations](http://kb.mailchimp.com/api/article/how-to-use-batch-operations?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to complete multiple operations with a single call.",
        "paths": [
          "/batches",
          "/batches/{batch_id}"
        ]
      },
      "batch-webhooks": {
        "title": "Batch Webhooks",
        "description": "Manage webhooks for [batch operations](http://developer.mailchimp.com/documentation/mailchimp/reference/batches/). Learn more about [How to Use Batch Operations](http://developer.mailchimp.com/documentation/mailchimp/guides/how-to-use-batch-operations/).",
        "paths": [
          "/batch-webhooks",
          "/batch-webhooks/{batch_webhook_id}"
        ]
      },
      "campaigns": {
        "title": "Campaigns",
        "description": "[Campaigns](http://kb.mailchimp.com/campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) are how you send emails to your MailChimp list. Use the Campaigns API calls to manage campaigns in your MailChimp account.",
        "paths": [
          "/campaigns",
          "/campaigns/{campaign_id}",
          "/campaigns/{campaign_id}/actions/cancel-send",
          "/campaigns/{campaign_id}/actions/send",
          "/campaigns/{campaign_id}/actions/schedule",
          "/campaigns/{campaign_id}/actions/unschedule",
          "/campaigns/{campaign_id}/actions/pause",
          "/campaigns/{campaign_id}/actions/resume",
          "/campaigns/{campaign_id}/actions/replicate",
          "/campaigns/{campaign_id}/actions/test"
        ],
        "subResources": [
          "campaign-feedback",
          "campaign-checklist",
          "campaign-content"
        ]
      },
      "campaign-feedback": {
        "title": "Feedback",
        "description": "Post comments, reply to team feedback, and send test emails while you're [working together on a MailChimp campaign](http://kb.mailchimp.com/campaigns/design/collaborate-on-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/campaigns/{campaign_id}/feedback",
          "/campaigns/{campaign_id}/feedback/{feedback_id}"
        ]
      },
      "campaign-checklist": {
        "title": "Send Checklist",
        "description": "Review the send checklist for your campaign, and resolve any issues before sending.",
        "paths": [
          "/campaigns/{campaign_id}/send-checklist"
        ]
      },
      "campaign-content": {
        "title": "Content",
        "description": "Manage the HTML, plain-text, and template content for your MailChimp campaigns.",
        "paths": [
          "/campaigns/{campaign_id}/content"
        ]
      },
      "conversations": {
        "title": "Conversations",
        "description": "[Conversation tracking](http://kb.mailchimp.com/lists/managing-subscribers/set-up-and-use-conversations?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) is a paid feature that lets you view subscribers' replies to your campaigns in your MailChimp account.",
        "paths": [
          "/conversations",
          "/conversations/{conversation_id}"
        ],
        "subResources": [
          "conversation-messages"
        ]
      },
      "conversation-messages": {
        "title": "Messages",
        "description": "Manage messages in a specific campaign conversation.",
        "paths": [
          "/conversations/{conversation_id}/messages",
          "/conversations/{conversation_id}/messages/{message_id}"
        ]
      },
      "file-manager-files": {
        "title": "File Manager Files",
        "description": "Manage specific files in the File Manager for your MailChimp account. The [File Manager](http://kb.mailchimp.com/campaigns/images-videos-files/how-to-use-the-file-manager?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) is a place to store images, documents, and other files you include or link to in your campaigns, templates, or signup forms.",
        "paths": [
          "/file-manager/files",
          "/file-manager/files/{file_id}"
        ]
      },
      "file-manager-folders": {
        "title": "File Manager Folders",
        "description": "Manage specific folders in the File Manager for your MailChimp account. The [File Manager](http://kb.mailchimp.com/campaigns/images-videos-files/how-to-use-the-file-manager?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) is a place to store images, documents, and other files you include or link to in your campaigns, templates, or signup forms.",
        "paths": [
          "/file-manager/folders",
          "/file-manager/folders/{folder_id}"
        ]
      },
      "lists": {
        "title": "Lists",
        "description": "A MailChimp list is a powerful and flexible tool that helps you manage your contacts. Learn how to [get started with lists in MailChimp](http://kb.mailchimp.com/lists/growth/getting-started-with-lists?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/lists",
          "/lists/{list_id}"
        ],
        "subResources": [
          "interest-categories",
          "list-segments",
          "abuse-reports",
          "list-activity",
          "list-clients",
          "list-growth-history",
          "list-members",
          "list-merges",
          "list-webhooks",
          "list-signup-forms",
          "list-locations"
        ]
      },
      "list-members": {
        "title": "Members",
        "description": "Manage members of a specific MailChimp list, including currently subscribed, unsubscribed, and bounced members.",
        "paths": [
          "/lists/{list_id}/members",
          "/lists/{list_id}/members/{subscriber_hash}"
        ],
        "subResources": [
          "list-member-activity",
          "list-member-goal",
          "list-member-notes"
        ]
      },
      "list-merges": {
        "title": "Merge Fields",
        "description": "Manage [merge fields](http://kb.mailchimp.com/lists/managing-subscribers/manage-list-and-signup-form-fields?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) (formerly merge vars) for a specific list.",
        "paths": [
          "/lists/{list_id}/merge-fields",
          "/lists/{list_id}/merge-fields/{merge_id}"
        ],
        "subResources": []
      },
      "abuse-reports": {
        "title": "Abuse Reports",
        "description": "Manage [abuse complaints](http://kb.mailchimp.com/accounts/compliance-tips/about-abuse-complaints?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for a specific list. An abuse complaint occurs when your recipient reports an email as spam in their mail program.",
        "paths": [
          "/lists/{list_id}/abuse-reports",
          "/lists/{list_id}/abuse-reports/{report_id}"
        ]
      },
      "list-activity": {
        "title": "Activity",
        "description": "Get recent daily, aggregated activity stats for your list. For example, view unsubscribes, signups, total emails sent, opens, clicks, and more, for up to 180 days.",
        "paths": [
          "/lists/{list_id}/activity"
        ]
      },
      "list-clients": {
        "title": "Clients",
        "description": "Get information about the most popular email clients for subscribers in a specific MailChimp list.",
        "paths": [
          "/lists/{list_id}/clients"
        ]
      },
      "list-growth-history": {
        "title": "Growth History",
        "description": "View a summary of the month-by-month [growth activity](http://kb.mailchimp.com/lists/managing-subscribers/all-about-list-stats?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#listgrowth) for a specific list.",
        "paths": [
          "/lists/{list_id}/growth-history",
          "/lists/{list_id}/growth-history/{month}"
        ]
      },
      "list-webhooks": {
        "title": "Webhooks",
        "description": "Manage [webhooks](http://kb.mailchimp.com/integrations/other-integrations/how-to-set-up-webhooks?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for a specific MailChimp list.",
        "paths": [
          "/lists/{list_id}/webhooks",
          "/lists/{list_id}/webhooks/{webhook_id}"
        ]
      },
      "interest-categories": {
        "title": "Interest Categories",
        "description": "Manage interest categories for a specific list. Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to 'group titles' in the MailChimp application. [Learn more about groups in MailChimp](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/lists/{list_id}/interest-categories",
          "/lists/{list_id}/interest-categories/{interest_category_id}"
        ],
        "subResources": [
          "interests"
        ]
      },
      "interests": {
        "title": "Interests",
        "description": "Manage interests for a specific MailChimp list. Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the MailChimp application. [Learn more about using groups in MailChimp](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/lists/{list_id}/interest-categories/{interest_category_id}/interests",
          "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}"
        ]
      },
      "list-segments": {
        "title": "Segments",
        "description": "Manage segments for a specific MailChimp list. A segment is a section of your list that includes only those subscribers who share specific common field information. [Learn more about segments in MailChimp](http://kb.mailchimp.com/segments/getting-started-with-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/lists/{list_id}/segments",
          "/lists/{list_id}/segments/{segment_id}"
        ],
        "subResources": [
          "list-segment-members"
        ]
      },
      "list-segment-members": {
        "title": "Segment Members",
        "description": "Manage list members in a [saved segment](http://kb.mailchimp.com/segments/how-to-use-saved-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/lists/{list_id}/segments/{segment_id}/members",
          "/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}"
        ]
      },
      "list-member-activity": {
        "title": "Member Activity",
        "description": "Get details about subscribers' recent activity.",
        "paths": [
          "/lists/{list_id}/members/{subscriber_hash}/activity"
        ]
      },
      "list-member-goal": {
        "title": "Member Goals",
        "description": "Get information about recent [goal events](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for a specific list member.",
        "paths": [
          "/lists/{list_id}/members/{subscriber_hash}/goals"
        ]
      },
      "list-member-notes": {
        "title": "Member Notes",
        "description": "Retrieve recent [notes](http://kb.mailchimp.com/lists/managing-subscribers/view-a-subscriber-profile-page?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Notes) for a specific list member.",
        "paths": [
          "/lists/{list_id}/members/{subscriber_hash}/notes",
          "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}"
        ]
      },
      "list-signup-forms": {
        "title": "Signup Forms",
        "description": "Manage [list signup forms](http://kb.mailchimp.com/lists/signup-forms/create-signup-forms-and-response-emails?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/lists/{list_id}/signup-forms"
        ]
      },
      "list-locations": {
        "title": "Locations",
        "description": "Get the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address.",
        "paths": [
          "/lists/{list_id}/locations"
        ]
      },
      "reports": {
        "title": "Reports",
        "description": "Manage campaign reports for your MailChimp account. All Reports endpoints are read-only. MailChimp's campaign and Automation reports analyze clicks, opens, subscribers' social activity, e-commerce data, and more. [Learn more about campaign reports](http://kb.mailchimp.com/reports/about-campaign-reports?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/reports",
          "/reports/{campaign_id}"
        ],
        "subResources": [
          "campaign-abuse",
          "campaign-advice",
          "click-reports",
          "domain-performance-reports",
          "eepurl-reports",
          "email-activity-reports",
          "google-analytics",
          "location-reports",
          "sent-to-reports",
          "sub-reports",
          "unsub-reports",
          "open-reports"
        ]
      },
      "campaign-abuse": {
        "title": "Campaign Abuse",
        "description": "Get information about campaign abuse complaints.",
        "paths": [
          "/reports/{campaign_id}/abuse-reports",
          "/reports/{campaign_id}/abuse-reports/{report_id}"
        ]
      },
      "campaign-advice": {
        "title": "Campaign Advice",
        "description": "Get recent feedback based on a campaign's statistics.",
        "paths": [
          "/reports/{campaign_id}/advice"
        ]
      },
      "open-reports": {
        "title": "Campaign Open Reports",
        "description": "Get a detailed report about any emails in a specific campaign that were opened by the recipient. Learn more about [open tracking](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in MailChimp.",
        "paths": [
          "/reports/{campaign_id}/open-details"
        ]
      },
      "click-reports": {
        "title": "Click Reports",
        "description": "Get detailed information about links clicked in campaigns.",
        "paths": [
          "/reports/{campaign_id}/click-details",
          "/reports/{campaign_id}/click-details/{link_id}"
        ],
        "subResources": [
          "link-clickers"
        ]
      },
      "link-clickers": {
        "title": "Click Reports Members",
        "description": "Get information about specific subscribers who clicked on links in a campaign.",
        "paths": [
          "/reports/{campaign_id}/click-details/{link_id}/members",
          "/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}"
        ]
      },
      "domain-performance-reports": {
        "title": "Domain Performance",
        "description": "Get  statistics for the top-performing domains from a campaign.",
        "paths": [
          "/reports/{campaign_id}/domain-performance"
        ]
      },
      "eepurl-reports": {
        "title": "EepURL Reports",
        "description": "Get a summary of social activity for the campaign, tracked by [EepURL](http://kb.mailchimp.com/reports/eepurl-activity-stats?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/reports/{campaign_id}/eepurl"
        ]
      },
      "email-activity-reports": {
        "title": "Email Activity",
        "description": "Get list member activity for a specific campaign.",
        "paths": [
          "/reports/{campaign_id}/email-activity",
          "/reports/{campaign_id}/email-activity/{subscriber_hash}"
        ]
      },
      "google-analytics": {
        "title": "Google Analytics",
        "description": "Get a summary of Google Analytics reports for a specific campaign.",
        "paths": [
          "/reports/{campaign_id}/google-analytics",
          "/reports/{campaign_id}/google-analytics/{profile_id}"
        ]
      },
      "location-reports": {
        "title": "Location",
        "description": "Get top open locations for a specific campaign.",
        "paths": [
          "/reports/{campaign_id}/locations"
        ]
      },
      "sent-to-reports": {
        "title": "Sent To",
        "description": "Get details about campaign recipients.",
        "paths": [
          "/reports/{campaign_id}/sent-to",
          "/reports/{campaign_id}/sent-to/{subscriber_hash}"
        ]
      },
      "sub-reports": {
        "title": "Sub-Reports",
        "description": "A list of reports for child campaigns of a specific parent campaign. For example, use this endpoint to view [Multivariate](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs), [RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs), and [A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) Campaign reports.",
        "paths": [
          "/reports/{campaign_id}/sub-reports"
        ]
      },
      "unsub-reports": {
        "title": "Unsubscribes",
        "description": "Get information about list members who unsubscribed from a specific campaign.",
        "paths": [
          "/reports/{campaign_id}/unsubscribed",
          "/reports/{campaign_id}/unsubscribed/{subscriber_hash}"
        ]
      },
      "templates": {
        "title": "Templates",
        "description": "Manage your MailChimp templates. A template is an HTML file used to create the layout and basic design for a campaign. [Learn more about templates](http://kb.mailchimp.com/templates/basic-and-themes/types-of-templates?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/templates",
          "/templates/{template_id}"
        ],
        "subResources": [
          "template-default-content"
        ]
      },
      "template-default-content": {
        "title": "Default Content",
        "description": "Manage the default content for a MailChimp template.",
        "paths": [
          "/templates/{template_id}/default-content"
        ]
      },
      "template-folders": {
        "title": "Template Folders",
        "description": "Organize your templates using folders.",
        "paths": [
          "/template-folders",
          "/template-folders/{folder_id}"
        ]
      },
      "campaign-folders": {
        "title": "Campaign Folders",
        "description": "Organize your campaigns using folders.",
        "paths": [
          "/campaign-folders",
          "/campaign-folders/{folder_id}"
        ]
      },
      "ecommerce-stores": {
        "title": "E-commerce Stores",
        "description": "Connect your [E-commerce Store](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#stores) to MailChimp to take advantage of powerful reporting and personalization features and to [learn more about your customers](http://kb.mailchimp.com/integrations/e-commerce/how-to-use-mailchimp-for-e-commerce?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/ecommerce/stores",
          "/ecommerce/stores/{store_id}"
        ],
        "subResources": [
          "ecommerce-customers",
          "ecommerce-orders",
          "ecommerce-products",
          "ecommerce-carts"
        ]
      },
      "ecommerce-customers": {
        "title": "Customers",
        "description": "Add [Customers](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#customers) to your Store to track their orders and to [view E-Commerce Data](http://kb.mailchimp.com/integrations/e-commerce/review-e-commerce-data?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for your MailChimp lists and campaigns. Each Customer is connected to a MailChimp list member, so adding a Customer can also [add or update a list member](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers).",
        "paths": [
          "/ecommerce/stores/{store_id}/customers",
          "/ecommerce/stores/{store_id}/customers/{customer_id}"
        ]
      },
      "ecommerce-orders": {
        "title": "Orders",
        "description": "[Orders](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders) represent successful e-commerce transactions, and this data can be used to provide more detailed campaign reports, track sales, and personalize emails to your targeted consumers, and [view other e-commerce data in your MailChimp account](http://kb.mailchimp.com/integrations/e-commerce/review-e-commerce-data?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "paths": [
          "/ecommerce/orders",
          "/ecommerce/stores/{store_id}/orders",
          "/ecommerce/stores/{store_id}/orders/{order_id}"
        ],
        "subResources": [
          "ecommerce-order-lines"
        ]
      },
      "ecommerce-order-lines": {
        "title": "Order Lines",
        "description": "Each Order contains one or more [Order Lines](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-lines), which represent a specific Product Variant that a Customer purchases.",
        "paths": [
          "/ecommerce/stores/{store_id}/orders/{order_id}/lines",
          "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}"
        ]
      },
      "ecommerce-products": {
        "title": "Products",
        "description": "E-commerce items for sale in your store need to be created as [Products](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#products) so you can add the items to a Cart or an Order. [Each Product requires at least one Product Variant](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#product-variants).",
        "paths": [
          "/ecommerce/stores/{store_id}/products",
          "/ecommerce/stores/{store_id}/products/{product_id}"
        ],
        "subResources": [
          "ecommerce-product-variants",
          "ecommerce-product-images"
        ]
      },
      "ecommerce-product-variants": {
        "title": "Product Variants",
        "description": "A [Product Variant](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#product-variants) represents a specific item for purchase, and is contained within a parent Product. At least one Product Variant is required for each Product.",
        "paths": [
          "/ecommerce/stores/{store_id}/products/{product_id}/variants",
          "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}"
        ]
      },
      "ecommerce-product-images": {
        "title": "Product Images",
        "description": "A [Product Image](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#product-variants) represents a specific product image.",
        "paths": [
          "/ecommerce/stores/{store_id}/products/{product_id}/images",
          "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}"
        ]
      },
      "ecommerce-carts": {
        "title": "Carts",
        "description": "Use [Carts](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#carts) to represent unfinished e-commerce transactions. This can be used to create an [Abandoned Cart workflow](http://kb.mailchimp.com/automation/create-an-abandoned-cart-workflow?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs), or to save a consumer’s shopping cart [pending a successful Order](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-carts-and-orders).",
        "paths": [
          "/ecommerce/stores/{store_id}/carts",
          "/ecommerce/stores/{store_id}/carts/{cart_id}"
        ],
        "subResources": [
          "ecommerce-cart-lines"
        ]
      },
      "ecommerce-cart-lines": {
        "title": "Cart Lines",
        "description": "Each Cart contains one or more [Cart Lines](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#cart-lines), which represent a specific Product Variant that a Customer has added to their shopping cart.",
        "paths": [
          "/ecommerce/stores/{store_id}/carts/{cart_id}/lines",
          "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}"
        ]
      },
      "search-members": {
        "title": "Search Members",
        "description": "[Search the account or a specific list for members](http://kb.mailchimp.com/accounts/management/search-for-subscribers-and-campaigns-in-your-account?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) that match the specified query terms.",
        "paths": [
          "/search-members"
        ]
      },
      "search-campaigns": {
        "title": "Search Campaigns",
        "description": "[Search all of an account's campaigns](http://kb.mailchimp.com/accounts/management/search-for-subscribers-and-campaigns-in-your-account?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the specified query terms.",
        "paths": [
          "/search-campaigns"
        ]
      },
      "ping": {
        "title": "Ping",
        "description": "A health check endpoint for MailChimp API 3.0.",
        "paths": [
          "/ping"
        ]
      }
    }
  },
  "swagger": "2.0",
  "info": {
    "version": "3.0.0",
    "title": "MailChimp Marketing API",
    "contact": {
      "name": "MailChimp API Support",
      "email": "apihelp@mailchimp.com"
    }
  },
  "basePath": "/3.0",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json",
    "application/problem+json"
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API Root",
        "description": "Get links to all other resources available in the API.",
        "operationId": "getRoot",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AccountDetails"
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/authorized-apps": {
      "get": {
        "summary": "Get a list of authorized apps",
        "description": "Get a list of an account's registered, connected applications.",
        "operationId": "getAuthorizedApps",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "apps": {
                  "title": "Authorized Applications",
                  "description": "An array of objects, each representing an authorized application.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "Client ID",
                        "description": "The ID for the application."
                      },
                      "name": {
                        "type": "string",
                        "title": "Application Name",
                        "description": "The name of the application."
                      },
                      "description": {
                        "type": "string",
                        "title": "Application Description",
                        "description": "A short description of the application."
                      },
                      "users": {
                        "type": "array",
                        "title": "Application Users",
                        "description": "An array of usernames for users who have linked the app.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Link your application",
        "description": "Retrieve OAuth2-based credentials to associate API calls with your application.",
        "operationId": "postAuthorizedApps",
        "deprecated": false,
        "parameters": [
          {
            "in": "body",
            "name": "Client Details",
            "description": "Use this endpoint to link your application and retrieve OAuth2-based credentials. This is useful if you can't implement the OAuth2 flow but still want to associate calls with your application.",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "client_id",
                "client_secret"
              ],
              "properties": {
                "client_id": {
                  "type": "string",
                  "title": "Client ID",
                  "description": "The client's unique id/username for authorization."
                },
                "client_secret": {
                  "type": "string",
                  "title": "Client Secret",
                  "description": "The client password for authorization."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "title": "Access Token",
                  "description": "The access token issued by the auth server."
                },
                "viewer_token": {
                  "type": "string",
                  "title": "Viewer Token",
                  "description": "The viewer token issued by the auth server."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/authorized-apps/{app_id}": {
      "get": {
        "summary": "Get information about a specific authorized app",
        "description": "Get information about a specific authorized application.",
        "operationId": "getAuthorizedAppsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/AuthorizedAppID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Client ID",
                  "description": "The ID for the application."
                },
                "name": {
                  "type": "string",
                  "title": "Application Name",
                  "description": "The name of the application."
                },
                "description": {
                  "type": "string",
                  "title": "Application Description",
                  "description": "A short description of the application."
                },
                "users": {
                  "type": "array",
                  "title": "Application Users",
                  "description": "An array of usernames for users who have linked the app.",
                  "items": {
                    "type": "string"
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations": {
      "get": {
        "summary": "Get a list of Automations",
        "description": "Get a summary of an account's Automations.",
        "operationId": "getAutomations",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/AutomationCreateTime_Before"
          },
          {
            "$ref": "#/parameters/AutomationCreateTime_Since"
          },
          {
            "$ref": "#/parameters/AutomationSendTime_Before"
          },
          {
            "$ref": "#/parameters/AutomationSendTime_Since"
          },
          {
            "$ref": "#/parameters/AutomationStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "automations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Automation Workflow",
                    "description": "A summary of an individual Automation workflow's settings and content.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Automation Campaign ID",
                        "description": "A string that identifies the Automation.",
                        "readOnly": true
                      },
                      "create_time": {
                        "type": "string",
                        "title": "Create Time",
                        "format": "date-time",
                        "description": "The date and time the Automation was created.",
                        "readOnly": true
                      },
                      "start_time": {
                        "type": "string",
                        "title": "Start Time",
                        "format": "date-time",
                        "description": "The date and time the Automation was started.",
                        "readOnly": true
                      },
                      "status": {
                        "type": "string",
                        "title": "Automation Status",
                        "description": "The current status of the Automation.",
                        "enum": [
                          "save",
                          "paused",
                          "sending"
                        ],
                        "readOnly": true
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Emails Sent",
                        "description": "The total number of emails sent for the Automation.",
                        "readOnly": true
                      },
                      "recipients": {
                        "type": "object",
                        "title": "List",
                        "description": "List settings for the Automation.",
                        "properties": {
                          "list_id": {
                            "type": "string",
                            "title": "List ID",
                            "description": "The unique list id."
                          },
                          "list_name": {
                            "type": "string",
                            "title": "List Name",
                            "description": "List Name."
                          },
                          "segment_opts": {
                            "type": "object",
                            "title": "Segment Options",
                            "description": "An object representing all segmentation options.",
                            "properties": {
                              "saved_segment_id": {
                                "type": "integer",
                                "title": "Saved Segment ID",
                                "description": "The id for an existing saved segment."
                              },
                              "match": {
                                "type": "string",
                                "title": "Match Type",
                                "description": "Segment match type.",
                                "enum": [
                                  "any",
                                  "all"
                                ]
                              },
                              "conditions": {
                                "type": "array",
                                "title": "Segment Conditions",
                                "description": "An array of segment conditions.",
                                "items": {
                                  "$ref": "#/definitions/SegmentCondition"
                                }
                              }
                            }
                          }
                        }
                      },
                      "settings": {
                        "type": "object",
                        "title": "Automation Campaign Settings",
                        "description": "The settings for the Automation workflow.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "title": "Automation Title",
                            "description": "The title of the Automation."
                          },
                          "from_name": {
                            "type": "string",
                            "title": "From Name",
                            "description": "The 'from' name for the Automation (not an email address)."
                          },
                          "reply_to": {
                            "type": "string",
                            "title": "Reply To Address",
                            "description": "The reply-to email address for the Automation."
                          },
                          "use_conversation": {
                            "type": "boolean",
                            "title": "Conversations",
                            "description": "Whether to use MailChimp's [Conversations](http://kb.mailchimp.com/lists/managing-subscribers/set-up-and-use-conversations?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) feature to manage out-of-office replies."
                          },
                          "to_name": {
                            "type": "string",
                            "title": "To Name",
                            "description": "The Automation's custom 'To' name, typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                          },
                          "authenticate": {
                            "type": "boolean",
                            "title": "Authentication",
                            "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the Automation. Defaults to `true`."
                          },
                          "auto_footer": {
                            "type": "boolean",
                            "title": "Auto-Footer",
                            "description": "Whether to automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the Automation."
                          },
                          "inline_css": {
                            "type": "boolean",
                            "title": "Inline CSS",
                            "description": "Whether to automatically inline the CSS included with the Automation content."
                          }
                        }
                      },
                      "tracking": {
                        "type": "object",
                        "title": "Automation Tracking Options",
                        "description": "The tracking options for the Automation.",
                        "properties": {
                          "opens": {
                            "type": "boolean",
                            "title": "Opens",
                            "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`."
                          },
                          "html_clicks": {
                            "type": "boolean",
                            "title": "HTML Click Tracking",
                            "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the Automation. Defaults to `true`."
                          },
                          "text_clicks": {
                            "type": "boolean",
                            "title": "Plain-Text Click Tracking",
                            "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the Automation. Defaults to `true`."
                          },
                          "goal_tracking": {
                            "type": "boolean",
                            "title": "MailChimp Goal Tracking",
                            "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                          },
                          "ecomm360": {
                            "type": "boolean",
                            "title": "E-commerce Tracking",
                            "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                          },
                          "google_analytics": {
                            "type": "string",
                            "title": "Google Analytics Tracking",
                            "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                          },
                          "clicktale": {
                            "type": "string",
                            "title": "ClickTale Analytics Tracking",
                            "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                          },
                          "salesforce": {
                            "type": "object",
                            "title": "Salesforce CRM Tracking",
                            "description": "Salesforce tracking options for an Automation. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/about-mailchimp-for-salesforce?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                            "properties": {
                              "campaign": {
                                "type": "boolean",
                                "title": "Salesforce Campaign",
                                "description": "Create a campaign in a connected Salesforce account."
                              },
                              "notes": {
                                "type": "boolean",
                                "title": "Salesforce Note",
                                "description": "Update contact notes for a campaign based on a subscriber's email address."
                              }
                            }
                          },
                          "capsule": {
                            "type": "object",
                            "title": "Capsule CRM Tracking",
                            "description": "Capsule tracking options for an Automation. Must be using MailChimp's built-in [Capsule integration](https://connect.mailchimp.com/integrations/capsule-crm-integration?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                            "properties": {
                              "notes": {
                                "type": "boolean",
                                "title": "Capsule Note",
                                "description": "Update contact notes for a campaign based on a subscriber's email addresses."
                              }
                            }
                          }
                        }
                      },
                      "trigger_settings": {
                        "$ref": "#/definitions/AutomationTrigger"
                      },
                      "report_summary": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "type": "object",
                        "title": "Campaign Report Summary",
                        "description": "A summary of opens, clicks, and unsubscribes for sent campaigns.",
                        "properties": {
                          "opens": {
                            "type": "integer",
                            "title": "Automation Opens",
                            "description": "The total number of opens for a campaign.",
                            "readOnly": true
                          },
                          "unique_opens": {
                            "type": "integer",
                            "title": "Unique Opens",
                            "description": "The number of unique opens.",
                            "readOnly": true
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The number of unique opens divided by the total number of successful deliveries.",
                            "readOnly": true
                          },
                          "clicks": {
                            "type": "integer",
                            "title": "Total Clicks",
                            "description": "The total number of clicks for an campaign.",
                            "readOnly": true
                          },
                          "subscriber_clicks": {
                            "type": "integer",
                            "title": "Unique Subscriber Clicks",
                            "description": "The number of unique clicks.",
                            "readOnly": true
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The number of unique clicks, divided by the total number of successful deliveries.",
                            "readOnly": true
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Automation Workflows",
                  "description": "An array of objects, each representing an Automation workflow."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}": {
      "get": {
        "summary": "Get information about a specific Automation workflow",
        "description": "Get a summary of an individual Automation workflow's settings and content. The `trigger_settings` object returns information for the first email in the workflow.",
        "operationId": "getAutomationsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Automation Workflow",
              "description": "A summary of an individual Automation workflow's settings and content.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Automation Campaign ID",
                  "description": "A string that identifies the Automation.",
                  "readOnly": true
                },
                "create_time": {
                  "type": "string",
                  "title": "Create Time",
                  "format": "date-time",
                  "description": "The date and time the Automation was created.",
                  "readOnly": true
                },
                "start_time": {
                  "type": "string",
                  "title": "Start Time",
                  "format": "date-time",
                  "description": "The date and time the Automation was started.",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "title": "Automation Status",
                  "description": "The current status of the Automation.",
                  "enum": [
                    "save",
                    "paused",
                    "sending"
                  ],
                  "readOnly": true
                },
                "emails_sent": {
                  "type": "integer",
                  "title": "Emails Sent",
                  "description": "The total number of emails sent for the Automation.",
                  "readOnly": true
                },
                "recipients": {
                  "type": "object",
                  "title": "List",
                  "description": "List settings for the Automation.",
                  "properties": {
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique list id."
                    },
                    "list_name": {
                      "type": "string",
                      "title": "List Name",
                      "description": "List Name."
                    },
                    "segment_opts": {
                      "type": "object",
                      "title": "Segment Options",
                      "description": "An object representing all segmentation options.",
                      "properties": {
                        "saved_segment_id": {
                          "type": "integer",
                          "title": "Saved Segment ID",
                          "description": "The id for an existing saved segment."
                        },
                        "match": {
                          "type": "string",
                          "title": "Match Type",
                          "description": "Segment match type.",
                          "enum": [
                            "any",
                            "all"
                          ]
                        },
                        "conditions": {
                          "type": "array",
                          "title": "Segment Conditions",
                          "description": "An array of segment conditions.",
                          "items": {
                            "$ref": "#/definitions/SegmentCondition"
                          }
                        }
                      }
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "title": "Automation Campaign Settings",
                  "description": "The settings for the Automation workflow.",
                  "properties": {
                    "title": {
                      "type": "string",
                      "title": "Automation Title",
                      "description": "The title of the Automation."
                    },
                    "from_name": {
                      "type": "string",
                      "title": "From Name",
                      "description": "The 'from' name for the Automation (not an email address)."
                    },
                    "reply_to": {
                      "type": "string",
                      "title": "Reply To Address",
                      "description": "The reply-to email address for the Automation."
                    },
                    "use_conversation": {
                      "type": "boolean",
                      "title": "Conversations",
                      "description": "Whether to use MailChimp's [Conversations](http://kb.mailchimp.com/lists/managing-subscribers/set-up-and-use-conversations?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) feature to manage out-of-office replies."
                    },
                    "to_name": {
                      "type": "string",
                      "title": "To Name",
                      "description": "The Automation's custom 'To' name, typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                    },
                    "authenticate": {
                      "type": "boolean",
                      "title": "Authentication",
                      "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the Automation. Defaults to `true`."
                    },
                    "auto_footer": {
                      "type": "boolean",
                      "title": "Auto-Footer",
                      "description": "Whether to automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the Automation."
                    },
                    "inline_css": {
                      "type": "boolean",
                      "title": "Inline CSS",
                      "description": "Whether to automatically inline the CSS included with the Automation content."
                    }
                  }
                },
                "tracking": {
                  "type": "object",
                  "title": "Automation Tracking Options",
                  "description": "The tracking options for the Automation.",
                  "properties": {
                    "opens": {
                      "type": "boolean",
                      "title": "Opens",
                      "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`."
                    },
                    "html_clicks": {
                      "type": "boolean",
                      "title": "HTML Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the Automation. Defaults to `true`."
                    },
                    "text_clicks": {
                      "type": "boolean",
                      "title": "Plain-Text Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the Automation. Defaults to `true`."
                    },
                    "goal_tracking": {
                      "type": "boolean",
                      "title": "MailChimp Goal Tracking",
                      "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "ecomm360": {
                      "type": "boolean",
                      "title": "E-commerce Tracking",
                      "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "google_analytics": {
                      "type": "string",
                      "title": "Google Analytics Tracking",
                      "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                    },
                    "clicktale": {
                      "type": "string",
                      "title": "ClickTale Analytics Tracking",
                      "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                    },
                    "salesforce": {
                      "type": "object",
                      "title": "Salesforce CRM Tracking",
                      "description": "Salesforce tracking options for an Automation. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/about-mailchimp-for-salesforce?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "campaign": {
                          "type": "boolean",
                          "title": "Salesforce Campaign",
                          "description": "Create a campaign in a connected Salesforce account."
                        },
                        "notes": {
                          "type": "boolean",
                          "title": "Salesforce Note",
                          "description": "Update contact notes for a campaign based on a subscriber's email address."
                        }
                      }
                    },
                    "capsule": {
                      "type": "object",
                      "title": "Capsule CRM Tracking",
                      "description": "Capsule tracking options for an Automation. Must be using MailChimp's built-in [Capsule integration](https://connect.mailchimp.com/integrations/capsule-crm-integration?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "notes": {
                          "type": "boolean",
                          "title": "Capsule Note",
                          "description": "Update contact notes for a campaign based on a subscriber's email addresses."
                        }
                      }
                    }
                  }
                },
                "trigger_settings": {
                  "$ref": "#/definitions/AutomationTrigger"
                },
                "report_summary": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "object",
                  "title": "Campaign Report Summary",
                  "description": "A summary of opens, clicks, and unsubscribes for sent campaigns.",
                  "properties": {
                    "opens": {
                      "type": "integer",
                      "title": "Automation Opens",
                      "description": "The total number of opens for a campaign.",
                      "readOnly": true
                    },
                    "unique_opens": {
                      "type": "integer",
                      "title": "Unique Opens",
                      "description": "The number of unique opens.",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The number of unique opens divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "clicks": {
                      "type": "integer",
                      "title": "Total Clicks",
                      "description": "The total number of clicks for an campaign.",
                      "readOnly": true
                    },
                    "subscriber_clicks": {
                      "type": "integer",
                      "title": "Unique Subscriber Clicks",
                      "description": "The number of unique clicks.",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The number of unique clicks, divided by the total number of successful deliveries.",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/actions/pause-all-emails": {
      "post": {
        "summary": "Pause all emails in an Automation workflow",
        "description": "Pause all emails in a specific Automation workflow.",
        "operationId": "postAutomationsIdActionsPauseAllEmails",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/actions/start-all-emails": {
      "post": {
        "summary": "Start all emails in an Automation workflow",
        "description": "Start all emails in an Automation workflow.",
        "operationId": "postAutomationsIdActionsStartAllEmails",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/emails": {
      "get": {
        "summary": "Get a list of automated emails in a workflow",
        "description": "Get a summary of the emails in an Automation workflow.",
        "operationId": "getAutomationsIdEmails",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Automation Emails",
              "description": "A summary of the emails in an Automation workflow.",
              "properties": {
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Automation Workflow Email",
                    "description": "A summary of an individual Automation workflow email.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Automation Email ID",
                        "description": "A string that uniquely identifies the Automation email.",
                        "readOnly": true
                      },
                      "web_id": {
                        "type": "integer",
                        "title": "Automation Web ID",
                        "description": "The ID used in the MailChimp web application. View this automation in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                        "readonly": true,
                        "example": 33345484
                      },
                      "workflow_id": {
                        "type": "string",
                        "title": "Workflow ID",
                        "description": "A string that uniquely identifies an Automation workflow.",
                        "readOnly": true
                      },
                      "position": {
                        "type": "integer",
                        "title": "Email Position",
                        "description": "The position of an Automation email in a workflow.",
                        "readOnly": true
                      },
                      "delay": {
                        "type": "object",
                        "title": "Automation Delay",
                        "description": "The delay settings for an Automation email.",
                        "properties": {
                          "amount": {
                            "type": "integer",
                            "title": "Delay Amount",
                            "description": "The delay amount for an Automation email."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "now",
                              "day",
                              "hour",
                              "week"
                            ],
                            "title": "Delay Type",
                            "description": "The type of delay for an Automation email."
                          },
                          "direction": {
                            "type": "string",
                            "title": "Delay Direction",
                            "description": "Whether the delay settings describe before or after the delay action of an Automation email.",
                            "enum": [
                              "before",
                              "after"
                            ]
                          },
                          "action": {
                            "type": "string",
                            "title": "Delay Action",
                            "description": "The action that triggers the delay of an Automation email.",
                            "enum": [
                              "previous_campaign_sent",
                              "previous_campaign_opened",
                              "previous_campaign_not_opened",
                              "previous_campaign_clicked_any",
                              "previous_campaign_not_clicked_any",
                              "previous_campaign_specific_clicked",
                              "ecomm_bought_any",
                              "ecomm_bought_product",
                              "ecomm_bought_category",
                              "ecomm_not_bought_any",
                              "ecomm_abandoned_cart",
                              "campaign_sent",
                              "opened_email",
                              "not_opened_email",
                              "clicked_email",
                              "not_clicked_email",
                              "campaign_specific_clicked",
                              "manual",
                              "signup",
                              "merge_changed",
                              "group_add",
                              "group_remove",
                              "mandrill_sent",
                              "mandrill_opened",
                              "mandrill_clicked",
                              "mandrill_any",
                              "api",
                              "goal",
                              "annual",
                              "birthday",
                              "date",
                              "date_added"
                            ]
                          },
                          "action_description": {
                            "type": "string",
                            "title": "Delay Action Description",
                            "description": "The user-friendly description of the action that triggers an Automation email.",
                            "example": "subscribers purchase anything from your store",
                            "readOnly": true
                          },
                          "full_description": {
                            "type": "string",
                            "title": "Full Delay Description",
                            "description": "The user-friendly description of the delay and trigger action settings for an Automation email.",
                            "example": "1 day after subscribers purchase anything from your store",
                            "readOnly": true
                          }
                        }
                      },
                      "create_time": {
                        "type": "string",
                        "title": "Create Time",
                        "format": "date-time",
                        "description": "The date and time the campaign was created.",
                        "readOnly": true
                      },
                      "start_time": {
                        "type": "string",
                        "title": "Start Time",
                        "format": "date-time",
                        "description": "The date and time the campaign was started.",
                        "readOnly": true
                      },
                      "archive_url": {
                        "type": "string",
                        "title": "Archive URL",
                        "description": "The link to the campaign's archive version.",
                        "readOnly": true
                      },
                      "status": {
                        "type": "string",
                        "title": "Campaign Status",
                        "description": "The current status of the campaign.",
                        "enum": [
                          "save",
                          "paused",
                          "sending"
                        ],
                        "readOnly": true
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Emails Sent",
                        "description": "The total number of emails sent for this campaign.",
                        "readOnly": true
                      },
                      "send_time": {
                        "type": "string",
                        "title": "Send Time",
                        "format": "date-time",
                        "description": " The date and time a campaign was sent.",
                        "readOnly": true
                      },
                      "content_type": {
                        "type": "string",
                        "title": "Content Type",
                        "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                        "readOnly": true
                      },
                      "recipients": {
                        "type": "object",
                        "title": "List",
                        "description": "List settings for the campaign.",
                        "properties": {
                          "list_id": {
                            "type": "string",
                            "title": "List ID",
                            "description": "The unique list id."
                          },
                          "segment_opts": {
                            "$ref": "#/definitions/SegmentationOptions"
                          }
                        }
                      },
                      "settings": {
                        "type": "object",
                        "title": "Campaign Settings",
                        "description": "Settings for the campaign including the email subject, from name, and from email address.",
                        "properties": {
                          "subject_line": {
                            "type": "string",
                            "title": "Campaign Subject Line",
                            "description": "The subject line for the campaign."
                          },
                          "preview_text": {
                            "type": "string",
                            "title": "Campaign Preview Text",
                            "description": "The preview text for the campaign."
                          },
                          "title": {
                            "type": "string",
                            "title": "Campaign Title",
                            "description": "The title of the campaign."
                          },
                          "from_name": {
                            "type": "string",
                            "title": "From Name",
                            "description": "The 'from' name on the campaign (not an email address)."
                          },
                          "reply_to": {
                            "type": "string",
                            "title": "Reply To Address",
                            "description": "The reply-to email address for the campaign."
                          },
                          "authenticate": {
                            "type": "boolean",
                            "title": "Authentication",
                            "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                          },
                          "auto_footer": {
                            "type": "boolean",
                            "title": "Auto-Footer",
                            "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                          },
                          "inline_css": {
                            "type": "boolean",
                            "title": "Inline CSS",
                            "description": "Automatically inline the CSS included with the campaign content."
                          },
                          "auto_tweet": {
                            "type": "boolean",
                            "title": "Auto-Tweet",
                            "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                          },
                          "auto_fb_post": {
                            "type": "array",
                            "title": "Auto Post to Facebook",
                            "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to."
                          },
                          "fb_comments": {
                            "type": "boolean",
                            "title": "Facebook Comments",
                            "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                          },
                          "template_id": {
                            "type": "integer",
                            "title": "Template ID",
                            "description": "The id for the template used in this campaign."
                          },
                          "drag_and_drop": {
                            "type": "boolean",
                            "title": "Drag And Drop Campaign",
                            "description": "Whether the campaign uses the drag-and-drop editor.",
                            "readOnly": true
                          }
                        }
                      },
                      "tracking": {
                        "type": "object",
                        "title": "Campaign Tracking Options",
                        "description": "The tracking options for a campaign.",
                        "properties": {
                          "opens": {
                            "type": "boolean",
                            "title": "Opens",
                            "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`."
                          },
                          "html_clicks": {
                            "type": "boolean",
                            "title": "HTML Click Tracking",
                            "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`."
                          },
                          "text_clicks": {
                            "type": "boolean",
                            "title": "Plain-Text Click Tracking",
                            "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`."
                          },
                          "goal_tracking": {
                            "type": "boolean",
                            "title": "MailChimp Goal Tracking",
                            "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                          },
                          "ecomm360": {
                            "type": "boolean",
                            "title": "E-commerce Tracking",
                            "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                          },
                          "google_analytics": {
                            "type": "string",
                            "title": "Google Analytics Tracking",
                            "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                          },
                          "clicktale": {
                            "type": "string",
                            "title": "ClickTale Analytics Tracking",
                            "description": "The custom slug for [Click Tale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                          },
                          "salesforce": {
                            "type": "object",
                            "title": "Salesforce CRM Tracking",
                            "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                            "properties": {
                              "campaign": {
                                "type": "boolean",
                                "title": "Salesforce Campaign",
                                "description": "Create a campaign in a connected Salesforce account."
                              },
                              "notes": {
                                "type": "boolean",
                                "title": "Salesforce Note",
                                "description": "Update contact notes for a campaign based on a subscriber's email address."
                              }
                            }
                          },
                          "capsule": {
                            "type": "object",
                            "title": "Capsule CRM Tracking",
                            "description": "Capsule tracking option for a campaign. Must be using MailChimp's built-in [Capsule integration](https://connect.mailchimp.com/integrations/capsule-crm-integration?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                            "properties": {
                              "notes": {
                                "type": "boolean",
                                "title": "Capsule Note",
                                "description": "Update contact notes for a campaign based on a subscriber's email address."
                              }
                            }
                          }
                        }
                      },
                      "social_card": {
                        "type": "object",
                        "title": "Campaign Social Card",
                        "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "properties": {
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The url for the header image for the card."
                          },
                          "description": {
                            "type": "string",
                            "title": "Campaign Description",
                            "description": "A short summary of the campaign to display."
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title for the card. Typically the subject line of the campaign."
                          }
                        }
                      },
                      "trigger_settings": {
                        "$ref": "#/definitions/AutomationTrigger"
                      },
                      "report_summary": {
                        "type": "object",
                        "title": "Campaign Report Summary",
                        "description": "For sent campaigns, a summary of opens, clicks, and unsubscribes.",
                        "properties": {
                          "opens": {
                            "type": "integer",
                            "title": "Automation Opens",
                            "description": "The total number of opens for a campaign.",
                            "readOnly": true
                          },
                          "unique_opens": {
                            "type": "integer",
                            "title": "Unique Opens",
                            "description": "The number of unique opens.",
                            "readOnly": true
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The number of unique opens divided by the total number of successful deliveries.",
                            "readOnly": true
                          },
                          "clicks": {
                            "type": "integer",
                            "title": "Total Clicks",
                            "description": "The total number of clicks for an campaign.",
                            "readOnly": true
                          },
                          "subscriber_clicks": {
                            "type": "integer",
                            "title": "Unique Subscriber Clicks",
                            "description": "The number of unique clicks.",
                            "readOnly": true
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The number of unique clicks divided by the total number of successful deliveries.",
                            "readOnly": true
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Emails",
                  "description": "An array of objects, each representing an email in an Automation workflow."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/emails/{workflow_email_id}": {
      "get": {
        "summary": "Get information about a specific workflow email",
        "description": "Get information about an individual Automation workflow email.",
        "operationId": "getAutomationsIdEmailsId",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "in": "path",
            "name": "workflow_email_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow email."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Automation Workflow Email",
              "description": "A summary of an individual Automation workflow email.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Automation Email ID",
                  "description": "A string that uniquely identifies the Automation email.",
                  "readOnly": true
                },
                "web_id": {
                  "type": "integer",
                  "title": "Automation Web ID",
                  "description": "The ID used in the MailChimp web application. View this automation in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                  "readonly": true,
                  "example": 33345484
                },
                "workflow_id": {
                  "type": "string",
                  "title": "Workflow ID",
                  "description": "A string that uniquely identifies an Automation workflow.",
                  "readOnly": true
                },
                "position": {
                  "type": "integer",
                  "title": "Email Position",
                  "description": "The position of an Automation email in a workflow.",
                  "readOnly": true
                },
                "delay": {
                  "type": "object",
                  "title": "Automation Delay",
                  "description": "The delay settings for an Automation email.",
                  "properties": {
                    "amount": {
                      "type": "integer",
                      "title": "Delay Amount",
                      "description": "The delay amount for an Automation email."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "now",
                        "day",
                        "hour",
                        "week"
                      ],
                      "title": "Delay Type",
                      "description": "The type of delay for an Automation email."
                    },
                    "direction": {
                      "type": "string",
                      "title": "Delay Direction",
                      "description": "Whether the delay settings describe before or after the delay action of an Automation email.",
                      "enum": [
                        "before",
                        "after"
                      ]
                    },
                    "action": {
                      "type": "string",
                      "title": "Delay Action",
                      "description": "The action that triggers the delay of an Automation email.",
                      "enum": [
                        "previous_campaign_sent",
                        "previous_campaign_opened",
                        "previous_campaign_not_opened",
                        "previous_campaign_clicked_any",
                        "previous_campaign_not_clicked_any",
                        "previous_campaign_specific_clicked",
                        "ecomm_bought_any",
                        "ecomm_bought_product",
                        "ecomm_bought_category",
                        "ecomm_not_bought_any",
                        "ecomm_abandoned_cart",
                        "campaign_sent",
                        "opened_email",
                        "not_opened_email",
                        "clicked_email",
                        "not_clicked_email",
                        "campaign_specific_clicked",
                        "manual",
                        "signup",
                        "merge_changed",
                        "group_add",
                        "group_remove",
                        "mandrill_sent",
                        "mandrill_opened",
                        "mandrill_clicked",
                        "mandrill_any",
                        "api",
                        "goal",
                        "annual",
                        "birthday",
                        "date",
                        "date_added"
                      ]
                    },
                    "action_description": {
                      "type": "string",
                      "title": "Delay Action Description",
                      "description": "The user-friendly description of the action that triggers an Automation email.",
                      "example": "subscribers purchase anything from your store",
                      "readOnly": true
                    },
                    "full_description": {
                      "type": "string",
                      "title": "Full Delay Description",
                      "description": "The user-friendly description of the delay and trigger action settings for an Automation email.",
                      "example": "1 day after subscribers purchase anything from your store",
                      "readOnly": true
                    }
                  }
                },
                "create_time": {
                  "type": "string",
                  "title": "Create Time",
                  "format": "date-time",
                  "description": "The date and time the campaign was created.",
                  "readOnly": true
                },
                "start_time": {
                  "type": "string",
                  "title": "Start Time",
                  "format": "date-time",
                  "description": "The date and time the campaign was started.",
                  "readOnly": true
                },
                "archive_url": {
                  "type": "string",
                  "title": "Archive URL",
                  "description": "The link to the campaign's archive version.",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "title": "Campaign Status",
                  "description": "The current status of the campaign.",
                  "enum": [
                    "save",
                    "paused",
                    "sending"
                  ],
                  "readOnly": true
                },
                "emails_sent": {
                  "type": "integer",
                  "title": "Emails Sent",
                  "description": "The total number of emails sent for this campaign.",
                  "readOnly": true
                },
                "send_time": {
                  "type": "string",
                  "title": "Send Time",
                  "format": "date-time",
                  "description": " The date and time a campaign was sent.",
                  "readOnly": true
                },
                "content_type": {
                  "type": "string",
                  "title": "Content Type",
                  "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                  "readOnly": true
                },
                "recipients": {
                  "type": "object",
                  "title": "List",
                  "description": "List settings for the campaign.",
                  "properties": {
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique list id."
                    },
                    "segment_opts": {
                      "$ref": "#/definitions/SegmentationOptions"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "title": "Campaign Settings",
                  "description": "Settings for the campaign including the email subject, from name, and from email address.",
                  "properties": {
                    "subject_line": {
                      "type": "string",
                      "title": "Campaign Subject Line",
                      "description": "The subject line for the campaign."
                    },
                    "preview_text": {
                      "type": "string",
                      "title": "Campaign Preview Text",
                      "description": "The preview text for the campaign."
                    },
                    "title": {
                      "type": "string",
                      "title": "Campaign Title",
                      "description": "The title of the campaign."
                    },
                    "from_name": {
                      "type": "string",
                      "title": "From Name",
                      "description": "The 'from' name on the campaign (not an email address)."
                    },
                    "reply_to": {
                      "type": "string",
                      "title": "Reply To Address",
                      "description": "The reply-to email address for the campaign."
                    },
                    "authenticate": {
                      "type": "boolean",
                      "title": "Authentication",
                      "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                    },
                    "auto_footer": {
                      "type": "boolean",
                      "title": "Auto-Footer",
                      "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                    },
                    "inline_css": {
                      "type": "boolean",
                      "title": "Inline CSS",
                      "description": "Automatically inline the CSS included with the campaign content."
                    },
                    "auto_tweet": {
                      "type": "boolean",
                      "title": "Auto-Tweet",
                      "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                    },
                    "auto_fb_post": {
                      "type": "array",
                      "title": "Auto Post to Facebook",
                      "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to."
                    },
                    "fb_comments": {
                      "type": "boolean",
                      "title": "Facebook Comments",
                      "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                    },
                    "template_id": {
                      "type": "integer",
                      "title": "Template ID",
                      "description": "The id for the template used in this campaign."
                    },
                    "drag_and_drop": {
                      "type": "boolean",
                      "title": "Drag And Drop Campaign",
                      "description": "Whether the campaign uses the drag-and-drop editor.",
                      "readOnly": true
                    }
                  }
                },
                "tracking": {
                  "type": "object",
                  "title": "Campaign Tracking Options",
                  "description": "The tracking options for a campaign.",
                  "properties": {
                    "opens": {
                      "type": "boolean",
                      "title": "Opens",
                      "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`."
                    },
                    "html_clicks": {
                      "type": "boolean",
                      "title": "HTML Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`."
                    },
                    "text_clicks": {
                      "type": "boolean",
                      "title": "Plain-Text Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`."
                    },
                    "goal_tracking": {
                      "type": "boolean",
                      "title": "MailChimp Goal Tracking",
                      "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "ecomm360": {
                      "type": "boolean",
                      "title": "E-commerce Tracking",
                      "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "google_analytics": {
                      "type": "string",
                      "title": "Google Analytics Tracking",
                      "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                    },
                    "clicktale": {
                      "type": "string",
                      "title": "ClickTale Analytics Tracking",
                      "description": "The custom slug for [Click Tale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                    },
                    "salesforce": {
                      "type": "object",
                      "title": "Salesforce CRM Tracking",
                      "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "campaign": {
                          "type": "boolean",
                          "title": "Salesforce Campaign",
                          "description": "Create a campaign in a connected Salesforce account."
                        },
                        "notes": {
                          "type": "boolean",
                          "title": "Salesforce Note",
                          "description": "Update contact notes for a campaign based on a subscriber's email address."
                        }
                      }
                    },
                    "capsule": {
                      "type": "object",
                      "title": "Capsule CRM Tracking",
                      "description": "Capsule tracking option for a campaign. Must be using MailChimp's built-in [Capsule integration](https://connect.mailchimp.com/integrations/capsule-crm-integration?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "notes": {
                          "type": "boolean",
                          "title": "Capsule Note",
                          "description": "Update contact notes for a campaign based on a subscriber's email address."
                        }
                      }
                    }
                  }
                },
                "social_card": {
                  "type": "object",
                  "title": "Campaign Social Card",
                  "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The url for the header image for the card."
                    },
                    "description": {
                      "type": "string",
                      "title": "Campaign Description",
                      "description": "A short summary of the campaign to display."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title for the card. Typically the subject line of the campaign."
                    }
                  }
                },
                "trigger_settings": {
                  "$ref": "#/definitions/AutomationTrigger"
                },
                "report_summary": {
                  "type": "object",
                  "title": "Campaign Report Summary",
                  "description": "For sent campaigns, a summary of opens, clicks, and unsubscribes.",
                  "properties": {
                    "opens": {
                      "type": "integer",
                      "title": "Automation Opens",
                      "description": "The total number of opens for a campaign.",
                      "readOnly": true
                    },
                    "unique_opens": {
                      "type": "integer",
                      "title": "Unique Opens",
                      "description": "The number of unique opens.",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The number of unique opens divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "clicks": {
                      "type": "integer",
                      "title": "Total Clicks",
                      "description": "The total number of clicks for an campaign.",
                      "readOnly": true
                    },
                    "subscriber_clicks": {
                      "type": "integer",
                      "title": "Unique Subscriber Clicks",
                      "description": "The number of unique clicks.",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The number of unique clicks divided by the total number of successful deliveries.",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a workflow email",
        "description": "Removes an individual Automation workflow email. Emails from certain workflow types, including the Abandoned Cart Email (abandonedCart) and Product Retargeting Email (abandonedBrowse) Workflows, cannot be deleted.",
        "operationId": "deleteAutomationsIdEmailsId",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "in": "path",
            "name": "workflow_email_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow email."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/emails/{workflow_email_id}/queue": {
      "get": {
        "summary": "View queued subscribers for an automated email",
        "description": "Get information about an Automation email queue.",
        "operationId": "getAutomationsIdEmailsIdQueue",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "in": "path",
            "name": "workflow_email_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow email."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "workflow_id": {
                  "type": "string",
                  "title": "Workflow ID",
                  "description": "A string that uniquely identifies an Automation workflow.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Automation Email ID",
                  "description": "A string that uniquely identifies an email in an Automation workflow.",
                  "readOnly": true
                },
                "queue": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AutomationWorkflowQueuedSubscriber"
                  },
                  "title": "Trigger",
                  "description": "An array of objects, each representing a subscriber queue for an email in an Automation workflow.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a subscriber to a workflow email",
        "description": "Manually add a subscriber to a workflow, bypassing the default trigger settings. You can also use this endpoint to trigger a series of automated emails in an [API 3.0 workflow type](http://kb.mailchimp.com/automation/about-automation-workflow-types?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Using-the-API) or add subscribers to an automated email queue that uses the [API request delay type](http://kb.mailchimp.com/automation/about-automation-workflow-types?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Using-the-API).",
        "operationId": "postAutomationsIdEmailsIdQueue",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "in": "path",
            "name": "workflow_email_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow email."
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Subscriber in Automation Queue",
              "description": "Information about subscribers in an Automation email queue.",
              "required": [
                "email_address"
              ],
              "properties": {
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The list member's email address."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber in Automation Queue",
              "description": "Information about subscribers in an Automation email queue.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "workflow_id": {
                  "type": "string",
                  "title": "Workflow ID",
                  "description": "A string that uniquely identifies an Automation workflow.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Automation Email ID",
                  "description": "A string that uniquely identifies an email in an Automation workflow.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that uniquely identifies a list.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The list member's email address."
                },
                "next_send": {
                  "type": "string",
                  "title": "Next Send",
                  "format": "date-time",
                  "description": "The date and time of the next send for the workflow email.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/emails/{workflow_email_id}/queue/{subscriber_hash}": {
      "get": {
        "summary": "View specific subscriber in email queue",
        "description": "Get information about a specific subscriber in an Automation email queue.",
        "operationId": "getAutomationsIdEmailsIdQueueId",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "in": "path",
            "name": "workflow_email_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow email."
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber in Automation Queue",
              "description": "Information about subscribers in an Automation email queue.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "workflow_id": {
                  "type": "string",
                  "title": "Workflow ID",
                  "description": "A string that uniquely identifies an Automation workflow.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Automation Email ID",
                  "description": "A string that uniquely identifies an email in an Automation workflow.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that uniquely identifies a list.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The list member's email address."
                },
                "next_send": {
                  "type": "string",
                  "title": "Next Send",
                  "format": "date-time",
                  "description": "The date and time of the next send for the workflow email.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/emails/{workflow_email_id}/actions/pause": {
      "post": {
        "summary": "Pause an automated email",
        "description": "Pause an automated email.",
        "operationId": "postAutomationsIdEmailsIdActionsPause",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "in": "path",
            "name": "workflow_email_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow email."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/emails/{workflow_email_id}/actions/start": {
      "post": {
        "summary": "Start an automated email",
        "description": "Start an automated email.",
        "operationId": "postAutomationsIdEmailsIdActionsStart",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "in": "path",
            "name": "workflow_email_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow email."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/removed-subscribers": {
      "get": {
        "summary": "View all subscribers removed from a workflow",
        "description": "Get information about subscribers who were [removed from an Automation workflow](http://kb.mailchimp.com/automation/add-or-remove-subscribers-from-automation-workflow?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "getAutomationsIdRemovedSubscribers",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Removed Subscribers",
              "description": "A summary of the subscribers who were removed from an Automation workflow.",
              "properties": {
                "workflow_id": {
                  "type": "string",
                  "title": "Workflow ID",
                  "description": "A string that uniquely identifies an Automation workflow.",
                  "readOnly": true
                },
                "subscribers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Subscriber Removed from Automation Workflow",
                    "description": "A summary of a subscriber removed from an Automation workflow.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "workflow_id": {
                        "type": "string",
                        "title": "Workflow ID",
                        "description": "A string that uniquely identifies an Automation workflow.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "A string that uniquely identifies a list.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "The list member's email address."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Trigger",
                  "description": "An array of objects, each representing a subscriber who was removed from an Automation workflow.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Remove subscriber from a workflow",
        "description": "[Remove a subscriber](http://kb.mailchimp.com/automation/add-or-remove-subscribers-from-automation-workflow?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) from a specific Automation workflow. You can remove a subscriber at any point in an Automation workflow, regardless of how many emails they've been sent from that workflow. Once they're removed, they can never be added back to the same workflow.",
        "operationId": "postAutomationsIdRemovedSubscribers",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Subscriber in Automation Queue",
              "description": "Information about subscribers in an Automation email queue.",
              "required": [
                "email_address"
              ],
              "properties": {
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The list member's email address."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber Removed from Automation Workflow",
              "description": "A summary of a subscriber removed from an Automation workflow.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "workflow_id": {
                  "type": "string",
                  "title": "Workflow ID",
                  "description": "A string that uniquely identifies an Automation workflow.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that uniquely identifies a list.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The list member's email address."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/automations/{workflow_id}/removed-subscribers/{subscriber_hash}": {
      "get": {
        "summary": "View a specific subscriber who was removed from a workflow",
        "description": "Get information about a specific subscriber who was [removed from an Automation workflow](http://kb.mailchimp.com/automation/add-or-remove-subscribers-from-automation-workflow?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "getAutomationsIdRemovedSubscribersId",
        "parameters": [
          {
            "in": "path",
            "name": "workflow_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the Automation workflow."
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber Removed from Automation Workflow",
              "description": "A summary of a subscriber removed from an Automation workflow.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "workflow_id": {
                  "type": "string",
                  "title": "Workflow ID",
                  "description": "A string that uniquely identifies an Automation workflow.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that uniquely identifies a list.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The list member's email address."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/batches": {
      "get": {
        "summary": "Get a list of batch requests",
        "description": "Get a summary of batch requests that have been made.",
        "operationId": "getBatches",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch Operations",
              "description": "A summary of batch requests that have been made.",
              "properties": {
                "batches": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Batch",
                    "description": "The status of a batch request",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Batch ID",
                        "description": "A string that uniquely identifies this batch request.",
                        "readOnly": true
                      },
                      "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "The status of the batch call. [Learn more](http://developer.mailchimp.com/documentation/mailchimp/guides/how-to-use-batch-operations/) about how batch operations are processed.",
                        "enum": [
                          "pending",
                          "preprocessing",
                          "started",
                          "finalizing",
                          "finished"
                        ],
                        "readOnly": true
                      },
                      "total_operations": {
                        "type": "integer",
                        "title": "Total Operations",
                        "description": "The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.",
                        "readOnly": true
                      },
                      "finished_operations": {
                        "type": "integer",
                        "title": "Finished Operations",
                        "description": "The number of completed operations. This includes operations that returned an error.",
                        "readOnly": true
                      },
                      "errored_operations": {
                        "type": "integer",
                        "title": "Error Operations",
                        "description": "The number of completed operations that returned an error.",
                        "readOnly": true
                      },
                      "submitted_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Submitted At",
                        "description": "The date and time when the server received the batch request.",
                        "readOnly": true
                      },
                      "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Completed At",
                        "description": "The date and time when all operations in the batch request completed.",
                        "readOnly": true
                      },
                      "response_body_url": {
                        "type": "string",
                        "title": "Response Body URL",
                        "description": "The URL of the gzipped archive of the results of all the operations.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Batches",
                  "description": "An array of objects representing batch calls."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Start a batch operation",
        "description": "Begin processing a batch operations request.",
        "operationId": "postBatches",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "operations": {
                  "type": "array",
                  "title": "Operations List",
                  "description": "An array of objects that describes operations to perform.",
                  "items": {
                    "type": "object",
                    "title": "Operations",
                    "required": [
                      "method",
                      "path"
                    ],
                    "properties": {
                      "method": {
                        "type": "string",
                        "title": "HTTP Method",
                        "description": "The HTTP method to use for the operation.",
                        "enums": [
                          "GET",
                          "POST",
                          "PUT",
                          "PATCH"
                        ],
                        "example": "POST"
                      },
                      "path": {
                        "type": "string",
                        "title": "Path",
                        "description": "The relative path to use for the operation.",
                        "example": "/lists"
                      },
                      "params": {
                        "type": "object",
                        "title": "URL params",
                        "description": "Any URL params to use, only applies to GET operations.",
                        "example": "{\"limit\":10,\"offset\":0}"
                      },
                      "body": {
                        "type": "string",
                        "title": "Body",
                        "description": "A string containing the JSON body to use with the request.",
                        "example": "{\"title\":\"Test\"}"
                      },
                      "operation_id": {
                        "type": "string",
                        "title": "Operation ID",
                        "description": "An optional client-supplied id returned with the operation results.",
                        "example": "my-id-123"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch",
              "description": "The status of a batch request",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Batch ID",
                  "description": "A string that uniquely identifies this batch request.",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "The status of the batch call. [Learn more](http://developer.mailchimp.com/documentation/mailchimp/guides/how-to-use-batch-operations/) about how batch operations are processed.",
                  "enum": [
                    "pending",
                    "preprocessing",
                    "started",
                    "finalizing",
                    "finished"
                  ],
                  "readOnly": true
                },
                "total_operations": {
                  "type": "integer",
                  "title": "Total Operations",
                  "description": "The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.",
                  "readOnly": true
                },
                "finished_operations": {
                  "type": "integer",
                  "title": "Finished Operations",
                  "description": "The number of completed operations. This includes operations that returned an error.",
                  "readOnly": true
                },
                "errored_operations": {
                  "type": "integer",
                  "title": "Error Operations",
                  "description": "The number of completed operations that returned an error.",
                  "readOnly": true
                },
                "submitted_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Submitted At",
                  "description": "The date and time when the server received the batch request.",
                  "readOnly": true
                },
                "completed_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Completed At",
                  "description": "The date and time when all operations in the batch request completed.",
                  "readOnly": true
                },
                "response_body_url": {
                  "type": "string",
                  "title": "Response Body URL",
                  "description": "The URL of the gzipped archive of the results of all the operations.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/batches/{batch_id}": {
      "get": {
        "summary": "Get the status of a batch operation request",
        "description": "Get the status of a batch request.",
        "operationId": "getBatchesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "in": "path",
            "name": "batch_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the batch operation."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch",
              "description": "The status of a batch request",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Batch ID",
                  "description": "A string that uniquely identifies this batch request.",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "The status of the batch call. [Learn more](http://developer.mailchimp.com/documentation/mailchimp/guides/how-to-use-batch-operations/) about how batch operations are processed.",
                  "enum": [
                    "pending",
                    "preprocessing",
                    "started",
                    "finalizing",
                    "finished"
                  ],
                  "readOnly": true
                },
                "total_operations": {
                  "type": "integer",
                  "title": "Total Operations",
                  "description": "The total number of operations to complete as part of this batch request. For GET requests requiring pagination, each page counts as a separate operation.",
                  "readOnly": true
                },
                "finished_operations": {
                  "type": "integer",
                  "title": "Finished Operations",
                  "description": "The number of completed operations. This includes operations that returned an error.",
                  "readOnly": true
                },
                "errored_operations": {
                  "type": "integer",
                  "title": "Error Operations",
                  "description": "The number of completed operations that returned an error.",
                  "readOnly": true
                },
                "submitted_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Submitted At",
                  "description": "The date and time when the server received the batch request.",
                  "readOnly": true
                },
                "completed_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Completed At",
                  "description": "The date and time when all operations in the batch request completed.",
                  "readOnly": true
                },
                "response_body_url": {
                  "type": "string",
                  "title": "Response Body URL",
                  "description": "The URL of the gzipped archive of the results of all the operations.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a batch request and stop if from processing further.",
        "description": "Stops a batch request from running. Since only one batch request is run at a time, this can be used to cancel a long running request. The results of any completed operations will not be available after this call.",
        "operationId": "deleteBatchesId",
        "parameters": [
          {
            "in": "path",
            "name": "batch_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the batch operation."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/batch-webhooks": {
      "get": {
        "summary": "Get a list of all webhooks configured for batches",
        "description": "Get all webhooks that have been configured for batches.",
        "operationId": "getBatchWebhooks",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch Webhooks",
              "description": "Manage webhooks for batch requests.",
              "properties": {
                "webhooks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Batch Webhook",
                    "description": "A webook configured for batch status updates.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Batch Webook ID",
                        "description": "A string that uniquely identifies this Batch Webhook.",
                        "readOnly": true
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "A valid URL for the Webhook.",
                        "readOnly": false,
                        "example": "http://yourdomain.com/webhook"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Webhooks",
                  "description": "An array of objects, each representing a Batch Webhook."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Configure a webhook for batches",
        "description": "Configure a webhook that will fire whenever any batch request completes processing.",
        "operationId": "postBatchWebhooks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Batch Webhook",
              "description": "Add a new Batch Webook.",
              "required": [
                "url"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": false,
                  "example": "http://yourdomain.com/webhook"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch Webhook",
              "description": "A webook configured for batch status updates.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Batch Webook ID",
                  "description": "A string that uniquely identifies this Batch Webhook.",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": false,
                  "example": "http://yourdomain.com/webhook"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/batch-webhooks/{batch_webhook_id}": {
      "get": {
        "summary": "Get a batch webook",
        "description": "Get information about a specific batch webhook.",
        "operationId": "getBatchWebhook",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "in": "path",
            "name": "batch_webhook_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the batch webhook."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch Webhook",
              "description": "A webook configured for batch status updates.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Batch Webook ID",
                  "description": "A string that uniquely identifies this Batch Webhook.",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": false,
                  "example": "http://yourdomain.com/webhook"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a webhook for batches",
        "description": "Update a webhook that will fire whenever any batch request completes processing.",
        "operationId": "patchBatchWebhooks",
        "parameters": [
          {
            "in": "path",
            "name": "batch_webhook_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the batch webhook."
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Batch Webhook",
              "description": "Update an existing Batch Webook.",
              "required": [
                "url"
              ],
              "properties": {
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": false,
                  "example": "http://yourdomain.com/webhook"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch Webhook",
              "description": "A webook configured for batch status updates.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Batch Webook ID",
                  "description": "A string that uniquely identifies this Batch Webhook.",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": false,
                  "example": "http://yourdomain.com/webhook"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a batch webhook",
        "description": "Remove a batch webhook. Webhooks will no longer be sent to the given URL.",
        "operationId": "deleteBatchWebhookId",
        "parameters": [
          {
            "in": "path",
            "name": "batch_webhook_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the batch webhook."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/template-folders": {
      "get": {
        "summary": "Get all template folders",
        "description": "Get all folders used to organize templates.",
        "operationId": "getTemplateFolders",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Folders",
              "description": "A list of template folders",
              "properties": {
                "folders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Template Folder",
                    "description": "A folder used to organize templates.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Folder Name",
                        "description": "The name of the folder."
                      },
                      "id": {
                        "type": "string",
                        "title": "Folder Id",
                        "description": "A string that uniquely identifies this template folder.",
                        "readOnly": "true"
                      },
                      "count": {
                        "type": "integer",
                        "title": "Template Count",
                        "description": "The number of templates in the folder.",
                        "readOnly": "true"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Template Folders",
                  "description": "An array of objects representing template folders."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a template folder",
        "description": "Create a new template folder.",
        "operationId": "postTemplateFolders",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Template Folder",
              "description": "A folder used to organize templates.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Folder",
              "description": "A folder used to organize templates.",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "id": {
                  "type": "string",
                  "title": "Folder Id",
                  "description": "A string that uniquely identifies this template folder.",
                  "readOnly": "true"
                },
                "count": {
                  "type": "integer",
                  "title": "Template Count",
                  "description": "The number of templates in the folder.",
                  "readOnly": "true"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/template-folders/{folder_id}": {
      "get": {
        "summary": "Get a template folder",
        "description": "Get information about a specific folder used to organize templates.",
        "operationId": "getTemplateFoldersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "in": "path",
            "name": "folder_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the template folder."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Folder",
              "description": "A folder used to organize templates.",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "id": {
                  "type": "string",
                  "title": "Folder Id",
                  "description": "A string that uniquely identifies this template folder.",
                  "readOnly": "true"
                },
                "count": {
                  "type": "integer",
                  "title": "Template Count",
                  "description": "The number of templates in the folder.",
                  "readOnly": "true"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a template folder",
        "description": "Update a specific folder used to organize templates.",
        "operationId": "patchTemplateFoldersId",
        "parameters": [
          {
            "in": "path",
            "name": "folder_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the template folder."
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Template Folder",
              "description": "A folder used to organize templates.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Folder",
              "description": "A folder used to organize templates.",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "id": {
                  "type": "string",
                  "title": "Folder Id",
                  "description": "A string that uniquely identifies this template folder.",
                  "readOnly": "true"
                },
                "count": {
                  "type": "integer",
                  "title": "Template Count",
                  "description": "The number of templates in the folder.",
                  "readOnly": "true"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a template folder",
        "description": "Delete a specific template folder, and mark all the templates in the folder as 'unfiled'.",
        "operationId": "deleteTemplateFoldersId",
        "parameters": [
          {
            "in": "path",
            "name": "folder_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the template folder."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaign-folders": {
      "get": {
        "summary": "Get all campaign folders",
        "description": "Get all folders used to organize campaigns.",
        "operationId": "getCampaignFolders",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Folders",
              "description": "A list of campaign folders",
              "properties": {
                "folders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Campaign Folder",
                    "description": "A folder used to organize campaigns.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Folder Name",
                        "description": "The name of the folder."
                      },
                      "id": {
                        "type": "string",
                        "title": "Folder Id",
                        "description": "A string that uniquely identifies this campaign folder.",
                        "readOnly": "true"
                      },
                      "count": {
                        "type": "integer",
                        "title": "Campaign Count",
                        "description": "The number of campaigns in the folder.",
                        "readOnly": "true"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Campaign Folders",
                  "description": "An array of objects representing campaign folders."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create campaign folder",
        "description": "Create a new campaign folder.",
        "operationId": "postCampaignFolders",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Campaign Folder",
              "description": "A folder used to organize campaigns.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "Name to associate with the folder."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Folder",
              "description": "A folder used to organize campaigns.",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "id": {
                  "type": "string",
                  "title": "Folder Id",
                  "description": "A string that uniquely identifies this campaign folder.",
                  "readOnly": "true"
                },
                "count": {
                  "type": "integer",
                  "title": "Campaign Count",
                  "description": "The number of campaigns in the folder.",
                  "readOnly": "true"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaign-folders/{folder_id}": {
      "get": {
        "summary": "Get a specific campaign folder",
        "description": "Get information about a specific folder used to organize campaigns.",
        "operationId": "getCampaignFoldersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "in": "path",
            "name": "folder_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the campaign folder."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Folder",
              "description": "A folder used to organize campaigns.",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "id": {
                  "type": "string",
                  "title": "Folder Id",
                  "description": "A string that uniquely identifies this campaign folder.",
                  "readOnly": "true"
                },
                "count": {
                  "type": "integer",
                  "title": "Campaign Count",
                  "description": "The number of campaigns in the folder.",
                  "readOnly": "true"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a campaign folder",
        "description": "Update a specific folder used to organize campaigns.",
        "operationId": "patchCampaignFoldersId",
        "parameters": [
          {
            "in": "path",
            "name": "folder_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the campaign folder."
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Campaign Folder",
              "description": "A folder used to organize campaigns.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "Name to associate with the folder."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Folder",
              "description": "A folder used to organize campaigns.",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "id": {
                  "type": "string",
                  "title": "Folder Id",
                  "description": "A string that uniquely identifies this campaign folder.",
                  "readOnly": "true"
                },
                "count": {
                  "type": "integer",
                  "title": "Campaign Count",
                  "description": "The number of campaigns in the folder.",
                  "readOnly": "true"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a campaign folder",
        "description": "Delete a specific campaign folder, and mark all the campaigns in the folder as 'unfiled'.",
        "operationId": "deleteCampaignFoldersId",
        "parameters": [
          {
            "in": "path",
            "name": "folder_id",
            "type": "string",
            "required": true,
            "description": "The unique id for the campaign folder."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns": {
      "get": {
        "summary": "Get all campaigns",
        "description": "Get all campaigns in an account.",
        "operationId": "getCampaigns",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignType"
          },
          {
            "$ref": "#/parameters/CampaignStatus"
          },
          {
            "$ref": "#/parameters/CampaignSendTime_Before"
          },
          {
            "$ref": "#/parameters/CampaignSendTime_Since"
          },
          {
            "$ref": "#/parameters/CampaignCreateTime_Before"
          },
          {
            "$ref": "#/parameters/CampaignCreateTime_Since"
          },
          {
            "$ref": "#/parameters/Filter_ListID"
          },
          {
            "$ref": "#/parameters/Filter_FolderID"
          },
          {
            "$ref": "#/parameters/SortFieldBySend"
          },
          {
            "$ref": "#/parameters/SortDir"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "campaigns": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Campaign",
                    "description": "A summary of an individual campaign's settings and content.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "A string that uniquely identifies this campaign.",
                        "readOnly": true
                      },
                      "web_id": {
                        "type": "integer",
                        "title": "Campaign Web ID",
                        "description": "The ID used in the MailChimp web application. View this campaign in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                        "readOnly": true
                      },
                      "type": {
                        "$ref": "#/definitions/CampaignType"
                      },
                      "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Create Time",
                        "description": "The date and time the campaign was created.",
                        "readOnly": true
                      },
                      "archive_url": {
                        "type": "string",
                        "title": "Archive URL",
                        "description": "The link to the campaign's archive version.",
                        "readOnly": true
                      },
                      "long_archive_url": {
                        "type": "string",
                        "title": "Long Archive URL",
                        "description": "The original link to the campaign's archive version.",
                        "readOnly": true
                      },
                      "status": {
                        "$ref": "#/definitions/CampaignStatus"
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Emails Sent",
                        "description": "The total number of emails sent for this campaign.",
                        "readOnly": true
                      },
                      "send_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Send Time",
                        "description": "The date and time a campaign was sent.",
                        "readOnly": true
                      },
                      "content_type": {
                        "type": "string",
                        "title": "Content Type",
                        "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                        "readOnly": true
                      },
                      "needs_block_refresh": {
                        "type": "boolean",
                        "title": "Needs Block Refresh",
                        "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor.",
                        "readonly": true
                      },
                      "recipients": {
                        "type": "object",
                        "title": "List",
                        "description": "List settings for the campaign.",
                        "properties": {
                          "list_id": {
                            "type": "string",
                            "title": "List ID",
                            "description": "The unique list id."
                          },
                          "list_name": {
                            "type": "string",
                            "title": "List Name",
                            "description": "The name of the list.",
                            "readOnly": true
                          },
                          "segment_text": {
                            "type": "string",
                            "title": "Segment Text",
                            "description": "A description of the [segment](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) used for the campaign. Formatted as a string marked up with HTML.",
                            "readOnly": true
                          },
                          "recipient_count": {
                            "type": "integer",
                            "title": "Recipient Count",
                            "description": "Count of the recipients on the associated list. Formatted as an integer.",
                            "readOnly": true
                          },
                          "segment_opts": {
                            "$ref": "#/definitions/SegmentationOptions"
                          }
                        }
                      },
                      "settings": {
                        "type": "object",
                        "title": "Campaign Settings",
                        "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
                        "properties": {
                          "subject_line": {
                            "type": "string",
                            "title": "Campaign Subject Line",
                            "description": "The subject line for the campaign."
                          },
                          "preview_text": {
                            "type": "string",
                            "title": "Campaign Preview Text",
                            "description": "The preview text for the campaign."
                          },
                          "title": {
                            "type": "string",
                            "title": "Campaign Title",
                            "description": "The title of the campaign."
                          },
                          "from_name": {
                            "type": "string",
                            "title": "From Name",
                            "description": "The 'from' name on the campaign (not an email address)."
                          },
                          "reply_to": {
                            "type": "string",
                            "title": "Reply To Address",
                            "description": "The reply-to email address for the campaign."
                          },
                          "use_conversation": {
                            "type": "boolean",
                            "title": "Conversation",
                            "description": "Use MailChimp Conversation feature to manage out-of-office replies."
                          },
                          "to_name": {
                            "type": "string",
                            "title": "To Name",
                            "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                          },
                          "folder_id": {
                            "type": "string",
                            "title": "Folder ID",
                            "description": "If the campaign is listed in a folder, the id for that folder."
                          },
                          "authenticate": {
                            "type": "boolean",
                            "title": "Authentication",
                            "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                          },
                          "auto_footer": {
                            "type": "boolean",
                            "title": "Auto-Footer",
                            "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                          },
                          "inline_css": {
                            "type": "boolean",
                            "title": "Inline CSS",
                            "description": "Automatically inline the CSS included with the campaign content."
                          },
                          "auto_tweet": {
                            "type": "boolean",
                            "title": "Auto-Tweet",
                            "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                          },
                          "auto_fb_post": {
                            "type": "array",
                            "title": "Auto Post to Facebook",
                            "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "fb_comments": {
                            "type": "boolean",
                            "title": "Facebook Comments",
                            "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                          },
                          "timewarp": {
                            "type": "boolean",
                            "title": "Timewarp Send",
                            "description": "Send this campaign using [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                            "readOnly": true
                          },
                          "template_id": {
                            "type": "integer",
                            "title": "Template ID",
                            "description": "The id for the template used in this campaign.",
                            "readOnly": false
                          },
                          "drag_and_drop": {
                            "type": "boolean",
                            "title": "Drag And Drop Campaign",
                            "description": "Whether the campaign uses the drag-and-drop editor.",
                            "readOnly": true
                          }
                        }
                      },
                      "variate_settings": {
                        "type": "object",
                        "title": "A/B Test Options",
                        "description": "The settings specific to A/B test campaigns.",
                        "properties": {
                          "winning_combination_id": {
                            "type": "string",
                            "title": "Winning Combination ID",
                            "description": "ID for the winning combination.",
                            "readOnly": true
                          },
                          "winning_campaign_id": {
                            "type": "string",
                            "title": "Winning Campaign ID",
                            "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                            "readOnly": true
                          },
                          "winner_criteria": {
                            "type": "string",
                            "title": "Winning Criteria",
                            "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
                            "enum": [
                              "opens",
                              "clicks",
                              "manual",
                              "total_revenue"
                            ]
                          },
                          "wait_time": {
                            "type": "integer",
                            "title": "Wait Time",
                            "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                          },
                          "test_size": {
                            "type": "integer",
                            "title": "Test Size",
                            "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                          },
                          "subject_lines": {
                            "type": "array",
                            "title": "Subject Lines",
                            "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "send_times": {
                            "type": "array",
                            "title": "Send Times",
                            "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                            "items": {
                              "type": "string",
                              "format": "date-time"
                            }
                          },
                          "from_names": {
                            "type": "array",
                            "title": "From Names",
                            "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "reply_to_addresses": {
                            "type": "array",
                            "title": "Reply To Addresses",
                            "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                            "items": {
                              "type": "string"
                            }
                          },
                          "contents": {
                            "type": "array",
                            "title": "Content Descriptions",
                            "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "combinations": {
                            "type": "array",
                            "title": "Combinations",
                            "description": "Combinations of possible variables used to build emails.",
                            "readOnly": true,
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "title": "ID",
                                  "description": "Unique ID for the combination."
                                },
                                "subject_line": {
                                  "type": "integer",
                                  "title": "Subject Line",
                                  "description": "The index of `variate_settings.subject_lines` used."
                                },
                                "send_time": {
                                  "type": "integer",
                                  "title": "Send Time",
                                  "description": "The index of `variate_settings.send_times` used."
                                },
                                "from_name": {
                                  "type": "integer",
                                  "title": "From Name",
                                  "description": "The index of `variate_settings.from_names` used."
                                },
                                "reply_to": {
                                  "type": "integer",
                                  "title": "Reply To",
                                  "description": "The index of `variate_settings.reply_to_addresses` used."
                                },
                                "content_description": {
                                  "type": "integer",
                                  "title": "Content Description",
                                  "description": "The index of `variate_settings.contents` used."
                                },
                                "recipients": {
                                  "type": "integer",
                                  "title": "Recipients",
                                  "description": "The number of recipients for this combination."
                                }
                              }
                            }
                          }
                        }
                      },
                      "tracking": {
                        "type": "object",
                        "title": "Campaign Tracking Options",
                        "description": "The tracking options for a campaign.",
                        "properties": {
                          "opens": {
                            "type": "boolean",
                            "title": "Opens",
                            "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
                          },
                          "html_clicks": {
                            "type": "boolean",
                            "title": "HTML Click Tracking",
                            "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                          },
                          "text_clicks": {
                            "type": "boolean",
                            "title": "Plain-Text Click Tracking",
                            "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                          },
                          "goal_tracking": {
                            "type": "boolean",
                            "title": "MailChimp Goal Tracking",
                            "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                          },
                          "ecomm360": {
                            "type": "boolean",
                            "title": "E-commerce Tracking",
                            "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                          },
                          "google_analytics": {
                            "type": "string",
                            "title": "Google Analytics Tracking",
                            "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                          },
                          "clicktale": {
                            "type": "string",
                            "title": "ClickTale Analytics Tracking",
                            "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                          },
                          "salesforce": {
                            "type": "object",
                            "title": "Salesforce CRM Tracking",
                            "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                            "properties": {
                              "campaign": {
                                "type": "boolean",
                                "title": "Salesforce Campaign",
                                "description": "Create a campaign in a connected Salesforce account."
                              },
                              "notes": {
                                "type": "boolean",
                                "title": "Salesforce Note",
                                "description": "Update contact notes for a campaign based on subscriber email addresses."
                              }
                            }
                          },
                          "capsule": {
                            "type": "object",
                            "title": "Capsule CRM Tracking",
                            "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
                            "properties": {
                              "notes": {
                                "type": "boolean",
                                "title": "Capsule Note",
                                "description": "Update contact notes for a campaign based on subscriber email addresses."
                              }
                            }
                          }
                        }
                      },
                      "rss_opts": {
                        "type": "object",
                        "title": "RSS Options",
                        "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                        "properties": {
                          "feed_url": {
                            "type": "string",
                            "title": "Feed URL",
                            "format": "uri",
                            "description": "The URL for the RSS feed."
                          },
                          "frequency": {
                            "type": "string",
                            "title": "Frequency",
                            "description": "The frequency of the RSS Campaign.",
                            "enum": [
                              "daily",
                              "weekly",
                              "monthly"
                            ]
                          },
                          "schedule": {
                            "type": "object",
                            "title": "Sending Schedule",
                            "description": "The schedule for sending the RSS Campaign.",
                            "properties": {
                              "hour": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 23,
                                "title": "Sending Hour",
                                "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                              },
                              "daily_send": {
                                "type": "object",
                                "title": "Daily Sending Days",
                                "description": "The days of the week to send a daily RSS Campaign.",
                                "properties": {
                                  "sunday": {
                                    "type": "boolean",
                                    "title": "Sunday",
                                    "description": "Sends the daily RSS Campaign on Sundays."
                                  },
                                  "monday": {
                                    "type": "boolean",
                                    "title": "Monday",
                                    "description": "Sends the daily RSS Campaign on Mondays."
                                  },
                                  "tuesday": {
                                    "type": "boolean",
                                    "title": "tuesday",
                                    "description": "Sends the daily RSS Campaign on Tuesdays."
                                  },
                                  "wednesday": {
                                    "type": "boolean",
                                    "title": "Monday",
                                    "description": "Sends the daily RSS Campaign on Wednesdays."
                                  },
                                  "thursday": {
                                    "type": "boolean",
                                    "title": "Thursday",
                                    "description": "Sends the daily RSS Campaign on Thursdays."
                                  },
                                  "friday": {
                                    "type": "boolean",
                                    "title": "Friday",
                                    "description": "Sends the daily RSS Campaign on Fridays."
                                  },
                                  "saturday": {
                                    "type": "boolean",
                                    "title": "Saturday",
                                    "description": "Sends the daily RSS Campaign on Saturdays."
                                  }
                                }
                              },
                              "weekly_send_day": {
                                "type": "string",
                                "enum": [
                                  "sunday",
                                  "monday",
                                  "tuesday",
                                  "wednesday",
                                  "thursday",
                                  "friday",
                                  "saturday"
                                ],
                                "title": "Weekly Sending Day",
                                "description": "The day of the week to send a weekly RSS Campaign."
                              },
                              "monthly_send_date": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 31,
                                "title": "Monthly Sending Day",
                                "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                              }
                            }
                          },
                          "last_sent": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Last Sent",
                            "description": "The date the campaign was last sent.",
                            "readOnly": true
                          },
                          "constrain_rss_img": {
                            "type": "boolean",
                            "title": "Constrain RSS Images",
                            "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                          }
                        }
                      },
                      "ab_split_opts": {
                        "type": "object",
                        "title": "A/B Testing Options",
                        "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                        "readOnly": true,
                        "properties": {
                          "split_test": {
                            "type": "string",
                            "title": "Split Test",
                            "description": "The type of AB split to run.",
                            "enum": [
                              "subject",
                              "from_name",
                              "schedule"
                            ]
                          },
                          "pick_winner": {
                            "type": "string",
                            "title": "Pick Winner",
                            "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                            "enum": [
                              "opens",
                              "clicks",
                              "manual"
                            ]
                          },
                          "wait_units": {
                            "type": "string",
                            "title": "Wait Time",
                            "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                            "enum": [
                              "hours",
                              "days"
                            ]
                          },
                          "wait_time": {
                            "type": "integer",
                            "title": "Wait Time",
                            "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                          },
                          "split_size": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 50,
                            "title": "Split Size",
                            "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                          },
                          "from_name_a": {
                            "type": "string",
                            "title": "From Name Group A",
                            "description": "For campaigns split on 'From Name', the name for Group A."
                          },
                          "from_name_b": {
                            "type": "string",
                            "title": "From Name Group B",
                            "description": "For campaigns split on 'From Name', the name for Group B."
                          },
                          "reply_email_a": {
                            "type": "string",
                            "title": "Reply Email Group A",
                            "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                          },
                          "reply_email_b": {
                            "type": "string",
                            "title": "Reply Email Group B",
                            "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                          },
                          "subject_a": {
                            "type": "string",
                            "title": "Subject Line Group A",
                            "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                          },
                          "subject_b": {
                            "type": "string",
                            "title": "Subject Line Group B",
                            "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                          },
                          "send_time_a": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Send Time Group A",
                            "description": "The send time for Group A."
                          },
                          "send_time_b": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Send Time Group B",
                            "description": "The send time for Group B."
                          },
                          "send_time_winner": {
                            "type": "string",
                            "title": "Send Time Winner",
                            "description": "The send time for the winning version."
                          }
                        }
                      },
                      "social_card": {
                        "type": "object",
                        "title": "Campaign Social Card",
                        "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "properties": {
                          "image_url": {
                            "type": "string",
                            "title": "Image URL",
                            "description": "The url for the header image for the card."
                          },
                          "description": {
                            "type": "string",
                            "title": "Campaign Description",
                            "description": "A short summary of the campaign to display."
                          },
                          "title": {
                            "type": "string",
                            "title": "Title",
                            "description": "The title for the card. Typically the subject line of the campaign."
                          }
                        }
                      },
                      "report_summary": {
                        "type": "object",
                        "title": "Campaign Report Summary",
                        "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data.",
                        "properties": {
                          "opens": {
                            "type": "integer",
                            "title": "Automation Opens",
                            "description": "The total number of opens for a campaign.",
                            "readOnly": true
                          },
                          "unique_opens": {
                            "type": "integer",
                            "title": "Unique Opens",
                            "description": "The number of unique opens.",
                            "readOnly": true
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The number of unique opens divided by the total number of successful deliveries.",
                            "readOnly": true
                          },
                          "clicks": {
                            "type": "integer",
                            "title": "Total Clicks",
                            "description": "The total number of clicks for an campaign.",
                            "readOnly": true
                          },
                          "subscriber_clicks": {
                            "type": "integer",
                            "title": "Unique Subscriber Clicks",
                            "description": "The number of unique clicks.",
                            "readOnly": true
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The number of unique clicks divided by the total number of successful deliveries.",
                            "readOnly": true
                          },
                          "ecommerce": {
                            "type": "object",
                            "title": "E-Commerce Report",
                            "description": "E-Commerce stats for a campaign.",
                            "properties": {
                              "total_orders": {
                                "type": "integer",
                                "title": "Total Orders",
                                "description": "The total orders for a campaign.",
                                "readOnly": true
                              },
                              "total_spent": {
                                "type": "number",
                                "title": "Total Spent",
                                "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                                "readOnly": true
                              },
                              "total_revenue": {
                                "type": "number",
                                "title": "Total Revenue",
                                "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "delivery_status": {
                        "$ref": "#/definitions/DeliveryStatus"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Campaigns",
                  "description": "An array of campaigns."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new campaign",
        "description": "Create a new MailChimp campaign.",
        "operationId": "postCampaigns",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Campaign",
              "description": "A summary of an individual campaign's settings and content.",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Campaign Type",
                  "description": "There are four types of [campaigns](http://kb.mailchimp.com/campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) you can create in MailChimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
                  "enum": [
                    "regular",
                    "plaintext",
                    "absplit",
                    "rss",
                    "variate"
                  ]
                },
                "recipients": {
                  "type": "object",
                  "title": "List",
                  "description": "List settings for the campaign.",
                  "required": [
                    "list_id"
                  ],
                  "properties": {
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique list id."
                    },
                    "segment_opts": {
                      "$ref": "#/definitions/SegmentationOptions"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "title": "Campaign Settings",
                  "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
                  "properties": {
                    "subject_line": {
                      "type": "string",
                      "title": "Campaign Subject Line",
                      "description": "The subject line for the campaign."
                    },
                    "preview_text": {
                      "type": "string",
                      "title": "Campaign Preview Text",
                      "description": "The preview text for the campaign."
                    },
                    "title": {
                      "type": "string",
                      "title": "Campaign Title",
                      "description": "The title of the campaign."
                    },
                    "from_name": {
                      "type": "string",
                      "title": "From Name",
                      "description": "The 'from' name on the campaign (not an email address)."
                    },
                    "reply_to": {
                      "type": "string",
                      "title": "Reply To Address",
                      "description": "The reply-to email address for the campaign."
                    },
                    "use_conversation": {
                      "type": "boolean",
                      "title": "Conversation",
                      "description": "Use MailChimp Conversation feature to manage out-of-office replies."
                    },
                    "to_name": {
                      "type": "string",
                      "title": "To Name",
                      "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                    },
                    "folder_id": {
                      "type": "string",
                      "title": "Folder ID",
                      "description": "If the campaign is listed in a folder, the id for that folder."
                    },
                    "authenticate": {
                      "type": "boolean",
                      "title": "Authentication",
                      "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                    },
                    "auto_footer": {
                      "type": "boolean",
                      "title": "Auto-Footer",
                      "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                    },
                    "inline_css": {
                      "type": "boolean",
                      "title": "Inline CSS",
                      "description": "Automatically inline the CSS included with the campaign content."
                    },
                    "auto_tweet": {
                      "type": "boolean",
                      "title": "Auto-Tweet",
                      "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                    },
                    "auto_fb_post": {
                      "type": "array",
                      "title": "Auto Post to Facebook",
                      "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fb_comments": {
                      "type": "boolean",
                      "title": "Facebook Comments",
                      "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                    },
                    "template_id": {
                      "type": "integer",
                      "title": "Template ID",
                      "description": "The id of the template to use."
                    }
                  }
                },
                "variate_settings": {
                  "type": "object",
                  "title": "A/B Test Options",
                  "description": "The settings specific to A/B test campaigns.",
                  "required": [
                    "winner_criteria"
                  ],
                  "properties": {
                    "winner_criteria": {
                      "type": "string",
                      "title": "Winning Criteria",
                      "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual",
                        "total_revenue"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                    },
                    "test_size": {
                      "type": "integer",
                      "title": "Test Size",
                      "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                    },
                    "subject_lines": {
                      "type": "array",
                      "title": "Subject Lines",
                      "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "send_times": {
                      "type": "array",
                      "title": "Send Times",
                      "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "from_names": {
                      "type": "array",
                      "title": "From Names",
                      "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "reply_to_addresses": {
                      "type": "array",
                      "title": "Reply To Addresses",
                      "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "tracking": {
                  "type": "object",
                  "title": "Campaign Tracking Options",
                  "description": "The tracking options for a campaign.",
                  "properties": {
                    "opens": {
                      "type": "boolean",
                      "title": "Opens",
                      "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "html_clicks": {
                      "type": "boolean",
                      "title": "HTML Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "text_clicks": {
                      "type": "boolean",
                      "title": "Plain-Text Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "goal_tracking": {
                      "type": "boolean",
                      "title": "MailChimp Goal Tracking",
                      "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "ecomm360": {
                      "type": "boolean",
                      "title": "E-commerce Tracking",
                      "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "google_analytics": {
                      "type": "string",
                      "title": "Google Analytics Tracking",
                      "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                    },
                    "clicktale": {
                      "type": "string",
                      "title": "ClickTale Analytics Tracking",
                      "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                    },
                    "salesforce": {
                      "type": "object",
                      "title": "Salesforce CRM Tracking",
                      "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "campaign": {
                          "type": "boolean",
                          "title": "Salesforce Campaign",
                          "description": "Create a campaign in a connected Salesforce account."
                        },
                        "notes": {
                          "type": "boolean",
                          "title": "Salesforce Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    },
                    "capsule": {
                      "type": "object",
                      "title": "Capsule CRM Tracking",
                      "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
                      "properties": {
                        "notes": {
                          "type": "boolean",
                          "title": "Capsule Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    }
                  }
                },
                "rss_opts": {
                  "type": "object",
                  "title": "RSS Options",
                  "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "required": [
                    "feed_url",
                    "frequency"
                  ],
                  "properties": {
                    "feed_url": {
                      "type": "string",
                      "title": "Feed URL",
                      "format": "uri",
                      "description": "The URL for the RSS feed."
                    },
                    "frequency": {
                      "type": "string",
                      "title": "Frequency",
                      "description": "The frequency of the RSS Campaign.",
                      "enum": [
                        "daily",
                        "weekly",
                        "monthly"
                      ]
                    },
                    "schedule": {
                      "type": "object",
                      "title": "Sending Schedule",
                      "description": "The schedule for sending the RSS Campaign.",
                      "properties": {
                        "hour": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 23,
                          "title": "Sending Hour",
                          "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                        },
                        "daily_send": {
                          "type": "object",
                          "title": "Daily Sending Days",
                          "description": "The days of the week to send a daily RSS Campaign.",
                          "properties": {
                            "sunday": {
                              "type": "boolean",
                              "title": "Sunday",
                              "description": "Sends the daily RSS Campaign on Sundays."
                            },
                            "monday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Mondays."
                            },
                            "tuesday": {
                              "type": "boolean",
                              "title": "tuesday",
                              "description": "Sends the daily RSS Campaign on Tuesdays."
                            },
                            "wednesday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Wednesdays."
                            },
                            "thursday": {
                              "type": "boolean",
                              "title": "Thursday",
                              "description": "Sends the daily RSS Campaign on Thursdays."
                            },
                            "friday": {
                              "type": "boolean",
                              "title": "Friday",
                              "description": "Sends the daily RSS Campaign on Fridays."
                            },
                            "saturday": {
                              "type": "boolean",
                              "title": "Saturday",
                              "description": "Sends the daily RSS Campaign on Saturdays."
                            }
                          }
                        },
                        "weekly_send_day": {
                          "type": "string",
                          "enum": [
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday"
                          ],
                          "title": "Weekly Sending Day",
                          "description": "The day of the week to send a weekly RSS Campaign."
                        },
                        "monthly_send_date": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 31,
                          "title": "Monthly Sending Day",
                          "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                        }
                      }
                    },
                    "constrain_rss_img": {
                      "type": "boolean",
                      "title": "Constrain RSS Images",
                      "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                    }
                  }
                },
                "ab_split_opts": {
                  "type": "object",
                  "title": "A/B Testing Options",
                  "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "readOnly": true,
                  "properties": {
                    "split_test": {
                      "type": "string",
                      "title": "Split Test",
                      "description": "The type of AB split to run.",
                      "enum": [
                        "subject",
                        "from_name",
                        "schedule"
                      ]
                    },
                    "pick_winner": {
                      "type": "string",
                      "title": "Pick Winner",
                      "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual"
                      ]
                    },
                    "wait_units": {
                      "type": "string",
                      "title": "Wait Time",
                      "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                      "enum": [
                        "hours",
                        "days"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                    },
                    "split_size": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 50,
                      "title": "Split Size",
                      "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                    },
                    "from_name_a": {
                      "type": "string",
                      "title": "From Name Group A",
                      "description": "For campaigns split on 'From Name', the name for Group A."
                    },
                    "from_name_b": {
                      "type": "string",
                      "title": "From Name Group B",
                      "description": "For campaigns split on 'From Name', the name for Group B."
                    },
                    "reply_email_a": {
                      "type": "string",
                      "title": "Reply Email Group A",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                    },
                    "reply_email_b": {
                      "type": "string",
                      "title": "Reply Email Group B",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                    },
                    "subject_a": {
                      "type": "string",
                      "title": "Subject Line Group A",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                    },
                    "subject_b": {
                      "type": "string",
                      "title": "Subject Line Group B",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                    },
                    "send_time_a": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group A",
                      "description": "The send time for Group A."
                    },
                    "send_time_b": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group B",
                      "description": "The send time for Group B."
                    },
                    "send_time_winner": {
                      "type": "string",
                      "title": "Send Time Winner",
                      "description": "The send time for the winning version."
                    }
                  }
                },
                "social_card": {
                  "type": "object",
                  "title": "Campaign Social Card",
                  "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The url for the header image for the card."
                    },
                    "description": {
                      "type": "string",
                      "title": "Campaign Description",
                      "description": "A short summary of the campaign to display."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title for the card. Typically the subject line of the campaign."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign",
              "description": "A summary of an individual campaign's settings and content.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies this campaign.",
                  "readOnly": true
                },
                "web_id": {
                  "type": "integer",
                  "title": "Campaign Web ID",
                  "description": "The ID used in the MailChimp web application. View this campaign in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                  "readOnly": true
                },
                "type": {
                  "$ref": "#/definitions/CampaignType"
                },
                "create_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Create Time",
                  "description": "The date and time the campaign was created.",
                  "readOnly": true
                },
                "archive_url": {
                  "type": "string",
                  "title": "Archive URL",
                  "description": "The link to the campaign's archive version.",
                  "readOnly": true
                },
                "long_archive_url": {
                  "type": "string",
                  "title": "Long Archive URL",
                  "description": "The original link to the campaign's archive version.",
                  "readOnly": true
                },
                "status": {
                  "$ref": "#/definitions/CampaignStatus"
                },
                "emails_sent": {
                  "type": "integer",
                  "title": "Emails Sent",
                  "description": "The total number of emails sent for this campaign.",
                  "readOnly": true
                },
                "send_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Send Time",
                  "description": "The date and time a campaign was sent.",
                  "readOnly": true
                },
                "content_type": {
                  "type": "string",
                  "title": "Content Type",
                  "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                  "readOnly": true
                },
                "needs_block_refresh": {
                  "type": "boolean",
                  "title": "Needs Block Refresh",
                  "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor.",
                  "readonly": true
                },
                "recipients": {
                  "type": "object",
                  "title": "List",
                  "description": "List settings for the campaign.",
                  "properties": {
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique list id."
                    },
                    "list_name": {
                      "type": "string",
                      "title": "List Name",
                      "description": "The name of the list.",
                      "readOnly": true
                    },
                    "segment_text": {
                      "type": "string",
                      "title": "Segment Text",
                      "description": "A description of the [segment](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) used for the campaign. Formatted as a string marked up with HTML.",
                      "readOnly": true
                    },
                    "recipient_count": {
                      "type": "integer",
                      "title": "Recipient Count",
                      "description": "Count of the recipients on the associated list. Formatted as an integer.",
                      "readOnly": true
                    },
                    "segment_opts": {
                      "$ref": "#/definitions/SegmentationOptions"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "title": "Campaign Settings",
                  "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
                  "properties": {
                    "subject_line": {
                      "type": "string",
                      "title": "Campaign Subject Line",
                      "description": "The subject line for the campaign."
                    },
                    "preview_text": {
                      "type": "string",
                      "title": "Campaign Preview Text",
                      "description": "The preview text for the campaign."
                    },
                    "title": {
                      "type": "string",
                      "title": "Campaign Title",
                      "description": "The title of the campaign."
                    },
                    "from_name": {
                      "type": "string",
                      "title": "From Name",
                      "description": "The 'from' name on the campaign (not an email address)."
                    },
                    "reply_to": {
                      "type": "string",
                      "title": "Reply To Address",
                      "description": "The reply-to email address for the campaign."
                    },
                    "use_conversation": {
                      "type": "boolean",
                      "title": "Conversation",
                      "description": "Use MailChimp Conversation feature to manage out-of-office replies."
                    },
                    "to_name": {
                      "type": "string",
                      "title": "To Name",
                      "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                    },
                    "folder_id": {
                      "type": "string",
                      "title": "Folder ID",
                      "description": "If the campaign is listed in a folder, the id for that folder."
                    },
                    "authenticate": {
                      "type": "boolean",
                      "title": "Authentication",
                      "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                    },
                    "auto_footer": {
                      "type": "boolean",
                      "title": "Auto-Footer",
                      "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                    },
                    "inline_css": {
                      "type": "boolean",
                      "title": "Inline CSS",
                      "description": "Automatically inline the CSS included with the campaign content."
                    },
                    "auto_tweet": {
                      "type": "boolean",
                      "title": "Auto-Tweet",
                      "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                    },
                    "auto_fb_post": {
                      "type": "array",
                      "title": "Auto Post to Facebook",
                      "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fb_comments": {
                      "type": "boolean",
                      "title": "Facebook Comments",
                      "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                    },
                    "timewarp": {
                      "type": "boolean",
                      "title": "Timewarp Send",
                      "description": "Send this campaign using [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "readOnly": true
                    },
                    "template_id": {
                      "type": "integer",
                      "title": "Template ID",
                      "description": "The id for the template used in this campaign.",
                      "readOnly": false
                    },
                    "drag_and_drop": {
                      "type": "boolean",
                      "title": "Drag And Drop Campaign",
                      "description": "Whether the campaign uses the drag-and-drop editor.",
                      "readOnly": true
                    }
                  }
                },
                "variate_settings": {
                  "type": "object",
                  "title": "A/B Test Options",
                  "description": "The settings specific to A/B test campaigns.",
                  "properties": {
                    "winning_combination_id": {
                      "type": "string",
                      "title": "Winning Combination ID",
                      "description": "ID for the winning combination.",
                      "readOnly": true
                    },
                    "winning_campaign_id": {
                      "type": "string",
                      "title": "Winning Campaign ID",
                      "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                      "readOnly": true
                    },
                    "winner_criteria": {
                      "type": "string",
                      "title": "Winning Criteria",
                      "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual",
                        "total_revenue"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                    },
                    "test_size": {
                      "type": "integer",
                      "title": "Test Size",
                      "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                    },
                    "subject_lines": {
                      "type": "array",
                      "title": "Subject Lines",
                      "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "send_times": {
                      "type": "array",
                      "title": "Send Times",
                      "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "from_names": {
                      "type": "array",
                      "title": "From Names",
                      "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "reply_to_addresses": {
                      "type": "array",
                      "title": "Reply To Addresses",
                      "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contents": {
                      "type": "array",
                      "title": "Content Descriptions",
                      "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "combinations": {
                      "type": "array",
                      "title": "Combinations",
                      "description": "Combinations of possible variables used to build emails.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "ID",
                            "description": "Unique ID for the combination."
                          },
                          "subject_line": {
                            "type": "integer",
                            "title": "Subject Line",
                            "description": "The index of `variate_settings.subject_lines` used."
                          },
                          "send_time": {
                            "type": "integer",
                            "title": "Send Time",
                            "description": "The index of `variate_settings.send_times` used."
                          },
                          "from_name": {
                            "type": "integer",
                            "title": "From Name",
                            "description": "The index of `variate_settings.from_names` used."
                          },
                          "reply_to": {
                            "type": "integer",
                            "title": "Reply To",
                            "description": "The index of `variate_settings.reply_to_addresses` used."
                          },
                          "content_description": {
                            "type": "integer",
                            "title": "Content Description",
                            "description": "The index of `variate_settings.contents` used."
                          },
                          "recipients": {
                            "type": "integer",
                            "title": "Recipients",
                            "description": "The number of recipients for this combination."
                          }
                        }
                      }
                    }
                  }
                },
                "tracking": {
                  "type": "object",
                  "title": "Campaign Tracking Options",
                  "description": "The tracking options for a campaign.",
                  "properties": {
                    "opens": {
                      "type": "boolean",
                      "title": "Opens",
                      "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "html_clicks": {
                      "type": "boolean",
                      "title": "HTML Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "text_clicks": {
                      "type": "boolean",
                      "title": "Plain-Text Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "goal_tracking": {
                      "type": "boolean",
                      "title": "MailChimp Goal Tracking",
                      "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "ecomm360": {
                      "type": "boolean",
                      "title": "E-commerce Tracking",
                      "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "google_analytics": {
                      "type": "string",
                      "title": "Google Analytics Tracking",
                      "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                    },
                    "clicktale": {
                      "type": "string",
                      "title": "ClickTale Analytics Tracking",
                      "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                    },
                    "salesforce": {
                      "type": "object",
                      "title": "Salesforce CRM Tracking",
                      "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "campaign": {
                          "type": "boolean",
                          "title": "Salesforce Campaign",
                          "description": "Create a campaign in a connected Salesforce account."
                        },
                        "notes": {
                          "type": "boolean",
                          "title": "Salesforce Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    },
                    "capsule": {
                      "type": "object",
                      "title": "Capsule CRM Tracking",
                      "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
                      "properties": {
                        "notes": {
                          "type": "boolean",
                          "title": "Capsule Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    }
                  }
                },
                "rss_opts": {
                  "type": "object",
                  "title": "RSS Options",
                  "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "properties": {
                    "feed_url": {
                      "type": "string",
                      "title": "Feed URL",
                      "format": "uri",
                      "description": "The URL for the RSS feed."
                    },
                    "frequency": {
                      "type": "string",
                      "title": "Frequency",
                      "description": "The frequency of the RSS Campaign.",
                      "enum": [
                        "daily",
                        "weekly",
                        "monthly"
                      ]
                    },
                    "schedule": {
                      "type": "object",
                      "title": "Sending Schedule",
                      "description": "The schedule for sending the RSS Campaign.",
                      "properties": {
                        "hour": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 23,
                          "title": "Sending Hour",
                          "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                        },
                        "daily_send": {
                          "type": "object",
                          "title": "Daily Sending Days",
                          "description": "The days of the week to send a daily RSS Campaign.",
                          "properties": {
                            "sunday": {
                              "type": "boolean",
                              "title": "Sunday",
                              "description": "Sends the daily RSS Campaign on Sundays."
                            },
                            "monday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Mondays."
                            },
                            "tuesday": {
                              "type": "boolean",
                              "title": "tuesday",
                              "description": "Sends the daily RSS Campaign on Tuesdays."
                            },
                            "wednesday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Wednesdays."
                            },
                            "thursday": {
                              "type": "boolean",
                              "title": "Thursday",
                              "description": "Sends the daily RSS Campaign on Thursdays."
                            },
                            "friday": {
                              "type": "boolean",
                              "title": "Friday",
                              "description": "Sends the daily RSS Campaign on Fridays."
                            },
                            "saturday": {
                              "type": "boolean",
                              "title": "Saturday",
                              "description": "Sends the daily RSS Campaign on Saturdays."
                            }
                          }
                        },
                        "weekly_send_day": {
                          "type": "string",
                          "enum": [
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday"
                          ],
                          "title": "Weekly Sending Day",
                          "description": "The day of the week to send a weekly RSS Campaign."
                        },
                        "monthly_send_date": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 31,
                          "title": "Monthly Sending Day",
                          "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                        }
                      }
                    },
                    "last_sent": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Last Sent",
                      "description": "The date the campaign was last sent.",
                      "readOnly": true
                    },
                    "constrain_rss_img": {
                      "type": "boolean",
                      "title": "Constrain RSS Images",
                      "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                    }
                  }
                },
                "ab_split_opts": {
                  "type": "object",
                  "title": "A/B Testing Options",
                  "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "readOnly": true,
                  "properties": {
                    "split_test": {
                      "type": "string",
                      "title": "Split Test",
                      "description": "The type of AB split to run.",
                      "enum": [
                        "subject",
                        "from_name",
                        "schedule"
                      ]
                    },
                    "pick_winner": {
                      "type": "string",
                      "title": "Pick Winner",
                      "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual"
                      ]
                    },
                    "wait_units": {
                      "type": "string",
                      "title": "Wait Time",
                      "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                      "enum": [
                        "hours",
                        "days"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                    },
                    "split_size": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 50,
                      "title": "Split Size",
                      "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                    },
                    "from_name_a": {
                      "type": "string",
                      "title": "From Name Group A",
                      "description": "For campaigns split on 'From Name', the name for Group A."
                    },
                    "from_name_b": {
                      "type": "string",
                      "title": "From Name Group B",
                      "description": "For campaigns split on 'From Name', the name for Group B."
                    },
                    "reply_email_a": {
                      "type": "string",
                      "title": "Reply Email Group A",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                    },
                    "reply_email_b": {
                      "type": "string",
                      "title": "Reply Email Group B",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                    },
                    "subject_a": {
                      "type": "string",
                      "title": "Subject Line Group A",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                    },
                    "subject_b": {
                      "type": "string",
                      "title": "Subject Line Group B",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                    },
                    "send_time_a": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group A",
                      "description": "The send time for Group A."
                    },
                    "send_time_b": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group B",
                      "description": "The send time for Group B."
                    },
                    "send_time_winner": {
                      "type": "string",
                      "title": "Send Time Winner",
                      "description": "The send time for the winning version."
                    }
                  }
                },
                "social_card": {
                  "type": "object",
                  "title": "Campaign Social Card",
                  "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The url for the header image for the card."
                    },
                    "description": {
                      "type": "string",
                      "title": "Campaign Description",
                      "description": "A short summary of the campaign to display."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title for the card. Typically the subject line of the campaign."
                    }
                  }
                },
                "report_summary": {
                  "type": "object",
                  "title": "Campaign Report Summary",
                  "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data.",
                  "properties": {
                    "opens": {
                      "type": "integer",
                      "title": "Automation Opens",
                      "description": "The total number of opens for a campaign.",
                      "readOnly": true
                    },
                    "unique_opens": {
                      "type": "integer",
                      "title": "Unique Opens",
                      "description": "The number of unique opens.",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The number of unique opens divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "clicks": {
                      "type": "integer",
                      "title": "Total Clicks",
                      "description": "The total number of clicks for an campaign.",
                      "readOnly": true
                    },
                    "subscriber_clicks": {
                      "type": "integer",
                      "title": "Unique Subscriber Clicks",
                      "description": "The number of unique clicks.",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The number of unique clicks divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "ecommerce": {
                      "type": "object",
                      "title": "E-Commerce Report",
                      "description": "E-Commerce stats for a campaign.",
                      "properties": {
                        "total_orders": {
                          "type": "integer",
                          "title": "Total Orders",
                          "description": "The total orders for a campaign.",
                          "readOnly": true
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                          "readOnly": true
                        },
                        "total_revenue": {
                          "type": "number",
                          "title": "Total Revenue",
                          "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "delivery_status": {
                  "$ref": "#/definitions/DeliveryStatus"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}": {
      "get": {
        "summary": "Get information about a specific campaign",
        "description": "Get information about a specific campaign.",
        "operationId": "getCampaignsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign",
              "description": "A summary of an individual campaign's settings and content.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies this campaign.",
                  "readOnly": true
                },
                "web_id": {
                  "type": "integer",
                  "title": "Campaign Web ID",
                  "description": "The ID used in the MailChimp web application. View this campaign in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                  "readOnly": true
                },
                "type": {
                  "$ref": "#/definitions/CampaignType"
                },
                "create_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Create Time",
                  "description": "The date and time the campaign was created.",
                  "readOnly": true
                },
                "archive_url": {
                  "type": "string",
                  "title": "Archive URL",
                  "description": "The link to the campaign's archive version.",
                  "readOnly": true
                },
                "long_archive_url": {
                  "type": "string",
                  "title": "Long Archive URL",
                  "description": "The original link to the campaign's archive version.",
                  "readOnly": true
                },
                "status": {
                  "$ref": "#/definitions/CampaignStatus"
                },
                "emails_sent": {
                  "type": "integer",
                  "title": "Emails Sent",
                  "description": "The total number of emails sent for this campaign.",
                  "readOnly": true
                },
                "send_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Send Time",
                  "description": "The date and time a campaign was sent.",
                  "readOnly": true
                },
                "content_type": {
                  "type": "string",
                  "title": "Content Type",
                  "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                  "readOnly": true
                },
                "needs_block_refresh": {
                  "type": "boolean",
                  "title": "Needs Block Refresh",
                  "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor.",
                  "readonly": true
                },
                "recipients": {
                  "type": "object",
                  "title": "List",
                  "description": "List settings for the campaign.",
                  "properties": {
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique list id."
                    },
                    "list_name": {
                      "type": "string",
                      "title": "List Name",
                      "description": "The name of the list.",
                      "readOnly": true
                    },
                    "segment_text": {
                      "type": "string",
                      "title": "Segment Text",
                      "description": "A description of the [segment](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) used for the campaign. Formatted as a string marked up with HTML.",
                      "readOnly": true
                    },
                    "recipient_count": {
                      "type": "integer",
                      "title": "Recipient Count",
                      "description": "Count of the recipients on the associated list. Formatted as an integer.",
                      "readOnly": true
                    },
                    "segment_opts": {
                      "$ref": "#/definitions/SegmentationOptions"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "title": "Campaign Settings",
                  "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
                  "properties": {
                    "subject_line": {
                      "type": "string",
                      "title": "Campaign Subject Line",
                      "description": "The subject line for the campaign."
                    },
                    "preview_text": {
                      "type": "string",
                      "title": "Campaign Preview Text",
                      "description": "The preview text for the campaign."
                    },
                    "title": {
                      "type": "string",
                      "title": "Campaign Title",
                      "description": "The title of the campaign."
                    },
                    "from_name": {
                      "type": "string",
                      "title": "From Name",
                      "description": "The 'from' name on the campaign (not an email address)."
                    },
                    "reply_to": {
                      "type": "string",
                      "title": "Reply To Address",
                      "description": "The reply-to email address for the campaign."
                    },
                    "use_conversation": {
                      "type": "boolean",
                      "title": "Conversation",
                      "description": "Use MailChimp Conversation feature to manage out-of-office replies."
                    },
                    "to_name": {
                      "type": "string",
                      "title": "To Name",
                      "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                    },
                    "folder_id": {
                      "type": "string",
                      "title": "Folder ID",
                      "description": "If the campaign is listed in a folder, the id for that folder."
                    },
                    "authenticate": {
                      "type": "boolean",
                      "title": "Authentication",
                      "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                    },
                    "auto_footer": {
                      "type": "boolean",
                      "title": "Auto-Footer",
                      "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                    },
                    "inline_css": {
                      "type": "boolean",
                      "title": "Inline CSS",
                      "description": "Automatically inline the CSS included with the campaign content."
                    },
                    "auto_tweet": {
                      "type": "boolean",
                      "title": "Auto-Tweet",
                      "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                    },
                    "auto_fb_post": {
                      "type": "array",
                      "title": "Auto Post to Facebook",
                      "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fb_comments": {
                      "type": "boolean",
                      "title": "Facebook Comments",
                      "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                    },
                    "timewarp": {
                      "type": "boolean",
                      "title": "Timewarp Send",
                      "description": "Send this campaign using [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "readOnly": true
                    },
                    "template_id": {
                      "type": "integer",
                      "title": "Template ID",
                      "description": "The id for the template used in this campaign.",
                      "readOnly": false
                    },
                    "drag_and_drop": {
                      "type": "boolean",
                      "title": "Drag And Drop Campaign",
                      "description": "Whether the campaign uses the drag-and-drop editor.",
                      "readOnly": true
                    }
                  }
                },
                "variate_settings": {
                  "type": "object",
                  "title": "A/B Test Options",
                  "description": "The settings specific to A/B test campaigns.",
                  "properties": {
                    "winning_combination_id": {
                      "type": "string",
                      "title": "Winning Combination ID",
                      "description": "ID for the winning combination.",
                      "readOnly": true
                    },
                    "winning_campaign_id": {
                      "type": "string",
                      "title": "Winning Campaign ID",
                      "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                      "readOnly": true
                    },
                    "winner_criteria": {
                      "type": "string",
                      "title": "Winning Criteria",
                      "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual",
                        "total_revenue"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                    },
                    "test_size": {
                      "type": "integer",
                      "title": "Test Size",
                      "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                    },
                    "subject_lines": {
                      "type": "array",
                      "title": "Subject Lines",
                      "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "send_times": {
                      "type": "array",
                      "title": "Send Times",
                      "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "from_names": {
                      "type": "array",
                      "title": "From Names",
                      "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "reply_to_addresses": {
                      "type": "array",
                      "title": "Reply To Addresses",
                      "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contents": {
                      "type": "array",
                      "title": "Content Descriptions",
                      "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "combinations": {
                      "type": "array",
                      "title": "Combinations",
                      "description": "Combinations of possible variables used to build emails.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "ID",
                            "description": "Unique ID for the combination."
                          },
                          "subject_line": {
                            "type": "integer",
                            "title": "Subject Line",
                            "description": "The index of `variate_settings.subject_lines` used."
                          },
                          "send_time": {
                            "type": "integer",
                            "title": "Send Time",
                            "description": "The index of `variate_settings.send_times` used."
                          },
                          "from_name": {
                            "type": "integer",
                            "title": "From Name",
                            "description": "The index of `variate_settings.from_names` used."
                          },
                          "reply_to": {
                            "type": "integer",
                            "title": "Reply To",
                            "description": "The index of `variate_settings.reply_to_addresses` used."
                          },
                          "content_description": {
                            "type": "integer",
                            "title": "Content Description",
                            "description": "The index of `variate_settings.contents` used."
                          },
                          "recipients": {
                            "type": "integer",
                            "title": "Recipients",
                            "description": "The number of recipients for this combination."
                          }
                        }
                      }
                    }
                  }
                },
                "tracking": {
                  "type": "object",
                  "title": "Campaign Tracking Options",
                  "description": "The tracking options for a campaign.",
                  "properties": {
                    "opens": {
                      "type": "boolean",
                      "title": "Opens",
                      "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "html_clicks": {
                      "type": "boolean",
                      "title": "HTML Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "text_clicks": {
                      "type": "boolean",
                      "title": "Plain-Text Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "goal_tracking": {
                      "type": "boolean",
                      "title": "MailChimp Goal Tracking",
                      "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "ecomm360": {
                      "type": "boolean",
                      "title": "E-commerce Tracking",
                      "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "google_analytics": {
                      "type": "string",
                      "title": "Google Analytics Tracking",
                      "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                    },
                    "clicktale": {
                      "type": "string",
                      "title": "ClickTale Analytics Tracking",
                      "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                    },
                    "salesforce": {
                      "type": "object",
                      "title": "Salesforce CRM Tracking",
                      "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "campaign": {
                          "type": "boolean",
                          "title": "Salesforce Campaign",
                          "description": "Create a campaign in a connected Salesforce account."
                        },
                        "notes": {
                          "type": "boolean",
                          "title": "Salesforce Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    },
                    "capsule": {
                      "type": "object",
                      "title": "Capsule CRM Tracking",
                      "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
                      "properties": {
                        "notes": {
                          "type": "boolean",
                          "title": "Capsule Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    }
                  }
                },
                "rss_opts": {
                  "type": "object",
                  "title": "RSS Options",
                  "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "properties": {
                    "feed_url": {
                      "type": "string",
                      "title": "Feed URL",
                      "format": "uri",
                      "description": "The URL for the RSS feed."
                    },
                    "frequency": {
                      "type": "string",
                      "title": "Frequency",
                      "description": "The frequency of the RSS Campaign.",
                      "enum": [
                        "daily",
                        "weekly",
                        "monthly"
                      ]
                    },
                    "schedule": {
                      "type": "object",
                      "title": "Sending Schedule",
                      "description": "The schedule for sending the RSS Campaign.",
                      "properties": {
                        "hour": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 23,
                          "title": "Sending Hour",
                          "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                        },
                        "daily_send": {
                          "type": "object",
                          "title": "Daily Sending Days",
                          "description": "The days of the week to send a daily RSS Campaign.",
                          "properties": {
                            "sunday": {
                              "type": "boolean",
                              "title": "Sunday",
                              "description": "Sends the daily RSS Campaign on Sundays."
                            },
                            "monday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Mondays."
                            },
                            "tuesday": {
                              "type": "boolean",
                              "title": "tuesday",
                              "description": "Sends the daily RSS Campaign on Tuesdays."
                            },
                            "wednesday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Wednesdays."
                            },
                            "thursday": {
                              "type": "boolean",
                              "title": "Thursday",
                              "description": "Sends the daily RSS Campaign on Thursdays."
                            },
                            "friday": {
                              "type": "boolean",
                              "title": "Friday",
                              "description": "Sends the daily RSS Campaign on Fridays."
                            },
                            "saturday": {
                              "type": "boolean",
                              "title": "Saturday",
                              "description": "Sends the daily RSS Campaign on Saturdays."
                            }
                          }
                        },
                        "weekly_send_day": {
                          "type": "string",
                          "enum": [
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday"
                          ],
                          "title": "Weekly Sending Day",
                          "description": "The day of the week to send a weekly RSS Campaign."
                        },
                        "monthly_send_date": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 31,
                          "title": "Monthly Sending Day",
                          "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                        }
                      }
                    },
                    "last_sent": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Last Sent",
                      "description": "The date the campaign was last sent.",
                      "readOnly": true
                    },
                    "constrain_rss_img": {
                      "type": "boolean",
                      "title": "Constrain RSS Images",
                      "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                    }
                  }
                },
                "ab_split_opts": {
                  "type": "object",
                  "title": "A/B Testing Options",
                  "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "readOnly": true,
                  "properties": {
                    "split_test": {
                      "type": "string",
                      "title": "Split Test",
                      "description": "The type of AB split to run.",
                      "enum": [
                        "subject",
                        "from_name",
                        "schedule"
                      ]
                    },
                    "pick_winner": {
                      "type": "string",
                      "title": "Pick Winner",
                      "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual"
                      ]
                    },
                    "wait_units": {
                      "type": "string",
                      "title": "Wait Time",
                      "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                      "enum": [
                        "hours",
                        "days"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                    },
                    "split_size": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 50,
                      "title": "Split Size",
                      "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                    },
                    "from_name_a": {
                      "type": "string",
                      "title": "From Name Group A",
                      "description": "For campaigns split on 'From Name', the name for Group A."
                    },
                    "from_name_b": {
                      "type": "string",
                      "title": "From Name Group B",
                      "description": "For campaigns split on 'From Name', the name for Group B."
                    },
                    "reply_email_a": {
                      "type": "string",
                      "title": "Reply Email Group A",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                    },
                    "reply_email_b": {
                      "type": "string",
                      "title": "Reply Email Group B",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                    },
                    "subject_a": {
                      "type": "string",
                      "title": "Subject Line Group A",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                    },
                    "subject_b": {
                      "type": "string",
                      "title": "Subject Line Group B",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                    },
                    "send_time_a": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group A",
                      "description": "The send time for Group A."
                    },
                    "send_time_b": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group B",
                      "description": "The send time for Group B."
                    },
                    "send_time_winner": {
                      "type": "string",
                      "title": "Send Time Winner",
                      "description": "The send time for the winning version."
                    }
                  }
                },
                "social_card": {
                  "type": "object",
                  "title": "Campaign Social Card",
                  "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The url for the header image for the card."
                    },
                    "description": {
                      "type": "string",
                      "title": "Campaign Description",
                      "description": "A short summary of the campaign to display."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title for the card. Typically the subject line of the campaign."
                    }
                  }
                },
                "report_summary": {
                  "type": "object",
                  "title": "Campaign Report Summary",
                  "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data.",
                  "properties": {
                    "opens": {
                      "type": "integer",
                      "title": "Automation Opens",
                      "description": "The total number of opens for a campaign.",
                      "readOnly": true
                    },
                    "unique_opens": {
                      "type": "integer",
                      "title": "Unique Opens",
                      "description": "The number of unique opens.",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The number of unique opens divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "clicks": {
                      "type": "integer",
                      "title": "Total Clicks",
                      "description": "The total number of clicks for an campaign.",
                      "readOnly": true
                    },
                    "subscriber_clicks": {
                      "type": "integer",
                      "title": "Unique Subscriber Clicks",
                      "description": "The number of unique clicks.",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The number of unique clicks divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "ecommerce": {
                      "type": "object",
                      "title": "E-Commerce Report",
                      "description": "E-Commerce stats for a campaign.",
                      "properties": {
                        "total_orders": {
                          "type": "integer",
                          "title": "Total Orders",
                          "description": "The total orders for a campaign.",
                          "readOnly": true
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                          "readOnly": true
                        },
                        "total_revenue": {
                          "type": "number",
                          "title": "Total Revenue",
                          "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "delivery_status": {
                  "$ref": "#/definitions/DeliveryStatus"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update the settings for a campaign",
        "description": "Update some or all of the settings for a specific campaign.",
        "operationId": "patchCampaignsId",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Campaign",
              "description": "A summary of an individual campaign's settings and content.",
              "required": [
                "settings",
                "type"
              ],
              "properties": {
                "recipients": {
                  "type": "object",
                  "title": "List",
                  "description": "List settings for the campaign.",
                  "required": [
                    "list_id"
                  ],
                  "properties": {
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique list id."
                    },
                    "segment_opts": {
                      "type": "object",
                      "title": "Segment Options",
                      "description": "An object representing all segmentation options. Update an existing campaign with an empty `segment_opts` object to remove any segments from that campaign's recipient settings.",
                      "properties": {
                        "saved_segment_id": {
                          "type": "integer",
                          "title": "Saved Segment ID",
                          "description": "The id for an existing saved segment. To remove a saved segment from the campaign, you can set this to 0 and/or change the match and conditions. If given a non-zero number, the campaign will be updated to use the given saved segment, ignoring the provided match and conditions."
                        },
                        "match": {
                          "type": "string",
                          "title": "Match Type",
                          "description": "Segment match type.",
                          "enum": [
                            "any",
                            "all"
                          ]
                        },
                        "conditions": {
                          "type": "array",
                          "title": "Conditions",
                          "description": "Segment match conditions.",
                          "items": {
                            "$ref": "#/definitions/SegmentCondition"
                          }
                        }
                      }
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "title": "Campaign Settings",
                  "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
                  "required": [
                    "subject_line",
                    "from_name",
                    "reply_to"
                  ],
                  "properties": {
                    "subject_line": {
                      "type": "string",
                      "title": "Campaign Subject Line",
                      "description": "The subject line for the campaign."
                    },
                    "preview_text": {
                      "type": "string",
                      "title": "Campaign Preview Text",
                      "description": "The preview text for the campaign."
                    },
                    "title": {
                      "type": "string",
                      "title": "Campaign Title",
                      "description": "The title of the campaign."
                    },
                    "from_name": {
                      "type": "string",
                      "title": "From Name",
                      "description": "The 'from' name on the campaign (not an email address)."
                    },
                    "reply_to": {
                      "type": "string",
                      "title": "Reply To Address",
                      "description": "The reply-to email address for the campaign."
                    },
                    "use_conversation": {
                      "type": "boolean",
                      "title": "Conversation",
                      "description": "Use MailChimp Conversation feature to manage out-of-office replies."
                    },
                    "to_name": {
                      "type": "string",
                      "title": "To Name",
                      "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                    },
                    "folder_id": {
                      "type": "string",
                      "title": "Folder ID",
                      "description": "If the campaign is listed in a folder, the id for that folder."
                    },
                    "authenticate": {
                      "type": "boolean",
                      "title": "Authentication",
                      "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                    },
                    "auto_footer": {
                      "type": "boolean",
                      "title": "Auto-Footer",
                      "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                    },
                    "inline_css": {
                      "type": "boolean",
                      "title": "Inline CSS",
                      "description": "Automatically inline the CSS included with the campaign content."
                    },
                    "auto_tweet": {
                      "type": "boolean",
                      "title": "Auto-Tweet",
                      "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                    },
                    "auto_fb_post": {
                      "type": "array",
                      "title": "Auto Post to Facebook",
                      "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fb_comments": {
                      "type": "boolean",
                      "title": "Facebook Comments",
                      "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                    },
                    "template_id": {
                      "type": "integer",
                      "title": "Template ID",
                      "description": "The id of the template to use."
                    }
                  }
                },
                "variate_settings": {
                  "type": "object",
                  "title": "A/B Test Options",
                  "description": "The settings specific to A/B test campaigns.",
                  "required": [
                    "winner_criteria"
                  ],
                  "properties": {
                    "winner_criteria": {
                      "type": "string",
                      "title": "Winning Criteria",
                      "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual",
                        "total_revenue"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                    },
                    "test_size": {
                      "type": "integer",
                      "title": "Test Size",
                      "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                    },
                    "subject_lines": {
                      "type": "array",
                      "title": "Subject Lines",
                      "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "send_times": {
                      "type": "array",
                      "title": "Send Times",
                      "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "from_names": {
                      "type": "array",
                      "title": "From Names",
                      "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "reply_to_addresses": {
                      "type": "array",
                      "title": "Reply To Addresses",
                      "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "combinations": {
                      "type": "array",
                      "title": "Combinations",
                      "description": "Combinations of possible variables used to build emails.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "ID",
                            "description": "Unique ID for the combination."
                          },
                          "subject_line": {
                            "type": "integer",
                            "title": "Subject Line",
                            "description": "The index of `variate_settings.subject_lines` used."
                          },
                          "send_time": {
                            "type": "integer",
                            "title": "Send Time",
                            "description": "The index of `variate_settings.send_times` used."
                          },
                          "from_name": {
                            "type": "integer",
                            "title": "From Name",
                            "description": "The index of `variate_settings.from_names` used."
                          },
                          "reply_to": {
                            "type": "integer",
                            "title": "Reply To",
                            "description": "The index of `variate_settings.reply_to_addresses` used."
                          },
                          "content_description": {
                            "type": "integer",
                            "title": "Content Description",
                            "description": "The index of `variate_settings.contents` used."
                          },
                          "recipients": {
                            "type": "integer",
                            "title": "Recipients",
                            "description": "The number of recipients for this combination."
                          }
                        }
                      }
                    }
                  }
                },
                "tracking": {
                  "type": "object",
                  "title": "Campaign Tracking Options",
                  "description": "The tracking options for a campaign.",
                  "properties": {
                    "opens": {
                      "type": "boolean",
                      "title": "Opens",
                      "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "html_clicks": {
                      "type": "boolean",
                      "title": "HTML Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "text_clicks": {
                      "type": "boolean",
                      "title": "Plain-Text Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "goal_tracking": {
                      "type": "boolean",
                      "title": "MailChimp Goal Tracking",
                      "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "ecomm360": {
                      "type": "boolean",
                      "title": "E-commerce Tracking",
                      "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "google_analytics": {
                      "type": "string",
                      "title": "Google Analytics Tracking",
                      "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                    },
                    "clicktale": {
                      "type": "string",
                      "title": "ClickTale Analytics Tracking",
                      "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                    },
                    "salesforce": {
                      "type": "object",
                      "title": "Salesforce CRM Tracking",
                      "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "campaign": {
                          "type": "boolean",
                          "title": "Salesforce Campaign",
                          "description": "Create a campaign in a connected Salesforce account."
                        },
                        "notes": {
                          "type": "boolean",
                          "title": "Salesforce Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    },
                    "capsule": {
                      "type": "object",
                      "title": "Capsule CRM Tracking",
                      "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
                      "properties": {
                        "notes": {
                          "type": "boolean",
                          "title": "Capsule Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    }
                  }
                },
                "rss_opts": {
                  "type": "object",
                  "title": "RSS Options",
                  "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "required": [
                    "feed_url",
                    "frequency"
                  ],
                  "properties": {
                    "feed_url": {
                      "type": "string",
                      "title": "Feed URL",
                      "format": "uri",
                      "description": "The URL for the RSS feed."
                    },
                    "frequency": {
                      "type": "string",
                      "title": "Frequency",
                      "description": "The frequency of the RSS Campaign.",
                      "enum": [
                        "daily",
                        "weekly",
                        "monthly"
                      ]
                    },
                    "schedule": {
                      "type": "object",
                      "title": "Sending Schedule",
                      "description": "The schedule for sending the RSS Campaign.",
                      "properties": {
                        "hour": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 23,
                          "title": "Sending Hour",
                          "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                        },
                        "daily_send": {
                          "type": "object",
                          "title": "Daily Sending Days",
                          "description": "The days of the week to send a daily RSS Campaign.",
                          "properties": {
                            "sunday": {
                              "type": "boolean",
                              "title": "Sunday",
                              "description": "Sends the daily RSS Campaign on Sundays."
                            },
                            "monday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Mondays."
                            },
                            "tuesday": {
                              "type": "boolean",
                              "title": "tuesday",
                              "description": "Sends the daily RSS Campaign on Tuesdays."
                            },
                            "wednesday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Wednesdays."
                            },
                            "thursday": {
                              "type": "boolean",
                              "title": "Thursday",
                              "description": "Sends the daily RSS Campaign on Thursdays."
                            },
                            "friday": {
                              "type": "boolean",
                              "title": "Friday",
                              "description": "Sends the daily RSS Campaign on Fridays."
                            },
                            "saturday": {
                              "type": "boolean",
                              "title": "Saturday",
                              "description": "Sends the daily RSS Campaign on Saturdays."
                            }
                          }
                        },
                        "weekly_send_day": {
                          "type": "string",
                          "enum": [
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday"
                          ],
                          "title": "Weekly Sending Day",
                          "description": "The day of the week to send a weekly RSS Campaign."
                        },
                        "monthly_send_date": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 31,
                          "title": "Monthly Sending Day",
                          "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                        }
                      }
                    },
                    "constrain_rss_img": {
                      "type": "boolean",
                      "title": "Constrain RSS Images",
                      "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                    }
                  }
                },
                "ab_split_opts": {
                  "type": "object",
                  "title": "A/B Testing Options",
                  "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "readOnly": true,
                  "properties": {
                    "split_test": {
                      "type": "string",
                      "title": "Split Test",
                      "description": "The type of AB split to run.",
                      "enum": [
                        "subject",
                        "from_name",
                        "schedule"
                      ]
                    },
                    "pick_winner": {
                      "type": "string",
                      "title": "Pick Winner",
                      "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual"
                      ]
                    },
                    "wait_units": {
                      "type": "string",
                      "title": "Wait Time",
                      "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                      "enum": [
                        "hours",
                        "days"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                    },
                    "split_size": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 50,
                      "title": "Split Size",
                      "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                    },
                    "from_name_a": {
                      "type": "string",
                      "title": "From Name Group A",
                      "description": "For campaigns split on 'From Name', the name for Group A."
                    },
                    "from_name_b": {
                      "type": "string",
                      "title": "From Name Group B",
                      "description": "For campaigns split on 'From Name', the name for Group B."
                    },
                    "reply_email_a": {
                      "type": "string",
                      "title": "Reply Email Group A",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                    },
                    "reply_email_b": {
                      "type": "string",
                      "title": "Reply Email Group B",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                    },
                    "subject_a": {
                      "type": "string",
                      "title": "Subject Line Group A",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                    },
                    "subject_b": {
                      "type": "string",
                      "title": "Subject Line Group B",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                    },
                    "send_time_a": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group A",
                      "description": "The send time for Group A."
                    },
                    "send_time_b": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group B",
                      "description": "The send time for Group B."
                    },
                    "send_time_winner": {
                      "type": "string",
                      "title": "Send Time Winner",
                      "description": "The send time for the winning version."
                    }
                  }
                },
                "social_card": {
                  "type": "object",
                  "title": "Campaign Social Card",
                  "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The url for the header image for the card."
                    },
                    "description": {
                      "type": "string",
                      "title": "Campaign Description",
                      "description": "A short summary of the campaign to display."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title for the card. Typically the subject line of the campaign."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign",
              "description": "A summary of an individual campaign's settings and content.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies this campaign.",
                  "readOnly": true
                },
                "web_id": {
                  "type": "integer",
                  "title": "Campaign Web ID",
                  "description": "The ID used in the MailChimp web application. View this campaign in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                  "readOnly": true
                },
                "type": {
                  "$ref": "#/definitions/CampaignType"
                },
                "create_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Create Time",
                  "description": "The date and time the campaign was created.",
                  "readOnly": true
                },
                "archive_url": {
                  "type": "string",
                  "title": "Archive URL",
                  "description": "The link to the campaign's archive version.",
                  "readOnly": true
                },
                "long_archive_url": {
                  "type": "string",
                  "title": "Long Archive URL",
                  "description": "The original link to the campaign's archive version.",
                  "readOnly": true
                },
                "status": {
                  "$ref": "#/definitions/CampaignStatus"
                },
                "emails_sent": {
                  "type": "integer",
                  "title": "Emails Sent",
                  "description": "The total number of emails sent for this campaign.",
                  "readOnly": true
                },
                "send_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Send Time",
                  "description": "The date and time a campaign was sent.",
                  "readOnly": true
                },
                "content_type": {
                  "type": "string",
                  "title": "Content Type",
                  "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                  "readOnly": true
                },
                "needs_block_refresh": {
                  "type": "boolean",
                  "title": "Needs Block Refresh",
                  "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor.",
                  "readonly": true
                },
                "recipients": {
                  "type": "object",
                  "title": "List",
                  "description": "List settings for the campaign.",
                  "properties": {
                    "list_id": {
                      "type": "string",
                      "title": "List ID",
                      "description": "The unique list id."
                    },
                    "list_name": {
                      "type": "string",
                      "title": "List Name",
                      "description": "The name of the list.",
                      "readOnly": true
                    },
                    "segment_text": {
                      "type": "string",
                      "title": "Segment Text",
                      "description": "A description of the [segment](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) used for the campaign. Formatted as a string marked up with HTML.",
                      "readOnly": true
                    },
                    "recipient_count": {
                      "type": "integer",
                      "title": "Recipient Count",
                      "description": "Count of the recipients on the associated list. Formatted as an integer.",
                      "readOnly": true
                    },
                    "segment_opts": {
                      "$ref": "#/definitions/SegmentationOptions"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "title": "Campaign Settings",
                  "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
                  "properties": {
                    "subject_line": {
                      "type": "string",
                      "title": "Campaign Subject Line",
                      "description": "The subject line for the campaign."
                    },
                    "preview_text": {
                      "type": "string",
                      "title": "Campaign Preview Text",
                      "description": "The preview text for the campaign."
                    },
                    "title": {
                      "type": "string",
                      "title": "Campaign Title",
                      "description": "The title of the campaign."
                    },
                    "from_name": {
                      "type": "string",
                      "title": "From Name",
                      "description": "The 'from' name on the campaign (not an email address)."
                    },
                    "reply_to": {
                      "type": "string",
                      "title": "Reply To Address",
                      "description": "The reply-to email address for the campaign."
                    },
                    "use_conversation": {
                      "type": "boolean",
                      "title": "Conversation",
                      "description": "Use MailChimp Conversation feature to manage out-of-office replies."
                    },
                    "to_name": {
                      "type": "string",
                      "title": "To Name",
                      "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                    },
                    "folder_id": {
                      "type": "string",
                      "title": "Folder ID",
                      "description": "If the campaign is listed in a folder, the id for that folder."
                    },
                    "authenticate": {
                      "type": "boolean",
                      "title": "Authentication",
                      "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                    },
                    "auto_footer": {
                      "type": "boolean",
                      "title": "Auto-Footer",
                      "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                    },
                    "inline_css": {
                      "type": "boolean",
                      "title": "Inline CSS",
                      "description": "Automatically inline the CSS included with the campaign content."
                    },
                    "auto_tweet": {
                      "type": "boolean",
                      "title": "Auto-Tweet",
                      "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                    },
                    "auto_fb_post": {
                      "type": "array",
                      "title": "Auto Post to Facebook",
                      "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "fb_comments": {
                      "type": "boolean",
                      "title": "Facebook Comments",
                      "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                    },
                    "timewarp": {
                      "type": "boolean",
                      "title": "Timewarp Send",
                      "description": "Send this campaign using [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "readOnly": true
                    },
                    "template_id": {
                      "type": "integer",
                      "title": "Template ID",
                      "description": "The id for the template used in this campaign.",
                      "readOnly": false
                    },
                    "drag_and_drop": {
                      "type": "boolean",
                      "title": "Drag And Drop Campaign",
                      "description": "Whether the campaign uses the drag-and-drop editor.",
                      "readOnly": true
                    }
                  }
                },
                "variate_settings": {
                  "type": "object",
                  "title": "A/B Test Options",
                  "description": "The settings specific to A/B test campaigns.",
                  "properties": {
                    "winning_combination_id": {
                      "type": "string",
                      "title": "Winning Combination ID",
                      "description": "ID for the winning combination.",
                      "readOnly": true
                    },
                    "winning_campaign_id": {
                      "type": "string",
                      "title": "Winning Campaign ID",
                      "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                      "readOnly": true
                    },
                    "winner_criteria": {
                      "type": "string",
                      "title": "Winning Criteria",
                      "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual",
                        "total_revenue"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                    },
                    "test_size": {
                      "type": "integer",
                      "title": "Test Size",
                      "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                    },
                    "subject_lines": {
                      "type": "array",
                      "title": "Subject Lines",
                      "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "send_times": {
                      "type": "array",
                      "title": "Send Times",
                      "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                      "items": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "from_names": {
                      "type": "array",
                      "title": "From Names",
                      "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "reply_to_addresses": {
                      "type": "array",
                      "title": "Reply To Addresses",
                      "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "contents": {
                      "type": "array",
                      "title": "Content Descriptions",
                      "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "combinations": {
                      "type": "array",
                      "title": "Combinations",
                      "description": "Combinations of possible variables used to build emails.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "ID",
                            "description": "Unique ID for the combination."
                          },
                          "subject_line": {
                            "type": "integer",
                            "title": "Subject Line",
                            "description": "The index of `variate_settings.subject_lines` used."
                          },
                          "send_time": {
                            "type": "integer",
                            "title": "Send Time",
                            "description": "The index of `variate_settings.send_times` used."
                          },
                          "from_name": {
                            "type": "integer",
                            "title": "From Name",
                            "description": "The index of `variate_settings.from_names` used."
                          },
                          "reply_to": {
                            "type": "integer",
                            "title": "Reply To",
                            "description": "The index of `variate_settings.reply_to_addresses` used."
                          },
                          "content_description": {
                            "type": "integer",
                            "title": "Content Description",
                            "description": "The index of `variate_settings.contents` used."
                          },
                          "recipients": {
                            "type": "integer",
                            "title": "Recipients",
                            "description": "The number of recipients for this combination."
                          }
                        }
                      }
                    }
                  }
                },
                "tracking": {
                  "type": "object",
                  "title": "Campaign Tracking Options",
                  "description": "The tracking options for a campaign.",
                  "properties": {
                    "opens": {
                      "type": "boolean",
                      "title": "Opens",
                      "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "html_clicks": {
                      "type": "boolean",
                      "title": "HTML Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "text_clicks": {
                      "type": "boolean",
                      "title": "Plain-Text Click Tracking",
                      "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                    },
                    "goal_tracking": {
                      "type": "boolean",
                      "title": "MailChimp Goal Tracking",
                      "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "ecomm360": {
                      "type": "boolean",
                      "title": "E-commerce Tracking",
                      "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                    },
                    "google_analytics": {
                      "type": "string",
                      "title": "Google Analytics Tracking",
                      "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                    },
                    "clicktale": {
                      "type": "string",
                      "title": "ClickTale Analytics Tracking",
                      "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                    },
                    "salesforce": {
                      "type": "object",
                      "title": "Salesforce CRM Tracking",
                      "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                      "properties": {
                        "campaign": {
                          "type": "boolean",
                          "title": "Salesforce Campaign",
                          "description": "Create a campaign in a connected Salesforce account."
                        },
                        "notes": {
                          "type": "boolean",
                          "title": "Salesforce Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    },
                    "capsule": {
                      "type": "object",
                      "title": "Capsule CRM Tracking",
                      "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
                      "properties": {
                        "notes": {
                          "type": "boolean",
                          "title": "Capsule Note",
                          "description": "Update contact notes for a campaign based on subscriber email addresses."
                        }
                      }
                    }
                  }
                },
                "rss_opts": {
                  "type": "object",
                  "title": "RSS Options",
                  "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "properties": {
                    "feed_url": {
                      "type": "string",
                      "title": "Feed URL",
                      "format": "uri",
                      "description": "The URL for the RSS feed."
                    },
                    "frequency": {
                      "type": "string",
                      "title": "Frequency",
                      "description": "The frequency of the RSS Campaign.",
                      "enum": [
                        "daily",
                        "weekly",
                        "monthly"
                      ]
                    },
                    "schedule": {
                      "type": "object",
                      "title": "Sending Schedule",
                      "description": "The schedule for sending the RSS Campaign.",
                      "properties": {
                        "hour": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 23,
                          "title": "Sending Hour",
                          "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                        },
                        "daily_send": {
                          "type": "object",
                          "title": "Daily Sending Days",
                          "description": "The days of the week to send a daily RSS Campaign.",
                          "properties": {
                            "sunday": {
                              "type": "boolean",
                              "title": "Sunday",
                              "description": "Sends the daily RSS Campaign on Sundays."
                            },
                            "monday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Mondays."
                            },
                            "tuesday": {
                              "type": "boolean",
                              "title": "tuesday",
                              "description": "Sends the daily RSS Campaign on Tuesdays."
                            },
                            "wednesday": {
                              "type": "boolean",
                              "title": "Monday",
                              "description": "Sends the daily RSS Campaign on Wednesdays."
                            },
                            "thursday": {
                              "type": "boolean",
                              "title": "Thursday",
                              "description": "Sends the daily RSS Campaign on Thursdays."
                            },
                            "friday": {
                              "type": "boolean",
                              "title": "Friday",
                              "description": "Sends the daily RSS Campaign on Fridays."
                            },
                            "saturday": {
                              "type": "boolean",
                              "title": "Saturday",
                              "description": "Sends the daily RSS Campaign on Saturdays."
                            }
                          }
                        },
                        "weekly_send_day": {
                          "type": "string",
                          "enum": [
                            "sunday",
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                            "saturday"
                          ],
                          "title": "Weekly Sending Day",
                          "description": "The day of the week to send a weekly RSS Campaign."
                        },
                        "monthly_send_date": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 31,
                          "title": "Monthly Sending Day",
                          "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                        }
                      }
                    },
                    "last_sent": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Last Sent",
                      "description": "The date the campaign was last sent.",
                      "readOnly": true
                    },
                    "constrain_rss_img": {
                      "type": "boolean",
                      "title": "Constrain RSS Images",
                      "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                    }
                  }
                },
                "ab_split_opts": {
                  "type": "object",
                  "title": "A/B Testing Options",
                  "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                  "readOnly": true,
                  "properties": {
                    "split_test": {
                      "type": "string",
                      "title": "Split Test",
                      "description": "The type of AB split to run.",
                      "enum": [
                        "subject",
                        "from_name",
                        "schedule"
                      ]
                    },
                    "pick_winner": {
                      "type": "string",
                      "title": "Pick Winner",
                      "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                      "enum": [
                        "opens",
                        "clicks",
                        "manual"
                      ]
                    },
                    "wait_units": {
                      "type": "string",
                      "title": "Wait Time",
                      "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                      "enum": [
                        "hours",
                        "days"
                      ]
                    },
                    "wait_time": {
                      "type": "integer",
                      "title": "Wait Time",
                      "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                    },
                    "split_size": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 50,
                      "title": "Split Size",
                      "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                    },
                    "from_name_a": {
                      "type": "string",
                      "title": "From Name Group A",
                      "description": "For campaigns split on 'From Name', the name for Group A."
                    },
                    "from_name_b": {
                      "type": "string",
                      "title": "From Name Group B",
                      "description": "For campaigns split on 'From Name', the name for Group B."
                    },
                    "reply_email_a": {
                      "type": "string",
                      "title": "Reply Email Group A",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                    },
                    "reply_email_b": {
                      "type": "string",
                      "title": "Reply Email Group B",
                      "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                    },
                    "subject_a": {
                      "type": "string",
                      "title": "Subject Line Group A",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                    },
                    "subject_b": {
                      "type": "string",
                      "title": "Subject Line Group B",
                      "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                    },
                    "send_time_a": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group A",
                      "description": "The send time for Group A."
                    },
                    "send_time_b": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Send Time Group B",
                      "description": "The send time for Group B."
                    },
                    "send_time_winner": {
                      "type": "string",
                      "title": "Send Time Winner",
                      "description": "The send time for the winning version."
                    }
                  }
                },
                "social_card": {
                  "type": "object",
                  "title": "Campaign Social Card",
                  "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Image URL",
                      "description": "The url for the header image for the card."
                    },
                    "description": {
                      "type": "string",
                      "title": "Campaign Description",
                      "description": "A short summary of the campaign to display."
                    },
                    "title": {
                      "type": "string",
                      "title": "Title",
                      "description": "The title for the card. Typically the subject line of the campaign."
                    }
                  }
                },
                "report_summary": {
                  "type": "object",
                  "title": "Campaign Report Summary",
                  "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data.",
                  "properties": {
                    "opens": {
                      "type": "integer",
                      "title": "Automation Opens",
                      "description": "The total number of opens for a campaign.",
                      "readOnly": true
                    },
                    "unique_opens": {
                      "type": "integer",
                      "title": "Unique Opens",
                      "description": "The number of unique opens.",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The number of unique opens divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "clicks": {
                      "type": "integer",
                      "title": "Total Clicks",
                      "description": "The total number of clicks for an campaign.",
                      "readOnly": true
                    },
                    "subscriber_clicks": {
                      "type": "integer",
                      "title": "Unique Subscriber Clicks",
                      "description": "The number of unique clicks.",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The number of unique clicks divided by the total number of successful deliveries.",
                      "readOnly": true
                    },
                    "ecommerce": {
                      "type": "object",
                      "title": "E-Commerce Report",
                      "description": "E-Commerce stats for a campaign.",
                      "properties": {
                        "total_orders": {
                          "type": "integer",
                          "title": "Total Orders",
                          "description": "The total orders for a campaign.",
                          "readOnly": true
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                          "readOnly": true
                        },
                        "total_revenue": {
                          "type": "number",
                          "title": "Total Revenue",
                          "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "delivery_status": {
                  "$ref": "#/definitions/DeliveryStatus"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a campaign",
        "description": "Remove a campaign from your MailChimp account.",
        "operationId": "deleteCampaignsId",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/cancel-send": {
      "post": {
        "summary": "Cancel a campaign",
        "description": "Cancel a Regular or Plain-Text Campaign after you send, before all of your recipients receive it. This feature is included with [MailChimp Pro](http://mailchimp.com/pro?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "postCampaignsIdActionsCancelSend",
        "x-pro-required": true,
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/replicate": {
      "post": {
        "summary": "Replicate a campaign",
        "description": "[Replicate a campaign](http://kb.mailchimp.com/campaigns/ways-to-build/replicate-a-campaign-or-automation-workflow?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in saved or send status.",
        "operationId": "postCampaignsIdActionsReplicate",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Campaign"
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/send": {
      "post": {
        "summary": "Send a campaign",
        "description": "Send a MailChimp campaign. For [RSS Campaigns](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs), the campaign will send according to its schedule. All other campaigns will send immediately.",
        "operationId": "postCampaignsIdActionsSend",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/schedule": {
      "post": {
        "summary": "Schedule a campaign",
        "description": "[Schedule a campaign](http://kb.mailchimp.com/campaigns/confirmation-and-sending/schedule-pause-or-send-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for delivery. If you're using [Multivariate Campaigns](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to test send times or sending [RSS Campaigns](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs), use the [send](http://developer.mailchimp.com/documentation/mailchimp/reference/campaigns/#action-post_campaigns_campaign_id_actions_send) action instead.",
        "operationId": "postCampaignsIdActionsSchedule",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "schedule_time"
              ],
              "properties": {
                "schedule_time": {
                  "type": "string",
                  "title": "Schedule Time",
                  "format": "date-time",
                  "description": "The date and time in UTC to schedule the campaign for delivery. Campaigns may only be scheduled to send on the quarter-hour (:00, :15, :30, :45)."
                },
                "timewarp": {
                  "type": "boolean",
                  "title": "Timewarp",
                  "description": "Choose whether the campaign should use [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) when sending. Campaigns scheduled with Timewarp are localized based on the recipients' time zones. For example, a Timewarp campaign with a `schedule_time` of 13:00 will be sent to each recipient at 1:00pm in their local time. Cannot be set to `true` for campaigns using [Batch Delivery](http://kb.mailchimp.com/campaigns/confirmation-and-sending/schedule-batch-delivery?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "batch_delivery": {
                  "type": "object",
                  "title": "Batch Delivery",
                  "description": "Choose whether the campaign should use [Batch Delivery](http://kb.mailchimp.com/campaigns/confirmation-and-sending/schedule-batch-delivery?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Cannot be set to `true` for campaigns using [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "required": [
                    "batch_delay",
                    "batch_count"
                  ],
                  "properties": {
                    "batch_delay": {
                      "type": "integer",
                      "title": "Batch Delay",
                      "description": "The delay, in minutes, between batches."
                    },
                    "batch_count": {
                      "type": "integer",
                      "title": "Batch Count",
                      "description": "The number of batches for the campaign send."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/unschedule": {
      "post": {
        "summary": "Unschedule a campaign",
        "description": "[Unschedule](http://kb.mailchimp.com/campaigns/confirmation-and-sending/schedule-pause-or-send-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Pause-a-Scheduled-Campaign) a scheduled campaign that hasn't started sending.",
        "operationId": "postCampaignsIdActionsUnschedule",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/test": {
      "post": {
        "summary": "Send a test email",
        "description": "Send a [test email](http://kb.mailchimp.com/campaigns/previews-and-tests/preview-and-test-your-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "postCampaignsIdActionsTest",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "test_emails",
                "send_type"
              ],
              "properties": {
                "test_emails": {
                  "type": "array",
                  "title": "Test Emails",
                  "description": "An array of email addresses to send the test email to."
                },
                "send_type": {
                  "type": "string",
                  "enum": [
                    "html",
                    "plaintext"
                  ],
                  "title": "Type of email to test",
                  "description": "Choose the type of test email to send."
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/pause": {
      "post": {
        "summary": "Pause an RSS-Driven campaign",
        "description": "[Pause an RSS-Driven campaign](http://kb.mailchimp.com/campaigns/rss-in-campaigns/pause-or-reactivate-an-rss-driven-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "postCampaignsIdActionsPause",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/actions/resume": {
      "post": {
        "summary": "Resume an RSS-Driven campaign",
        "description": "[Resume an RSS-Driven campaign](http://kb.mailchimp.com/campaigns/rss-in-campaigns/pause-or-reactivate-an-rss-driven-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "postCampaignsIdActionsResume",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/content": {
      "get": {
        "summary": "Get campaign content",
        "description": "Get the the HTML and plain-text content for a campaign.",
        "operationId": "getCampaignsIdContent",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Content",
              "description": "The HTML and plain-text content for a campaign.",
              "properties": {
                "variate_contents": {
                  "type": "array",
                  "title": "Variate Contents",
                  "description": "Content options for multivariate campaigns.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content_label": {
                        "type": "string",
                        "title": "Content Label",
                        "description": "Label used to identify the content option.",
                        "example": "Green header"
                      },
                      "plain_text": {
                        "type": "string",
                        "title": "Plain Text",
                        "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.",
                        "example": "Freddie likes jokes. Go to http://freddiesjokes.com to see all his jokes."
                      },
                      "html": {
                        "type": "string",
                        "title": "Campaign HTML",
                        "description": "The raw HTML for the campaign.",
                        "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                      }
                    }
                  }
                },
                "plain_text": {
                  "type": "string",
                  "title": "Plain Text",
                  "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                },
                "html": {
                  "type": "string",
                  "title": "Campaign HTML",
                  "description": "The raw HTML for the campaign."
                },
                "archive_html": {
                  "type": "string",
                  "title": "Campaign Archive HTML",
                  "description": "The Archive HTML for the campaign.",
                  "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Set campaign content",
        "description": "Set the content for a campaign.",
        "operationId": "putCampaignsIdContent",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Campaign Content",
              "description": "The HTML and plain-text content for a campaign",
              "properties": {
                "plain_text": {
                  "type": "string",
                  "title": "Plain Text",
                  "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                },
                "html": {
                  "type": "string",
                  "title": "Campaign HTML",
                  "description": "The raw HTML for the campaign."
                },
                "url": {
                  "type": "string",
                  "title": "Campaign URL",
                  "description": "When importing a campaign, the URL where the HTML lives."
                },
                "template": {
                  "type": "object",
                  "title": "Template Content",
                  "description": "Use this template to generate the HTML content of the campaign",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "title": "Template ID",
                      "description": "The id of the template to use."
                    },
                    "sections": {
                      "type": "object",
                      "title": "Template Sections",
                      "description": "Content for the sections of the template. Each key should be the unique [mc:edit area](http://kb.mailchimp.com/templates/code/create-editable-content-areas-with-mailchimps-template-language?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) name from the template."
                    }
                  }
                },
                "archive": {
                  "type": "object",
                  "title": "Upload Archive",
                  "description": "Available when uploading an archive to create campaign content. The archive should include all campaign content and images. [Learn more](http://kb.mailchimp.com/campaigns/ways-to-build/import-a-zip-file-to-create-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "required": [
                    "archive_content"
                  ],
                  "properties": {
                    "archive_content": {
                      "type": "string",
                      "title": "Archive Content",
                      "description": "The base64-encoded representation of the archive file."
                    },
                    "archive_type": {
                      "type": "string",
                      "enum": [
                        "zip",
                        "tar.gz",
                        "tar.bz2",
                        "tar",
                        "tgz",
                        "tbz"
                      ],
                      "title": "Archive Type",
                      "description": "The type of encoded file. Defaults to zip."
                    }
                  }
                },
                "variate_contents": {
                  "type": "array",
                  "title": "Variate Contents",
                  "description": "Content options for [Multivariate Campaigns](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Each content option must provide HTML content and may optionally provide plain text. For campaigns not testing content, only one object should be provided.",
                  "items": {
                    "type": "object",
                    "required": [
                      "content_label"
                    ],
                    "properties": {
                      "content_label": {
                        "type": "string",
                        "title": "Content Label",
                        "description": "The label used to identify the content option."
                      },
                      "plain_text": {
                        "type": "string",
                        "title": "Plain Text",
                        "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                      },
                      "html": {
                        "type": "string",
                        "title": "Campaign HTML",
                        "description": "The raw HTML for the campaign."
                      },
                      "url": {
                        "type": "string",
                        "title": "Campaign URL",
                        "description": "When importing a campaign, the URL for the HTML."
                      },
                      "template": {
                        "type": "object",
                        "title": "Template Content",
                        "description": "Use this template to generate the HTML content for the campaign.",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "title": "Template ID",
                            "description": "The id of the template to use."
                          },
                          "sections": {
                            "type": "object",
                            "title": "Template Sections",
                            "description": "Content for the sections of the template. Each key should be the unique [mc:edit area](http://kb.mailchimp.com/templates/code/create-editable-content-areas-with-mailchimps-template-language?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) name from the template."
                          }
                        }
                      },
                      "archive": {
                        "type": "object",
                        "title": "Upload Archive",
                        "description": "Available when uploading an archive to create campaign content. The archive should include all campaign content and images. [Learn more](http://kb.mailchimp.com/campaigns/ways-to-build/import-a-zip-file-to-create-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "required": [
                          "archive_content"
                        ],
                        "properties": {
                          "archive_content": {
                            "type": "string",
                            "title": "Archive Content",
                            "description": "The base64-encoded representation of the archive file."
                          },
                          "archive_type": {
                            "type": "string",
                            "enum": [
                              "zip",
                              "tar.gz",
                              "tar.bz2",
                              "tar",
                              "tgz",
                              "tbz"
                            ],
                            "title": "Archive Type",
                            "description": "The type of encoded file. Defaults to zip."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Content",
              "description": "The HTML and plain-text content for a campaign.",
              "properties": {
                "variate_contents": {
                  "type": "array",
                  "title": "Variate Contents",
                  "description": "Content options for multivariate campaigns.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content_label": {
                        "type": "string",
                        "title": "Content Label",
                        "description": "Label used to identify the content option.",
                        "example": "Green header"
                      },
                      "plain_text": {
                        "type": "string",
                        "title": "Plain Text",
                        "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically.",
                        "example": "Freddie likes jokes. Go to http://freddiesjokes.com to see all his jokes."
                      },
                      "html": {
                        "type": "string",
                        "title": "Campaign HTML",
                        "description": "The raw HTML for the campaign.",
                        "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>*|MC:SUBJECT|*</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                      }
                    }
                  }
                },
                "plain_text": {
                  "type": "string",
                  "title": "Plain Text",
                  "description": "The plain-text portion of the campaign. If left unspecified, we'll generate this automatically."
                },
                "html": {
                  "type": "string",
                  "title": "Campaign HTML",
                  "description": "The raw HTML for the campaign."
                },
                "archive_html": {
                  "type": "string",
                  "title": "Campaign Archive HTML",
                  "description": "The Archive HTML for the campaign.",
                  "example": "<!DOCTYPE html><html xmlns=http://www.w3.org/1999/xhtml><head><meta http-equiv=Content-Type content=\"text/html; charset=UTF-8\"><title>My Subject</title><style type=text/css>body{background-color:#d0e4fe}</style><body leftmargin=0 marginwidth=0 topmargin=0 marginheight=0 offset=0>"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/feedback": {
      "get": {
        "summary": "Get feedback about a campaign",
        "description": "Get team feedback while you're [working together on a MailChimp campaign](http://kb.mailchimp.com/campaigns/design/collaborate-on-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "getCampaignsIdFeedback",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Reports",
              "description": "A summary of the comment feedback for a specific campaign.",
              "properties": {
                "feedback": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CampaignFeedback"
                  },
                  "title": "Campaign Feedback",
                  "description": "A collection of feedback items for a campaign."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add campaign feedback",
        "description": "Add feedback on a specific campaign.",
        "operationId": "postCampaignsIdFeedback",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Campaign Feedback",
              "description": "A specific feedback message from a specific campaign.",
              "required": [
                "message"
              ],
              "properties": {
                "block_id": {
                  "type": "integer",
                  "title": "Block ID",
                  "description": "The block id for the editable block that the feedback addresses."
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The content of the feedback."
                },
                "is_complete": {
                  "type": "boolean",
                  "title": "Complete",
                  "description": "The status of feedback."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Feedback",
              "description": "A specific feedback message from a specific campaign.",
              "properties": {
                "feedback_id": {
                  "type": "integer",
                  "title": "Feedback ID",
                  "description": "The individual id for the feedback item.",
                  "readOnly": true
                },
                "parent_id": {
                  "type": "integer",
                  "title": "Parent ID",
                  "description": "If a reply, the id of the parent feedback item.",
                  "readOnly": true
                },
                "block_id": {
                  "type": "integer",
                  "title": "Block ID",
                  "description": "The block id for the editable block that the feedback addresses."
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The content of the feedback."
                },
                "is_complete": {
                  "type": "boolean",
                  "title": "Complete",
                  "description": "The status of feedback."
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The login name of the user who created the feedback.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "description": "The date and time the feedback item was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated At",
                  "description": "The date and time the feedback was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "source": {
                  "type": "string",
                  "title": "Source",
                  "description": "The source of the feedback.",
                  "enum": [
                    "api",
                    "email",
                    "sms",
                    "web",
                    "ios",
                    "android"
                  ],
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/feedback/{feedback_id}": {
      "get": {
        "summary": "Get a specific feedback message",
        "description": "Get a specific feedback message from a campaign.",
        "operationId": "getCampaignsIdFeedbackId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/CampaignFeedbackID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Feedback",
              "description": "A specific feedback message from a specific campaign.",
              "properties": {
                "feedback_id": {
                  "type": "integer",
                  "title": "Feedback ID",
                  "description": "The individual id for the feedback item.",
                  "readOnly": true
                },
                "parent_id": {
                  "type": "integer",
                  "title": "Parent ID",
                  "description": "If a reply, the id of the parent feedback item.",
                  "readOnly": true
                },
                "block_id": {
                  "type": "integer",
                  "title": "Block ID",
                  "description": "The block id for the editable block that the feedback addresses."
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The content of the feedback."
                },
                "is_complete": {
                  "type": "boolean",
                  "title": "Complete",
                  "description": "The status of feedback."
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The login name of the user who created the feedback.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "description": "The date and time the feedback item was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated At",
                  "description": "The date and time the feedback was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "source": {
                  "type": "string",
                  "title": "Source",
                  "description": "The source of the feedback.",
                  "enum": [
                    "api",
                    "email",
                    "sms",
                    "web",
                    "ios",
                    "android"
                  ],
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a campaign feedback message",
        "description": "Update a specific feedback message for a campaign.",
        "operationId": "patchCampaignsIdFeedbackId",
        "parameters": [
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/CampaignFeedbackID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Campaign Feedback",
              "description": "A specific feedback message from a specific campaign.",
              "required": [
                "message"
              ],
              "properties": {
                "block_id": {
                  "type": "integer",
                  "title": "Block ID",
                  "description": "The block id for the editable block that the feedback addresses."
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The content of the feedback."
                },
                "is_complete": {
                  "type": "boolean",
                  "title": "Complete",
                  "description": "The status of feedback."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Feedback",
              "description": "A specific feedback message from a specific campaign.",
              "properties": {
                "feedback_id": {
                  "type": "integer",
                  "title": "Feedback ID",
                  "description": "The individual id for the feedback item.",
                  "readOnly": true
                },
                "parent_id": {
                  "type": "integer",
                  "title": "Parent ID",
                  "description": "If a reply, the id of the parent feedback item.",
                  "readOnly": true
                },
                "block_id": {
                  "type": "integer",
                  "title": "Block ID",
                  "description": "The block id for the editable block that the feedback addresses."
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The content of the feedback."
                },
                "is_complete": {
                  "type": "boolean",
                  "title": "Complete",
                  "description": "The status of feedback."
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The login name of the user who created the feedback.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created At",
                  "description": "The date and time the feedback item was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated At",
                  "description": "The date and time the feedback was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "source": {
                  "type": "string",
                  "title": "Source",
                  "description": "The source of the feedback.",
                  "enum": [
                    "api",
                    "email",
                    "sms",
                    "web",
                    "ios",
                    "android"
                  ],
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a campaign feedback message",
        "description": "Remove a specific feedback message for a campaign.",
        "operationId": "deleteCampaignsIdFeedbackId",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/campaigns/{campaign_id}/send-checklist": {
      "get": {
        "summary": "Get the send checklist for a campaign",
        "description": "Review the send checklist for a campaign, and resolve any issues before sending.",
        "operationId": "getCampaignsIdSendChecklist",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Send Checklist",
              "description": "The send checklist for the campaign.",
              "properties": {
                "is_ready": {
                  "type": "boolean",
                  "title": "Ready?",
                  "description": "Whether the campaign is ready to send."
                },
                "items": {
                  "type": "array",
                  "title": "Items",
                  "description": "A list of feedback items to review before sending your campaign.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The item type.",
                        "enum": [
                          "success",
                          "warning",
                          "error"
                        ]
                      },
                      "id": {
                        "type": "integer",
                        "title": "ID",
                        "description": "The ID for the specific item."
                      },
                      "heading": {
                        "type": "string",
                        "title": "Heading",
                        "description": "The heading for the specific item."
                      },
                      "details": {
                        "type": "string",
                        "title": "Details",
                        "description": "Details about the specific feedback item."
                      }
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/connected-sites": {
      "get": {
        "summary": "Get all connected sites",
        "description": "Get all connected sites in an account.",
        "operationId": "getConnectedSites",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Connected Sites",
              "description": "A collection of connected sites in the account.",
              "properties": {
                "sites": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Connected Site",
                    "description": "Information about a specific connected site.",
                    "properties": {
                      "foreign_id": {
                        "type": "string",
                        "title": "Connected Site Foreign ID",
                        "description": "The unique identifier for the site.",
                        "readonly": true,
                        "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                      },
                      "store_id": {
                        "type": "string",
                        "title": "Store ID",
                        "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                        "readonly": true,
                        "example": "MC001"
                      },
                      "platform": {
                        "type": "string",
                        "title": "Connected Site Platform",
                        "description": "The platform of the connected site.",
                        "readonly": true,
                        "example": "shopify, magento, bigcommerce, woocommerce"
                      },
                      "domain": {
                        "type": "string",
                        "title": "Domain",
                        "description": "The connected site domain.",
                        "readonly": true,
                        "example": "example.myshopify.com"
                      },
                      "site_script": {
                        "type": "object",
                        "title": "Script",
                        "description": "The script used to connect your site with MailChimp.",
                        "readonly": true,
                        "properties": {
                          "url": {
                            "type": "string",
                            "title": "Script URL",
                            "description": "The URL used for any integrations that offer built-in support for connected sites.",
                            "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                          },
                          "fragment": {
                            "type": "string",
                            "title": "Script Fragment",
                            "description": "A pre-built script that you can copy-and-paste into your site to integrate it with MailChimp.",
                            "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the connected site was created.",
                        "readonly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the connected site was last updated.",
                        "readonly": true,
                        "example": "2015-07-15 19:35:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Connected Sites",
                  "description": "An array of objects, each representing a connected site."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new connected site",
        "description": "Create a new MailChimp connected site.",
        "operationId": "postConnectedSites",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Connected Site",
              "description": "Information about a specific connected site.",
              "required": [
                "foreign_id",
                "platform",
                "domain"
              ],
              "properties": {
                "foreign_id": {
                  "type": "string",
                  "title": "Connected Site Foreign ID",
                  "description": "The unique identifier for the site.",
                  "example": "MC001"
                },
                "platform": {
                  "type": "string",
                  "title": "Connected Site Platform",
                  "description": "The platform of the connected site.",
                  "example": "shopify, magento, bigcommerce, woocommerce"
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The connected site domain.",
                  "example": "example.myshopify.com"
                },
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The unique identifier for the ecommerce store to be associated with the connected site (if any).",
                  "example": "MC001"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Connected Site",
              "description": "Information about a specific connected site.",
              "properties": {
                "foreign_id": {
                  "type": "string",
                  "title": "Connected Site Foreign ID",
                  "description": "The unique identifier for the site.",
                  "readonly": true,
                  "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                },
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                  "readonly": true,
                  "example": "MC001"
                },
                "platform": {
                  "type": "string",
                  "title": "Connected Site Platform",
                  "description": "The platform of the connected site.",
                  "readonly": true,
                  "example": "shopify, magento, bigcommerce, woocommerce"
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The connected site domain.",
                  "readonly": true,
                  "example": "example.myshopify.com"
                },
                "site_script": {
                  "type": "object",
                  "title": "Script",
                  "description": "The script used to connect your site with MailChimp.",
                  "readonly": true,
                  "properties": {
                    "url": {
                      "type": "string",
                      "title": "Script URL",
                      "description": "The URL used for any integrations that offer built-in support for connected sites.",
                      "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                    },
                    "fragment": {
                      "type": "string",
                      "title": "Script Fragment",
                      "description": "A pre-built script that you can copy-and-paste into your site to integrate it with MailChimp.",
                      "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the connected site was created.",
                  "readonly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the connected site was last updated.",
                  "readonly": true,
                  "example": "2015-07-15 19:35:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/connected-sites/{connected_site_id}": {
      "get": {
        "summary": "Get information about a specific connected site",
        "description": "Get information about a specific connected site.",
        "operationId": "getConnectedSitesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ConnectedSiteID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Connected Site",
              "description": "Information about a specific connected site.",
              "properties": {
                "foreign_id": {
                  "type": "string",
                  "title": "Connected Site Foreign ID",
                  "description": "The unique identifier for the site.",
                  "readonly": true,
                  "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                },
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The unique identifier for the ecommerce store that's associated with the connected site (if any). The store_id for a specific connected site can't change.",
                  "readonly": true,
                  "example": "MC001"
                },
                "platform": {
                  "type": "string",
                  "title": "Connected Site Platform",
                  "description": "The platform of the connected site.",
                  "readonly": true,
                  "example": "shopify, magento, bigcommerce, woocommerce"
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The connected site domain.",
                  "readonly": true,
                  "example": "example.myshopify.com"
                },
                "site_script": {
                  "type": "object",
                  "title": "Script",
                  "description": "The script used to connect your site with MailChimp.",
                  "readonly": true,
                  "properties": {
                    "url": {
                      "type": "string",
                      "title": "Script URL",
                      "description": "The URL used for any integrations that offer built-in support for connected sites.",
                      "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                    },
                    "fragment": {
                      "type": "string",
                      "title": "Script Fragment",
                      "description": "A pre-built script that you can copy-and-paste into your site to integrate it with MailChimp.",
                      "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the connected site was created.",
                  "readonly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the connected site was last updated.",
                  "readonly": true,
                  "example": "2015-07-15 19:35:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a connected site",
        "description": "Remove a connected site from your MailChimp account.",
        "operationId": "deleteConnectedSitesId",
        "parameters": [
          {
            "$ref": "#/parameters/ConnectedSiteID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/connected-sites/{connected_site_id}/actions/verify-script-installation": {
      "post": {
        "summary": "Verify script installation for a connected site",
        "description": "Verify that the connected sites script has been installed, either via the script URL or fragment.",
        "operationId": "postConnectedSitesIdActionsVerifyScriptInstallation",
        "x-pro-required": true,
        "parameters": [
          {
            "$ref": "#/parameters/ConnectedSiteID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/conversations": {
      "get": {
        "summary": "Get a list of conversations",
        "description": "Get a list of conversations for the account.",
        "operationId": "getConversations",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ConversationHasUndreadMessages"
          },
          {
            "$ref": "#/parameters/Filter_ListID"
          },
          {
            "$ref": "#/parameters/Filter_CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Tracked Conversations",
              "description": "A collection of this account's tracked conversations.",
              "properties": {
                "conversations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Conversation",
                    "description": "Details about an individual conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your MailChimp account.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "ID",
                        "description": "A string that uniquely identifies this conversation.",
                        "readOnly": true
                      },
                      "message_count": {
                        "type": "integer",
                        "title": "Message Count",
                        "description": "The total number of messages in this conversation.",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The unique identifier of the campaign for this conversation.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique identifier of the list for this conversation.",
                        "readOnly": true
                      },
                      "unread_messages": {
                        "type": "integer",
                        "title": "Unread Messages",
                        "description": "The number of unread messages in this conversation.",
                        "readOnly": true
                      },
                      "from_label": {
                        "type": "string",
                        "title": "From Label",
                        "description": "A label representing the sender of this message.",
                        "readOnly": true
                      },
                      "from_email": {
                        "type": "string",
                        "title": "From Email",
                        "description": "A label representing the email of the sender of this message.",
                        "readOnly": true
                      },
                      "subject": {
                        "type": "string",
                        "title": "Subject",
                        "description": "The subject of the message.",
                        "readOnly": true
                      },
                      "last_message": {
                        "type": "object",
                        "title": "Last Message",
                        "description": "The most recent message in the conversation.",
                        "properties": {
                          "from_label": {
                            "type": "string",
                            "title": "From Label",
                            "description": "A label representing the sender of this message.",
                            "readOnly": true
                          },
                          "from_email": {
                            "type": "string",
                            "title": "From Email",
                            "description": "A label representing the email of the sender of this message.",
                            "readOnly": true
                          },
                          "subject": {
                            "type": "string",
                            "title": "Subject",
                            "description": "The subject of this message.",
                            "readOnly": true
                          },
                          "message": {
                            "type": "string",
                            "title": "Message",
                            "description": "The plain-text content of the message.",
                            "readOnly": true
                          },
                          "read": {
                            "id": "read",
                            "type": "boolean",
                            "title": "Read",
                            "description": "Whether this message has been marked as read."
                          },
                          "timestamp": {
                            "type": "string",
                            "title": "Timestamp",
                            "description": "The date and time the message was either sent or received.",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Conversations",
                  "description": "A list of conversations."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/conversations/{conversation_id}": {
      "get": {
        "summary": "Get information about a conversation",
        "description": "Get details about an individual conversation.",
        "operationId": "getConversationsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ConversationID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Conversation",
              "description": "Details about an individual conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your MailChimp account.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "ID",
                  "description": "A string that uniquely identifies this conversation.",
                  "readOnly": true
                },
                "message_count": {
                  "type": "integer",
                  "title": "Message Count",
                  "description": "The total number of messages in this conversation.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique identifier of the campaign for this conversation.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique identifier of the list for this conversation.",
                  "readOnly": true
                },
                "unread_messages": {
                  "type": "integer",
                  "title": "Unread Messages",
                  "description": "The number of unread messages in this conversation.",
                  "readOnly": true
                },
                "from_label": {
                  "type": "string",
                  "title": "From Label",
                  "description": "A label representing the sender of this message.",
                  "readOnly": true
                },
                "from_email": {
                  "type": "string",
                  "title": "From Email",
                  "description": "A label representing the email of the sender of this message.",
                  "readOnly": true
                },
                "subject": {
                  "type": "string",
                  "title": "Subject",
                  "description": "The subject of the message.",
                  "readOnly": true
                },
                "last_message": {
                  "type": "object",
                  "title": "Last Message",
                  "description": "The most recent message in the conversation.",
                  "properties": {
                    "from_label": {
                      "type": "string",
                      "title": "From Label",
                      "description": "A label representing the sender of this message.",
                      "readOnly": true
                    },
                    "from_email": {
                      "type": "string",
                      "title": "From Email",
                      "description": "A label representing the email of the sender of this message.",
                      "readOnly": true
                    },
                    "subject": {
                      "type": "string",
                      "title": "Subject",
                      "description": "The subject of this message.",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "title": "Message",
                      "description": "The plain-text content of the message.",
                      "readOnly": true
                    },
                    "read": {
                      "id": "read",
                      "type": "boolean",
                      "title": "Read",
                      "description": "Whether this message has been marked as read."
                    },
                    "timestamp": {
                      "type": "string",
                      "title": "Timestamp",
                      "description": "The date and time the message was either sent or received.",
                      "format": "date-time",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/conversations/{conversation_id}/messages": {
      "get": {
        "summary": "Get conversation messages",
        "description": "Get messages from a specific conversation.",
        "operationId": "getConversationsIdMessages",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ConversationID"
          },
          {
            "$ref": "#/parameters/MessageIsRead"
          },
          {
            "$ref": "#/parameters/MessageTimestamp_Before"
          },
          {
            "$ref": "#/parameters/MessageTimestamp_Since"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Collection of Conversation Messages",
              "description": "Messages from a specific conversation.",
              "properties": {
                "conversation_messages": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Conversation Message",
                    "description": "An individual message in a conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your MailChimp account.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "ID",
                        "description": "A string that uniquely identifies this message",
                        "readOnly": true
                      },
                      "conversation_id": {
                        "type": "string",
                        "title": "Conversation ID",
                        "description": "A string that identifies this message's conversation",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "integer",
                        "title": "Campaign ID",
                        "description": "The unique identifier of the list for this conversation.",
                        "readOnly": true
                      },
                      "from_label": {
                        "type": "string",
                        "title": "From Label",
                        "description": "A label representing the sender of this message",
                        "readOnly": true
                      },
                      "from_email": {
                        "type": "string",
                        "title": "From Email",
                        "description": "A label representing the email of the sender of this message"
                      },
                      "subject": {
                        "type": "string",
                        "title": "Subject",
                        "description": "The subject of this message"
                      },
                      "message": {
                        "type": "string",
                        "title": "Message",
                        "description": "The plain-text content of the message"
                      },
                      "read": {
                        "type": "boolean",
                        "title": "Read",
                        "description": "Whether this message has been marked as read"
                      },
                      "timestamp": {
                        "type": "string",
                        "title": "Timestamp",
                        "description": "The date and time the message was either sent or received.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Conversation Messages",
                  "description": "An array of objects, each representing a conversation messages resources."
                },
                "conversation_id": {
                  "type": "string",
                  "title": "Conversation ID",
                  "description": "A string that identifies this conversation."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Post a new conversation message",
        "description": "Post a new message to a conversation.",
        "operationId": "postConversationsIdMessages",
        "parameters": [
          {
            "$ref": "#/parameters/ConversationID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Conversation Message",
              "description": "An individual message in a conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your MailChimp account.",
              "required": [
                "from_email",
                "read"
              ],
              "properties": {
                "from_email": {
                  "type": "string",
                  "title": "From Email",
                  "description": "A label representing the email of the sender of this message"
                },
                "subject": {
                  "type": "string",
                  "title": "Subject",
                  "description": "The subject of this message"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The plain-text content of the message"
                },
                "read": {
                  "type": "boolean",
                  "title": "Read",
                  "description": "Whether this message has been marked as read"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Conversation Message",
              "description": "An individual message in a conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your MailChimp account.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "ID",
                  "description": "A string that uniquely identifies this message",
                  "readOnly": true
                },
                "conversation_id": {
                  "type": "string",
                  "title": "Conversation ID",
                  "description": "A string that identifies this message's conversation",
                  "readOnly": true
                },
                "list_id": {
                  "type": "integer",
                  "title": "Campaign ID",
                  "description": "The unique identifier of the list for this conversation.",
                  "readOnly": true
                },
                "from_label": {
                  "type": "string",
                  "title": "From Label",
                  "description": "A label representing the sender of this message",
                  "readOnly": true
                },
                "from_email": {
                  "type": "string",
                  "title": "From Email",
                  "description": "A label representing the email of the sender of this message"
                },
                "subject": {
                  "type": "string",
                  "title": "Subject",
                  "description": "The subject of this message"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The plain-text content of the message"
                },
                "read": {
                  "type": "boolean",
                  "title": "Read",
                  "description": "Whether this message has been marked as read"
                },
                "timestamp": {
                  "type": "string",
                  "title": "Timestamp",
                  "description": "The date and time the message was either sent or received.",
                  "format": "date-time",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/conversations/{conversation_id}/messages/{message_id}": {
      "get": {
        "summary": "Get a specific conversation message",
        "description": "Get an individual message in a conversation.",
        "operationId": "getConversationsIdMessagesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ConversationID"
          },
          {
            "$ref": "#/parameters/ConversationMessageID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Conversation Message",
              "description": "An individual message in a conversation. Conversation tracking is a feature available to paid accounts that lets you view replies to your campaigns in your MailChimp account.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "ID",
                  "description": "A string that uniquely identifies this message",
                  "readOnly": true
                },
                "conversation_id": {
                  "type": "string",
                  "title": "Conversation ID",
                  "description": "A string that identifies this message's conversation",
                  "readOnly": true
                },
                "list_id": {
                  "type": "integer",
                  "title": "Campaign ID",
                  "description": "The unique identifier of the list for this conversation.",
                  "readOnly": true
                },
                "from_label": {
                  "type": "string",
                  "title": "From Label",
                  "description": "A label representing the sender of this message",
                  "readOnly": true
                },
                "from_email": {
                  "type": "string",
                  "title": "From Email",
                  "description": "A label representing the email of the sender of this message"
                },
                "subject": {
                  "type": "string",
                  "title": "Subject",
                  "description": "The subject of this message"
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "The plain-text content of the message"
                },
                "read": {
                  "type": "boolean",
                  "title": "Read",
                  "description": "Whether this message has been marked as read"
                },
                "timestamp": {
                  "type": "string",
                  "title": "Timestamp",
                  "description": "The date and time the message was either sent or received.",
                  "format": "date-time",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/dashboard/ads": {
      "get": {
        "summary": "Dashboard Onboarding Ads",
        "description": "Get all the onboarding ads info for the mobile dashboard",
        "operationId": "getDashboardAds",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/OnboardingAd_Platform"
          },
          {
            "$ref": "#/parameters/OnboardingAd_Num"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Onboarding Ads",
              "properties": {
                "ads": {
                  "type": "array",
                  "title": "Ads List",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "ID",
                        "readOnly": true,
                        "example": 1
                      },
                      "category": {
                        "type": "string",
                        "title": "Category",
                        "readOnly": true,
                        "example": "E-Commerce"
                      },
                      "mobile_title": {
                        "type": "string",
                        "title": "Mobile Title",
                        "readOnly": true,
                        "example": "Set up an abandoned cart automation"
                      },
                      "mobile_description": {
                        "type": "string",
                        "title": "Mobile Description",
                        "readOnly": true,
                        "example": "Now that you've connected your store, reclaim some lost carts."
                      },
                      "mobile_action": {
                        "type": "string",
                        "title": "Mobile Call to Action Text",
                        "readOnly": true,
                        "example": "Learn how to create an automation"
                      },
                      "action_url": {
                        "type": "string",
                        "title": "Call to Action URL",
                        "readOnly": true,
                        "example": "http://mailchimp.com/about/brand-assets/"
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Image URL",
                        "readOnly": true,
                        "example": "http://static.mailchimp.com/web/brand-assets/logo-freddie-fullcolor.svg"
                      },
                      "image_target": {
                        "type": "string",
                        "title": "Image Target",
                        "readOnly": true,
                        "example": "http://static.mailchimp.com/web/brand-assets/logo-freddie-fullcolor.svg"
                      },
                      "pro_feature": {
                        "type": "boolean",
                        "title": "Pro Feature",
                        "readOnly": true,
                        "example": true
                      },
                      "paid_feature": {
                        "type": "boolean",
                        "title": "Paid Feature",
                        "readOnly": true,
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/dashboard/audiences": {
      "get": {
        "summary": "Dashboard Audiences",
        "description": "Get all the audiences info for the mobile dashboard",
        "operationId": "getDashboardAudiences",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Audiences",
              "properties": {
                "growth": {
                  "type": "object",
                  "title": "Data about Growth",
                  "properties": {
                    "seven_days": {
                      "type": "object",
                      "title": "Growth Data over Seven Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Growth over Seven Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-22"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-28"
                            },
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers over Seven Days",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "active": {
                                      "type": "integer",
                                      "title": "Active",
                                      "readOnly": true,
                                      "example": 92
                                    },
                                    "net_growth": {
                                      "type": "integer",
                                      "title": "Net Growth",
                                      "readOnly": true,
                                      "example": 40
                                    },
                                    "unsubscribes": {
                                      "type": "integer",
                                      "title": "Unsubscribes",
                                      "readOnly": true,
                                      "example": 392
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers",
                              "properties": {
                                "active": {
                                  "type": "array",
                                  "title": "Active subscribers",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "unsubscribes": {
                                  "type": "array",
                                  "title": "Unsubscribes",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "net_growth": {
                                  "type": "array",
                                  "title": "Net Growth",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "thirty_days": {
                      "type": "object",
                      "title": "Growth Data over Thirty Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Growth over Thirty Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-01"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-31"
                            },
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers over Thirty Days",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "active": {
                                      "type": "integer",
                                      "title": "Active",
                                      "readOnly": true,
                                      "example": 92
                                    },
                                    "net_growth": {
                                      "type": "integer",
                                      "title": "Net Growth",
                                      "readOnly": true,
                                      "example": 40
                                    },
                                    "unsubscribes": {
                                      "type": "integer",
                                      "title": "Unsubscribes",
                                      "readOnly": true,
                                      "example": 392
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers",
                              "properties": {
                                "active": {
                                  "type": "array",
                                  "title": "Active Subscribers",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "unsubscribes": {
                                  "type": "array",
                                  "title": "Unsubscribes",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "net_growth": {
                                  "type": "array",
                                  "title": "Net Growth",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ninety_days": {
                      "type": "object",
                      "title": "Growth Data over Ninety Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Growth over Ninety Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-05-30"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-31"
                            },
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers over Ninety Days",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "active": {
                                      "type": "integer",
                                      "title": "Active",
                                      "readOnly": true,
                                      "example": 92
                                    },
                                    "net_growth": {
                                      "type": "integer",
                                      "title": "Net Growth",
                                      "readOnly": true,
                                      "example": 40
                                    },
                                    "unsubscribes": {
                                      "type": "integer",
                                      "title": "Unsubscribes",
                                      "readOnly": true,
                                      "example": 392
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers",
                              "properties": {
                                "active": {
                                  "type": "array",
                                  "title": "Active Subscribers",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "unsubscribes": {
                                  "type": "array",
                                  "title": "Unsubscribes",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "net_growth": {
                                  "type": "array",
                                  "title": "Net Growth",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "one_year": {
                      "type": "object",
                      "title": "Growth Data over One Year",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Growth over One Year",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2015-08-31"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-07-31"
                            },
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers over One Year",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "active": {
                                      "type": "integer",
                                      "title": "Active",
                                      "readOnly": true,
                                      "example": 92
                                    },
                                    "net_growth": {
                                      "type": "integer",
                                      "title": "Net Growth",
                                      "readOnly": true,
                                      "example": 40
                                    },
                                    "unsubscribes": {
                                      "type": "integer",
                                      "title": "Unsubscribes",
                                      "readOnly": true,
                                      "example": 392
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "subscribers": {
                              "type": "object",
                              "title": "Subscribers",
                              "properties": {
                                "active": {
                                  "type": "array",
                                  "title": "Active Subscribers",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "unsubscribes": {
                                  "type": "array",
                                  "title": "Unsubscribes",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "net_growth": {
                                  "type": "array",
                                  "title": "Net Growth",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-23"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "sources": {
                  "type": "object",
                  "title": "Data about Sources",
                  "properties": {
                    "seven_days": {
                      "type": "object",
                      "title": "Sources Data over Seven Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Sources over Seven Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-24"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-30"
                            },
                            "distribution": {
                              "type": "object",
                              "title": "Distribution over Seven Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 922
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 952
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sources": {
                                      "type": "integer",
                                      "title": "Sources",
                                      "readOnly": true,
                                      "example": 922
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "distribution": {
                              "type": "object",
                              "title": "Distribution",
                              "properties": {
                                "sources": {
                                  "type": "array",
                                  "title": "Sources",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "title": "Source",
                                        "readOnly": true,
                                        "example": "source_fb_form"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "thirty_days": {
                      "type": "object",
                      "title": "Sources Data over Thirty Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Sources over Thirty Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-01"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-31"
                            },
                            "distribution": {
                              "type": "object",
                              "title": "Distribution over Thirty Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 922
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 952
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sources": {
                                      "type": "integer",
                                      "title": "Sources",
                                      "readOnly": true,
                                      "example": 922
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "distribution": {
                              "type": "object",
                              "title": "Distribution",
                              "properties": {
                                "sources": {
                                  "type": "array",
                                  "title": "Sources",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "title": "Source",
                                        "readOnly": true,
                                        "example": "source_fb_form"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ninety_days": {
                      "type": "object",
                      "title": "Sources Data over Ninety Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Sources over Ninety Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-05-30"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-31"
                            },
                            "distribution": {
                              "type": "object",
                              "title": "Distribution over Ninety Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 922
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 952
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sources": {
                                      "type": "integer",
                                      "title": "Sources",
                                      "readOnly": true,
                                      "example": 922
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "distribution": {
                              "type": "object",
                              "title": "Distribution",
                              "properties": {
                                "sources": {
                                  "type": "array",
                                  "title": "Sources",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "title": "Source",
                                        "readOnly": true,
                                        "example": "source_fb_form"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "one_year": {
                      "type": "object",
                      "title": "Sources Data over One Year",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Sources over One Year",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2015-08-31"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-07-31"
                            },
                            "distribution": {
                              "type": "object",
                              "title": "Distribution over One Year",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 922
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 952
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sources": {
                                      "type": "integer",
                                      "title": "Sources",
                                      "readOnly": true,
                                      "example": 922
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "distribution": {
                              "type": "object",
                              "title": "Distribution",
                              "properties": {
                                "sources": {
                                  "type": "array",
                                  "title": "Sources",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "title": "Source",
                                        "readOnly": true,
                                        "example": "source_fb_form"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/dashboard/charts": {
      "get": {
        "summary": "Dashboard Charts",
        "description": "Get info about which dashboard charts to show for this user",
        "operationId": "getDashboardCharts",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Charts",
              "properties": {
                "charts": {
                  "type": "object",
                  "title": "Charts with data",
                  "properties": {
                    "ecommerce": {
                      "type": "boolean",
                      "title": "Ecommerce",
                      "readOnly": true,
                      "example": true
                    },
                    "audiences": {
                      "type": "boolean",
                      "title": "Audiences",
                      "readOnly": true,
                      "example": true
                    },
                    "engagement": {
                      "type": "boolean",
                      "title": "Engagement",
                      "readOnly": true,
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/dashboard/ecommerce": {
      "get": {
        "summary": "Dashboard Ecommerce",
        "description": "Get all the ecommerce info for the mobile dashboard",
        "operationId": "getDashboardEcommerce",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Ecommerce",
              "properties": {
                "orders": {
                  "type": "object",
                  "title": "Data about Orders",
                  "properties": {
                    "seven_days": {
                      "type": "object",
                      "title": "Order Data over Seven Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Orders over Seven Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-22"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-28"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Orders over Seven Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "completed_orders": {
                                      "type": "integer",
                                      "title": "Completed Orders",
                                      "readOnly": true,
                                      "example": 384
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts over Seven Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 393
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 414
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "integer",
                                      "title": "Recovered Carts",
                                      "readOnly": true,
                                      "example": 393
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders",
                              "properties": {
                                "completed_orders": {
                                  "type": "array",
                                  "title": "Completed Orders",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "thirty_days": {
                      "type": "object",
                      "title": "Order Data over Thirty Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Orders over Thirty Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-07-25"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-30"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Orders over Thirty Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "completed_orders": {
                                      "type": "integer",
                                      "title": "Completed Orders",
                                      "readOnly": true,
                                      "example": 384
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts over Thirty Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 393
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 414
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "integer",
                                      "title": "Recovered Carts",
                                      "readOnly": true,
                                      "example": 393
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders",
                              "properties": {
                                "completed_orders": {
                                  "type": "array",
                                  "title": "Completed Orders",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ninety_days": {
                      "type": "object",
                      "title": "Order Data over Ninety Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Orders over Ninety Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-05-30"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-30"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Orders over Ninety Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "completed_orders": {
                                      "type": "integer",
                                      "title": "Completed Orders",
                                      "readOnly": true,
                                      "example": 384
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts over Ninety Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 393
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 414
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "integer",
                                      "title": "Recovered Carts",
                                      "readOnly": true,
                                      "example": 393
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders",
                              "properties": {
                                "completed_orders": {
                                  "type": "array",
                                  "title": "Completed Orders",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "one_year": {
                      "type": "object",
                      "title": "Order Data over One Year",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Orders over One Year",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2015-08-30"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-07-30"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Orders over One Year",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Orders",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "completed_orders": {
                                      "type": "integer",
                                      "title": "Completed Orders",
                                      "readOnly": true,
                                      "example": 384
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts over One Year",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 393
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 414
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "integer",
                                      "title": "Current Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "integer",
                                      "title": "Previous Total for MailChimp Carts",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "integer",
                                      "title": "Recovered Carts",
                                      "readOnly": true,
                                      "example": 393
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders",
                              "properties": {
                                "completed_orders": {
                                  "type": "array",
                                  "title": "Completed Orders",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "string",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "revenue": {
                  "type": "object",
                  "title": "Data about Revenue",
                  "properties": {
                    "seven_days": {
                      "type": "object",
                      "title": "Revenue Data over Seven Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Revenue over Seven Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-22"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-28"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Order Revenue over Seven Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 1836
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 1678
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "email_campaigns": {
                                      "type": "number",
                                      "title": "Revenue from Email Campaigns",
                                      "readOnly": true,
                                      "example": 649
                                    },
                                    "automations": {
                                      "type": "number",
                                      "title": "Revenue from Automations",
                                      "readOnly": true,
                                      "example": 486
                                    },
                                    "elsewhere": {
                                      "type": "number",
                                      "title": "Revenue from Elsewhere",
                                      "readOnly": true,
                                      "example": 701
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts Revenue over Seven Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 574
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 578
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "number",
                                      "title": "Revenue from Recovered Carts",
                                      "readOnly": true,
                                      "example": 574
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders Revenue",
                              "properties": {
                                "email_campaigns": {
                                  "type": "array",
                                  "title": "Revenue from Email Campaigns",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "automations": {
                                  "type": "array",
                                  "title": "Revenue from Automations",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "elsewhere": {
                                  "type": "array",
                                  "title": "Revenue from Elsewhere",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 97
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "thirty_days": {
                      "type": "object",
                      "title": "Revenue Data over Thirty Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Revenue over Thirty Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-07-25"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-28"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Order Revenue over Thirty Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 1836
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 1678
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "email_campaigns": {
                                      "type": "number",
                                      "title": "Revenue from Email Campaigns",
                                      "readOnly": true,
                                      "example": 649
                                    },
                                    "automations": {
                                      "type": "number",
                                      "title": "Revenue from Automations",
                                      "readOnly": true,
                                      "example": 486
                                    },
                                    "elsewhere": {
                                      "type": "number",
                                      "title": "Revenue from Elsewhere",
                                      "readOnly": true,
                                      "example": 701
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts Revenue over Thirty Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 574
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 578
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "number",
                                      "title": "Revenue from Recovered Carts",
                                      "readOnly": true,
                                      "example": 574
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders Revenue",
                              "properties": {
                                "email_campaigns": {
                                  "type": "array",
                                  "title": "Revenue from Email Campaigns",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "automations": {
                                  "type": "array",
                                  "title": "Revenue from Automations",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "elsewhere": {
                                  "type": "array",
                                  "title": "Revenue from Elsewhere",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 97
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ninety_days": {
                      "type": "object",
                      "title": "Revenue Data over Ninety Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Revenue over Ninety Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-05-30"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-28"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Order Revenue over Ninety Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 1836
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 1678
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "email_campaigns": {
                                      "type": "number",
                                      "title": "Revenue from Email Campaigns",
                                      "readOnly": true,
                                      "example": 649
                                    },
                                    "automations": {
                                      "type": "number",
                                      "title": "Revenue from Automations",
                                      "readOnly": true,
                                      "example": 486
                                    },
                                    "elsewhere": {
                                      "type": "number",
                                      "title": "Revenue from Elsewhere",
                                      "readOnly": true,
                                      "example": 701
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts Revenue over Ninety Days",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 574
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 578
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "number",
                                      "title": "Revenue from Recovered Carts",
                                      "readOnly": true,
                                      "example": 574
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders Revenue",
                              "properties": {
                                "email_campaigns": {
                                  "type": "array",
                                  "title": "Revenue from Email Campaigns",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "automations": {
                                  "type": "array",
                                  "title": "Revenue from Automations",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "elsewhere": {
                                  "type": "array",
                                  "title": "Revenue from Elsewhere",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 97
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "one_year": {
                      "type": "object",
                      "title": "Revenue Data over One Year",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Revenue over One Year",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2015-08-30"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-07-30"
                            },
                            "orders": {
                              "type": "object",
                              "title": "Order Revenue over One Year",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 1836
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 1678
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Orders Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "email_campaigns": {
                                      "type": "number",
                                      "title": "Revenue from Email Campaigns",
                                      "readOnly": true,
                                      "example": 649
                                    },
                                    "automations": {
                                      "type": "number",
                                      "title": "Revenue from Automations",
                                      "readOnly": true,
                                      "example": 486
                                    },
                                    "elsewhere": {
                                      "type": "number",
                                      "title": "Revenue from Elsewhere",
                                      "readOnly": true,
                                      "example": 701
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts Revenue over One Year",
                              "properties": {
                                "totals": {
                                  "type": "object",
                                  "title": "Totals",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total",
                                      "readOnly": true,
                                      "example": 574
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total",
                                      "readOnly": true,
                                      "example": 578
                                    }
                                  }
                                },
                                "mailchimp": {
                                  "type": "object",
                                  "title": "MailChimp",
                                  "properties": {
                                    "current": {
                                      "type": "number",
                                      "title": "Current Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 384
                                    },
                                    "previous": {
                                      "type": "number",
                                      "title": "Previous Total for MailChimp Carts Revenue",
                                      "readOnly": true,
                                      "example": 322
                                    }
                                  }
                                },
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "recovered_carts": {
                                      "type": "number",
                                      "title": "Revenue from Recovered Carts",
                                      "readOnly": true,
                                      "example": 574
                                    }
                                  }
                                }
                              }
                            },
                            "section_title": {
                              "type": "string",
                              "title": "Section Title",
                              "readOnly": true,
                              "example": "Asthmatic Kitty Records"
                            },
                            "store_count": {
                              "type": "integer",
                              "title": "Store Count",
                              "readOnly": true,
                              "example": 1
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data",
                          "properties": {
                            "orders": {
                              "type": "object",
                              "title": "Orders Revenue",
                              "properties": {
                                "email_campaigns": {
                                  "type": "array",
                                  "title": "Revenue from Email Campaigns",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "automations": {
                                  "type": "array",
                                  "title": "Revenue from Automations",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 25
                                      }
                                    }
                                  }
                                },
                                "elsewhere": {
                                  "type": "array",
                                  "title": "Revenue from Elsewhere",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 97
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "carts": {
                              "type": "object",
                              "title": "Carts",
                              "properties": {
                                "recovered_carts": {
                                  "type": "array",
                                  "title": "Recovered Carts",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-22"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 78
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/dashboard/engagement": {
      "get": {
        "summary": "Dashboard Engagement",
        "description": "Get all the engagement info for the mobile dashboard",
        "operationId": "getDashboardEngagement",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Data about Engagement",
              "properties": {
                "engagement": {
                  "type": "object",
                  "title": "Data about Engagement",
                  "properties": {
                    "seven_days": {
                      "type": "object",
                      "title": "Engagement Data over Seven Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Engagement over Seven Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-25"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-31"
                            },
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sent": {
                                      "type": "integer",
                                      "title": "Sent",
                                      "readOnly": true,
                                      "example": 1143159
                                    },
                                    "delivered": {
                                      "type": "integer",
                                      "title": "Delivered",
                                      "readOnly": true,
                                      "example": 695671
                                    },
                                    "opened": {
                                      "type": "integer",
                                      "title": "Opened",
                                      "readOnly": true,
                                      "example": 282780
                                    },
                                    "clicked": {
                                      "type": "integer",
                                      "title": "Clicked",
                                      "readOnly": true,
                                      "example": 159907
                                    },
                                    "added_to_cart": {
                                      "type": "integer",
                                      "title": "Added to Cart",
                                      "readOnly": true,
                                      "example": 95545
                                    },
                                    "purchased": {
                                      "type": "integer",
                                      "title": "Purchased",
                                      "readOnly": true,
                                      "example": 74056
                                    },
                                    "abuse_reports": {
                                      "type": "integer",
                                      "title": "Abuse Reports",
                                      "readOnly": true,
                                      "example": 41151
                                    },
                                    "unsubscribed": {
                                      "type": "integer",
                                      "title": "Unsubscribed",
                                      "readOnly": true,
                                      "example": 21191
                                    },
                                    "bounced": {
                                      "type": "integer",
                                      "title": "Bounced",
                                      "readOnly": true,
                                      "example": 12633
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "delivery_rate": {
                                      "type": "number",
                                      "title": "Delivery Rate",
                                      "readOnly": true,
                                      "example": 60.855139136376
                                    },
                                    "open_rate": {
                                      "type": "number",
                                      "title": "Open Rate",
                                      "readOnly": true,
                                      "example": 40.648524949294
                                    },
                                    "click_rate": {
                                      "type": "number",
                                      "title": "Click Rate",
                                      "readOnly": true,
                                      "example": 22.986009191126
                                    },
                                    "add_to_cart_rate": {
                                      "type": "number",
                                      "title": "Add to Cart Rate",
                                      "readOnly": true,
                                      "example": 13.734222067615
                                    },
                                    "purchase_rate": {
                                      "type": "number",
                                      "title": "Purchase Rate",
                                      "readOnly": true,
                                      "example": 10.645261912599
                                    },
                                    "abuse_rate": {
                                      "type": "number",
                                      "title": "Abuse Rate",
                                      "readOnly": true,
                                      "example": 5.9152961672975
                                    },
                                    "unsubscribe_rate": {
                                      "type": "number",
                                      "title": "Unsubscribe Rate",
                                      "readOnly": true,
                                      "example": 3.0461238142743
                                    },
                                    "bounce_rate": {
                                      "type": "number",
                                      "title": "Bounce Rate",
                                      "readOnly": true,
                                      "example": 1.8159446059991
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data for Engagement over Seven Days",
                          "properties": {
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "sent": {
                                  "type": "array",
                                  "title": "Sent",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 159809
                                      }
                                    }
                                  }
                                },
                                "delivered": {
                                  "type": "array",
                                  "title": "Delivered",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 84821
                                      }
                                    }
                                  }
                                },
                                "opened": {
                                  "type": "array",
                                  "title": "Opened",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 33036
                                      }
                                    }
                                  }
                                },
                                "clicked": {
                                  "type": "array",
                                  "title": "Clicked",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 24316
                                      }
                                    }
                                  }
                                },
                                "added_to_cart": {
                                  "type": "array",
                                  "title": "Added to Cart",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 9621
                                      }
                                    }
                                  }
                                },
                                "purchased": {
                                  "type": "array",
                                  "title": "Purchased",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 12838
                                      }
                                    }
                                  }
                                },
                                "abuse_reports": {
                                  "type": "array",
                                  "title": "Abuse Reports",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 5604
                                      }
                                    }
                                  }
                                },
                                "unsubscribed": {
                                  "type": "array",
                                  "title": "Unsubscribed",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 2640
                                      }
                                    }
                                  }
                                },
                                "bounced": {
                                  "type": "array",
                                  "title": "Bounced",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1492
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "delivery_rate": {
                                  "type": "array",
                                  "title": "Delivery Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 0
                                      }
                                    }
                                  }
                                },
                                "open_rate": {
                                  "type": "array",
                                  "title": "Open Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 55.793299411881
                                      }
                                    }
                                  }
                                },
                                "click_rate": {
                                  "type": "array",
                                  "title": "Click Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 31.807749069363
                                      }
                                    }
                                  }
                                },
                                "add_to_cart_rate": {
                                  "type": "array",
                                  "title": "Add to Cart Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 14.67741580211
                                      }
                                    }
                                  }
                                },
                                "purchase_rate": {
                                  "type": "array",
                                  "title": "Purchase Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 8.8913852728034
                                      }
                                    }
                                  }
                                },
                                "abuse_rate": {
                                  "type": "array",
                                  "title": "Abuse Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 7.7627260512346
                                      }
                                    }
                                  }
                                },
                                "unsubscribe_rate": {
                                  "type": "array",
                                  "title": "Unsubscribe Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 4.4789532809093
                                      }
                                    }
                                  }
                                },
                                "bounce_rate": {
                                  "type": "array",
                                  "title": "Bounce Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1.7392453578273
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "thirty_days": {
                      "type": "object",
                      "title": "Engagement Data over Thirty Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Engagement over Thirty Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-08-01"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-09-01"
                            },
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sent": {
                                      "type": "integer",
                                      "title": "Sent",
                                      "readOnly": true,
                                      "example": 1143159
                                    },
                                    "delivered": {
                                      "type": "integer",
                                      "title": "Delivered",
                                      "readOnly": true,
                                      "example": 695671
                                    },
                                    "opened": {
                                      "type": "integer",
                                      "title": "Opened",
                                      "readOnly": true,
                                      "example": 282780
                                    },
                                    "clicked": {
                                      "type": "integer",
                                      "title": "Clicked",
                                      "readOnly": true,
                                      "example": 159907
                                    },
                                    "added_to_cart": {
                                      "type": "integer",
                                      "title": "Added to Cart",
                                      "readOnly": true,
                                      "example": 95545
                                    },
                                    "purchased": {
                                      "type": "integer",
                                      "title": "Purchased",
                                      "readOnly": true,
                                      "example": 74056
                                    },
                                    "abuse_reports": {
                                      "type": "integer",
                                      "title": "Abuse Reports",
                                      "readOnly": true,
                                      "example": 41151
                                    },
                                    "unsubscribed": {
                                      "type": "integer",
                                      "title": "Unsubscribed",
                                      "readOnly": true,
                                      "example": 21191
                                    },
                                    "bounced": {
                                      "type": "integer",
                                      "title": "Bounced",
                                      "readOnly": true,
                                      "example": 12633
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "delivery_rate": {
                                      "type": "number",
                                      "title": "Delivery Rate",
                                      "readOnly": true,
                                      "example": 60.855139136376
                                    },
                                    "open_rate": {
                                      "type": "number",
                                      "title": "Open Rate",
                                      "readOnly": true,
                                      "example": 40.648524949294
                                    },
                                    "click_rate": {
                                      "type": "number",
                                      "title": "Click Rate",
                                      "readOnly": true,
                                      "example": 22.986009191126
                                    },
                                    "add_to_cart_rate": {
                                      "type": "number",
                                      "title": "Add to Cart Rate",
                                      "readOnly": true,
                                      "example": 13.734222067615
                                    },
                                    "purchase_rate": {
                                      "type": "number",
                                      "title": "Purchase Rate",
                                      "readOnly": true,
                                      "example": 10.645261912599
                                    },
                                    "abuse_rate": {
                                      "type": "number",
                                      "title": "Abuse Rate",
                                      "readOnly": true,
                                      "example": 5.9152961672975
                                    },
                                    "unsubscribe_rate": {
                                      "type": "number",
                                      "title": "Unsubscribe Rate",
                                      "readOnly": true,
                                      "example": 3.0461238142743
                                    },
                                    "bounce_rate": {
                                      "type": "number",
                                      "title": "Bounce Rate",
                                      "readOnly": true,
                                      "example": 1.8159446059991
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data for Engagement over Thirty Days",
                          "properties": {
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "sent": {
                                  "type": "array",
                                  "title": "Sent",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 159809
                                      }
                                    }
                                  }
                                },
                                "delivered": {
                                  "type": "array",
                                  "title": "Delivered",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 84821
                                      }
                                    }
                                  }
                                },
                                "opened": {
                                  "type": "array",
                                  "title": "Opened",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 33036
                                      }
                                    }
                                  }
                                },
                                "clicked": {
                                  "type": "array",
                                  "title": "Clicked",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 24316
                                      }
                                    }
                                  }
                                },
                                "added_to_cart": {
                                  "type": "array",
                                  "title": "Added to Cart",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 9621
                                      }
                                    }
                                  }
                                },
                                "purchased": {
                                  "type": "array",
                                  "title": "Purchased",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 12838
                                      }
                                    }
                                  }
                                },
                                "abuse_reports": {
                                  "type": "array",
                                  "title": "Abuse Reports",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 5604
                                      }
                                    }
                                  }
                                },
                                "unsubscribed": {
                                  "type": "array",
                                  "title": "Unsubscribed",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 2640
                                      }
                                    }
                                  }
                                },
                                "bounced": {
                                  "type": "array",
                                  "title": "Bounced",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1492
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "delivery_rate": {
                                  "type": "array",
                                  "title": "Delivery Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 0
                                      }
                                    }
                                  }
                                },
                                "open_rate": {
                                  "type": "array",
                                  "title": "Open Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 55.793299411881
                                      }
                                    }
                                  }
                                },
                                "click_rate": {
                                  "type": "array",
                                  "title": "Click Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 31.807749069363
                                      }
                                    }
                                  }
                                },
                                "add_to_cart_rate": {
                                  "type": "array",
                                  "title": "Add to Cart Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 14.67741580211
                                      }
                                    }
                                  }
                                },
                                "purchase_rate": {
                                  "type": "array",
                                  "title": "Purchase Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 8.8913852728034
                                      }
                                    }
                                  }
                                },
                                "abuse_rate": {
                                  "type": "array",
                                  "title": "Abuse Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 7.7627260512346
                                      }
                                    }
                                  }
                                },
                                "unsubscribe_rate": {
                                  "type": "array",
                                  "title": "Unsubscribe Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 4.4789532809093
                                      }
                                    }
                                  }
                                },
                                "bounce_rate": {
                                  "type": "array",
                                  "title": "Bounce Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1.7392453578273
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "ninety_days": {
                      "type": "object",
                      "title": "Engagement Data over Ninety Days",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Engagement over Ninety Days",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2016-05-30"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-09-01"
                            },
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sent": {
                                      "type": "integer",
                                      "title": "Sent",
                                      "readOnly": true,
                                      "example": 1143159
                                    },
                                    "delivered": {
                                      "type": "integer",
                                      "title": "Delivered",
                                      "readOnly": true,
                                      "example": 695671
                                    },
                                    "opened": {
                                      "type": "integer",
                                      "title": "Opened",
                                      "readOnly": true,
                                      "example": 282780
                                    },
                                    "clicked": {
                                      "type": "integer",
                                      "title": "Clicked",
                                      "readOnly": true,
                                      "example": 159907
                                    },
                                    "added_to_cart": {
                                      "type": "integer",
                                      "title": "Added to Cart",
                                      "readOnly": true,
                                      "example": 95545
                                    },
                                    "purchased": {
                                      "type": "integer",
                                      "title": "Purchased",
                                      "readOnly": true,
                                      "example": 74056
                                    },
                                    "abuse_reports": {
                                      "type": "integer",
                                      "title": "Abuse Reports",
                                      "readOnly": true,
                                      "example": 41151
                                    },
                                    "unsubscribed": {
                                      "type": "integer",
                                      "title": "Unsubscribed",
                                      "readOnly": true,
                                      "example": 21191
                                    },
                                    "bounced": {
                                      "type": "integer",
                                      "title": "Bounced",
                                      "readOnly": true,
                                      "example": 12633
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "delivery_rate": {
                                      "type": "number",
                                      "title": "Delivery Rate",
                                      "readOnly": true,
                                      "example": 60.855139136376
                                    },
                                    "open_rate": {
                                      "type": "number",
                                      "title": "Open Rate",
                                      "readOnly": true,
                                      "example": 40.648524949294
                                    },
                                    "click_rate": {
                                      "type": "number",
                                      "title": "Click Rate",
                                      "readOnly": true,
                                      "example": 22.986009191126
                                    },
                                    "add_to_cart_rate": {
                                      "type": "number",
                                      "title": "Add to Cart Rate",
                                      "readOnly": true,
                                      "example": 13.734222067615
                                    },
                                    "purchase_rate": {
                                      "type": "number",
                                      "title": "Purchase Rate",
                                      "readOnly": true,
                                      "example": 10.645261912599
                                    },
                                    "abuse_rate": {
                                      "type": "number",
                                      "title": "Abuse Rate",
                                      "readOnly": true,
                                      "example": 5.9152961672975
                                    },
                                    "unsubscribe_rate": {
                                      "type": "number",
                                      "title": "Unsubscribe Rate",
                                      "readOnly": true,
                                      "example": 3.0461238142743
                                    },
                                    "bounce_rate": {
                                      "type": "number",
                                      "title": "Bounce Rate",
                                      "readOnly": true,
                                      "example": 1.8159446059991
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data for Engagement over Ninety Days",
                          "properties": {
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "sent": {
                                  "type": "array",
                                  "title": "Sent",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 159809
                                      }
                                    }
                                  }
                                },
                                "delivered": {
                                  "type": "array",
                                  "title": "Delivered",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 84821
                                      }
                                    }
                                  }
                                },
                                "opened": {
                                  "type": "array",
                                  "title": "Opened",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 33036
                                      }
                                    }
                                  }
                                },
                                "clicked": {
                                  "type": "array",
                                  "title": "Clicked",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 24316
                                      }
                                    }
                                  }
                                },
                                "added_to_cart": {
                                  "type": "array",
                                  "title": "Added to Cart",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 9621
                                      }
                                    }
                                  }
                                },
                                "purchased": {
                                  "type": "array",
                                  "title": "Purchased",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 12838
                                      }
                                    }
                                  }
                                },
                                "abuse_reports": {
                                  "type": "array",
                                  "title": "Abuse Reports",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 5604
                                      }
                                    }
                                  }
                                },
                                "unsubscribed": {
                                  "type": "array",
                                  "title": "Unsubscribed",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 2640
                                      }
                                    }
                                  }
                                },
                                "bounced": {
                                  "type": "array",
                                  "title": "Bounced",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1492
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "delivery_rate": {
                                  "type": "array",
                                  "title": "Delivery Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 0
                                      }
                                    }
                                  }
                                },
                                "open_rate": {
                                  "type": "array",
                                  "title": "Open Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 55.793299411881
                                      }
                                    }
                                  }
                                },
                                "click_rate": {
                                  "type": "array",
                                  "title": "Click Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 31.807749069363
                                      }
                                    }
                                  }
                                },
                                "add_to_cart_rate": {
                                  "type": "array",
                                  "title": "Add to Cart Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 14.67741580211
                                      }
                                    }
                                  }
                                },
                                "purchase_rate": {
                                  "type": "array",
                                  "title": "Purchase Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 8.8913852728034
                                      }
                                    }
                                  }
                                },
                                "abuse_rate": {
                                  "type": "array",
                                  "title": "Abuse Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 7.7627260512346
                                      }
                                    }
                                  }
                                },
                                "unsubscribe_rate": {
                                  "type": "array",
                                  "title": "Unsubscribe Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 4.4789532809093
                                      }
                                    }
                                  }
                                },
                                "bounce_rate": {
                                  "type": "array",
                                  "title": "Bounce Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1.7392453578273
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "one_year": {
                      "type": "object",
                      "title": "Engagement Data over One Year",
                      "properties": {
                        "meta_data": {
                          "type": "object",
                          "title": "Meta Data for Engagement over One Year",
                          "properties": {
                            "first_day": {
                              "type": "string",
                              "title": "First Day's Date",
                              "readOnly": true,
                              "example": "2015-09-01"
                            },
                            "last_day": {
                              "type": "string",
                              "title": "Last Day's Date",
                              "readOnly": true,
                              "example": "2016-08-01"
                            },
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "sent": {
                                      "type": "integer",
                                      "title": "Sent",
                                      "readOnly": true,
                                      "example": 1143159
                                    },
                                    "delivered": {
                                      "type": "integer",
                                      "title": "Delivered",
                                      "readOnly": true,
                                      "example": 695671
                                    },
                                    "opened": {
                                      "type": "integer",
                                      "title": "Opened",
                                      "readOnly": true,
                                      "example": 282780
                                    },
                                    "clicked": {
                                      "type": "integer",
                                      "title": "Clicked",
                                      "readOnly": true,
                                      "example": 159907
                                    },
                                    "added_to_cart": {
                                      "type": "integer",
                                      "title": "Added to Cart",
                                      "readOnly": true,
                                      "example": 95545
                                    },
                                    "purchased": {
                                      "type": "integer",
                                      "title": "Purchased",
                                      "readOnly": true,
                                      "example": 74056
                                    },
                                    "abuse_reports": {
                                      "type": "integer",
                                      "title": "Abuse Reports",
                                      "readOnly": true,
                                      "example": 41151
                                    },
                                    "unsubscribed": {
                                      "type": "integer",
                                      "title": "Unsubscribed",
                                      "readOnly": true,
                                      "example": 21191
                                    },
                                    "bounced": {
                                      "type": "integer",
                                      "title": "Bounced",
                                      "readOnly": true,
                                      "example": 12633
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "total_by_series": {
                                  "type": "object",
                                  "title": "Total by Series",
                                  "properties": {
                                    "delivery_rate": {
                                      "type": "number",
                                      "title": "Delivery Rate",
                                      "readOnly": true,
                                      "example": 60.855139136376
                                    },
                                    "open_rate": {
                                      "type": "number",
                                      "title": "Open Rate",
                                      "readOnly": true,
                                      "example": 40.648524949294
                                    },
                                    "click_rate": {
                                      "type": "number",
                                      "title": "Click Rate",
                                      "readOnly": true,
                                      "example": 22.986009191126
                                    },
                                    "add_to_cart_rate": {
                                      "type": "number",
                                      "title": "Add to Cart Rate",
                                      "readOnly": true,
                                      "example": 13.734222067615
                                    },
                                    "purchase_rate": {
                                      "type": "number",
                                      "title": "Purchase Rate",
                                      "readOnly": true,
                                      "example": 10.645261912599
                                    },
                                    "abuse_rate": {
                                      "type": "number",
                                      "title": "Abuse Rate",
                                      "readOnly": true,
                                      "example": 5.9152961672975
                                    },
                                    "unsubscribe_rate": {
                                      "type": "number",
                                      "title": "Unsubscribe Rate",
                                      "readOnly": true,
                                      "example": 3.0461238142743
                                    },
                                    "bounce_rate": {
                                      "type": "number",
                                      "title": "Bounce Rate",
                                      "readOnly": true,
                                      "example": 1.8159446059991
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "title": "Data for Engagement over One Year",
                          "properties": {
                            "stats": {
                              "type": "object",
                              "title": "Stats",
                              "properties": {
                                "sent": {
                                  "type": "array",
                                  "title": "Sent",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 159809
                                      }
                                    }
                                  }
                                },
                                "delivered": {
                                  "type": "array",
                                  "title": "Delivered",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 84821
                                      }
                                    }
                                  }
                                },
                                "opened": {
                                  "type": "array",
                                  "title": "Opened",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 33036
                                      }
                                    }
                                  }
                                },
                                "clicked": {
                                  "type": "array",
                                  "title": "Clicked",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 24316
                                      }
                                    }
                                  }
                                },
                                "added_to_cart": {
                                  "type": "array",
                                  "title": "Added to Cart",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 9621
                                      }
                                    }
                                  }
                                },
                                "purchased": {
                                  "type": "array",
                                  "title": "Purchased",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 12838
                                      }
                                    }
                                  }
                                },
                                "abuse_reports": {
                                  "type": "array",
                                  "title": "Abuse Reports",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 5604
                                      }
                                    }
                                  }
                                },
                                "unsubscribed": {
                                  "type": "array",
                                  "title": "Unsubscribed",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 2640
                                      }
                                    }
                                  }
                                },
                                "bounced": {
                                  "type": "array",
                                  "title": "Bounced",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "integer",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1492
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "rates": {
                              "type": "object",
                              "title": "Rates",
                              "properties": {
                                "delivery_rate": {
                                  "type": "array",
                                  "title": "Delivery Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 0
                                      }
                                    }
                                  }
                                },
                                "open_rate": {
                                  "type": "array",
                                  "title": "Open Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 55.793299411881
                                      }
                                    }
                                  }
                                },
                                "click_rate": {
                                  "type": "array",
                                  "title": "Click Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 31.807749069363
                                      }
                                    }
                                  }
                                },
                                "add_to_cart_rate": {
                                  "type": "array",
                                  "title": "Add to Cart Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 14.67741580211
                                      }
                                    }
                                  }
                                },
                                "purchase_rate": {
                                  "type": "array",
                                  "title": "Purchase Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 8.8913852728034
                                      }
                                    }
                                  }
                                },
                                "abuse_rate": {
                                  "type": "array",
                                  "title": "Abuse Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 7.7627260512346
                                      }
                                    }
                                  }
                                },
                                "unsubscribe_rate": {
                                  "type": "array",
                                  "title": "Unsubscribe Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 4.4789532809093
                                      }
                                    }
                                  }
                                },
                                "bounce_rate": {
                                  "type": "array",
                                  "title": "Bounce Rate",
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "date": {
                                        "type": "string",
                                        "title": "Date",
                                        "readOnly": true,
                                        "example": "2016-08-25"
                                      },
                                      "val": {
                                        "type": "number",
                                        "title": "Value",
                                        "readOnly": true,
                                        "example": 1.7392453578273
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/file-manager": {
      "get": {
        "summary": "Get information about the file-manager endpoint's resources",
        "description": "Get information about the file-manager endpoint's resources",
        "operationId": "getFileManager",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "File Manager",
              "description": "This resource serves as a namespace for file-manager-related resources.",
              "properties": {
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/file-manager/files": {
      "get": {
        "summary": "Get information about stored files",
        "description": "Get a list of available images and files stored in the File Manager for the account.",
        "operationId": "getFileManagerFiles",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/FileManagerFileType"
          },
          {
            "$ref": "#/parameters/FileManagerCreator"
          },
          {
            "$ref": "#/parameters/FileManagerCreated_Before"
          },
          {
            "$ref": "#/parameters/FileManagerCreated_Since"
          },
          {
            "$ref": "#/parameters/SortField"
          },
          {
            "$ref": "#/parameters/SortDir"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "File Manager",
              "description": "A list of available images and files stored in the File Manager for the account.",
              "properties": {
                "files": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Gallery File",
                    "description": "An individual file listed in the File Manager.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "File ID",
                        "description": "The unique id of the file.",
                        "readOnly": true
                      },
                      "folder_id": {
                        "type": "integer",
                        "title": "Folder ID",
                        "description": "The id of the folder."
                      },
                      "type": {
                        "enum": [
                          "image",
                          "file"
                        ],
                        "type": "string",
                        "title": "File Type",
                        "description": "The type of file in the File Manager.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "title": "File Name",
                        "description": "The name of the file."
                      },
                      "full_size_url": {
                        "type": "string",
                        "title": "File URL",
                        "description": "The url of the full-size file.",
                        "format": "uri",
                        "readOnly": true
                      },
                      "thumbnail_url": {
                        "type": "string",
                        "title": "Thumbnail URL",
                        "description": "The url of the thumbnail preview.",
                        "format": "uri",
                        "readOnly": true
                      },
                      "size": {
                        "type": "integer",
                        "title": "File Size",
                        "description": "The size of the file in bytes.",
                        "readOnly": true
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Created Date",
                        "description": "The date and time a file was added to the File Manager.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "created_by": {
                        "type": "string",
                        "title": "Created By",
                        "description": "The username of the profile that uploaded the file.",
                        "readOnly": true
                      },
                      "width": {
                        "type": "integer",
                        "title": "Image Width",
                        "description": "The width of the image.",
                        "readOnly": true
                      },
                      "height": {
                        "type": "integer",
                        "title": "Image Height",
                        "description": "The height of an image.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Files",
                  "description": " A list of files and images in an account."
                },
                "total_file_size": {
                  "type": "number",
                  "title": "Total File Size",
                  "description": "The total size of all File Manager files in bytes.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Upload a new file",
        "description": " Upload a new image or file to the File Manager.",
        "operationId": "postFileManagerFiles",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Gallery File",
              "description": "An individual file listed in the File Manager.",
              "required": [
                "name",
                "file_data"
              ],
              "properties": {
                "folder_id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The id of the folder."
                },
                "name": {
                  "type": "string",
                  "title": "File Name",
                  "description": "The name of the file."
                },
                "file_data": {
                  "type": "string",
                  "title": "File Data",
                  "description": "The base64-encoded contents of the file."
                }
              }
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Gallery File",
              "description": "An individual file listed in the File Manager.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "File ID",
                  "description": "The unique id of the file.",
                  "readOnly": true
                },
                "folder_id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The id of the folder."
                },
                "type": {
                  "enum": [
                    "image",
                    "file"
                  ],
                  "type": "string",
                  "title": "File Type",
                  "description": "The type of file in the File Manager.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "File Name",
                  "description": "The name of the file."
                },
                "full_size_url": {
                  "type": "string",
                  "title": "File URL",
                  "description": "The url of the full-size file.",
                  "format": "uri",
                  "readOnly": true
                },
                "thumbnail_url": {
                  "type": "string",
                  "title": "Thumbnail URL",
                  "description": "The url of the thumbnail preview.",
                  "format": "uri",
                  "readOnly": true
                },
                "size": {
                  "type": "integer",
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Date",
                  "description": "The date and time a file was added to the File Manager.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The username of the profile that uploaded the file.",
                  "readOnly": true
                },
                "width": {
                  "type": "integer",
                  "title": "Image Width",
                  "description": "The width of the image.",
                  "readOnly": true
                },
                "height": {
                  "type": "integer",
                  "title": "Image Height",
                  "description": "The height of an image.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/file-manager/files/{file_id}": {
      "get": {
        "summary": "Get a specific file",
        "description": "Get information about a specific file in the File Manager.",
        "operationId": "getFileManagerFilesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/FileManagerFileID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Gallery File",
              "description": "An individual file listed in the File Manager.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "File ID",
                  "description": "The unique id of the file.",
                  "readOnly": true
                },
                "folder_id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The id of the folder."
                },
                "type": {
                  "enum": [
                    "image",
                    "file"
                  ],
                  "type": "string",
                  "title": "File Type",
                  "description": "The type of file in the File Manager.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "File Name",
                  "description": "The name of the file."
                },
                "full_size_url": {
                  "type": "string",
                  "title": "File URL",
                  "description": "The url of the full-size file.",
                  "format": "uri",
                  "readOnly": true
                },
                "thumbnail_url": {
                  "type": "string",
                  "title": "Thumbnail URL",
                  "description": "The url of the thumbnail preview.",
                  "format": "uri",
                  "readOnly": true
                },
                "size": {
                  "type": "integer",
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Date",
                  "description": "The date and time a file was added to the File Manager.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The username of the profile that uploaded the file.",
                  "readOnly": true
                },
                "width": {
                  "type": "integer",
                  "title": "Image Width",
                  "description": "The width of the image.",
                  "readOnly": true
                },
                "height": {
                  "type": "integer",
                  "title": "Image Height",
                  "description": "The height of an image.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific file",
        "description": "Update a file in the File Manager.",
        "operationId": "patchFileManagerFilesId",
        "parameters": [
          {
            "$ref": "#/parameters/FileManagerFileID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Gallery File",
              "description": "An individual file listed in the File Manager.",
              "properties": {
                "folder_id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The id of the folder. Setting `folder_id` to `0` will remove a file from its current folder."
                },
                "name": {
                  "type": "string",
                  "title": "File Name",
                  "description": "The name of the file."
                }
              }
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Gallery File",
              "description": "An individual file listed in the File Manager.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "File ID",
                  "description": "The unique id of the file.",
                  "readOnly": true
                },
                "folder_id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The id of the folder."
                },
                "type": {
                  "enum": [
                    "image",
                    "file"
                  ],
                  "type": "string",
                  "title": "File Type",
                  "description": "The type of file in the File Manager.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "File Name",
                  "description": "The name of the file."
                },
                "full_size_url": {
                  "type": "string",
                  "title": "File URL",
                  "description": "The url of the full-size file.",
                  "format": "uri",
                  "readOnly": true
                },
                "thumbnail_url": {
                  "type": "string",
                  "title": "Thumbnail URL",
                  "description": "The url of the thumbnail preview.",
                  "format": "uri",
                  "readOnly": true
                },
                "size": {
                  "type": "integer",
                  "title": "File Size",
                  "description": "The size of the file in bytes.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Date",
                  "description": "The date and time a file was added to the File Manager.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The username of the profile that uploaded the file.",
                  "readOnly": true
                },
                "width": {
                  "type": "integer",
                  "title": "Image Width",
                  "description": "The width of the image.",
                  "readOnly": true
                },
                "height": {
                  "type": "integer",
                  "title": "Image Height",
                  "description": "The height of an image.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Remove a specific file",
        "description": "Remove a specific file from the File Manager.",
        "operationId": "deleteFileManagerFilesId",
        "parameters": [
          {
            "$ref": "#/parameters/FileManagerFileID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/file-manager/folders": {
      "get": {
        "summary": "Get a list of folders in the File Manager",
        "description": "Get a list of all folders in the File Manager.",
        "operationId": "getFileManagerFolders",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/FileManagerCreator"
          },
          {
            "$ref": "#/parameters/FileManagerCreated_Before"
          },
          {
            "$ref": "#/parameters/FileManagerCreated_Since"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "File Manager Folders",
              "description": "A list of all folders in the File Manager.",
              "properties": {
                "folders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Gallery Folder",
                    "description": "An individual folder listed in the File Manager.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "Folder ID",
                        "description": "The unique id for the folder.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "title": "Folder Name",
                        "description": "The name of the folder."
                      },
                      "file_count": {
                        "type": "integer",
                        "title": "File Count",
                        "description": "The number of files in the folder.",
                        "readOnly": true
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Created Date",
                        "format": "date-time",
                        "description": "The date and time a file was added to the File Manager.",
                        "readOnly": true
                      },
                      "created_by": {
                        "type": "string",
                        "title": "Created By",
                        "description": "The username of the profile that created the folder.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "File Manager Folders",
                  "description": "A list of all folders in the File Manager."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new folder",
        "description": "Create a new folder in the File Manager.",
        "operationId": "postFileManagerFolders",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Gallery Folder",
              "description": "An individual folder listed in the File Manager.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                }
              }
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Gallery Folder",
              "description": "An individual folder listed in the File Manager.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The unique id for the folder.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "file_count": {
                  "type": "integer",
                  "title": "File Count",
                  "description": "The number of files in the folder.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Date",
                  "format": "date-time",
                  "description": "The date and time a file was added to the File Manager.",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The username of the profile that created the folder.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/file-manager/folders/{folder_id}": {
      "get": {
        "summary": "Get information about a specific folder",
        "description": "Get information about a specific folder in the File Manager.",
        "operationId": "getFileManagerFoldersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/FileManagerFolderID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Gallery Folder",
              "description": "An individual folder listed in the File Manager.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The unique id for the folder.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "file_count": {
                  "type": "integer",
                  "title": "File Count",
                  "description": "The number of files in the folder.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Date",
                  "format": "date-time",
                  "description": "The date and time a file was added to the File Manager.",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The username of the profile that created the folder.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a File Manager folder",
        "description": "Update a specific File Manager folder.",
        "operationId": "patchFileManagerFoldersId",
        "parameters": [
          {
            "$ref": "#/parameters/FileManagerFolderID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Gallery Folder",
              "description": "An individual folder listed in the File Manager.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                }
              }
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Gallery Folder",
              "description": "An individual folder listed in the File Manager.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Folder ID",
                  "description": "The unique id for the folder.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Folder Name",
                  "description": "The name of the folder."
                },
                "file_count": {
                  "type": "integer",
                  "title": "File Count",
                  "description": "The number of files in the folder.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Date",
                  "format": "date-time",
                  "description": "The date and time a file was added to the File Manager.",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The username of the profile that created the folder.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Remove a File Manager folder",
        "description": "Delete a specific folder in the File Manager.",
        "operationId": "deleteFileManagerFoldersId",
        "parameters": [],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists": {
      "get": {
        "summary": "Get information about all lists",
        "description": "Get information about all lists in the account.",
        "operationId": "getLists",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ListCreated_Before"
          },
          {
            "$ref": "#/parameters/ListCreated_Since"
          },
          {
            "$ref": "#/parameters/ListCampaignSent_Before"
          },
          {
            "$ref": "#/parameters/ListCampaignSent_Since"
          },
          {
            "$ref": "#/parameters/SubscriberEmail"
          },
          {
            "$ref": "#/parameters/SortFieldByDateCreated"
          },
          {
            "$ref": "#/parameters/SortDir"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber Lists",
              "description": "A collection of subscriber lists for this account. Lists contain subscribers who have opted-in to receive correspondence from you or your organization.",
              "properties": {
                "lists": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Subscriber List",
                    "description": "Information about a specific list.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "A string that uniquely identifies this list.",
                        "readOnly": true
                      },
                      "web_id": {
                        "type": "integer",
                        "title": "List Web ID",
                        "description": "The ID used in the MailChimp web application. View this list in your MailChimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "title": "List Name",
                        "description": "The name of the list."
                      },
                      "contact": {
                        "type": "object",
                        "title": "List Contact",
                        "description": "[Contact information displayed in campaign footers](http://kb.mailchimp.com/lists/growth/about-the-required-email-footer-content?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to comply with international spam laws.",
                        "properties": {
                          "company": {
                            "type": "string",
                            "title": "Company Name",
                            "description": "The company name for the list."
                          },
                          "address1": {
                            "type": "string",
                            "title": "Address",
                            "description": "The street address for the list contact."
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address",
                            "description": "The street address for the list contact."
                          },
                          "city": {
                            "type": "string",
                            "title": "City",
                            "description": "The city for the list contact."
                          },
                          "state": {
                            "type": "string",
                            "title": "State",
                            "description": "The state for the list contact."
                          },
                          "zip": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The postal or zip code for the list contact."
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "A two-character ISO3166 country code. Defaults to US if invalid."
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone Number",
                            "description": "The phone number for the list contact."
                          }
                        }
                      },
                      "permission_reminder": {
                        "type": "string",
                        "title": "Permission Reminder",
                        "description": "The [permission reminder](http://kb.mailchimp.com/accounts/compliance-tips/edit-the-permission-reminder?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the list."
                      },
                      "use_archive_bar": {
                        "type": "boolean",
                        "title": "Use Archive Bar",
                        "description": "Whether campaigns for this list use the [Archive Bar](http://kb.mailchimp.com/campaigns/archives/about-the-archive-bar?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in archives by default.",
                        "default": false
                      },
                      "campaign_defaults": {
                        "type": "object",
                        "title": "Campaign Defaults",
                        "description": "[Default values for campaigns](http://kb.mailchimp.com/campaigns/design/set-up-email-subject-from-name-and-from-email-address-on-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) created for this list.",
                        "properties": {
                          "from_name": {
                            "type": "string",
                            "title": "Sender's Name",
                            "description": "The default from name for campaigns sent to this list."
                          },
                          "from_email": {
                            "type": "string",
                            "title": "Sender's Email Address",
                            "description": "The default from email for campaigns sent to this list."
                          },
                          "subject": {
                            "type": "string",
                            "title": "Subject",
                            "description": "The default subject line for campaigns sent to this list."
                          },
                          "language": {
                            "type": "string",
                            "title": "Language",
                            "description": "The default language for this lists's forms."
                          }
                        }
                      },
                      "notify_on_subscribe": {
                        "type": "string",
                        "title": "Notify on Subscribe",
                        "description": "The email address to send [subscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                        "default": false
                      },
                      "notify_on_unsubscribe": {
                        "type": "string",
                        "title": "Notify on Unsubscribe",
                        "description": "The email address to send [unsubscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                        "default": false
                      },
                      "date_created": {
                        "type": "string",
                        "title": "Creation Date",
                        "description": "The date and time that this list was created.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "list_rating": {
                        "type": "integer",
                        "title": "List Rating",
                        "description": "An auto-generated activity score for the list (0-5).",
                        "readOnly": true
                      },
                      "email_type_option": {
                        "type": "boolean",
                        "title": "Email Type Option",
                        "description": "Whether the list supports [multiple formats for emails](http://kb.mailchimp.com/lists/growth/how-to-change-list-name-and-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Change-Subscription-Settings). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup."
                      },
                      "subscribe_url_short": {
                        "type": "string",
                        "title": "Subscribe URL Short",
                        "description": "Our [EepURL shortened](http://kb.mailchimp.com/lists/signup-forms/share-your-signup-form?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Signup-Form-URL) version of this list's subscribe form.",
                        "readOnly": true
                      },
                      "subscribe_url_long": {
                        "type": "string",
                        "title": "Subscribe URL Long",
                        "description": "The full version of this list's subscribe form (host will vary).",
                        "readOnly": true
                      },
                      "beamer_address": {
                        "type": "string",
                        "title": "Beamer Address",
                        "description": "The list's [Email Beamer](http://kb.mailchimp.com/campaigns/ways-to-build/use-email-beamer-to-create-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) address.",
                        "readOnly": true
                      },
                      "visibility": {
                        "type": "string",
                        "title": "Visibility",
                        "enum": [
                          "pub",
                          "prv"
                        ],
                        "description": "Whether this list is [public or private](http://kb.mailchimp.com/lists/growth/about-publicity-settings?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                      },
                      "modules": {
                        "type": "array",
                        "title": "Modules",
                        "description": "Any list-specific modules installed for this list.",
                        "readOnly": true
                      },
                      "stats": {
                        "type": "object",
                        "title": "Statistics",
                        "description": "Stats for the list. Many of these are cached for at least five minutes.",
                        "readOnly": true,
                        "properties": {
                          "member_count": {
                            "type": "integer",
                            "title": "Member Count",
                            "description": "The number of active members in the list.",
                            "readOnly": true
                          },
                          "unsubscribe_count": {
                            "type": "integer",
                            "title": "Unsubscribe Count",
                            "description": "The number of members who have unsubscribed from the list.",
                            "readOnly": true
                          },
                          "cleaned_count": {
                            "type": "integer",
                            "title": "Cleaned Count",
                            "description": "The number of members cleaned from the list.",
                            "readOnly": true
                          },
                          "member_count_since_send": {
                            "type": "integer",
                            "title": "Member Count Since Send",
                            "description": "The number of active members in the list since the last campaign was sent.",
                            "readOnly": true
                          },
                          "unsubscribe_count_since_send": {
                            "type": "integer",
                            "title": "Unsubscribe Count Since Send",
                            "description": "The number of members who have unsubscribed since the last campaign was sent.",
                            "readOnly": true
                          },
                          "cleaned_count_since_send": {
                            "type": "integer",
                            "title": "Cleaned Count Since Send",
                            "description": "The number of members cleaned from the list since the last campaign was sent.",
                            "readOnly": true
                          },
                          "campaign_count": {
                            "type": "integer",
                            "title": "Campaign Count",
                            "description": "The number of campaigns in any status that use this list.",
                            "readOnly": true
                          },
                          "campaign_last_sent": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Campaign Last Sent",
                            "description": "The date and time the last campaign was sent to this list. This is updated when a campaign is sent to 10 or more recipients.",
                            "readOnly": true
                          },
                          "merge_field_count": {
                            "type": "integer",
                            "title": "Merge Var Count",
                            "description": "The number of merge vars for this list (not EMAIL, which is required).",
                            "readOnly": true
                          },
                          "avg_sub_rate": {
                            "type": "number",
                            "title": "Average Subscription Rate",
                            "description": "The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).",
                            "readOnly": true
                          },
                          "avg_unsub_rate": {
                            "type": "number",
                            "title": "Average Unsubscription Rate",
                            "description": "The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).",
                            "readOnly": true
                          },
                          "target_sub_rate": {
                            "type": "number",
                            "title": "Average Subscription Rate",
                            "description": "The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).",
                            "readOnly": true
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                            "readOnly": true
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                            "readOnly": true
                          },
                          "last_sub_date": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Date of Last List Subscribe",
                            "description": "The date and time of the last time someone subscribed to this list.",
                            "readOnly": true
                          },
                          "last_unsub_date": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Date of Last List Unsubscribe",
                            "description": "The date and time of the last time someone unsubscribed from this list.",
                            "readOnly": true
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Lists",
                  "description": "An array of objects, each representing a list."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new list",
        "description": "Create a new list in your MailChimp account.",
        "operationId": "postLists",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Subscriber List",
              "description": "Information about a specific list.",
              "required": [
                "name",
                "permission_reminder",
                "email_type_option",
                "contact",
                "campaign_defaults"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "List Name",
                  "description": "The name of the list."
                },
                "contact": {
                  "type": "object",
                  "title": "List Contact",
                  "description": "[Contact information displayed in campaign footers](http://kb.mailchimp.com/lists/growth/about-the-required-email-footer-content?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to comply with international spam laws.",
                  "required": [
                    "company",
                    "address1",
                    "city",
                    "state",
                    "zip",
                    "country"
                  ],
                  "properties": {
                    "company": {
                      "type": "string",
                      "title": "Company Name",
                      "description": "The company name for the list."
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "city": {
                      "type": "string",
                      "title": "City",
                      "description": "The city for the list contact."
                    },
                    "state": {
                      "type": "string",
                      "title": "State",
                      "description": "The state for the list contact."
                    },
                    "zip": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code for the list contact."
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "A two-character ISO3166 country code. Defaults to US if invalid."
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the list contact."
                    }
                  }
                },
                "permission_reminder": {
                  "type": "string",
                  "title": "Permission Reminder",
                  "description": "The [permission reminder](http://kb.mailchimp.com/accounts/compliance-tips/edit-the-permission-reminder?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the list."
                },
                "use_archive_bar": {
                  "type": "boolean",
                  "title": "Use Archive Bar",
                  "description": "Whether campaigns for this list use the [Archive Bar](http://kb.mailchimp.com/campaigns/archives/about-the-archive-bar?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in archives by default.",
                  "default": false
                },
                "campaign_defaults": {
                  "type": "object",
                  "title": "Campaign Defaults",
                  "description": "[Default values for campaigns](http://kb.mailchimp.com/campaigns/design/set-up-email-subject-from-name-and-from-email-address-on-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) created for this list.",
                  "required": [
                    "from_name",
                    "from_email",
                    "subject",
                    "language"
                  ],
                  "properties": {
                    "from_name": {
                      "type": "string",
                      "title": "Sender's Name",
                      "description": "The default from name for campaigns sent to this list."
                    },
                    "from_email": {
                      "type": "string",
                      "title": "Sender's Email Address",
                      "description": "The default from email for campaigns sent to this list."
                    },
                    "subject": {
                      "type": "string",
                      "title": "Subject",
                      "description": "The default subject line for campaigns sent to this list."
                    },
                    "language": {
                      "type": "string",
                      "title": "Language",
                      "description": "The default language for this lists's forms."
                    }
                  }
                },
                "notify_on_subscribe": {
                  "type": "string",
                  "title": "Notify on Subscribe",
                  "description": "The email address to send [subscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "notify_on_unsubscribe": {
                  "type": "string",
                  "title": "Notify on Unsubscribe",
                  "description": "The email address to send [unsubscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "email_type_option": {
                  "type": "boolean",
                  "title": "Email Type Option",
                  "description": "Whether the list supports [multiple formats for emails](http://kb.mailchimp.com/lists/growth/how-to-change-list-name-and-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Change-Subscription-Settings). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "pub",
                    "prv"
                  ],
                  "description": "Whether this list is [public or private](http://kb.mailchimp.com/lists/growth/about-publicity-settings?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber List",
              "description": "Information about a specific list.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that uniquely identifies this list.",
                  "readOnly": true
                },
                "web_id": {
                  "type": "integer",
                  "title": "List Web ID",
                  "description": "The ID used in the MailChimp web application. View this list in your MailChimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "List Name",
                  "description": "The name of the list."
                },
                "contact": {
                  "type": "object",
                  "title": "List Contact",
                  "description": "[Contact information displayed in campaign footers](http://kb.mailchimp.com/lists/growth/about-the-required-email-footer-content?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to comply with international spam laws.",
                  "properties": {
                    "company": {
                      "type": "string",
                      "title": "Company Name",
                      "description": "The company name for the list."
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "city": {
                      "type": "string",
                      "title": "City",
                      "description": "The city for the list contact."
                    },
                    "state": {
                      "type": "string",
                      "title": "State",
                      "description": "The state for the list contact."
                    },
                    "zip": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code for the list contact."
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "A two-character ISO3166 country code. Defaults to US if invalid."
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the list contact."
                    }
                  }
                },
                "permission_reminder": {
                  "type": "string",
                  "title": "Permission Reminder",
                  "description": "The [permission reminder](http://kb.mailchimp.com/accounts/compliance-tips/edit-the-permission-reminder?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the list."
                },
                "use_archive_bar": {
                  "type": "boolean",
                  "title": "Use Archive Bar",
                  "description": "Whether campaigns for this list use the [Archive Bar](http://kb.mailchimp.com/campaigns/archives/about-the-archive-bar?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in archives by default.",
                  "default": false
                },
                "campaign_defaults": {
                  "type": "object",
                  "title": "Campaign Defaults",
                  "description": "[Default values for campaigns](http://kb.mailchimp.com/campaigns/design/set-up-email-subject-from-name-and-from-email-address-on-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) created for this list.",
                  "properties": {
                    "from_name": {
                      "type": "string",
                      "title": "Sender's Name",
                      "description": "The default from name for campaigns sent to this list."
                    },
                    "from_email": {
                      "type": "string",
                      "title": "Sender's Email Address",
                      "description": "The default from email for campaigns sent to this list."
                    },
                    "subject": {
                      "type": "string",
                      "title": "Subject",
                      "description": "The default subject line for campaigns sent to this list."
                    },
                    "language": {
                      "type": "string",
                      "title": "Language",
                      "description": "The default language for this lists's forms."
                    }
                  }
                },
                "notify_on_subscribe": {
                  "type": "string",
                  "title": "Notify on Subscribe",
                  "description": "The email address to send [subscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "notify_on_unsubscribe": {
                  "type": "string",
                  "title": "Notify on Unsubscribe",
                  "description": "The email address to send [unsubscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "date_created": {
                  "type": "string",
                  "title": "Creation Date",
                  "description": "The date and time that this list was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "list_rating": {
                  "type": "integer",
                  "title": "List Rating",
                  "description": "An auto-generated activity score for the list (0-5).",
                  "readOnly": true
                },
                "email_type_option": {
                  "type": "boolean",
                  "title": "Email Type Option",
                  "description": "Whether the list supports [multiple formats for emails](http://kb.mailchimp.com/lists/growth/how-to-change-list-name-and-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Change-Subscription-Settings). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup."
                },
                "subscribe_url_short": {
                  "type": "string",
                  "title": "Subscribe URL Short",
                  "description": "Our [EepURL shortened](http://kb.mailchimp.com/lists/signup-forms/share-your-signup-form?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Signup-Form-URL) version of this list's subscribe form.",
                  "readOnly": true
                },
                "subscribe_url_long": {
                  "type": "string",
                  "title": "Subscribe URL Long",
                  "description": "The full version of this list's subscribe form (host will vary).",
                  "readOnly": true
                },
                "beamer_address": {
                  "type": "string",
                  "title": "Beamer Address",
                  "description": "The list's [Email Beamer](http://kb.mailchimp.com/campaigns/ways-to-build/use-email-beamer-to-create-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) address.",
                  "readOnly": true
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "pub",
                    "prv"
                  ],
                  "description": "Whether this list is [public or private](http://kb.mailchimp.com/lists/growth/about-publicity-settings?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "modules": {
                  "type": "array",
                  "title": "Modules",
                  "description": "Any list-specific modules installed for this list.",
                  "readOnly": true
                },
                "stats": {
                  "type": "object",
                  "title": "Statistics",
                  "description": "Stats for the list. Many of these are cached for at least five minutes.",
                  "readOnly": true,
                  "properties": {
                    "member_count": {
                      "type": "integer",
                      "title": "Member Count",
                      "description": "The number of active members in the list.",
                      "readOnly": true
                    },
                    "unsubscribe_count": {
                      "type": "integer",
                      "title": "Unsubscribe Count",
                      "description": "The number of members who have unsubscribed from the list.",
                      "readOnly": true
                    },
                    "cleaned_count": {
                      "type": "integer",
                      "title": "Cleaned Count",
                      "description": "The number of members cleaned from the list.",
                      "readOnly": true
                    },
                    "member_count_since_send": {
                      "type": "integer",
                      "title": "Member Count Since Send",
                      "description": "The number of active members in the list since the last campaign was sent.",
                      "readOnly": true
                    },
                    "unsubscribe_count_since_send": {
                      "type": "integer",
                      "title": "Unsubscribe Count Since Send",
                      "description": "The number of members who have unsubscribed since the last campaign was sent.",
                      "readOnly": true
                    },
                    "cleaned_count_since_send": {
                      "type": "integer",
                      "title": "Cleaned Count Since Send",
                      "description": "The number of members cleaned from the list since the last campaign was sent.",
                      "readOnly": true
                    },
                    "campaign_count": {
                      "type": "integer",
                      "title": "Campaign Count",
                      "description": "The number of campaigns in any status that use this list.",
                      "readOnly": true
                    },
                    "campaign_last_sent": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Campaign Last Sent",
                      "description": "The date and time the last campaign was sent to this list. This is updated when a campaign is sent to 10 or more recipients.",
                      "readOnly": true
                    },
                    "merge_field_count": {
                      "type": "integer",
                      "title": "Merge Var Count",
                      "description": "The number of merge vars for this list (not EMAIL, which is required).",
                      "readOnly": true
                    },
                    "avg_sub_rate": {
                      "type": "number",
                      "title": "Average Subscription Rate",
                      "description": "The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "avg_unsub_rate": {
                      "type": "number",
                      "title": "Average Unsubscription Rate",
                      "description": "The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "target_sub_rate": {
                      "type": "number",
                      "title": "Average Subscription Rate",
                      "description": "The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "last_sub_date": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Date of Last List Subscribe",
                      "description": "The date and time of the last time someone subscribed to this list.",
                      "readOnly": true
                    },
                    "last_unsub_date": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Date of Last List Unsubscribe",
                      "description": "The date and time of the last time someone unsubscribed from this list.",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}": {
      "get": {
        "summary": "Get information about a specific list",
        "description": "Get information about a specific list in your MailChimp account. Results include list members who have signed up but haven't confirmed their subscription yet and [unsubscribed or cleaned](http://kb.mailchimp.com/lists/managing-subscribers/view-unsubscribed-and-cleaned-addresses?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "getListsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber List",
              "description": "Information about a specific list.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that uniquely identifies this list.",
                  "readOnly": true
                },
                "web_id": {
                  "type": "integer",
                  "title": "List Web ID",
                  "description": "The ID used in the MailChimp web application. View this list in your MailChimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "List Name",
                  "description": "The name of the list."
                },
                "contact": {
                  "type": "object",
                  "title": "List Contact",
                  "description": "[Contact information displayed in campaign footers](http://kb.mailchimp.com/lists/growth/about-the-required-email-footer-content?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to comply with international spam laws.",
                  "properties": {
                    "company": {
                      "type": "string",
                      "title": "Company Name",
                      "description": "The company name for the list."
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "city": {
                      "type": "string",
                      "title": "City",
                      "description": "The city for the list contact."
                    },
                    "state": {
                      "type": "string",
                      "title": "State",
                      "description": "The state for the list contact."
                    },
                    "zip": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code for the list contact."
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "A two-character ISO3166 country code. Defaults to US if invalid."
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the list contact."
                    }
                  }
                },
                "permission_reminder": {
                  "type": "string",
                  "title": "Permission Reminder",
                  "description": "The [permission reminder](http://kb.mailchimp.com/accounts/compliance-tips/edit-the-permission-reminder?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the list."
                },
                "use_archive_bar": {
                  "type": "boolean",
                  "title": "Use Archive Bar",
                  "description": "Whether campaigns for this list use the [Archive Bar](http://kb.mailchimp.com/campaigns/archives/about-the-archive-bar?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in archives by default.",
                  "default": false
                },
                "campaign_defaults": {
                  "type": "object",
                  "title": "Campaign Defaults",
                  "description": "[Default values for campaigns](http://kb.mailchimp.com/campaigns/design/set-up-email-subject-from-name-and-from-email-address-on-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) created for this list.",
                  "properties": {
                    "from_name": {
                      "type": "string",
                      "title": "Sender's Name",
                      "description": "The default from name for campaigns sent to this list."
                    },
                    "from_email": {
                      "type": "string",
                      "title": "Sender's Email Address",
                      "description": "The default from email for campaigns sent to this list."
                    },
                    "subject": {
                      "type": "string",
                      "title": "Subject",
                      "description": "The default subject line for campaigns sent to this list."
                    },
                    "language": {
                      "type": "string",
                      "title": "Language",
                      "description": "The default language for this lists's forms."
                    }
                  }
                },
                "notify_on_subscribe": {
                  "type": "string",
                  "title": "Notify on Subscribe",
                  "description": "The email address to send [subscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "notify_on_unsubscribe": {
                  "type": "string",
                  "title": "Notify on Unsubscribe",
                  "description": "The email address to send [unsubscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "date_created": {
                  "type": "string",
                  "title": "Creation Date",
                  "description": "The date and time that this list was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "list_rating": {
                  "type": "integer",
                  "title": "List Rating",
                  "description": "An auto-generated activity score for the list (0-5).",
                  "readOnly": true
                },
                "email_type_option": {
                  "type": "boolean",
                  "title": "Email Type Option",
                  "description": "Whether the list supports [multiple formats for emails](http://kb.mailchimp.com/lists/growth/how-to-change-list-name-and-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Change-Subscription-Settings). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup."
                },
                "subscribe_url_short": {
                  "type": "string",
                  "title": "Subscribe URL Short",
                  "description": "Our [EepURL shortened](http://kb.mailchimp.com/lists/signup-forms/share-your-signup-form?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Signup-Form-URL) version of this list's subscribe form.",
                  "readOnly": true
                },
                "subscribe_url_long": {
                  "type": "string",
                  "title": "Subscribe URL Long",
                  "description": "The full version of this list's subscribe form (host will vary).",
                  "readOnly": true
                },
                "beamer_address": {
                  "type": "string",
                  "title": "Beamer Address",
                  "description": "The list's [Email Beamer](http://kb.mailchimp.com/campaigns/ways-to-build/use-email-beamer-to-create-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) address.",
                  "readOnly": true
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "pub",
                    "prv"
                  ],
                  "description": "Whether this list is [public or private](http://kb.mailchimp.com/lists/growth/about-publicity-settings?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "modules": {
                  "type": "array",
                  "title": "Modules",
                  "description": "Any list-specific modules installed for this list.",
                  "readOnly": true
                },
                "stats": {
                  "type": "object",
                  "title": "Statistics",
                  "description": "Stats for the list. Many of these are cached for at least five minutes.",
                  "readOnly": true,
                  "properties": {
                    "member_count": {
                      "type": "integer",
                      "title": "Member Count",
                      "description": "The number of active members in the list.",
                      "readOnly": true
                    },
                    "unsubscribe_count": {
                      "type": "integer",
                      "title": "Unsubscribe Count",
                      "description": "The number of members who have unsubscribed from the list.",
                      "readOnly": true
                    },
                    "cleaned_count": {
                      "type": "integer",
                      "title": "Cleaned Count",
                      "description": "The number of members cleaned from the list.",
                      "readOnly": true
                    },
                    "member_count_since_send": {
                      "type": "integer",
                      "title": "Member Count Since Send",
                      "description": "The number of active members in the list since the last campaign was sent.",
                      "readOnly": true
                    },
                    "unsubscribe_count_since_send": {
                      "type": "integer",
                      "title": "Unsubscribe Count Since Send",
                      "description": "The number of members who have unsubscribed since the last campaign was sent.",
                      "readOnly": true
                    },
                    "cleaned_count_since_send": {
                      "type": "integer",
                      "title": "Cleaned Count Since Send",
                      "description": "The number of members cleaned from the list since the last campaign was sent.",
                      "readOnly": true
                    },
                    "campaign_count": {
                      "type": "integer",
                      "title": "Campaign Count",
                      "description": "The number of campaigns in any status that use this list.",
                      "readOnly": true
                    },
                    "campaign_last_sent": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Campaign Last Sent",
                      "description": "The date and time the last campaign was sent to this list. This is updated when a campaign is sent to 10 or more recipients.",
                      "readOnly": true
                    },
                    "merge_field_count": {
                      "type": "integer",
                      "title": "Merge Var Count",
                      "description": "The number of merge vars for this list (not EMAIL, which is required).",
                      "readOnly": true
                    },
                    "avg_sub_rate": {
                      "type": "number",
                      "title": "Average Subscription Rate",
                      "description": "The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "avg_unsub_rate": {
                      "type": "number",
                      "title": "Average Unsubscription Rate",
                      "description": "The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "target_sub_rate": {
                      "type": "number",
                      "title": "Average Subscription Rate",
                      "description": "The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "last_sub_date": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Date of Last List Subscribe",
                      "description": "The date and time of the last time someone subscribed to this list.",
                      "readOnly": true
                    },
                    "last_unsub_date": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Date of Last List Unsubscribe",
                      "description": "The date and time of the last time someone unsubscribed from this list.",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific list",
        "description": "Update the settings for a specific list.",
        "operationId": "patchListsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Subscriber List",
              "description": "Information about a specific list.",
              "required": [
                "name",
                "permission_reminder",
                "email_type_option",
                "contact",
                "campaign_defaults"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "List Name",
                  "description": "The name of the list."
                },
                "contact": {
                  "type": "object",
                  "title": "List Contact",
                  "description": "[Contact information displayed in campaign footers](http://kb.mailchimp.com/lists/growth/about-the-required-email-footer-content?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to comply with international spam laws.",
                  "required": [
                    "company",
                    "address1",
                    "city",
                    "state",
                    "zip",
                    "country"
                  ],
                  "properties": {
                    "company": {
                      "type": "string",
                      "title": "Company Name",
                      "description": "The company name for the list."
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "city": {
                      "type": "string",
                      "title": "City",
                      "description": "The city for the list contact."
                    },
                    "state": {
                      "type": "string",
                      "title": "State",
                      "description": "The state for the list contact."
                    },
                    "zip": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code for the list contact."
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "A two-character ISO3166 country code. Defaults to US if invalid."
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the list contact."
                    }
                  }
                },
                "permission_reminder": {
                  "type": "string",
                  "title": "Permission Reminder",
                  "description": "The [permission reminder](http://kb.mailchimp.com/accounts/compliance-tips/edit-the-permission-reminder?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the list."
                },
                "use_archive_bar": {
                  "type": "boolean",
                  "title": "Use Archive Bar",
                  "description": "Whether campaigns for this list use the [Archive Bar](http://kb.mailchimp.com/campaigns/archives/about-the-archive-bar?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in archives by default.",
                  "default": false
                },
                "campaign_defaults": {
                  "type": "object",
                  "title": "Campaign Defaults",
                  "description": "[Default values for campaigns](http://kb.mailchimp.com/campaigns/design/set-up-email-subject-from-name-and-from-email-address-on-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) created for this list.",
                  "required": [
                    "from_name",
                    "from_email",
                    "subject",
                    "language"
                  ],
                  "properties": {
                    "from_name": {
                      "type": "string",
                      "title": "Sender's Name",
                      "description": "The default from name for campaigns sent to this list."
                    },
                    "from_email": {
                      "type": "string",
                      "title": "Sender's Email Address",
                      "description": "The default from email for campaigns sent to this list."
                    },
                    "subject": {
                      "type": "string",
                      "title": "Subject",
                      "description": "The default subject line for campaigns sent to this list."
                    },
                    "language": {
                      "type": "string",
                      "title": "Language",
                      "description": "The default language for this lists's forms."
                    }
                  }
                },
                "notify_on_subscribe": {
                  "type": "string",
                  "title": "Notify on Subscribe",
                  "description": "The email address to send [subscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "notify_on_unsubscribe": {
                  "type": "string",
                  "title": "Notify on Unsubscribe",
                  "description": "The email address to send [unsubscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "email_type_option": {
                  "type": "boolean",
                  "title": "Email Type Option",
                  "description": "Whether the list supports [multiple formats for emails](http://kb.mailchimp.com/lists/growth/how-to-change-list-name-and-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Change-Subscription-Settings). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "pub",
                    "prv"
                  ],
                  "description": "Whether this list is [public or private](http://kb.mailchimp.com/lists/growth/about-publicity-settings?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Subscriber List",
              "description": "Information about a specific list.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that uniquely identifies this list.",
                  "readOnly": true
                },
                "web_id": {
                  "type": "integer",
                  "title": "List Web ID",
                  "description": "The ID used in the MailChimp web application. View this list in your MailChimp account at `https://{dc}.admin.mailchimp.com/lists/members/?id={web_id}`.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "List Name",
                  "description": "The name of the list."
                },
                "contact": {
                  "type": "object",
                  "title": "List Contact",
                  "description": "[Contact information displayed in campaign footers](http://kb.mailchimp.com/lists/growth/about-the-required-email-footer-content?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to comply with international spam laws.",
                  "properties": {
                    "company": {
                      "type": "string",
                      "title": "Company Name",
                      "description": "The company name for the list."
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address",
                      "description": "The street address for the list contact."
                    },
                    "city": {
                      "type": "string",
                      "title": "City",
                      "description": "The city for the list contact."
                    },
                    "state": {
                      "type": "string",
                      "title": "State",
                      "description": "The state for the list contact."
                    },
                    "zip": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code for the list contact."
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "A two-character ISO3166 country code. Defaults to US if invalid."
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the list contact."
                    }
                  }
                },
                "permission_reminder": {
                  "type": "string",
                  "title": "Permission Reminder",
                  "description": "The [permission reminder](http://kb.mailchimp.com/accounts/compliance-tips/edit-the-permission-reminder?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the list."
                },
                "use_archive_bar": {
                  "type": "boolean",
                  "title": "Use Archive Bar",
                  "description": "Whether campaigns for this list use the [Archive Bar](http://kb.mailchimp.com/campaigns/archives/about-the-archive-bar?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in archives by default.",
                  "default": false
                },
                "campaign_defaults": {
                  "type": "object",
                  "title": "Campaign Defaults",
                  "description": "[Default values for campaigns](http://kb.mailchimp.com/campaigns/design/set-up-email-subject-from-name-and-from-email-address-on-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) created for this list.",
                  "properties": {
                    "from_name": {
                      "type": "string",
                      "title": "Sender's Name",
                      "description": "The default from name for campaigns sent to this list."
                    },
                    "from_email": {
                      "type": "string",
                      "title": "Sender's Email Address",
                      "description": "The default from email for campaigns sent to this list."
                    },
                    "subject": {
                      "type": "string",
                      "title": "Subject",
                      "description": "The default subject line for campaigns sent to this list."
                    },
                    "language": {
                      "type": "string",
                      "title": "Language",
                      "description": "The default language for this lists's forms."
                    }
                  }
                },
                "notify_on_subscribe": {
                  "type": "string",
                  "title": "Notify on Subscribe",
                  "description": "The email address to send [subscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "notify_on_unsubscribe": {
                  "type": "string",
                  "title": "Notify on Unsubscribe",
                  "description": "The email address to send [unsubscribe notifications](http://kb.mailchimp.com/lists/managing-subscribers/change-subscribe-and-unsubscribe-notifications?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to.",
                  "default": false
                },
                "date_created": {
                  "type": "string",
                  "title": "Creation Date",
                  "description": "The date and time that this list was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "list_rating": {
                  "type": "integer",
                  "title": "List Rating",
                  "description": "An auto-generated activity score for the list (0-5).",
                  "readOnly": true
                },
                "email_type_option": {
                  "type": "boolean",
                  "title": "Email Type Option",
                  "description": "Whether the list supports [multiple formats for emails](http://kb.mailchimp.com/lists/growth/how-to-change-list-name-and-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Change-Subscription-Settings). When set to `true`, subscribers can choose whether they want to receive HTML or plain-text emails. When set to `false`, subscribers will receive HTML emails, with a plain-text alternative backup."
                },
                "subscribe_url_short": {
                  "type": "string",
                  "title": "Subscribe URL Short",
                  "description": "Our [EepURL shortened](http://kb.mailchimp.com/lists/signup-forms/share-your-signup-form?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Signup-Form-URL) version of this list's subscribe form.",
                  "readOnly": true
                },
                "subscribe_url_long": {
                  "type": "string",
                  "title": "Subscribe URL Long",
                  "description": "The full version of this list's subscribe form (host will vary).",
                  "readOnly": true
                },
                "beamer_address": {
                  "type": "string",
                  "title": "Beamer Address",
                  "description": "The list's [Email Beamer](http://kb.mailchimp.com/campaigns/ways-to-build/use-email-beamer-to-create-a-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) address.",
                  "readOnly": true
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "enum": [
                    "pub",
                    "prv"
                  ],
                  "description": "Whether this list is [public or private](http://kb.mailchimp.com/lists/growth/about-publicity-settings?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "modules": {
                  "type": "array",
                  "title": "Modules",
                  "description": "Any list-specific modules installed for this list.",
                  "readOnly": true
                },
                "stats": {
                  "type": "object",
                  "title": "Statistics",
                  "description": "Stats for the list. Many of these are cached for at least five minutes.",
                  "readOnly": true,
                  "properties": {
                    "member_count": {
                      "type": "integer",
                      "title": "Member Count",
                      "description": "The number of active members in the list.",
                      "readOnly": true
                    },
                    "unsubscribe_count": {
                      "type": "integer",
                      "title": "Unsubscribe Count",
                      "description": "The number of members who have unsubscribed from the list.",
                      "readOnly": true
                    },
                    "cleaned_count": {
                      "type": "integer",
                      "title": "Cleaned Count",
                      "description": "The number of members cleaned from the list.",
                      "readOnly": true
                    },
                    "member_count_since_send": {
                      "type": "integer",
                      "title": "Member Count Since Send",
                      "description": "The number of active members in the list since the last campaign was sent.",
                      "readOnly": true
                    },
                    "unsubscribe_count_since_send": {
                      "type": "integer",
                      "title": "Unsubscribe Count Since Send",
                      "description": "The number of members who have unsubscribed since the last campaign was sent.",
                      "readOnly": true
                    },
                    "cleaned_count_since_send": {
                      "type": "integer",
                      "title": "Cleaned Count Since Send",
                      "description": "The number of members cleaned from the list since the last campaign was sent.",
                      "readOnly": true
                    },
                    "campaign_count": {
                      "type": "integer",
                      "title": "Campaign Count",
                      "description": "The number of campaigns in any status that use this list.",
                      "readOnly": true
                    },
                    "campaign_last_sent": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Campaign Last Sent",
                      "description": "The date and time the last campaign was sent to this list. This is updated when a campaign is sent to 10 or more recipients.",
                      "readOnly": true
                    },
                    "merge_field_count": {
                      "type": "integer",
                      "title": "Merge Var Count",
                      "description": "The number of merge vars for this list (not EMAIL, which is required).",
                      "readOnly": true
                    },
                    "avg_sub_rate": {
                      "type": "number",
                      "title": "Average Subscription Rate",
                      "description": "The average number of subscriptions per month for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "avg_unsub_rate": {
                      "type": "number",
                      "title": "Average Unsubscription Rate",
                      "description": "The average number of unsubscriptions per month for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "target_sub_rate": {
                      "type": "number",
                      "title": "Average Subscription Rate",
                      "description": "The target number of subscriptions per month for the list to keep it growing (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list (not returned if we haven't calculated it yet).",
                      "readOnly": true
                    },
                    "last_sub_date": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Date of Last List Subscribe",
                      "description": "The date and time of the last time someone subscribed to this list.",
                      "readOnly": true
                    },
                    "last_unsub_date": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Date of Last List Unsubscribe",
                      "description": "The date and time of the last time someone unsubscribed from this list.",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a list",
        "description": "Delete a list from your MailChimp account. If you delete a list, you'll lose the list history—including subscriber activity, unsubscribes, complaints, and bounces. You’ll also lose subscribers’ email addresses, unless you [exported and backed up your list](http://kb.mailchimp.com/lists/managing-subscribers/view-or-export-a-list?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#View-or-Export-a-List).",
        "operationId": "deleteListsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Batch sub/unsub list members",
        "description": "Batch subscribe or unsubscribe list members.",
        "operationId": "postListsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Members to Subscribe/Unsubscribe to/from a List in batch",
              "description": "Members to subscribe to or unsubscribe from a list.",
              "required": [
                "members"
              ],
              "properties": {
                "members": {
                  "type": "array",
                  "title": "List Members",
                  "description": "An array of objects, each representing an email address and the subscription status for a specific list. Up to 500 members may be added or updated with each API call.",
                  "items": {
                    "type": "object",
                    "title": "Add List Members",
                    "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
                    "properties": {
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber."
                      },
                      "email_type": {
                        "type": "string",
                        "title": "Email Type",
                        "description": "Type of email this member asked to get ('html' or 'text')."
                      },
                      "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Subscriber's current status.",
                        "enum": [
                          "subscribed",
                          "unsubscribed",
                          "cleaned",
                          "pending"
                        ]
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member."
                      },
                      "interests": {
                        "type": "object",
                        "title": "Subscriber Interests",
                        "description": "The key of this object's properties is the ID of the interest in question.",
                        "additionalProperties": {
                          "type": "boolean",
                          "title": "Interest Value",
                          "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                        }
                      },
                      "language": {
                        "type": "string",
                        "title": "Language",
                        "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                      },
                      "location": {
                        "type": "object",
                        "title": "Location",
                        "description": "Subscriber location information.",
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The location latitude."
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The location longitude."
                          },
                          "gmtoff": {
                            "type": "integer",
                            "title": "GMT Offset",
                            "description": "The time difference in hours from GMT.",
                            "readOnly": true
                          },
                          "dstoff": {
                            "type": "integer",
                            "title": "DST Offset",
                            "description": "The offset for timezones where daylight saving time is observed.",
                            "readOnly": true
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The unique code for the location country.",
                            "readOnly": true
                          },
                          "timezone": {
                            "type": "string",
                            "title": "Timezone",
                            "description": "The timezone for the location.",
                            "readOnly": true
                          }
                        }
                      },
                      "ip_signup": {
                        "type": "string",
                        "title": "Signup IP",
                        "description": "IP address the subscriber signed up from."
                      },
                      "timestamp_signup": {
                        "type": "string",
                        "title": "Signup Timestamp",
                        "description": "The date and time the subscriber signed up for the list.",
                        "format": "date-time"
                      },
                      "ip_opt": {
                        "type": "string",
                        "title": "Opt-in IP",
                        "description": "The IP address the subscriber used to confirm their opt-in status."
                      },
                      "timestamp_opt": {
                        "type": "string",
                        "title": "Opt-in Timestamp",
                        "description": "The date and time the subscribe confirmed their opt-in status.",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "update_existing": {
                  "type": "boolean",
                  "title": "Update Existing Members",
                  "description": "Whether this batch operation will change existing members' subscription status."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch update List members",
              "description": "Batch update list members.",
              "properties": {
                "new_members": {
                  "type": "array",
                  "title": "New members",
                  "description": "An array of objects, each representing a new member that was added to the list.",
                  "items": {
                    "$ref": "#/definitions/ListMember"
                  }
                },
                "updated_members": {
                  "type": "array",
                  "title": "Updated Members",
                  "description": "An array of objects, each representing an existing list member whose subscription status was updated.",
                  "items": {
                    "$ref": "#/definitions/ListMember"
                  }
                },
                "errors": {
                  "type": "array",
                  "title": "Errors",
                  "description": "An array of objects, each representing an email address that could not be added to the list or updated and an error message providing more details.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email_address": {
                        "type": "string",
                        "title": "Member Email address",
                        "description": "The email address that could not be added or updated."
                      },
                      "error": {
                        "type": "string",
                        "title": "Error message",
                        "description": "The error message indicating why the email address could not be added or updated."
                      }
                    }
                  }
                },
                "total_created": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "integer",
                  "title": "Item Count",
                  "description": "The total number of items matching the query, irrespective of pagination.",
                  "example": 42
                },
                "total_updated": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "integer",
                  "title": "Item Count",
                  "description": "The total number of items matching the query, irrespective of pagination.",
                  "example": 42
                },
                "error_count": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "integer",
                  "title": "Item Count",
                  "description": "The total number of items matching the query, irrespective of pagination.",
                  "example": 42
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/abuse-reports": {
      "get": {
        "summary": "Get information about abuse reports",
        "description": "Get all abuse reports for a specific list.",
        "operationId": "getListsIdAbuseReports",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Abuse Complaints",
              "description": "A collection of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program.",
              "properties": {
                "abuse_reports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Abuse Complaint",
                    "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "Abuse Report ID",
                        "description": "The id for the abuse report",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The campaign id for the abuse report",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id for the abuse report.",
                        "readOnly": true
                      },
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "readOnly": true,
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                        "readOnly": true
                      },
                      "date": {
                        "type": "string",
                        "title": "Date",
                        "description": "Date for the abuse report",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Abuse Reports",
                  "description": "An array of objects, each representing an abuse report resource."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id for the abuse report."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/abuse-reports/{report_id}": {
      "get": {
        "summary": "Get details about a specific abuse report",
        "description": "Get details about a specific abuse report.",
        "operationId": "getListsIdAbuseReportsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/AbuseReportID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Abuse Complaint",
              "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Abuse Report ID",
                  "description": "The id for the abuse report",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id for the abuse report",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id for the abuse report.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "readOnly": true,
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                  "readOnly": true
                },
                "date": {
                  "type": "string",
                  "title": "Date",
                  "description": "Date for the abuse report",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/activity": {
      "get": {
        "summary": "Get recent list activity",
        "description": "Get up to the previous 180 days of daily detailed aggregated activity stats for a list, not including Automation activity.",
        "operationId": "getListsIdActivity",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Activity",
              "description": "Up to the previous 180 days of daily detailed aggregated activity stats for a specific list. Does not include AutoResponder or Automation activity.",
              "properties": {
                "activity": {
                  "type": "array",
                  "title": "List Activity",
                  "description": "Recent list activity.",
                  "items": {
                    "type": "object",
                    "title": "Daily List Activity",
                    "description": "One day's worth of list activity. Doesn't include Automation activity.",
                    "properties": {
                      "day": {
                        "type": "string",
                        "title": "Day",
                        "description": "The date for the activity summary.",
                        "readOnly": true
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Emails Sent",
                        "description": "The total number of emails sent on the date for the activity summary.",
                        "readOnly": true
                      },
                      "unique_opens": {
                        "type": "integer",
                        "title": "Unique Opens",
                        "description": "The number of unique opens.",
                        "readOnly": true
                      },
                      "recipient_clicks": {
                        "type": "integer",
                        "title": "Recipient Clicks",
                        "description": "The number of clicks.",
                        "readOnly": true
                      },
                      "hard_bounce": {
                        "type": "integer",
                        "title": "Hard Bounces",
                        "description": "The number of hard bounces.",
                        "readOnly": true
                      },
                      "soft_bounce": {
                        "type": "integer",
                        "title": "Soft Bounces",
                        "description": "The number of soft bounces",
                        "readOnly": true
                      },
                      "subs": {
                        "type": "integer",
                        "title": "Subscribes",
                        "description": "The number of subscribes.",
                        "readOnly": true
                      },
                      "unsubs": {
                        "type": "integer",
                        "title": "Unsubscribes",
                        "description": "The number of unsubscribes.",
                        "readOnly": true
                      },
                      "other_adds": {
                        "type": "integer",
                        "title": "Other Adds",
                        "description": "The number of subscribers who may have been added outside of the [double opt-in process](http://kb.mailchimp.com/lists/signup-forms/the-double-opt-in-process?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs), such as imports or API activity.",
                        "readOnly": true
                      },
                      "other_removes": {
                        "type": "integer",
                        "title": "Other Removes",
                        "description": "The number of subscribers who may have been removed outside of unsubscribing or reporting an email as spam (for example, deleted subscribers).",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/clients": {
      "get": {
        "summary": "Get top email clients",
        "description": "Get a list of the top email clients based on user-agent strings.",
        "operationId": "getListsIdClients",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Email Clients",
              "description": "The top email clients based on user-agent strings.",
              "properties": {
                "clients": {
                  "type": "array",
                  "title": "Email Clients",
                  "description": "An array of top email clients.",
                  "items": {
                    "type": "object",
                    "title": "Email Client",
                    "description": "The email client.",
                    "properties": {
                      "client": {
                        "type": "string",
                        "title": "Client",
                        "description": "The name of the email client.",
                        "readOnly": true
                      },
                      "members": {
                        "type": "integer",
                        "title": "Members",
                        "description": "The number of subscribed members who used this email client.",
                        "readOnly": true
                      }
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/growth-history": {
      "get": {
        "summary": "Get list growth history data",
        "description": "Get a month-by-month summary of a specific list's growth activity.",
        "operationId": "getListsIdGrowthHistory",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Growth History",
              "description": "A month-by-month summary of a specific list's growth activity.",
              "properties": {
                "history": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Growth History",
                    "description": "A summary of a specific list's growth activity for a specific month and year.",
                    "properties": {
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id for the growth activity report.",
                        "readOnly": true
                      },
                      "month": {
                        "type": "string",
                        "title": "Month",
                        "description": "The month that the growth history is describing.",
                        "readOnly": true
                      },
                      "existing": {
                        "type": "integer",
                        "title": "Existing",
                        "description": "Existing members on the list for a specific month.",
                        "readOnly": true
                      },
                      "imports": {
                        "type": "integer",
                        "title": "Imports",
                        "description": "Imported members on the list for a specific month.",
                        "readOnly": true
                      },
                      "optins": {
                        "type": "integer",
                        "title": "Opt-in",
                        "description": "Newly opted-in members on the list for a specific month.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Members",
                  "description": "An array of objects, each representing a monthly growth report for a list."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/growth-history/{month}": {
      "get": {
        "summary": "Get list growth history by month",
        "description": "Get a summary of a specific list's growth activity for a specific month and year.",
        "operationId": "getListsIdGrowthHistoryId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "month",
            "in": "path",
            "required": true,
            "description": "A specific month of list growth history."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Growth History",
              "description": "A summary of a specific list's growth activity for a specific month and year.",
              "properties": {
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id for the growth activity report.",
                  "readOnly": true
                },
                "month": {
                  "type": "string",
                  "title": "Month",
                  "description": "The month that the growth history is describing.",
                  "readOnly": true
                },
                "existing": {
                  "type": "integer",
                  "title": "Existing",
                  "description": "Existing members on the list for a specific month.",
                  "readOnly": true
                },
                "imports": {
                  "type": "integer",
                  "title": "Imports",
                  "description": "Imported members on the list for a specific month.",
                  "readOnly": true
                },
                "optins": {
                  "type": "integer",
                  "title": "Opt-in",
                  "description": "Newly opted-in members on the list for a specific month.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/interest-categories": {
      "get": {
        "summary": "Get information about a list's interest categories",
        "description": "Get information about a list's interest categories.",
        "operationId": "getListsIdInterestCategories",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/InterestGroupType"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest Groupings",
              "description": "Information about this list's interest categories.",
              "properties": {
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The ID for the list that this category belongs to.",
                  "readOnly": true
                },
                "categories": {
                  "type": "array",
                  "title": "Interest Categories",
                  "description": "This array contains individual interest categories.",
                  "items": {
                    "type": "object",
                    "title": "Interest Category",
                    "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.",
                    "properties": {
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique list id for the category.",
                        "readOnly": true
                      },
                      "id": {
                        "type": "string",
                        "title": "Category ID",
                        "description": "The id for the interest category.",
                        "readOnly": true
                      },
                      "title": {
                        "type": "string",
                        "title": "Name",
                        "description": "The text description of this category. This field appears on signup forms and is often phrased as a question."
                      },
                      "display_order": {
                        "type": "integer",
                        "title": "Display Order",
                        "description": "The order that the categories are displayed in the list. Lower numbers display first."
                      },
                      "type": {
                        "type": "string",
                        "title": "Display Type",
                        "description": "Determines how this category’s interests appear on signup forms.",
                        "enum": [
                          "checkboxes",
                          "dropdown",
                          "radio",
                          "hidden"
                        ]
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new interest category",
        "description": "Create a new interest category.",
        "operationId": "postListsIdInterestCategories",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Interest Category",
              "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.",
              "required": [
                "title",
                "type"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Name",
                  "description": "The text description of this category. This field appears on signup forms and is often phrased as a question."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the categories are displayed in the list. Lower numbers display first."
                },
                "type": {
                  "type": "string",
                  "title": "Display Type",
                  "description": "Determines how this category’s interests appear on signup forms.",
                  "enum": [
                    "checkboxes",
                    "dropdown",
                    "radio",
                    "hidden"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest Category",
              "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.",
              "properties": {
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique list id for the category.",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "title": "Category ID",
                  "description": "The id for the interest category.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Name",
                  "description": "The text description of this category. This field appears on signup forms and is often phrased as a question."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the categories are displayed in the list. Lower numbers display first."
                },
                "type": {
                  "type": "string",
                  "title": "Display Type",
                  "description": "Determines how this category’s interests appear on signup forms.",
                  "enum": [
                    "checkboxes",
                    "dropdown",
                    "radio",
                    "hidden"
                  ]
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/interest-categories/{interest_category_id}": {
      "get": {
        "summary": "Get information about a specific interest category",
        "description": "Get information about a specific interest category.",
        "operationId": "getListsIdInterestCategoriesId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest Category",
              "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.",
              "properties": {
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique list id for the category.",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "title": "Category ID",
                  "description": "The id for the interest category.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Name",
                  "description": "The text description of this category. This field appears on signup forms and is often phrased as a question."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the categories are displayed in the list. Lower numbers display first."
                },
                "type": {
                  "type": "string",
                  "title": "Display Type",
                  "description": "Determines how this category’s interests appear on signup forms.",
                  "enum": [
                    "checkboxes",
                    "dropdown",
                    "radio",
                    "hidden"
                  ]
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific interest category",
        "description": "Update a specific interest category.",
        "operationId": "patchListsIdInterestCategoriesId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Interest Category",
              "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.",
              "required": [
                "title",
                "type"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Name",
                  "description": "The text description of this category. This field appears on signup forms and is often phrased as a question."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the categories are displayed in the list. Lower numbers display first."
                },
                "type": {
                  "type": "string",
                  "title": "Display Type",
                  "description": "Determines how this category’s interests appear on signup forms.",
                  "enum": [
                    "checkboxes",
                    "dropdown",
                    "radio",
                    "hidden"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest Category",
              "description": "Interest categories organize interests, which are used to group subscribers based on their preferences. These correspond to Group Titles the application.",
              "properties": {
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique list id for the category.",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "title": "Category ID",
                  "description": "The id for the interest category.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Name",
                  "description": "The text description of this category. This field appears on signup forms and is often phrased as a question."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the categories are displayed in the list. Lower numbers display first."
                },
                "type": {
                  "type": "string",
                  "title": "Display Type",
                  "description": "Determines how this category’s interests appear on signup forms.",
                  "enum": [
                    "checkboxes",
                    "dropdown",
                    "radio",
                    "hidden"
                  ]
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a specific interest category",
        "description": "Delete a specific interest category.",
        "operationId": "deleteListsIdInterestCategoriesId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/interest-categories/{interest_category_id}/interests": {
      "get": {
        "summary": "Get all interests in a specific category",
        "description": "Get a list of this category's interests.",
        "operationId": "getListsIdInterestCategoriesIdInterests",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interests",
              "description": "A list of this category's interests",
              "properties": {
                "interests": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Interest",
                    "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the MailChimp application.",
                    "properties": {
                      "category_id": {
                        "type": "string",
                        "title": "Interest Category ID",
                        "description": "The id for the interest category.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The ID for the list that this interest belongs to.",
                        "readOnly": true
                      },
                      "id": {
                        "type": "string",
                        "title": "Interest ID",
                        "description": "The ID for the interest.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "title": "Interest Name",
                        "description": "The name of the interest. This can be shown publicly on a subscription form."
                      },
                      "subscriber_count": {
                        "type": "string",
                        "title": "Subscriber Count",
                        "description": "The number of subscribers associated with this interest.",
                        "readOnly": true
                      },
                      "display_order": {
                        "type": "integer",
                        "title": "Display Order",
                        "description": "The display order for interests."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Interests",
                  "description": "An array of this category's interests"
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique list id that the interests belong to."
                },
                "category_id": {
                  "type": "string",
                  "title": "Interest Category ID",
                  "description": "The id for the interest category."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new interest in a specific category",
        "description": "Create a new interest or 'group name' for a specific category.",
        "operationId": "postListsIdInterestCategoriesIdInterests",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Interest",
              "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the MailChimp application.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Interest Name",
                  "description": "The name of the interest. This can be shown publicly on a subscription form."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The display order for interests."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest",
              "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the MailChimp application.",
              "properties": {
                "category_id": {
                  "type": "string",
                  "title": "Interest Category ID",
                  "description": "The id for the interest category.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The ID for the list that this interest belongs to.",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "title": "Interest ID",
                  "description": "The ID for the interest.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Interest Name",
                  "description": "The name of the interest. This can be shown publicly on a subscription form."
                },
                "subscriber_count": {
                  "type": "string",
                  "title": "Subscriber Count",
                  "description": "The number of subscribers associated with this interest.",
                  "readOnly": true
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The display order for interests."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/interest-categories/{interest_category_id}/interests/{interest_id}": {
      "get": {
        "summary": "Get interests in a specific category",
        "description": "Get interests or 'group names' for a specific category.",
        "operationId": "getListsIdInterestCategoriesIdInterestsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          },
          {
            "$ref": "#/parameters/InterestID"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest",
              "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the MailChimp application.",
              "properties": {
                "category_id": {
                  "type": "string",
                  "title": "Interest Category ID",
                  "description": "The id for the interest category.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The ID for the list that this interest belongs to.",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "title": "Interest ID",
                  "description": "The ID for the interest.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Interest Name",
                  "description": "The name of the interest. This can be shown publicly on a subscription form."
                },
                "subscriber_count": {
                  "type": "string",
                  "title": "Subscriber Count",
                  "description": "The number of subscribers associated with this interest.",
                  "readOnly": true
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The display order for interests."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update interests in a specific category",
        "description": "Update interests or 'group names' for a specific category.",
        "operationId": "patchListsIdInterestCategoriesIdInterestsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          },
          {
            "$ref": "#/parameters/InterestID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest",
              "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the MailChimp application.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Interest Name",
                  "description": "The name of the interest. This can be shown publicly on a subscription form."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The display order for interests."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Interest",
              "description": "Assign subscribers to interests to group them together. Interests are referred to as 'group names' in the MailChimp application.",
              "properties": {
                "category_id": {
                  "type": "string",
                  "title": "Interest Category ID",
                  "description": "The id for the interest category.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The ID for the list that this interest belongs to.",
                  "readOnly": true
                },
                "id": {
                  "type": "string",
                  "title": "Interest ID",
                  "description": "The ID for the interest.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Interest Name",
                  "description": "The name of the interest. This can be shown publicly on a subscription form."
                },
                "subscriber_count": {
                  "type": "string",
                  "title": "Subscriber Count",
                  "description": "The number of subscribers associated with this interest.",
                  "readOnly": true
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The display order for interests."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete interests in a specific category",
        "description": "Delete interests or group names in a specific category.",
        "operationId": "deleteListsIdInterestCategoriesIdInterestsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/InterestCategoryID"
          },
          {
            "$ref": "#/parameters/InterestID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/segments": {
      "get": {
        "summary": "Get information about all segments in a list",
        "description": "Get information about all available segments for a specific list.",
        "operationId": "getListsIdSegments",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SegmentType"
          },
          {
            "$ref": "#/parameters/SegmentCreated_Since"
          },
          {
            "$ref": "#/parameters/SegmentCreated_Before"
          },
          {
            "$ref": "#/parameters/SegmentUpdated_Since"
          },
          {
            "$ref": "#/parameters/SegmentUpdated_Before"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Collection of Segments",
              "description": "A list of available segments.",
              "properties": {
                "segments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "List",
                    "description": "Information about a specific segment.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "Segment ID",
                        "description": "The unique id for the segment.",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "title": "Segment Name",
                        "description": "The name of the segment."
                      },
                      "member_count": {
                        "type": "integer",
                        "title": "Member Count",
                        "description": "The number of active subscribers currently included in the segment.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The type of segment.",
                        "readOnly": true,
                        "enum": [
                          "saved",
                          "static",
                          "fuzzy"
                        ]
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Date Created",
                        "description": "The date and time the segment was created.",
                        "readOnly": true,
                        "format": "date-time"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Date Updated",
                        "description": "The date and time the segment was last updated.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "options": {
                        "type": "object",
                        "title": "Conditions",
                        "description": "The conditions of the segment. Static and fuzzy segments don't have conditions.",
                        "properties": {
                          "match": {
                            "type": "string",
                            "title": "Match",
                            "description": "Match type.",
                            "enum": [
                              "any",
                              "all"
                            ]
                          },
                          "conditions": {
                            "type": "array",
                            "title": "Segment Conditions",
                            "description": "An array of segment conditions.",
                            "items": {
                              "$ref": "#/definitions/SegmentCondition"
                            }
                          }
                        }
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Lists",
                  "description": "An array of objects, each representing a list segment."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new segment",
        "description": "Create a new segment in a specific list.",
        "operationId": "postListsIdSegments",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "List",
              "description": "Information about a specific list segment.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Segment Name",
                  "description": "The name of the segment."
                },
                "static_segment": {
                  "type": "array",
                  "title": "Static Segment",
                  "description": "An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. Passing an empty array will create a static segment without any subscribers. This field cannot be provided with the options field."
                },
                "options": {
                  "type": "object",
                  "title": "Conditions",
                  "description": "The [conditions of the segment](http://kb.mailchimp.com/segments/how-to-use-saved-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Static and fuzzy segments don't have conditions.",
                  "properties": {
                    "match": {
                      "type": "string",
                      "title": "Match",
                      "description": "Match type.",
                      "enum": [
                        "any",
                        "all"
                      ]
                    },
                    "conditions": {
                      "type": "array",
                      "title": "Segment Conditions",
                      "description": "An array of segment conditions.",
                      "items": {
                        "$ref": "#/definitions/SegmentCondition"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List",
              "description": "Information about a specific segment.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Segment ID",
                  "description": "The unique id for the segment.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Segment Name",
                  "description": "The name of the segment."
                },
                "member_count": {
                  "type": "integer",
                  "title": "Member Count",
                  "description": "The number of active subscribers currently included in the segment.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of segment.",
                  "readOnly": true,
                  "enum": [
                    "saved",
                    "static",
                    "fuzzy"
                  ]
                },
                "created_at": {
                  "type": "string",
                  "title": "Date Created",
                  "description": "The date and time the segment was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Date Updated",
                  "description": "The date and time the segment was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "options": {
                  "type": "object",
                  "title": "Conditions",
                  "description": "The conditions of the segment. Static and fuzzy segments don't have conditions.",
                  "properties": {
                    "match": {
                      "type": "string",
                      "title": "Match",
                      "description": "Match type.",
                      "enum": [
                        "any",
                        "all"
                      ]
                    },
                    "conditions": {
                      "type": "array",
                      "title": "Segment Conditions",
                      "description": "An array of segment conditions.",
                      "items": {
                        "$ref": "#/definitions/SegmentCondition"
                      }
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/segments/{segment_id}": {
      "get": {
        "summary": "Get information about a specific segment",
        "description": "Get information about a specific segment.",
        "operationId": "getListsIdSegmentsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SegmentID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List",
              "description": "Information about a specific segment.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Segment ID",
                  "description": "The unique id for the segment.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Segment Name",
                  "description": "The name of the segment."
                },
                "member_count": {
                  "type": "integer",
                  "title": "Member Count",
                  "description": "The number of active subscribers currently included in the segment.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of segment.",
                  "readOnly": true,
                  "enum": [
                    "saved",
                    "static",
                    "fuzzy"
                  ]
                },
                "created_at": {
                  "type": "string",
                  "title": "Date Created",
                  "description": "The date and time the segment was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Date Updated",
                  "description": "The date and time the segment was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "options": {
                  "type": "object",
                  "title": "Conditions",
                  "description": "The conditions of the segment. Static and fuzzy segments don't have conditions.",
                  "properties": {
                    "match": {
                      "type": "string",
                      "title": "Match",
                      "description": "Match type.",
                      "enum": [
                        "any",
                        "all"
                      ]
                    },
                    "conditions": {
                      "type": "array",
                      "title": "Segment Conditions",
                      "description": "An array of segment conditions.",
                      "items": {
                        "$ref": "#/definitions/SegmentCondition"
                      }
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a segment",
        "description": "Delete a specific segment in a list.",
        "operationId": "deleteListsIdSegmentsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SegmentID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a segment",
        "description": "Update a specific segment in a list.",
        "operationId": "patchListsIdSegmentsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SegmentID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "List",
              "description": "Information about a specific list segment.",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Segment Name",
                  "description": "The name of the segment."
                },
                "static_segment": {
                  "type": "array",
                  "title": "Static Segment",
                  "description": "An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored. Passing an empty array for an existing static segment will reset that segment and remove all members. This field cannot be provided with the `options` field."
                },
                "options": {
                  "type": "object",
                  "title": "Conditions",
                  "description": "The [conditions of the segment](http://kb.mailchimp.com/segments/how-to-use-saved-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Static and fuzzy segments don't have conditions.",
                  "properties": {
                    "match": {
                      "type": "string",
                      "title": "Match",
                      "description": "Match type.",
                      "enum": [
                        "any",
                        "all"
                      ]
                    },
                    "conditions": {
                      "type": "array",
                      "title": "Segment Conditions",
                      "description": "An array of segment conditions.",
                      "items": {
                        "$ref": "#/definitions/SegmentCondition"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List",
              "description": "Information about a specific segment.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Segment ID",
                  "description": "The unique id for the segment.",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Segment Name",
                  "description": "The name of the segment."
                },
                "member_count": {
                  "type": "integer",
                  "title": "Member Count",
                  "description": "The number of active subscribers currently included in the segment.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of segment.",
                  "readOnly": true,
                  "enum": [
                    "saved",
                    "static",
                    "fuzzy"
                  ]
                },
                "created_at": {
                  "type": "string",
                  "title": "Date Created",
                  "description": "The date and time the segment was created.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Date Updated",
                  "description": "The date and time the segment was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "options": {
                  "type": "object",
                  "title": "Conditions",
                  "description": "The conditions of the segment. Static and fuzzy segments don't have conditions.",
                  "properties": {
                    "match": {
                      "type": "string",
                      "title": "Match",
                      "description": "Match type.",
                      "enum": [
                        "any",
                        "all"
                      ]
                    },
                    "conditions": {
                      "type": "array",
                      "title": "Segment Conditions",
                      "description": "An array of segment conditions.",
                      "items": {
                        "$ref": "#/definitions/SegmentCondition"
                      }
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Batch add/remove list members to static segment",
        "description": "Batch add/remove list members to static segment",
        "operationId": "postListsIdSegmentsId",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Members to add/remove to/from a static segment",
              "description": "Members to add/remove to/from a static segment",
              "properties": {
                "members_to_add": {
                  "type": "array",
                  "title": "Members to add to the static segment",
                  "description": "An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored.",
                  "items": {
                    "type": "string"
                  }
                },
                "members_to_remove": {
                  "type": "array",
                  "title": "Members to remove from the static segment",
                  "description": "An array of emails to be used for a static segment. Any emails provided that are not present on the list will be ignored.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Batch add/remove List members to/from static segment",
              "description": "Batch add/remove List members to/from static segment",
              "properties": {
                "members_added": {
                  "type": "array",
                  "title": "Members Added",
                  "description": "An array of objects, each representing a new member that was added to the static segment.",
                  "items": {
                    "$ref": "#/definitions/ListMember"
                  }
                },
                "members_removed": {
                  "type": "array",
                  "title": "Members Removed",
                  "description": "An array of objects, each representing an existing list member that got deleted from the static segment.",
                  "items": {
                    "$ref": "#/definitions/ListMember"
                  }
                },
                "errors": {
                  "type": "array",
                  "title": "Errors",
                  "description": "An array of objects, each representing an array of email addresses that could not be added to the segment or removed and an error message providing more details.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email_addresses": {
                        "type": "array",
                        "title": "Email addresses added to the static segment or removed",
                        "description": "Email addresses added to the static segment or removed"
                      },
                      "error": {
                        "type": "string",
                        "title": "Error message",
                        "description": "The error message indicating why the email addresses could not be added or updated."
                      }
                    }
                  }
                },
                "total_added": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "integer",
                  "title": "Item Count",
                  "description": "The total number of items matching the query, irrespective of pagination.",
                  "example": 42
                },
                "total_removed": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "integer",
                  "title": "Item Count",
                  "description": "The total number of items matching the query, irrespective of pagination.",
                  "example": 42
                },
                "error_count": {
                  "$schema": "http://json-schema.org/draft-04/schema#",
                  "type": "integer",
                  "title": "Item Count",
                  "description": "The total number of items matching the query, irrespective of pagination.",
                  "example": 42
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/segments/{segment_id}/members": {
      "get": {
        "summary": "Get information about all members in a list segment",
        "description": "Get information about members in a [saved segment](http://kb.mailchimp.com/segments/how-to-use-saved-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
        "operationId": "getListsIdSegmentsIdMembers",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SegmentID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Segment Members",
              "description": "View members in a specific list segment.",
              "properties": {
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "List Members",
                    "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Email ID",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "unique_email_id": {
                        "type": "string",
                        "title": "Unique Email ID",
                        "description": "An identifier for the address across all of MailChimp.",
                        "readOnly": true
                      },
                      "email_type": {
                        "type": "string",
                        "title": "Email Type",
                        "description": "Type of email this member asked to get ('html' or 'text')."
                      },
                      "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Subscriber's current status.",
                        "enum": [
                          "subscribed",
                          "unsubscribed",
                          "cleaned",
                          "pending",
                          "transactional"
                        ]
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "interests": {
                        "type": "object",
                        "title": "Subscriber Interests",
                        "description": "The key of this object's properties is the ID of the interest in question.",
                        "additionalProperties": {
                          "type": "boolean",
                          "title": "Interest Value",
                          "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                        }
                      },
                      "stats": {
                        "type": "object",
                        "title": "Subscriber Stats",
                        "description": "Open and click rates for this subscriber.",
                        "readOnly": true,
                        "properties": {
                          "avg_open_rate": {
                            "type": "number",
                            "title": "Average Open Rate",
                            "description": "A subscriber's average open rate.",
                            "readOnly": true
                          },
                          "avg_click_rate": {
                            "type": "number",
                            "title": "Average Click Rate",
                            "description": "A subscriber's average clickthrough rate.",
                            "readOnly": true
                          }
                        }
                      },
                      "ip_signup": {
                        "type": "string",
                        "title": "Signup IP",
                        "description": "IP address the subscriber signed up from.",
                        "readOnly": true
                      },
                      "timestamp_signup": {
                        "type": "string",
                        "title": "Signup Timestamp",
                        "description": "The date and time the subscriber signed up for the list.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "ip_opt": {
                        "type": "string",
                        "title": "Opt-in IP",
                        "description": "The IP address the subscriber used to confirm their opt-in status.",
                        "readOnly": true
                      },
                      "timestamp_opt": {
                        "type": "string",
                        "title": "Opt-in Timestamp",
                        "description": "The date and time the subscribe confirmed their opt-in status.",
                        "readOnly": true,
                        "format": "date-time"
                      },
                      "member_rating": {
                        "type": "integer",
                        "title": "Member Rating",
                        "description": "Star rating for this member, between 1 and 5.",
                        "readOnly": true
                      },
                      "last_changed": {
                        "type": "string",
                        "title": "Last Changed Date",
                        "description": "The date and time the member's info was last changed.",
                        "readOnly": true,
                        "format": "date-time"
                      },
                      "language": {
                        "type": "string",
                        "title": "Language",
                        "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                      },
                      "email_client": {
                        "type": "string",
                        "title": "Email Client",
                        "description": "The list member's email client.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "object",
                        "title": "Location",
                        "description": "Subscriber location information.",
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The location latitude."
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The location longitude."
                          },
                          "gmtoff": {
                            "type": "integer",
                            "title": "GMT Offset",
                            "description": "The time difference in hours from GMT.",
                            "readOnly": true
                          },
                          "dstoff": {
                            "type": "integer",
                            "title": "DST Offset",
                            "description": "The offset for timezones where daylight saving time is observed.",
                            "readOnly": true
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The unique code for the location country.",
                            "readOnly": true
                          },
                          "timezone": {
                            "type": "string",
                            "title": "Timezone",
                            "description": "The timezone for the location.",
                            "readOnly": true
                          }
                        }
                      },
                      "last_note": {
                        "type": "object",
                        "title": "Notes",
                        "description": "The most recent Note added about this member.",
                        "readOnly": true,
                        "properties": {
                          "note_id": {
                            "type": "integer",
                            "title": "Note ID",
                            "description": "The note id.",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Created Time",
                            "description": "The date and time the note was created.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "created_by": {
                            "type": "string",
                            "title": "Author",
                            "description": "The author of the note.",
                            "readOnly": true
                          },
                          "note": {
                            "type": "string",
                            "title": "Note",
                            "description": "The content of the note.",
                            "readOnly": true
                          }
                        }
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Members",
                  "description": "An array of objects, each representing a specific list member."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a member to a static segment",
        "description": "Add a member to a static segment.",
        "operationId": "postListsIdSegmentsIdMembers",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SegmentID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "email_address"
              ],
              "properties": {
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email ID",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "unique_email_id": {
                  "type": "string",
                  "title": "Unique Email ID",
                  "description": "An identifier for the address across all of MailChimp.",
                  "readOnly": true
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending",
                    "transactional"
                  ]
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "stats": {
                  "type": "object",
                  "title": "Subscriber Stats",
                  "description": "Open and click rates for this subscriber.",
                  "readOnly": true,
                  "properties": {
                    "avg_open_rate": {
                      "type": "number",
                      "title": "Average Open Rate",
                      "description": "A subscriber's average open rate.",
                      "readOnly": true
                    },
                    "avg_click_rate": {
                      "type": "number",
                      "title": "Average Click Rate",
                      "description": "A subscriber's average clickthrough rate.",
                      "readOnly": true
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from.",
                  "readOnly": true
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time",
                  "readOnly": true
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status.",
                  "readOnly": true
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "member_rating": {
                  "type": "integer",
                  "title": "Member Rating",
                  "description": "Star rating for this member, between 1 and 5.",
                  "readOnly": true
                },
                "last_changed": {
                  "type": "string",
                  "title": "Last Changed Date",
                  "description": "The date and time the member's info was last changed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "email_client": {
                  "type": "string",
                  "title": "Email Client",
                  "description": "The list member's email client.",
                  "readOnly": true
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    },
                    "gmtoff": {
                      "type": "integer",
                      "title": "GMT Offset",
                      "description": "The time difference in hours from GMT.",
                      "readOnly": true
                    },
                    "dstoff": {
                      "type": "integer",
                      "title": "DST Offset",
                      "description": "The offset for timezones where daylight saving time is observed.",
                      "readOnly": true
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The unique code for the location country.",
                      "readOnly": true
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the location.",
                      "readOnly": true
                    }
                  }
                },
                "last_note": {
                  "type": "object",
                  "title": "Notes",
                  "description": "The most recent Note added about this member.",
                  "readOnly": true,
                  "properties": {
                    "note_id": {
                      "type": "integer",
                      "title": "Note ID",
                      "description": "The note id.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Created Time",
                      "description": "The date and time the note was created.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "created_by": {
                      "type": "string",
                      "title": "Author",
                      "description": "The author of the note.",
                      "readOnly": true
                    },
                    "note": {
                      "type": "string",
                      "title": "Note",
                      "description": "The content of the note.",
                      "readOnly": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/segments/{segment_id}/members/{subscriber_hash}": {
      "delete": {
        "summary": "Remove a member from the specified static segment",
        "description": "Remove a member from the specified static segment.",
        "operationId": "deleteListsIdSegmentsIdMembersId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SegmentID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/members": {
      "get": {
        "summary": "Get information about members in a list",
        "description": "Get information about members in a specific MailChimp list.",
        "operationId": "getListsIdMembers",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/EmailType"
          },
          {
            "$ref": "#/parameters/SubscriberStatus"
          },
          {
            "$ref": "#/parameters/TimestampOpt_Since"
          },
          {
            "$ref": "#/parameters/TimestampOpt_Before"
          },
          {
            "$ref": "#/parameters/ListMemberChanged_Since"
          },
          {
            "$ref": "#/parameters/ListMemberChanged_Before"
          },
          {
            "$ref": "#/parameters/UniqueEmailID"
          },
          {
            "$ref": "#/parameters/VipOnly"
          },
          {
            "$ref": "#/parameters/InterestCategoryQueryID"
          },
          {
            "$ref": "#/parameters/InterestIds"
          },
          {
            "$ref": "#/parameters/InterestMatch"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Members",
              "description": "Manage members of a specific MailChimp list, including currently subscribed, unsubscribed, and bounced members.",
              "properties": {
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "List Members",
                    "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Email ID",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber."
                      },
                      "unique_email_id": {
                        "type": "string",
                        "title": "Unique Email ID",
                        "description": "An identifier for the address across all of MailChimp.",
                        "readOnly": true
                      },
                      "email_type": {
                        "type": "string",
                        "title": "Email Type",
                        "description": "Type of email this member asked to get ('html' or 'text')."
                      },
                      "status": {
                        "type": "string",
                        "title": "Status",
                        "description": "Subscriber's current status.",
                        "enum": [
                          "subscribed",
                          "unsubscribed",
                          "cleaned",
                          "pending",
                          "transactional"
                        ]
                      },
                      "unsubscribe_reason": {
                        "type": "string",
                        "title": "Unsubscribe Reason",
                        "description": "A subscriber's reason for unsubscribing."
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "interests": {
                        "type": "object",
                        "title": "Subscriber Interests",
                        "description": "The key of this object's properties is the ID of the interest in question.",
                        "additionalProperties": {
                          "type": "boolean",
                          "title": "Interest Value",
                          "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                        }
                      },
                      "stats": {
                        "type": "object",
                        "title": "Subscriber Stats",
                        "description": "Open and click rates for this subscriber.",
                        "readOnly": true,
                        "properties": {
                          "avg_open_rate": {
                            "type": "number",
                            "title": "Average Open Rate",
                            "description": "A subscriber's average open rate.",
                            "readOnly": true
                          },
                          "avg_click_rate": {
                            "type": "number",
                            "title": "Average Click Rate",
                            "description": "A subscriber's average clickthrough rate.",
                            "readOnly": true
                          }
                        }
                      },
                      "ip_signup": {
                        "type": "string",
                        "title": "Signup IP",
                        "description": "IP address the subscriber signed up from.",
                        "readOnly": true
                      },
                      "timestamp_signup": {
                        "type": "string",
                        "title": "Signup Timestamp",
                        "description": "The date and time the subscriber signed up for the list.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "ip_opt": {
                        "type": "string",
                        "title": "Opt-in IP",
                        "description": "The IP address the subscriber used to confirm their opt-in status.",
                        "readOnly": true
                      },
                      "timestamp_opt": {
                        "type": "string",
                        "title": "Opt-in Timestamp",
                        "description": "The date and time the subscribe confirmed their opt-in status.",
                        "readOnly": true,
                        "format": "date-time"
                      },
                      "member_rating": {
                        "type": "integer",
                        "title": "Member Rating",
                        "description": "Star rating for this member, between 1 and 5.",
                        "readOnly": true
                      },
                      "last_changed": {
                        "type": "string",
                        "title": "Last Changed Date",
                        "description": "The date and time the member's info was last changed.",
                        "readOnly": true,
                        "format": "date-time"
                      },
                      "language": {
                        "type": "string",
                        "title": "Language",
                        "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                      },
                      "email_client": {
                        "type": "string",
                        "title": "Email Client",
                        "description": "The list member's email client.",
                        "readOnly": true
                      },
                      "location": {
                        "type": "object",
                        "title": "Location",
                        "description": "Subscriber location information.",
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The location latitude."
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The location longitude."
                          },
                          "gmtoff": {
                            "type": "integer",
                            "title": "GMT Offset",
                            "description": "The time difference in hours from GMT.",
                            "readOnly": true
                          },
                          "dstoff": {
                            "type": "integer",
                            "title": "DST Offset",
                            "description": "The offset for timezones where daylight saving time is observed.",
                            "readOnly": true
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The unique code for the location country.",
                            "readOnly": true
                          },
                          "timezone": {
                            "type": "string",
                            "title": "Timezone",
                            "description": "The timezone for the location.",
                            "readOnly": true
                          }
                        }
                      },
                      "last_note": {
                        "type": "object",
                        "title": "Notes",
                        "description": "The most recent Note added about this member.",
                        "readOnly": true,
                        "properties": {
                          "note_id": {
                            "type": "integer",
                            "title": "Note ID",
                            "description": "The note id.",
                            "readOnly": true
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Created Time",
                            "description": "The date and time the note was created.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "created_by": {
                            "type": "string",
                            "title": "Author",
                            "description": "The author of the note.",
                            "readOnly": true
                          },
                          "note": {
                            "type": "string",
                            "title": "Note",
                            "description": "The content of the note.",
                            "readOnly": true
                          }
                        }
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Members",
                  "description": "An array of objects, each representing a specific list member."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new list member",
        "description": "Add a new member to the list.",
        "operationId": "postListsIdMembers",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Add List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "required": [
                "email_address",
                "status"
              ],
              "properties": {
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber."
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending"
                  ]
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from."
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time"
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status."
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "format": "date-time"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email ID",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber."
                },
                "unique_email_id": {
                  "type": "string",
                  "title": "Unique Email ID",
                  "description": "An identifier for the address across all of MailChimp.",
                  "readOnly": true
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending",
                    "transactional"
                  ]
                },
                "unsubscribe_reason": {
                  "type": "string",
                  "title": "Unsubscribe Reason",
                  "description": "A subscriber's reason for unsubscribing."
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "stats": {
                  "type": "object",
                  "title": "Subscriber Stats",
                  "description": "Open and click rates for this subscriber.",
                  "readOnly": true,
                  "properties": {
                    "avg_open_rate": {
                      "type": "number",
                      "title": "Average Open Rate",
                      "description": "A subscriber's average open rate.",
                      "readOnly": true
                    },
                    "avg_click_rate": {
                      "type": "number",
                      "title": "Average Click Rate",
                      "description": "A subscriber's average clickthrough rate.",
                      "readOnly": true
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from.",
                  "readOnly": true
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time",
                  "readOnly": true
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status.",
                  "readOnly": true
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "member_rating": {
                  "type": "integer",
                  "title": "Member Rating",
                  "description": "Star rating for this member, between 1 and 5.",
                  "readOnly": true
                },
                "last_changed": {
                  "type": "string",
                  "title": "Last Changed Date",
                  "description": "The date and time the member's info was last changed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "email_client": {
                  "type": "string",
                  "title": "Email Client",
                  "description": "The list member's email client.",
                  "readOnly": true
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    },
                    "gmtoff": {
                      "type": "integer",
                      "title": "GMT Offset",
                      "description": "The time difference in hours from GMT.",
                      "readOnly": true
                    },
                    "dstoff": {
                      "type": "integer",
                      "title": "DST Offset",
                      "description": "The offset for timezones where daylight saving time is observed.",
                      "readOnly": true
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The unique code for the location country.",
                      "readOnly": true
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the location.",
                      "readOnly": true
                    }
                  }
                },
                "last_note": {
                  "type": "object",
                  "title": "Notes",
                  "description": "The most recent Note added about this member.",
                  "readOnly": true,
                  "properties": {
                    "note_id": {
                      "type": "integer",
                      "title": "Note ID",
                      "description": "The note id.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Created Time",
                      "description": "The date and time the note was created.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "created_by": {
                      "type": "string",
                      "title": "Author",
                      "description": "The author of the note.",
                      "readOnly": true
                    },
                    "note": {
                      "type": "string",
                      "title": "Note",
                      "description": "The content of the note.",
                      "readOnly": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/members/{subscriber_hash}": {
      "get": {
        "summary": "Get information about a specific list member",
        "description": "Get information about a specific list member, including a currently subscribed, unsubscribed, or bounced member.",
        "operationId": "getListsIdMembersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email ID",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber."
                },
                "unique_email_id": {
                  "type": "string",
                  "title": "Unique Email ID",
                  "description": "An identifier for the address across all of MailChimp.",
                  "readOnly": true
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending",
                    "transactional"
                  ]
                },
                "unsubscribe_reason": {
                  "type": "string",
                  "title": "Unsubscribe Reason",
                  "description": "A subscriber's reason for unsubscribing."
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "stats": {
                  "type": "object",
                  "title": "Subscriber Stats",
                  "description": "Open and click rates for this subscriber.",
                  "readOnly": true,
                  "properties": {
                    "avg_open_rate": {
                      "type": "number",
                      "title": "Average Open Rate",
                      "description": "A subscriber's average open rate.",
                      "readOnly": true
                    },
                    "avg_click_rate": {
                      "type": "number",
                      "title": "Average Click Rate",
                      "description": "A subscriber's average clickthrough rate.",
                      "readOnly": true
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from.",
                  "readOnly": true
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time",
                  "readOnly": true
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status.",
                  "readOnly": true
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "member_rating": {
                  "type": "integer",
                  "title": "Member Rating",
                  "description": "Star rating for this member, between 1 and 5.",
                  "readOnly": true
                },
                "last_changed": {
                  "type": "string",
                  "title": "Last Changed Date",
                  "description": "The date and time the member's info was last changed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "email_client": {
                  "type": "string",
                  "title": "Email Client",
                  "description": "The list member's email client.",
                  "readOnly": true
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    },
                    "gmtoff": {
                      "type": "integer",
                      "title": "GMT Offset",
                      "description": "The time difference in hours from GMT.",
                      "readOnly": true
                    },
                    "dstoff": {
                      "type": "integer",
                      "title": "DST Offset",
                      "description": "The offset for timezones where daylight saving time is observed.",
                      "readOnly": true
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The unique code for the location country.",
                      "readOnly": true
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the location.",
                      "readOnly": true
                    }
                  }
                },
                "last_note": {
                  "type": "object",
                  "title": "Notes",
                  "description": "The most recent Note added about this member.",
                  "readOnly": true,
                  "properties": {
                    "note_id": {
                      "type": "integer",
                      "title": "Note ID",
                      "description": "The note id.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Created Time",
                      "description": "The date and time the note was created.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "created_by": {
                      "type": "string",
                      "title": "Author",
                      "description": "The author of the note.",
                      "readOnly": true
                    },
                    "note": {
                      "type": "string",
                      "title": "Note",
                      "description": "The content of the note.",
                      "readOnly": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Add or update a list member",
        "description": "Add or update a list member.",
        "operationId": "putListsIdMembersId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Add List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "required": [
                "email_address",
                "status_if_new"
              ],
              "properties": {
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber. This value is required only if the email address is not already present on the list."
                },
                "status_if_new": {
                  "type": "string",
                  "title": "New Member Status",
                  "description": "Subscriber's status. This value is required only if the email address is not already present on the list.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending",
                    "transactional"
                  ]
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending"
                  ]
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from."
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time"
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status."
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "format": "date-time"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email ID",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber."
                },
                "unique_email_id": {
                  "type": "string",
                  "title": "Unique Email ID",
                  "description": "An identifier for the address across all of MailChimp.",
                  "readOnly": true
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending",
                    "transactional"
                  ]
                },
                "unsubscribe_reason": {
                  "type": "string",
                  "title": "Unsubscribe Reason",
                  "description": "A subscriber's reason for unsubscribing."
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "stats": {
                  "type": "object",
                  "title": "Subscriber Stats",
                  "description": "Open and click rates for this subscriber.",
                  "readOnly": true,
                  "properties": {
                    "avg_open_rate": {
                      "type": "number",
                      "title": "Average Open Rate",
                      "description": "A subscriber's average open rate.",
                      "readOnly": true
                    },
                    "avg_click_rate": {
                      "type": "number",
                      "title": "Average Click Rate",
                      "description": "A subscriber's average clickthrough rate.",
                      "readOnly": true
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from.",
                  "readOnly": true
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time",
                  "readOnly": true
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status.",
                  "readOnly": true
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "member_rating": {
                  "type": "integer",
                  "title": "Member Rating",
                  "description": "Star rating for this member, between 1 and 5.",
                  "readOnly": true
                },
                "last_changed": {
                  "type": "string",
                  "title": "Last Changed Date",
                  "description": "The date and time the member's info was last changed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "email_client": {
                  "type": "string",
                  "title": "Email Client",
                  "description": "The list member's email client.",
                  "readOnly": true
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    },
                    "gmtoff": {
                      "type": "integer",
                      "title": "GMT Offset",
                      "description": "The time difference in hours from GMT.",
                      "readOnly": true
                    },
                    "dstoff": {
                      "type": "integer",
                      "title": "DST Offset",
                      "description": "The offset for timezones where daylight saving time is observed.",
                      "readOnly": true
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The unique code for the location country.",
                      "readOnly": true
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the location.",
                      "readOnly": true
                    }
                  }
                },
                "last_note": {
                  "type": "object",
                  "title": "Notes",
                  "description": "The most recent Note added about this member.",
                  "readOnly": true,
                  "properties": {
                    "note_id": {
                      "type": "integer",
                      "title": "Note ID",
                      "description": "The note id.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Created Time",
                      "description": "The date and time the note was created.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "created_by": {
                      "type": "string",
                      "title": "Author",
                      "description": "The author of the note.",
                      "readOnly": true
                    },
                    "note": {
                      "type": "string",
                      "title": "Note",
                      "description": "The content of the note.",
                      "readOnly": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a list member",
        "description": "Update information for a specific list member.",
        "operationId": "patchListsIdMembersId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Add List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "properties": {
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber."
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending"
                  ]
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from."
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time"
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status."
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "format": "date-time"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Members",
              "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Email ID",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber."
                },
                "unique_email_id": {
                  "type": "string",
                  "title": "Unique Email ID",
                  "description": "An identifier for the address across all of MailChimp.",
                  "readOnly": true
                },
                "email_type": {
                  "type": "string",
                  "title": "Email Type",
                  "description": "Type of email this member asked to get ('html' or 'text')."
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Subscriber's current status.",
                  "enum": [
                    "subscribed",
                    "unsubscribed",
                    "cleaned",
                    "pending",
                    "transactional"
                  ]
                },
                "unsubscribe_reason": {
                  "type": "string",
                  "title": "Unsubscribe Reason",
                  "description": "A subscriber's reason for unsubscribing."
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "interests": {
                  "type": "object",
                  "title": "Subscriber Interests",
                  "description": "The key of this object's properties is the ID of the interest in question.",
                  "additionalProperties": {
                    "type": "boolean",
                    "title": "Interest Value",
                    "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                  }
                },
                "stats": {
                  "type": "object",
                  "title": "Subscriber Stats",
                  "description": "Open and click rates for this subscriber.",
                  "readOnly": true,
                  "properties": {
                    "avg_open_rate": {
                      "type": "number",
                      "title": "Average Open Rate",
                      "description": "A subscriber's average open rate.",
                      "readOnly": true
                    },
                    "avg_click_rate": {
                      "type": "number",
                      "title": "Average Click Rate",
                      "description": "A subscriber's average clickthrough rate.",
                      "readOnly": true
                    }
                  }
                },
                "ip_signup": {
                  "type": "string",
                  "title": "Signup IP",
                  "description": "IP address the subscriber signed up from.",
                  "readOnly": true
                },
                "timestamp_signup": {
                  "type": "string",
                  "title": "Signup Timestamp",
                  "description": "The date and time the subscriber signed up for the list.",
                  "format": "date-time",
                  "readOnly": true
                },
                "ip_opt": {
                  "type": "string",
                  "title": "Opt-in IP",
                  "description": "The IP address the subscriber used to confirm their opt-in status.",
                  "readOnly": true
                },
                "timestamp_opt": {
                  "type": "string",
                  "title": "Opt-in Timestamp",
                  "description": "The date and time the subscribe confirmed their opt-in status.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "member_rating": {
                  "type": "integer",
                  "title": "Member Rating",
                  "description": "Star rating for this member, between 1 and 5.",
                  "readOnly": true
                },
                "last_changed": {
                  "type": "string",
                  "title": "Last Changed Date",
                  "description": "The date and time the member's info was last changed.",
                  "readOnly": true,
                  "format": "date-time"
                },
                "language": {
                  "type": "string",
                  "title": "Language",
                  "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                },
                "email_client": {
                  "type": "string",
                  "title": "Email Client",
                  "description": "The list member's email client.",
                  "readOnly": true
                },
                "location": {
                  "type": "object",
                  "title": "Location",
                  "description": "Subscriber location information.",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The location latitude."
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The location longitude."
                    },
                    "gmtoff": {
                      "type": "integer",
                      "title": "GMT Offset",
                      "description": "The time difference in hours from GMT.",
                      "readOnly": true
                    },
                    "dstoff": {
                      "type": "integer",
                      "title": "DST Offset",
                      "description": "The offset for timezones where daylight saving time is observed.",
                      "readOnly": true
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The unique code for the location country.",
                      "readOnly": true
                    },
                    "timezone": {
                      "type": "string",
                      "title": "Timezone",
                      "description": "The timezone for the location.",
                      "readOnly": true
                    }
                  }
                },
                "last_note": {
                  "type": "object",
                  "title": "Notes",
                  "description": "The most recent Note added about this member.",
                  "readOnly": true,
                  "properties": {
                    "note_id": {
                      "type": "integer",
                      "title": "Note ID",
                      "description": "The note id.",
                      "readOnly": true
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Created Time",
                      "description": "The date and time the note was created.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "created_by": {
                      "type": "string",
                      "title": "Author",
                      "description": "The author of the note.",
                      "readOnly": true
                    },
                    "note": {
                      "type": "string",
                      "title": "Note",
                      "description": "The content of the note.",
                      "readOnly": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Remove a list member",
        "description": "Delete a member from a list.",
        "operationId": "deleteListsIdMembersId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/members/{subscriber_hash}/activity": {
      "get": {
        "summary": "Get recent list member activity",
        "description": "Get the last 50 events of a member's activity on a specific list, including opens, clicks, and unsubscribes.",
        "operationId": "getListsIdMembersIdActivity",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Member Activity Events",
              "description": "The last 50 member events for a list.",
              "properties": {
                "activity": {
                  "type": "array",
                  "title": "Activity",
                  "description": "An array of objects, each representing a member event.",
                  "items": {
                    "type": "object",
                    "title": "Member Activity",
                    "description": "Member activity events.",
                    "properties": {
                      "action": {
                        "type": "string",
                        "title": "Action Type",
                        "description": "The type of action recorded for the subscriber."
                      },
                      "timestamp": {
                        "type": "string",
                        "title": "Timestamp",
                        "format": "date-time",
                        "description": "The date and time recorded for the action."
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "For clicks, the URL the subscriber clicked on."
                      },
                      "type": {
                        "type": "string",
                        "title": "Campaign Type",
                        "description": "The type of campaign that was sent."
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The web-based ID for the campaign."
                      },
                      "title": {
                        "type": "string",
                        "title": "Campaign Title",
                        "description": "If set, the campaign's title."
                      },
                      "parent_campaign": {
                        "type": "string",
                        "title": "Parent Campaign ID",
                        "description": "The ID of the parent campaign."
                      }
                    }
                  }
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/members/{subscriber_hash}/goals": {
      "get": {
        "summary": "Get the last 50 Goal events for a member on a specific list",
        "description": "Get the last 50 Goal events for a member on a specific list.",
        "operationId": "getListsIdMembersIdGoals",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Collection of Member Activity Events",
              "description": "The last 50 Goal events for a member on a specific list.",
              "properties": {
                "goals": {
                  "type": "array",
                  "title": "Goal Activity",
                  "description": "The last 50 Goal events triggered by a member.",
                  "items": {
                    "type": "object",
                    "title": "Goal",
                    "description": "A single instance of a goal activity.",
                    "properties": {
                      "goal_id": {
                        "type": "integer",
                        "title": "Goal ID",
                        "description": "The id for a Goal event."
                      },
                      "event": {
                        "type": "string",
                        "title": "Event Name",
                        "description": "The name/type of Goal event triggered."
                      },
                      "last_visited_at": {
                        "type": "string",
                        "title": "Last Visit Date",
                        "description": "The date and time the user last triggered the Goal event.",
                        "format": "date-time"
                      },
                      "data": {
                        "type": "string",
                        "title": "Additional Data",
                        "description": "Any extra data passed with the Goal event."
                      }
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/members/{subscriber_hash}/notes": {
      "get": {
        "summary": "Get recent notes for a specific list member",
        "description": "Get recent notes for a specific list member.",
        "operationId": "getListsIdMembersIdNotes",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Collection of Notes",
              "description": "The last 10 notes for a specific list member, based on date created.",
              "properties": {
                "notes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Member Notes",
                    "description": "A specific note for a specific member.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "Note ID",
                        "description": "The note id.",
                        "readOnly": true
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Created Time",
                        "description": "The date and time the note was created.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "created_by": {
                        "type": "string",
                        "title": "Author",
                        "description": "The author of the note.",
                        "readOnly": true
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Updated Time",
                        "description": "The date and time the note was last updated.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "note": {
                        "type": "string",
                        "title": "Note",
                        "description": "The content of the note."
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique id for the list.",
                        "readOnly": true
                      },
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Notes",
                  "description": "An array of objects, each representing a note resource."
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new note",
        "description": "Add a new note for a specific subscriber.",
        "operationId": "postListsIdMembersIdNotes",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "title": "Member Notes",
              "description": "A specific note for a specific member.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Note ID",
                  "description": "The note id.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Time",
                  "description": "The date and time the note was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Author",
                  "description": "The author of the note.",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated Time",
                  "description": "The date and time the note was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "note": {
                  "type": "string",
                  "title": "Note",
                  "description": "The content of the note. Note length is limited to 1,000 characters."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Member Notes",
              "description": "A specific note for a specific member.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Note ID",
                  "description": "The note id.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Time",
                  "description": "The date and time the note was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Author",
                  "description": "The author of the note.",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated Time",
                  "description": "The date and time the note was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "note": {
                  "type": "string",
                  "title": "Note",
                  "description": "The content of the note."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/members/{subscriber_hash}/notes/{note_id}": {
      "get": {
        "summary": "Get a specific note for a specific list member",
        "description": "Get a specific note for a specific list member.",
        "operationId": "getListsIdMembersIdNotesId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "$ref": "#/parameters/ListMemberNoteID"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Member Notes",
              "description": "A specific note for a specific member.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Note ID",
                  "description": "The note id.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Time",
                  "description": "The date and time the note was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Author",
                  "description": "The author of the note.",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated Time",
                  "description": "The date and time the note was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "note": {
                  "type": "string",
                  "title": "Note",
                  "description": "The content of the note."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a note",
        "description": "Update a specific note for a specific list member.",
        "operationId": "patchListsIdMembersIdNotesId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "$ref": "#/parameters/ListMemberNoteID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "title": "Member Notes",
              "description": "A specific note for a specific member.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Note ID",
                  "description": "The note id.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Time",
                  "description": "The date and time the note was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Author",
                  "description": "The author of the note.",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated Time",
                  "description": "The date and time the note was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "note": {
                  "type": "string",
                  "title": "Note",
                  "description": "The content of the note. Note length is limited to 1,000 characters."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Member Notes",
              "description": "A specific note for a specific member.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Note ID",
                  "description": "The note id.",
                  "readOnly": true
                },
                "created_at": {
                  "type": "string",
                  "title": "Created Time",
                  "description": "The date and time the note was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Author",
                  "description": "The author of the note.",
                  "readOnly": true
                },
                "updated_at": {
                  "type": "string",
                  "title": "Updated Time",
                  "description": "The date and time the note was last updated.",
                  "format": "date-time",
                  "readOnly": true
                },
                "note": {
                  "type": "string",
                  "title": "Note",
                  "description": "The content of the note."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a note",
        "description": "Delete a specific note for a specific list member.",
        "operationId": "deleteListsIdMembersIdNotesId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "$ref": "#/parameters/ListMemberNoteID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/merge-fields": {
      "get": {
        "summary": "Get all merge fields for a list",
        "description": "Get a list of all merge fields (formerly merge vars) for a list.",
        "operationId": "getListsIdMergeFields",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/MergeType"
          },
          {
            "$ref": "#/parameters/MergeRequired"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Collection of Merge Fields",
              "description": "The merge field (formerly merge vars) for a list. These correspond to merge fields in MailChimp's lists and subscriber profiles.",
              "properties": {
                "merge_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Merge Field",
                    "description": "A merge field (formerly merge vars) for a specific list. These correspond to merge fields in MailChimp's lists and subscriber profiles.",
                    "properties": {
                      "merge_id": {
                        "type": "integer",
                        "title": "Merge Field ID",
                        "description": "An unchanging id for the merge field.",
                        "readOnly": true
                      },
                      "tag": {
                        "type": "string",
                        "title": "Merge Field Tag",
                        "description": "The tag used in MailChimp campaigns and for the /members endpoint."
                      },
                      "name": {
                        "type": "string",
                        "title": "Merge Field Name",
                        "description": "The name of the merge field."
                      },
                      "type": {
                        "type": "string",
                        "title": "Merge Field Type",
                        "description": "The type for the merge field.",
                        "readOnly": true
                      },
                      "required": {
                        "type": "boolean",
                        "title": "Required",
                        "description": "The boolean value if the merge field is required."
                      },
                      "default_value": {
                        "type": "string",
                        "title": "Default Value",
                        "description": "The default value for the merge field if `null`."
                      },
                      "public": {
                        "type": "boolean",
                        "title": "Merge Field Public Status",
                        "description": "Whether the merge field is displayed on the signup form."
                      },
                      "display_order": {
                        "type": "integer",
                        "title": "Display Order",
                        "description": "The order that the merge field displays on the list signup form."
                      },
                      "options": {
                        "type": "object",
                        "title": "Merge Field Options",
                        "description": "Extra options for some merge field types.",
                        "properties": {
                          "default_country": {
                            "type": "integer",
                            "title": "Default Country",
                            "description": "In an address field, the default country code if none supplied."
                          },
                          "phone_format": {
                            "type": "string",
                            "title": "Phone Type",
                            "description": "In a phone field, the phone number type: US or International."
                          },
                          "date_format": {
                            "type": "string",
                            "title": "Date Type",
                            "description": "In a date or birthday field, the format of the date."
                          },
                          "choices": {
                            "type": "array",
                            "title": "Choices",
                            "description": "In a radio or dropdown non-group field, the available options for members to pick from.",
                            "example": [
                              "First Choice",
                              "Second Choice",
                              "Third Choice"
                            ]
                          },
                          "size": {
                            "type": "integer",
                            "title": "Text Field Size",
                            "description": "In a text field, the default length of the text field.",
                            "readOnly": true
                          }
                        }
                      },
                      "help_text": {
                        "type": "string",
                        "title": "Merge Field Help Text",
                        "description": "Extra text to help the subscriber fill out the form."
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "A string that identifies this merge field collections' list.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Merge Fields",
                  "description": "An array of objects, each representing a merge field resource."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new merge field",
        "description": "Add a new merge field for a specific list.",
        "operationId": "postListsIdMergeFields",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Merge Field",
              "description": "A merge field (formerly merge vars) for a specific list. These correspond to merge fields in MailChimp's lists and subscriber profiles.",
              "required": [
                "name",
                "type"
              ],
              "properties": {
                "tag": {
                  "type": "string",
                  "title": "Merge Field Tag",
                  "description": "The tag used in MailChimp campaigns and for the /members endpoint."
                },
                "name": {
                  "type": "string",
                  "title": "Merge Field Name",
                  "description": "The name of the merge field."
                },
                "type": {
                  "type": "string",
                  "title": "Merge Field Type",
                  "description": "The type for the merge field.",
                  "enum": [
                    "text",
                    "number",
                    "address",
                    "phone",
                    "date",
                    "url",
                    "imageurl",
                    "radio",
                    "dropdown",
                    "birthday",
                    "zip"
                  ]
                },
                "required": {
                  "type": "boolean",
                  "title": "Required",
                  "description": "The boolean value if the merge field is required."
                },
                "default_value": {
                  "type": "string",
                  "title": "Default Value",
                  "description": "The default value for the merge field if `null`."
                },
                "public": {
                  "type": "boolean",
                  "title": "Merge Field Public Status",
                  "description": "Whether the merge field is displayed on the signup form."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the merge field displays on the list signup form."
                },
                "options": {
                  "type": "object",
                  "title": "Merge Field Options",
                  "description": "Extra options for some merge field types.",
                  "properties": {
                    "default_country": {
                      "type": "integer",
                      "title": "Default Country",
                      "description": "In an address field, the default country code if none supplied."
                    },
                    "phone_format": {
                      "type": "string",
                      "title": "Phone Type",
                      "description": "In a phone field, the phone number type: US or International."
                    },
                    "date_format": {
                      "type": "string",
                      "title": "Date Type",
                      "description": "In a date or birthday field, the format of the date."
                    },
                    "choices": {
                      "type": "array",
                      "title": "Choices",
                      "description": "In a radio or dropdown non-group field, the available options for members to pick from.",
                      "example": [
                        "First Choice",
                        "Second Choice",
                        "Third Choice"
                      ]
                    },
                    "size": {
                      "type": "integer",
                      "title": "Text Field Size",
                      "description": "In a text field, the default length of the text field."
                    }
                  }
                },
                "help_text": {
                  "type": "string",
                  "title": "Merge Field Help Text",
                  "description": "Extra text to help the subscriber fill out the form."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Merge Field",
              "description": "A merge field (formerly merge vars) for a specific list. These correspond to merge fields in MailChimp's lists and subscriber profiles.",
              "properties": {
                "merge_id": {
                  "type": "integer",
                  "title": "Merge Field ID",
                  "description": "An unchanging id for the merge field.",
                  "readOnly": true
                },
                "tag": {
                  "type": "string",
                  "title": "Merge Field Tag",
                  "description": "The tag used in MailChimp campaigns and for the /members endpoint."
                },
                "name": {
                  "type": "string",
                  "title": "Merge Field Name",
                  "description": "The name of the merge field."
                },
                "type": {
                  "type": "string",
                  "title": "Merge Field Type",
                  "description": "The type for the merge field.",
                  "readOnly": true
                },
                "required": {
                  "type": "boolean",
                  "title": "Required",
                  "description": "The boolean value if the merge field is required."
                },
                "default_value": {
                  "type": "string",
                  "title": "Default Value",
                  "description": "The default value for the merge field if `null`."
                },
                "public": {
                  "type": "boolean",
                  "title": "Merge Field Public Status",
                  "description": "Whether the merge field is displayed on the signup form."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the merge field displays on the list signup form."
                },
                "options": {
                  "type": "object",
                  "title": "Merge Field Options",
                  "description": "Extra options for some merge field types.",
                  "properties": {
                    "default_country": {
                      "type": "integer",
                      "title": "Default Country",
                      "description": "In an address field, the default country code if none supplied."
                    },
                    "phone_format": {
                      "type": "string",
                      "title": "Phone Type",
                      "description": "In a phone field, the phone number type: US or International."
                    },
                    "date_format": {
                      "type": "string",
                      "title": "Date Type",
                      "description": "In a date or birthday field, the format of the date."
                    },
                    "choices": {
                      "type": "array",
                      "title": "Choices",
                      "description": "In a radio or dropdown non-group field, the available options for members to pick from.",
                      "example": [
                        "First Choice",
                        "Second Choice",
                        "Third Choice"
                      ]
                    },
                    "size": {
                      "type": "integer",
                      "title": "Text Field Size",
                      "description": "In a text field, the default length of the text field.",
                      "readOnly": true
                    }
                  }
                },
                "help_text": {
                  "type": "string",
                  "title": "Merge Field Help Text",
                  "description": "Extra text to help the subscriber fill out the form."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that identifies this merge field collections' list.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/merge-fields/{merge_id}": {
      "get": {
        "summary": "Get a specific merge field",
        "description": "Get information about a specific merge field in a list.",
        "operationId": "getListsIdMergeFieldsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/MergeID"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/FieldSelection"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Merge Field",
              "description": "A merge field (formerly merge vars) for a specific list. These correspond to merge fields in MailChimp's lists and subscriber profiles.",
              "properties": {
                "merge_id": {
                  "type": "integer",
                  "title": "Merge Field ID",
                  "description": "An unchanging id for the merge field.",
                  "readOnly": true
                },
                "tag": {
                  "type": "string",
                  "title": "Merge Field Tag",
                  "description": "The tag used in MailChimp campaigns and for the /members endpoint."
                },
                "name": {
                  "type": "string",
                  "title": "Merge Field Name",
                  "description": "The name of the merge field."
                },
                "type": {
                  "type": "string",
                  "title": "Merge Field Type",
                  "description": "The type for the merge field.",
                  "readOnly": true
                },
                "required": {
                  "type": "boolean",
                  "title": "Required",
                  "description": "The boolean value if the merge field is required."
                },
                "default_value": {
                  "type": "string",
                  "title": "Default Value",
                  "description": "The default value for the merge field if `null`."
                },
                "public": {
                  "type": "boolean",
                  "title": "Merge Field Public Status",
                  "description": "Whether the merge field is displayed on the signup form."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the merge field displays on the list signup form."
                },
                "options": {
                  "type": "object",
                  "title": "Merge Field Options",
                  "description": "Extra options for some merge field types.",
                  "properties": {
                    "default_country": {
                      "type": "integer",
                      "title": "Default Country",
                      "description": "In an address field, the default country code if none supplied."
                    },
                    "phone_format": {
                      "type": "string",
                      "title": "Phone Type",
                      "description": "In a phone field, the phone number type: US or International."
                    },
                    "date_format": {
                      "type": "string",
                      "title": "Date Type",
                      "description": "In a date or birthday field, the format of the date."
                    },
                    "choices": {
                      "type": "array",
                      "title": "Choices",
                      "description": "In a radio or dropdown non-group field, the available options for members to pick from.",
                      "example": [
                        "First Choice",
                        "Second Choice",
                        "Third Choice"
                      ]
                    },
                    "size": {
                      "type": "integer",
                      "title": "Text Field Size",
                      "description": "In a text field, the default length of the text field.",
                      "readOnly": true
                    }
                  }
                },
                "help_text": {
                  "type": "string",
                  "title": "Merge Field Help Text",
                  "description": "Extra text to help the subscriber fill out the form."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that identifies this merge field collections' list.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a merge field",
        "description": "Update a specific merge field in a list.",
        "operationId": "patchListsIdMergeFieldsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/MergeID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "title": "Merge Field",
              "description": "A merge field (formerly merge vars) for a specific list. These correspond to merge fields in MailChimp's lists and subscriber profiles.",
              "required": [
                "name"
              ],
              "properties": {
                "tag": {
                  "type": "string",
                  "title": "Merge Field Tag",
                  "description": "The tag used in MailChimp campaigns and for the /members endpoint."
                },
                "name": {
                  "type": "string",
                  "title": "Merge Field Name",
                  "description": "The name of the merge field."
                },
                "required": {
                  "type": "boolean",
                  "title": "Required",
                  "description": "The boolean value if the merge field is required."
                },
                "default_value": {
                  "type": "string",
                  "title": "Default Value",
                  "description": "The default value for the merge field if `null`."
                },
                "public": {
                  "type": "boolean",
                  "title": "Merge Field Public Status",
                  "description": "Whether the merge field is displayed on the signup form."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the merge field displays on the list signup form."
                },
                "options": {
                  "type": "object",
                  "title": "Merge Field Options",
                  "description": "Extra options for some merge field types.",
                  "properties": {
                    "default_country": {
                      "type": "integer",
                      "title": "Default Country",
                      "description": "In an address field, the default country code if none supplied."
                    },
                    "phone_format": {
                      "type": "string",
                      "title": "Phone Type",
                      "description": "In a phone field, the phone number type: US or International."
                    },
                    "date_format": {
                      "type": "string",
                      "title": "Date Type",
                      "description": "In a date or birthday field, the format of the date."
                    },
                    "choices": {
                      "type": "array",
                      "title": "Choices",
                      "description": "In a radio or dropdown non-group field, the available options for members to pick from.",
                      "example": [
                        "First Choice",
                        "Second Choice",
                        "Third Choice"
                      ]
                    }
                  }
                },
                "help_text": {
                  "type": "string",
                  "title": "Merge Field Help Text",
                  "description": "Extra text to help the subscriber fill out the form."
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Merge Field",
              "description": "A merge field (formerly merge vars) for a specific list. These correspond to merge fields in MailChimp's lists and subscriber profiles.",
              "properties": {
                "merge_id": {
                  "type": "integer",
                  "title": "Merge Field ID",
                  "description": "An unchanging id for the merge field.",
                  "readOnly": true
                },
                "tag": {
                  "type": "string",
                  "title": "Merge Field Tag",
                  "description": "The tag used in MailChimp campaigns and for the /members endpoint."
                },
                "name": {
                  "type": "string",
                  "title": "Merge Field Name",
                  "description": "The name of the merge field."
                },
                "type": {
                  "type": "string",
                  "title": "Merge Field Type",
                  "description": "The type for the merge field.",
                  "readOnly": true
                },
                "required": {
                  "type": "boolean",
                  "title": "Required",
                  "description": "The boolean value if the merge field is required."
                },
                "default_value": {
                  "type": "string",
                  "title": "Default Value",
                  "description": "The default value for the merge field if `null`."
                },
                "public": {
                  "type": "boolean",
                  "title": "Merge Field Public Status",
                  "description": "Whether the merge field is displayed on the signup form."
                },
                "display_order": {
                  "type": "integer",
                  "title": "Display Order",
                  "description": "The order that the merge field displays on the list signup form."
                },
                "options": {
                  "type": "object",
                  "title": "Merge Field Options",
                  "description": "Extra options for some merge field types.",
                  "properties": {
                    "default_country": {
                      "type": "integer",
                      "title": "Default Country",
                      "description": "In an address field, the default country code if none supplied."
                    },
                    "phone_format": {
                      "type": "string",
                      "title": "Phone Type",
                      "description": "In a phone field, the phone number type: US or International."
                    },
                    "date_format": {
                      "type": "string",
                      "title": "Date Type",
                      "description": "In a date or birthday field, the format of the date."
                    },
                    "choices": {
                      "type": "array",
                      "title": "Choices",
                      "description": "In a radio or dropdown non-group field, the available options for members to pick from.",
                      "example": [
                        "First Choice",
                        "Second Choice",
                        "Third Choice"
                      ]
                    },
                    "size": {
                      "type": "integer",
                      "title": "Text Field Size",
                      "description": "In a text field, the default length of the text field.",
                      "readOnly": true
                    }
                  }
                },
                "help_text": {
                  "type": "string",
                  "title": "Merge Field Help Text",
                  "description": "Extra text to help the subscriber fill out the form."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "A string that identifies this merge field collections' list.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a merge field",
        "description": "Delete a specific merge field in a list.",
        "operationId": "deleteListsIdMergeFieldsId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "$ref": "#/parameters/MergeID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/webhooks": {
      "get": {
        "summary": "Get information about all webhooks for a specific list",
        "description": "Get information about all webhooks for a specific list.",
        "operationId": "getListsIdWebhooks",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Webhooks",
              "description": "Manage webhooks for a specific list.",
              "properties": {
                "webhooks": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "List Webhooks",
                    "description": "Webhook configured for the given list.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Unique ID",
                        "description": "An string that uniquely identifies this webhook.",
                        "readOnly": true,
                        "example": "5d9a5e3f7b"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "A valid URL for the Webhook.",
                        "readOnly": true,
                        "example": "http://yourdomain.com/webhook"
                      },
                      "events": {
                        "type": "object",
                        "title": "Events",
                        "description": "The events that can trigger the webhook and whether they are enabled.",
                        "readOnly": true,
                        "properties": {
                          "subscribe": {
                            "type": "boolean",
                            "title": "Subscribed",
                            "description": "Whether the webhook is triggered when a list subscriber is added.",
                            "example": true
                          },
                          "unsubscribe": {
                            "type": "boolean",
                            "title": "Unsubscribed",
                            "description": "Whether the webhook is triggered when a list member unsubscribes.",
                            "example": true
                          },
                          "profile": {
                            "type": "boolean",
                            "title": "Profile Updated",
                            "description": "Whether the webhook is triggered when a subscriber's profile is updated.",
                            "example": true
                          },
                          "cleaned": {
                            "type": "boolean",
                            "title": "Cleaned",
                            "description": "Whether the webhook is triggered when a subscriber's email address is cleaned from the list.",
                            "example": true
                          },
                          "upemail": {
                            "type": "boolean",
                            "title": "Email Address Updated",
                            "description": "Whether the webhook is triggered when a subscriber's email address is changed.",
                            "example": true
                          },
                          "campaign": {
                            "type": "boolean",
                            "title": "Campaign Sent",
                            "description": "Whether the webhook is triggered when a campaign is sent or cancelled.",
                            "example": true
                          }
                        }
                      },
                      "sources": {
                        "type": "object",
                        "title": "Sources",
                        "description": "The possible sources of any events that can trigger the webhook and whether they are enabled.",
                        "readOnly": true,
                        "properties": {
                          "user": {
                            "type": "boolean",
                            "title": "User",
                            "description": "Whether the webhook is triggered by subscriber-initiated actions.",
                            "example": true
                          },
                          "admin": {
                            "type": "boolean",
                            "title": "Admin",
                            "description": "Whether the webhook is triggered by admin-initiated actions in the web interface.",
                            "example": true
                          },
                          "api": {
                            "type": "boolean",
                            "title": "API",
                            "description": "Whether the webhook is triggered by actions initiated via the API.",
                            "example": true
                          }
                        }
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique id for the list.",
                        "readOnly": true,
                        "example": "4ca5becb8d"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Webhooks",
                  "description": "An array of objects, each representing a specific list member."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new webhook",
        "description": "Create a new webhook for a specific list.",
        "operationId": "postListsIdWebhooks",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "title": "Add Webhook",
              "description": "Configure a webhook for the given list.",
              "properties": {
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "example": "http://yourdomain.com/webhook"
                },
                "events": {
                  "type": "object",
                  "title": "Events",
                  "description": "The events that can trigger the webhook and whether they are enabled.",
                  "properties": {
                    "subscribe": {
                      "type": "boolean",
                      "title": "Subscribed",
                      "description": "Whether the webhook is triggered when a list subscriber is added.",
                      "example": true
                    },
                    "unsubscribe": {
                      "type": "boolean",
                      "title": "Unsubscribed",
                      "description": "Whether the webhook is triggered when a list member unsubscribes.",
                      "example": true
                    },
                    "profile": {
                      "type": "boolean",
                      "title": "Profile Updated",
                      "description": "Whether the webhook is triggered when a subscriber's profile is updated.",
                      "example": true
                    },
                    "cleaned": {
                      "type": "boolean",
                      "title": "Cleaned",
                      "description": "Whether the webhook is triggered when a subscriber's email address is cleaned from the list.",
                      "example": true
                    },
                    "upemail": {
                      "type": "boolean",
                      "title": "Email Address Updated",
                      "description": "Whether the webhook is triggered when a subscriber's email address is changed.",
                      "example": true
                    },
                    "campaign": {
                      "type": "boolean",
                      "title": "Campaign Sent",
                      "description": "Whether the webhook is triggered when a campaign is sent or cancelled.",
                      "example": true
                    }
                  }
                },
                "sources": {
                  "type": "object",
                  "title": "Sources",
                  "description": "The possible sources of any events that can trigger the webhook and whether they are enabled.",
                  "properties": {
                    "user": {
                      "type": "boolean",
                      "title": "User",
                      "description": "Whether the webhook is triggered by subscriber-initiated actions.",
                      "example": true
                    },
                    "admin": {
                      "type": "boolean",
                      "title": "Admin",
                      "description": "Whether the webhook is triggered by admin-initiated actions in the web interface.",
                      "example": true
                    },
                    "api": {
                      "type": "boolean",
                      "title": "API",
                      "description": "Whether the webhook is triggered by actions initiated via the API.",
                      "example": true
                    }
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Webhooks",
              "description": "Webhook configured for the given list.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Unique ID",
                  "description": "An string that uniquely identifies this webhook.",
                  "readOnly": true,
                  "example": "5d9a5e3f7b"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": true,
                  "example": "http://yourdomain.com/webhook"
                },
                "events": {
                  "type": "object",
                  "title": "Events",
                  "description": "The events that can trigger the webhook and whether they are enabled.",
                  "readOnly": true,
                  "properties": {
                    "subscribe": {
                      "type": "boolean",
                      "title": "Subscribed",
                      "description": "Whether the webhook is triggered when a list subscriber is added.",
                      "example": true
                    },
                    "unsubscribe": {
                      "type": "boolean",
                      "title": "Unsubscribed",
                      "description": "Whether the webhook is triggered when a list member unsubscribes.",
                      "example": true
                    },
                    "profile": {
                      "type": "boolean",
                      "title": "Profile Updated",
                      "description": "Whether the webhook is triggered when a subscriber's profile is updated.",
                      "example": true
                    },
                    "cleaned": {
                      "type": "boolean",
                      "title": "Cleaned",
                      "description": "Whether the webhook is triggered when a subscriber's email address is cleaned from the list.",
                      "example": true
                    },
                    "upemail": {
                      "type": "boolean",
                      "title": "Email Address Updated",
                      "description": "Whether the webhook is triggered when a subscriber's email address is changed.",
                      "example": true
                    },
                    "campaign": {
                      "type": "boolean",
                      "title": "Campaign Sent",
                      "description": "Whether the webhook is triggered when a campaign is sent or cancelled.",
                      "example": true
                    }
                  }
                },
                "sources": {
                  "type": "object",
                  "title": "Sources",
                  "description": "The possible sources of any events that can trigger the webhook and whether they are enabled.",
                  "readOnly": true,
                  "properties": {
                    "user": {
                      "type": "boolean",
                      "title": "User",
                      "description": "Whether the webhook is triggered by subscriber-initiated actions.",
                      "example": true
                    },
                    "admin": {
                      "type": "boolean",
                      "title": "Admin",
                      "description": "Whether the webhook is triggered by admin-initiated actions in the web interface.",
                      "example": true
                    },
                    "api": {
                      "type": "boolean",
                      "title": "API",
                      "description": "Whether the webhook is triggered by actions initiated via the API.",
                      "example": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true,
                  "example": "4ca5becb8d"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/webhooks/{webhook_id}": {
      "get": {
        "summary": "Get information about a specific webhook",
        "description": "Get information about a specific webhook.",
        "operationId": "getListsIdWebhooksId",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Webhooks",
              "description": "Webhook configured for the given list.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Unique ID",
                  "description": "An string that uniquely identifies this webhook.",
                  "readOnly": true,
                  "example": "5d9a5e3f7b"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": true,
                  "example": "http://yourdomain.com/webhook"
                },
                "events": {
                  "type": "object",
                  "title": "Events",
                  "description": "The events that can trigger the webhook and whether they are enabled.",
                  "readOnly": true,
                  "properties": {
                    "subscribe": {
                      "type": "boolean",
                      "title": "Subscribed",
                      "description": "Whether the webhook is triggered when a list subscriber is added.",
                      "example": true
                    },
                    "unsubscribe": {
                      "type": "boolean",
                      "title": "Unsubscribed",
                      "description": "Whether the webhook is triggered when a list member unsubscribes.",
                      "example": true
                    },
                    "profile": {
                      "type": "boolean",
                      "title": "Profile Updated",
                      "description": "Whether the webhook is triggered when a subscriber's profile is updated.",
                      "example": true
                    },
                    "cleaned": {
                      "type": "boolean",
                      "title": "Cleaned",
                      "description": "Whether the webhook is triggered when a subscriber's email address is cleaned from the list.",
                      "example": true
                    },
                    "upemail": {
                      "type": "boolean",
                      "title": "Email Address Updated",
                      "description": "Whether the webhook is triggered when a subscriber's email address is changed.",
                      "example": true
                    },
                    "campaign": {
                      "type": "boolean",
                      "title": "Campaign Sent",
                      "description": "Whether the webhook is triggered when a campaign is sent or cancelled.",
                      "example": true
                    }
                  }
                },
                "sources": {
                  "type": "object",
                  "title": "Sources",
                  "description": "The possible sources of any events that can trigger the webhook and whether they are enabled.",
                  "readOnly": true,
                  "properties": {
                    "user": {
                      "type": "boolean",
                      "title": "User",
                      "description": "Whether the webhook is triggered by subscriber-initiated actions.",
                      "example": true
                    },
                    "admin": {
                      "type": "boolean",
                      "title": "Admin",
                      "description": "Whether the webhook is triggered by admin-initiated actions in the web interface.",
                      "example": true
                    },
                    "api": {
                      "type": "boolean",
                      "title": "API",
                      "description": "Whether the webhook is triggered by actions initiated via the API.",
                      "example": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true,
                  "example": "4ca5becb8d"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a webhook",
        "description": "Delete a specific webhook in a list.",
        "operationId": "deleteListsIdWebhooksId",
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a webhook",
        "description": "Update the settings for an existing webhook.",
        "operationId": "patchListsIdWebhooksId",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "title": "Add Webhook",
              "description": "Configure a webhook for the given list.",
              "properties": {
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "example": "http://yourdomain.com/webhook"
                },
                "events": {
                  "type": "object",
                  "title": "Events",
                  "description": "The events that can trigger the webhook and whether they are enabled.",
                  "properties": {
                    "subscribe": {
                      "type": "boolean",
                      "title": "Subscribed",
                      "description": "Whether the webhook is triggered when a list subscriber is added.",
                      "example": true
                    },
                    "unsubscribe": {
                      "type": "boolean",
                      "title": "Unsubscribed",
                      "description": "Whether the webhook is triggered when a list member unsubscribes.",
                      "example": true
                    },
                    "profile": {
                      "type": "boolean",
                      "title": "Profile Updated",
                      "description": "Whether the webhook is triggered when a subscriber's profile is updated.",
                      "example": true
                    },
                    "cleaned": {
                      "type": "boolean",
                      "title": "Cleaned",
                      "description": "Whether the webhook is triggered when a subscriber's email address is cleaned from the list.",
                      "example": true
                    },
                    "upemail": {
                      "type": "boolean",
                      "title": "Email Address Updated",
                      "description": "Whether the webhook is triggered when a subscriber's email address is changed.",
                      "example": true
                    },
                    "campaign": {
                      "type": "boolean",
                      "title": "Campaign Sent",
                      "description": "Whether the webhook is triggered when a campaign is sent or cancelled.",
                      "example": true
                    }
                  }
                },
                "sources": {
                  "type": "object",
                  "title": "Sources",
                  "description": "The possible sources of any events that can trigger the webhook and whether they are enabled.",
                  "properties": {
                    "user": {
                      "type": "boolean",
                      "title": "User",
                      "description": "Whether the webhook is triggered by subscriber-initiated actions.",
                      "example": true
                    },
                    "admin": {
                      "type": "boolean",
                      "title": "Admin",
                      "description": "Whether the webhook is triggered by admin-initiated actions in the web interface.",
                      "example": true
                    },
                    "api": {
                      "type": "boolean",
                      "title": "API",
                      "description": "Whether the webhook is triggered by actions initiated via the API.",
                      "example": true
                    }
                  }
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Webhooks",
              "description": "Webhook configured for the given list.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Unique ID",
                  "description": "An string that uniquely identifies this webhook.",
                  "readOnly": true,
                  "example": "5d9a5e3f7b"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "A valid URL for the Webhook.",
                  "readOnly": true,
                  "example": "http://yourdomain.com/webhook"
                },
                "events": {
                  "type": "object",
                  "title": "Events",
                  "description": "The events that can trigger the webhook and whether they are enabled.",
                  "readOnly": true,
                  "properties": {
                    "subscribe": {
                      "type": "boolean",
                      "title": "Subscribed",
                      "description": "Whether the webhook is triggered when a list subscriber is added.",
                      "example": true
                    },
                    "unsubscribe": {
                      "type": "boolean",
                      "title": "Unsubscribed",
                      "description": "Whether the webhook is triggered when a list member unsubscribes.",
                      "example": true
                    },
                    "profile": {
                      "type": "boolean",
                      "title": "Profile Updated",
                      "description": "Whether the webhook is triggered when a subscriber's profile is updated.",
                      "example": true
                    },
                    "cleaned": {
                      "type": "boolean",
                      "title": "Cleaned",
                      "description": "Whether the webhook is triggered when a subscriber's email address is cleaned from the list.",
                      "example": true
                    },
                    "upemail": {
                      "type": "boolean",
                      "title": "Email Address Updated",
                      "description": "Whether the webhook is triggered when a subscriber's email address is changed.",
                      "example": true
                    },
                    "campaign": {
                      "type": "boolean",
                      "title": "Campaign Sent",
                      "description": "Whether the webhook is triggered when a campaign is sent or cancelled.",
                      "example": true
                    }
                  }
                },
                "sources": {
                  "type": "object",
                  "title": "Sources",
                  "description": "The possible sources of any events that can trigger the webhook and whether they are enabled.",
                  "readOnly": true,
                  "properties": {
                    "user": {
                      "type": "boolean",
                      "title": "User",
                      "description": "Whether the webhook is triggered by subscriber-initiated actions.",
                      "example": true
                    },
                    "admin": {
                      "type": "boolean",
                      "title": "Admin",
                      "description": "Whether the webhook is triggered by admin-initiated actions in the web interface.",
                      "example": true
                    },
                    "api": {
                      "type": "boolean",
                      "title": "API",
                      "description": "Whether the webhook is triggered by actions initiated via the API.",
                      "example": true
                    }
                  }
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true,
                  "example": "4ca5becb8d"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/signup-forms": {
      "get": {
        "summary": "Get signup forms for a specific list",
        "description": "Get signup forms for a specific list.",
        "operationId": "getListsIdSignupForms",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Signup Forms",
              "description": "List Signup Forms.",
              "properties": {
                "signup_forms": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Signup Form",
                    "description": "List signup form.",
                    "properties": {
                      "header": {
                        "type": "object",
                        "title": "Signup form header options",
                        "description": "Options for customizing your signup form header.",
                        "properties": {
                          "image_url": {
                            "type": "string",
                            "title": "Header Image URL",
                            "description": "Header image URL.",
                            "example": "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
                          },
                          "text": {
                            "type": "string",
                            "title": "Header Text",
                            "description": "Header text.",
                            "example": "Header Text goes here"
                          },
                          "image_width": {
                            "type": "string",
                            "title": "Image width",
                            "description": "Image width, in pixels.",
                            "example": "800"
                          },
                          "image_height": {
                            "type": "string",
                            "title": "Image height",
                            "description": "Image height, in pixels.",
                            "example": "200"
                          },
                          "image_alt": {
                            "type": "string",
                            "title": "Image Alt",
                            "description": "Alt text for the image.",
                            "example": "This is an image"
                          },
                          "image_link": {
                            "type": "string",
                            "title": "Image Link",
                            "description": "The URL that the header image will link to.",
                            "example": "gotothisimage.com"
                          },
                          "image_align": {
                            "type": "string",
                            "title": "Image align",
                            "description": "Image alignment.",
                            "enum": [
                              "none",
                              "left",
                              "center",
                              "right"
                            ],
                            "example": "center"
                          },
                          "image_border_width": {
                            "type": "string",
                            "title": "Image border width",
                            "description": "Image border width.",
                            "example": "2"
                          },
                          "image_border_style": {
                            "type": "string",
                            "title": "Image border style",
                            "description": "Image border style.",
                            "enum": [
                              "none",
                              "solid",
                              "dotted",
                              "dashed",
                              "double",
                              "groove",
                              "outset",
                              "inset",
                              "ridge"
                            ],
                            "example": "solid"
                          },
                          "image_border_color": {
                            "type": "string",
                            "title": "Image border color",
                            "description": "Image border color.",
                            "example": "#896d6d"
                          },
                          "image_target": {
                            "type": "string",
                            "title": "Image target",
                            "description": "Image link target.",
                            "enum": [
                              "_blank",
                              "null"
                            ],
                            "example": "_blank"
                          }
                        }
                      },
                      "contents": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/SignupFormContent"
                        },
                        "title": "Signup form body content",
                        "description": "The signup form body content."
                      },
                      "styles": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/SignupFormStyleOptions"
                        },
                        "title": "Signup Form element style",
                        "description": "An array of objects, each representing an element style for the signup form."
                      },
                      "signup_form_url": {
                        "type": "string",
                        "title": "Signup form URL",
                        "description": "Signup form URL."
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The signup form's list id.",
                        "readOnly": true,
                        "example": "4ca5becb8d"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "List Signup Form",
                  "description": "List signup form."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Customize the signup form settings for a specific list",
        "description": "Customize a list's default signup form.",
        "operationId": "postListsIdSignupForms",
        "parameters": [
          {
            "$ref": "#/parameters/ListID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "schema": {
              "type": "object",
              "title": "Signup Form",
              "description": "List signup form.",
              "properties": {
                "header": {
                  "type": "object",
                  "title": "Signup form header options",
                  "description": "Options for customizing your signup form header.",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Header Image URL",
                      "description": "Header image URL.",
                      "example": "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
                    },
                    "text": {
                      "type": "string",
                      "title": "Header Text",
                      "description": "Header text.",
                      "example": "Header Text goes here"
                    },
                    "image_width": {
                      "type": "string",
                      "title": "Image width",
                      "description": "Image width, in pixels.",
                      "example": "800"
                    },
                    "image_height": {
                      "type": "string",
                      "title": "Image height",
                      "description": "Image height, in pixels.",
                      "example": "200"
                    },
                    "image_alt": {
                      "type": "string",
                      "title": "Image Alt",
                      "description": "Alt text for the image.",
                      "example": "This is an image"
                    },
                    "image_link": {
                      "type": "string",
                      "title": "Image Link",
                      "description": "The URL that the header image will link to.",
                      "example": "gotothisimage.com"
                    },
                    "image_align": {
                      "type": "string",
                      "title": "Image align",
                      "description": "Image alignment.",
                      "enum": [
                        "none",
                        "left",
                        "center",
                        "right"
                      ],
                      "example": "center"
                    },
                    "image_border_width": {
                      "type": "string",
                      "title": "Image border width",
                      "description": "Image border width.",
                      "example": "2"
                    },
                    "image_border_style": {
                      "type": "string",
                      "title": "Image border style",
                      "description": "Image border style.",
                      "enum": [
                        "none",
                        "solid",
                        "dotted",
                        "dashed",
                        "double",
                        "groove",
                        "outset",
                        "inset",
                        "ridge"
                      ],
                      "example": "solid"
                    },
                    "image_border_color": {
                      "type": "string",
                      "title": "Image border color",
                      "description": "Image border color.",
                      "example": "#896d6d"
                    },
                    "image_target": {
                      "type": "string",
                      "title": "Image target",
                      "description": "Image link target.",
                      "enum": [
                        "_blank",
                        "null"
                      ],
                      "example": "_blank"
                    }
                  }
                },
                "contents": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SignupFormContent"
                  },
                  "title": "Signup form body content",
                  "description": "The signup form body content."
                },
                "styles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SignupFormStyleOptions"
                  },
                  "title": "Signup Form element style",
                  "description": "An array of objects, each representing an element style for the signup form."
                }
              }
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Signup Form",
              "description": "List signup form.",
              "properties": {
                "header": {
                  "type": "object",
                  "title": "Signup form header options",
                  "description": "Options for customizing your signup form header.",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "title": "Header Image URL",
                      "description": "Header image URL.",
                      "example": "http://gallery.mailchimp.com/332310cb9a420a9e7fea2858a/images/2491208c-9458-4834-a708-fef4ee736472.png"
                    },
                    "text": {
                      "type": "string",
                      "title": "Header Text",
                      "description": "Header text.",
                      "example": "Header Text goes here"
                    },
                    "image_width": {
                      "type": "string",
                      "title": "Image width",
                      "description": "Image width, in pixels.",
                      "example": "800"
                    },
                    "image_height": {
                      "type": "string",
                      "title": "Image height",
                      "description": "Image height, in pixels.",
                      "example": "200"
                    },
                    "image_alt": {
                      "type": "string",
                      "title": "Image Alt",
                      "description": "Alt text for the image.",
                      "example": "This is an image"
                    },
                    "image_link": {
                      "type": "string",
                      "title": "Image Link",
                      "description": "The URL that the header image will link to.",
                      "example": "gotothisimage.com"
                    },
                    "image_align": {
                      "type": "string",
                      "title": "Image align",
                      "description": "Image alignment.",
                      "enum": [
                        "none",
                        "left",
                        "center",
                        "right"
                      ],
                      "example": "center"
                    },
                    "image_border_width": {
                      "type": "string",
                      "title": "Image border width",
                      "description": "Image border width.",
                      "example": "2"
                    },
                    "image_border_style": {
                      "type": "string",
                      "title": "Image border style",
                      "description": "Image border style.",
                      "enum": [
                        "none",
                        "solid",
                        "dotted",
                        "dashed",
                        "double",
                        "groove",
                        "outset",
                        "inset",
                        "ridge"
                      ],
                      "example": "solid"
                    },
                    "image_border_color": {
                      "type": "string",
                      "title": "Image border color",
                      "description": "Image border color.",
                      "example": "#896d6d"
                    },
                    "image_target": {
                      "type": "string",
                      "title": "Image target",
                      "description": "Image link target.",
                      "enum": [
                        "_blank",
                        "null"
                      ],
                      "example": "_blank"
                    }
                  }
                },
                "contents": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SignupFormContent"
                  },
                  "title": "Signup form body content",
                  "description": "The signup form body content."
                },
                "styles": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SignupFormStyleOptions"
                  },
                  "title": "Signup Form element style",
                  "description": "An array of objects, each representing an element style for the signup form."
                },
                "signup_form_url": {
                  "type": "string",
                  "title": "Signup form URL",
                  "description": "Signup form URL."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The signup form's list id.",
                  "readOnly": true,
                  "example": "4ca5becb8d"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/lists/{list_id}/locations": {
      "get": {
        "summary": "Get list locations",
        "description": "Get the locations (countries) that the list's subscribers have been tagged to based on geocoding their IP address.",
        "operationId": "getListsIdLocations",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/ListID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "List Locations",
              "description": "A summary of List's locations.",
              "properties": {
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "List Location",
                    "properties": {
                      "country": {
                        "type": "string",
                        "title": "Country Name",
                        "description": "The name of the country.",
                        "readonly": true
                      },
                      "cc": {
                        "type": "string",
                        "title": "cc",
                        "description": "The ISO 3166 2 digit country code.",
                        "readonly": true
                      },
                      "percent": {
                        "type": "number",
                        "title": "percent",
                        "description": "The percent of subscribers in the country.",
                        "readonly": true
                      },
                      "total": {
                        "type": "integer",
                        "title": "total",
                        "description": "The total number of subscribers in the country.",
                        "readonly": true
                      }
                    }
                  },
                  "title": "Locations",
                  "description": "An array of objects, each representing a list's top subscriber locations."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/mobile-notification-preferences": {
      "get": {
        "summary": "Get information about mobile push notification preferences",
        "description": "All of a user's mobile push notification preferences by device.",
        "operationId": "getMobileNotificationPreferences",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Notification Preferences",
              "description": "All of a user's mobile push notification preferences.",
              "properties": {
                "mobile_notification_preferences": {
                  "type": "array",
                  "title": "Mobile Notification Preferences",
                  "description": "An array of objects, each representing preferences by device.",
                  "items": {
                    "type": "object",
                    "title": "Mobile Device Push Notification Preferences",
                    "description": "Information about a specific device's preferences for push notifications.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Hashed ID",
                        "description": "MD5 hash of the lower case device ID.",
                        "readOnly": true
                      },
                      "device_id": {
                        "type": "string",
                        "title": "Device ID",
                        "description": "A unique identifier for the device.",
                        "readOnly": false
                      },
                      "type_campaign_sent": {
                        "type": "boolean",
                        "title": "Type: Campaign Sent",
                        "description": "Whether this device has Campaign Sent notifications turned on.",
                        "readOnly": false
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add mobile notification preferences",
        "description": "Add mobile push notification preferences for a device.",
        "operationId": "postMobileNotificationPreferences",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Add Mobile Notification Preferences",
              "description": "Add mobile push notification preferences for a device.",
              "required": [
                "device_id",
                "type_campaign_sent"
              ],
              "properties": {
                "device_id": {
                  "type": "string",
                  "title": "Device ID",
                  "description": "A unique, case-insensitive identifier for the device."
                },
                "type_campaign_sent": {
                  "type": "boolean",
                  "title": "Type: Campaign Sent",
                  "description": "Whether this device has Campaign Sent notifications turned on."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Device Push Notification Preferences",
              "description": "Information about a specific device's preferences for push notifications.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Hashed ID",
                  "description": "MD5 hash of the lower case device ID.",
                  "readOnly": true
                },
                "device_id": {
                  "type": "string",
                  "title": "Device ID",
                  "description": "A unique identifier for the device.",
                  "readOnly": false
                },
                "type_campaign_sent": {
                  "type": "boolean",
                  "title": "Type: Campaign Sent",
                  "description": "Whether this device has Campaign Sent notifications turned on.",
                  "readOnly": false
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/mobile-notification-preferences/{device_hash}": {
      "get": {
        "summary": "Get information about a specific device's mobile push notification preferences",
        "description": "Get information about a specific device's mobile push notification preferences.",
        "operationId": "getMobileNotificationPreferencesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/DeviceHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Device Push Notification Preferences",
              "description": "Information about a specific device's preferences for push notifications.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Hashed ID",
                  "description": "MD5 hash of the lower case device ID.",
                  "readOnly": true
                },
                "device_id": {
                  "type": "string",
                  "title": "Device ID",
                  "description": "A unique identifier for the device.",
                  "readOnly": false
                },
                "type_campaign_sent": {
                  "type": "boolean",
                  "title": "Type: Campaign Sent",
                  "description": "Whether this device has Campaign Sent notifications turned on.",
                  "readOnly": false
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "create_if_needed": {
        "summary": "Creating mobile notification preferences if none exist",
        "description": "Create default mobile notification preferences if user has not specified any.",
        "operationId": "postMobileNotificationPreferencesIdActionsCreateIfNeeded",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceHash"
          },
          {
            "in": "body",
            "name": "device_id",
            "title": "Device ID",
            "type": "string",
            "required": true,
            "description": "A unique identifier for the device."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update mobile notification preferences",
        "description": "Update mobile push notification preferences for a device.",
        "operationId": "patchMobileNotificationPreferencesId",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceHash"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Update Mobile Notification Preferences",
              "description": "Update mobile push notification preferences for a device.",
              "properties": {
                "type_campaign_sent": {
                  "type": "boolean",
                  "title": "Type: Campaign Sent",
                  "description": "Whether this device has Campaign Sent notifications turned on."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Device Push Notification Preferences",
              "description": "Information about a specific device's preferences for push notifications.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Hashed ID",
                  "description": "MD5 hash of the lower case device ID.",
                  "readOnly": true
                },
                "device_id": {
                  "type": "string",
                  "title": "Device ID",
                  "description": "A unique identifier for the device.",
                  "readOnly": false
                },
                "type_campaign_sent": {
                  "type": "boolean",
                  "title": "Type: Campaign Sent",
                  "description": "Whether this device has Campaign Sent notifications turned on.",
                  "readOnly": false
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete mobile notification preferences",
        "description": "Delete mobile push notification preferences for a device.",
        "operationId": "deleteMobileNotificationPreferencesId",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceHash"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/mobile-notification-preferences/{device_hash}/actions/create-if-needed": {
      "post": {
        "summary": "Creating mobile notification preferences if none exist",
        "description": "Create default mobile notification preferences if user has not specified any.",
        "operationId": "postMobileNotificationPreferencesIdActionsCreateIfNeeded",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceHash"
          },
          {
            "in": "body",
            "name": "device_id",
            "title": "Device ID",
            "type": "string",
            "required": true,
            "description": "A unique identifier for the device."
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/mobile-notification-preferences/{device_hash}/stores": {
      "get": {
        "summary": "Get information about push notifications preferences for all stores",
        "description": "All of a device's push notifications preferences for each store.",
        "operationId": "getMobileNotificationPreferencesIdStores",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/DeviceHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Notification Preferences for Each Store",
              "description": "All of a device's preferences for e-commerce related push notifications.",
              "properties": {
                "store_preferences": {
                  "type": "array",
                  "title": "Mobile Notification Preferences by Store",
                  "description": "An array of objects, each representing preferences by store for this device.",
                  "items": {
                    "type": "object",
                    "title": "Mobile Notification Preferences for a Store",
                    "description": "Information about a device's preferences for push notifications regarding an e-commerce store.",
                    "properties": {
                      "store": {
                        "type": "object",
                        "title": "Store",
                        "description": "The store these notification preferences are for.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Store ID",
                            "description": "The foreign ID of the store.",
                            "readonly": false
                          },
                          "name": {
                            "type": "string",
                            "title": "Store Name",
                            "description": "The name of the store.",
                            "readonly": true
                          }
                        },
                        "readonly": true
                      },
                      "type_instant_order": {
                        "type": "boolean",
                        "title": "Type: Instant Order",
                        "description": "Whether this device and store has Instant Order notifications turned on. These notifications tell you when an order was made from a MailChimp outreach.",
                        "readOnly": false
                      },
                      "type_daily_order_summary": {
                        "type": "boolean",
                        "title": "Type: Daily Order Summary",
                        "description": "Whether this device and store has Daily Order Summary notifications turned on. These notifications tell you a summary the previous day's revenue from your MailChimp outreaches.",
                        "readOnly": false
                      },
                      "device_hash": {
                        "type": "string",
                        "title": "Hashed Device ID",
                        "description": "MD5 hash of the lower case device ID.",
                        "readOnly": true
                      },
                      "device_id": {
                        "type": "string",
                        "title": "Device ID",
                        "description": "The ID of the device.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add mobile notification preferences for an e-commerce store",
        "description": "Add mobile push notification preferences for an e-commerce store.",
        "operationId": "postMobileNotificationPreferencesIdStores",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceHash"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Add Mobile Notification Preferences for a Store",
              "description": "Add mobile push notification preferences for an e-commerce store.",
              "required": [
                "store",
                "type_instant_order",
                "type_daily_order_summary"
              ],
              "properties": {
                "store": {
                  "type": "object",
                  "title": "Store",
                  "description": "The store these notification preferences are for.",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The foreign ID of the store."
                    }
                  }
                },
                "type_instant_order": {
                  "type": "boolean",
                  "title": "Type: Instant Order",
                  "description": "Whether this device and store has Instant Order notifications turned on. These notifications tell you when an order was made from a MailChimp outreach."
                },
                "type_daily_order_summary": {
                  "type": "boolean",
                  "title": "Type: Daily Order Summary",
                  "description": "Whether this device and store has Daily Order Summary notifications turned on. These notifications tell you a summary the previous day's revenue from your MailChimp outreaches."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Notification Preferences for a Store",
              "description": "Information about a device's preferences for push notifications regarding an e-commerce store.",
              "properties": {
                "store": {
                  "type": "object",
                  "title": "Store",
                  "description": "The store these notification preferences are for.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The foreign ID of the store.",
                      "readonly": false
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "readonly": true
                    }
                  },
                  "readonly": true
                },
                "type_instant_order": {
                  "type": "boolean",
                  "title": "Type: Instant Order",
                  "description": "Whether this device and store has Instant Order notifications turned on. These notifications tell you when an order was made from a MailChimp outreach.",
                  "readOnly": false
                },
                "type_daily_order_summary": {
                  "type": "boolean",
                  "title": "Type: Daily Order Summary",
                  "description": "Whether this device and store has Daily Order Summary notifications turned on. These notifications tell you a summary the previous day's revenue from your MailChimp outreaches.",
                  "readOnly": false
                },
                "device_hash": {
                  "type": "string",
                  "title": "Hashed Device ID",
                  "description": "MD5 hash of the lower case device ID.",
                  "readOnly": true
                },
                "device_id": {
                  "type": "string",
                  "title": "Device ID",
                  "description": "The ID of the device.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/mobile-notification-preferences/{device_hash}/stores/{store_id}": {
      "get": {
        "summary": "Get information about a specific device's mobile push notification preferences for a store",
        "description": "Get information about a device's preferences for push notifications regarding an e-commerce store.",
        "operationId": "getMobileNotificationPreferencesIdStoresId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/DeviceHash"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Notification Preferences for a Store",
              "description": "Information about a device's preferences for push notifications regarding an e-commerce store.",
              "properties": {
                "store": {
                  "type": "object",
                  "title": "Store",
                  "description": "The store these notification preferences are for.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The foreign ID of the store.",
                      "readonly": false
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "readonly": true
                    }
                  },
                  "readonly": true
                },
                "type_instant_order": {
                  "type": "boolean",
                  "title": "Type: Instant Order",
                  "description": "Whether this device and store has Instant Order notifications turned on. These notifications tell you when an order was made from a MailChimp outreach.",
                  "readOnly": false
                },
                "type_daily_order_summary": {
                  "type": "boolean",
                  "title": "Type: Daily Order Summary",
                  "description": "Whether this device and store has Daily Order Summary notifications turned on. These notifications tell you a summary the previous day's revenue from your MailChimp outreaches.",
                  "readOnly": false
                },
                "device_hash": {
                  "type": "string",
                  "title": "Hashed Device ID",
                  "description": "MD5 hash of the lower case device ID.",
                  "readOnly": true
                },
                "device_id": {
                  "type": "string",
                  "title": "Device ID",
                  "description": "The ID of the device.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update mobile notification preferences for an e-commerce store",
        "description": "Update mobile push notification preferences for an e-commerce store.",
        "operationId": "patchMobileNotificationPreferencesIdStoresId",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceHash"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Update Mobile Notification Preferences for a Store",
              "description": "Update mobile push notification preferences for an e-commerce store.",
              "properties": {
                "type_instant_order": {
                  "type": "boolean",
                  "title": "Type: Instant Order",
                  "description": "Whether this device and store has Instant Order notifications turned on. These notifications tell you when an order was made from a MailChimp outreach."
                },
                "type_daily_order_summary": {
                  "type": "boolean",
                  "title": "Type: Daily Order Summary",
                  "description": "Whether this device and store has Daily Order Summary notifications turned on. These notifications tell you a summary the previous day's revenue from your MailChimp outreaches."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Mobile Notification Preferences for a Store",
              "description": "Information about a device's preferences for push notifications regarding an e-commerce store.",
              "properties": {
                "store": {
                  "type": "object",
                  "title": "Store",
                  "description": "The store these notification preferences are for.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Store ID",
                      "description": "The foreign ID of the store.",
                      "readonly": false
                    },
                    "name": {
                      "type": "string",
                      "title": "Store Name",
                      "description": "The name of the store.",
                      "readonly": true
                    }
                  },
                  "readonly": true
                },
                "type_instant_order": {
                  "type": "boolean",
                  "title": "Type: Instant Order",
                  "description": "Whether this device and store has Instant Order notifications turned on. These notifications tell you when an order was made from a MailChimp outreach.",
                  "readOnly": false
                },
                "type_daily_order_summary": {
                  "type": "boolean",
                  "title": "Type: Daily Order Summary",
                  "description": "Whether this device and store has Daily Order Summary notifications turned on. These notifications tell you a summary the previous day's revenue from your MailChimp outreaches.",
                  "readOnly": false
                },
                "device_hash": {
                  "type": "string",
                  "title": "Hashed Device ID",
                  "description": "MD5 hash of the lower case device ID.",
                  "readOnly": true
                },
                "device_id": {
                  "type": "string",
                  "title": "Device ID",
                  "description": "The ID of the device.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete mobile notification preferences for an e-commerce store",
        "description": "Delete mobile push notification preferences for an e-commerce store.",
        "operationId": "deleteMobileNotificationPreferencesIdStoresId",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceHash"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports": {
      "get": {
        "summary": "Get campaign reports",
        "description": "Get campaign reports.",
        "operationId": "getReports",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignType"
          },
          {
            "$ref": "#/parameters/CampaignSendTime_Before"
          },
          {
            "$ref": "#/parameters/CampaignSendTime_Since"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Reports",
              "description": "A list of reports containing campaigns marked as Sent.",
              "properties": {
                "reports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Campaign Report",
                    "description": "Report details about a sent campaign.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "A string that uniquely identifies this campaign."
                      },
                      "campaign_title": {
                        "type": "string",
                        "title": "Campaign Title",
                        "description": "The title of the campaign.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "title": "Campaign Type",
                        "description": "The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto)."
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique list id.",
                        "readOnly": true
                      },
                      "list_name": {
                        "type": "string",
                        "title": "List Name",
                        "description": "The name of the list.",
                        "readOnly": true
                      },
                      "subject_line": {
                        "type": "string",
                        "title": "Campaign Subject Line",
                        "description": "The subject line for the campaign.",
                        "readOnly": true
                      },
                      "preview_text": {
                        "type": "string",
                        "title": "Campaign Preview Text",
                        "description": "The preview text for the campaign."
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Emails Sent",
                        "description": "The total number of emails sent for this campaign."
                      },
                      "abuse_reports": {
                        "type": "integer",
                        "title": "Abuse Reports",
                        "description": "The number of abuse reports generated for this campaign."
                      },
                      "unsubscribed": {
                        "type": "integer",
                        "title": "Unsubscribe Count",
                        "description": "The total number of unsubscribed members for this campaign.",
                        "readOnly": true
                      },
                      "send_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Send Time",
                        "description": "The date and time a campaign was sent.",
                        "readOnly": true
                      },
                      "rss_last_send": {
                        "type": "string",
                        "format": "date-time",
                        "title": "RSS Last Send",
                        "description": "For RSS campaigns, the date and time of the last send",
                        "readOnly": true
                      },
                      "bounces": {
                        "type": "object",
                        "title": "Bounces",
                        "description": "An object describing the bounce summary for the campaign.",
                        "properties": {
                          "hard_bounces": {
                            "type": "integer",
                            "title": "Hard Bounces",
                            "description": "The total number of hard bounced email addresses."
                          },
                          "soft_bounces": {
                            "type": "integer",
                            "title": "Soft Bounces",
                            "description": "The total number of soft bounced email addresses."
                          },
                          "syntax_errors": {
                            "type": "integer",
                            "title": "Syntax Errors",
                            "description": "The total number of addresses that were syntax-related bounces."
                          }
                        }
                      },
                      "forwards": {
                        "type": "object",
                        "title": "Forwards",
                        "description": "An object describing the forwards and forward activity for the campaign.",
                        "properties": {
                          "forwards_count": {
                            "type": "integer",
                            "title": "Total Forwards",
                            "description": "How many times the campaign has been forwarded."
                          },
                          "forwards_opens": {
                            "type": "integer",
                            "title": "Forward Opens",
                            "description": "How many times the forwarded campaign has been opened."
                          }
                        }
                      },
                      "opens": {
                        "type": "object",
                        "title": "Opens",
                        "description": "An object describing the open activity for the campaign.",
                        "properties": {
                          "opens_total": {
                            "type": "integer",
                            "title": "Total Opens",
                            "description": "The total number of opens for a campaign."
                          },
                          "unique_opens": {
                            "type": "integer",
                            "title": "Unique Opens",
                            "description": "The total number of unique opens."
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The number of unique opens divided by the total number of successful deliveries."
                          },
                          "last_open": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Last Open",
                            "description": "The date and time of the last recorded open."
                          }
                        }
                      },
                      "clicks": {
                        "type": "object",
                        "title": "Clicks",
                        "description": "An object describing the click activity for the campaign.",
                        "properties": {
                          "clicks_total": {
                            "type": "integer",
                            "title": "Total Clicks",
                            "description": "The total number of clicks for the campaign."
                          },
                          "unique_clicks": {
                            "type": "integer",
                            "title": "Unique Clicks",
                            "description": "The total number of unique clicks for links across a campaign."
                          },
                          "unique_subscriber_clicks": {
                            "type": "integer",
                            "title": "Unique Subscriber Clicks",
                            "description": "The total number of subscribers who clicked on a campaign."
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The number of unique clicks divided by the total number of successful deliveries."
                          },
                          "last_click": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Last Click",
                            "description": "The date and time of the last recorded click for the campaign."
                          }
                        }
                      },
                      "facebook_likes": {
                        "type": "object",
                        "title": "Facebook Likes",
                        "description": "An object describing campaign engagement on Facebook.",
                        "properties": {
                          "recipient_likes": {
                            "type": "integer",
                            "title": "Recipient Likes",
                            "description": "The number of recipients who liked the campaign on Facebook."
                          },
                          "unique_likes": {
                            "type": "integer",
                            "title": "Unique Likes",
                            "description": "The number of unique likes."
                          },
                          "facebook_likes": {
                            "type": "integer",
                            "title": "Facebook Likes",
                            "description": "The number of Facebook likes for the campaign."
                          }
                        }
                      },
                      "industry_stats": {
                        "type": "object",
                        "title": "Industry Stats",
                        "description": "The average campaign statistics for your industry.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Industry Type",
                            "description": "The type of business industry associated with your account. For example: retail, education, etc."
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The industry open rate."
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The industry click rate."
                          },
                          "bounce_rate": {
                            "type": "number",
                            "title": "Bounce Rate",
                            "description": "The industry bounce rate."
                          },
                          "unopen_rate": {
                            "type": "number",
                            "title": "Unopened Rate",
                            "description": "The industry unopened rate."
                          },
                          "unsub_rate": {
                            "type": "number",
                            "title": "Unsubscribe Rate",
                            "description": "The industry unsubscribe rate."
                          },
                          "abuse_rate": {
                            "type": "number",
                            "title": "Abuse Rate",
                            "description": "The industry abuse rate."
                          }
                        }
                      },
                      "list_stats": {
                        "type": "object",
                        "title": "Industry Stats",
                        "description": "The average campaign statistics for your industry. This won't be present if we haven't calculated it yet for this list.",
                        "properties": {
                          "sub_rate": {
                            "type": "number",
                            "title": "Average Subscription Rate",
                            "description": "The average number of subscriptions per month for the list.",
                            "readOnly": true
                          },
                          "unsub_rate": {
                            "type": "number",
                            "title": "Average Unsubscription Rate",
                            "description": "The average number of unsubscriptions per month for the list.",
                            "readOnly": true
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list.",
                            "readOnly": true
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list.",
                            "readOnly": true
                          }
                        }
                      },
                      "ab_split": {
                        "type": "object",
                        "title": "A/B Split Stats",
                        "description": "General stats about different groups of an A/B Split campaign. Does not return information about [MailChimp Pro's Multivariate Campaigns](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "properties": {
                          "a": {
                            "type": "object",
                            "title": "Campaign A",
                            "description": "Stats for Campaign A.",
                            "properties": {
                              "bounces": {
                                "type": "integer",
                                "title": "Bounces",
                                "description": "Bounces for Campaign A."
                              },
                              "abuse_reports": {
                                "type": "integer",
                                "title": "Abuse Reports",
                                "description": "Abuse reports for Campaign A."
                              },
                              "unsubs": {
                                "type": "integer",
                                "title": "Unsubscribes",
                                "description": "Unsubscribes for Campaign A."
                              },
                              "recipient_clicks": {
                                "type": "integer",
                                "title": "Recipient Clicks",
                                "description": "Recipient Clicks for Campaign A."
                              },
                              "forwards": {
                                "type": "integer",
                                "title": "Forwards",
                                "description": "Forwards for Campaign A."
                              },
                              "forwards_opens": {
                                "type": "integer",
                                "title": "Forward Opens",
                                "description": "Opens from forwards for Campaign A."
                              },
                              "opens": {
                                "type": "integer",
                                "title": "Opens",
                                "description": "Opens for Campaign A."
                              },
                              "last_open": {
                                "type": "string",
                                "title": "Last Open",
                                "description": "The last open for Campaign A."
                              },
                              "unique_opens": {
                                "type": "integer",
                                "title": "Unique Opens",
                                "description": "Unique opens for Campaign A."
                              }
                            }
                          },
                          "b": {
                            "type": "object",
                            "title": "Campaign B",
                            "description": "Stats for Campaign B.",
                            "properties": {
                              "bounces": {
                                "type": "integer",
                                "title": "Bounces",
                                "description": "Bounces for Campaign B."
                              },
                              "abuse_reports": {
                                "type": "integer",
                                "title": "Abuse Reports",
                                "description": "Abuse reports for Campaign B."
                              },
                              "unsubs": {
                                "type": "integer",
                                "title": "Unsubscribes",
                                "description": "Unsubscribes for Campaign B."
                              },
                              "recipient_clicks": {
                                "type": "integer",
                                "title": "Recipient Clicks",
                                "description": "Recipients clicks for Campaign B."
                              },
                              "forwards": {
                                "type": "integer",
                                "title": "Forwards",
                                "description": "Forwards for Campaign B."
                              },
                              "forwards_opens": {
                                "type": "integer",
                                "title": "Forward Opens",
                                "description": "Opens for forwards from Campaign B."
                              },
                              "opens": {
                                "type": "integer",
                                "title": "Opens",
                                "description": "Opens for Campaign B."
                              },
                              "last_open": {
                                "type": "string",
                                "title": "Last Open",
                                "description": "The last open for Campaign B."
                              },
                              "unique_opens": {
                                "type": "integer",
                                "title": "Unique Opens",
                                "description": "Unique opens for Campaign B."
                              }
                            }
                          }
                        }
                      },
                      "timewarp": {
                        "type": "array",
                        "title": "Timewarp Stats",
                        "description": "An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "gmt_offset": {
                              "type": "integer",
                              "title": "GMT Offset",
                              "description": "For campaigns sent with timewarp, the time zone group the member is apart of."
                            },
                            "opens": {
                              "type": "integer",
                              "title": "Opens",
                              "description": "The number of opens."
                            },
                            "last_open": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Last Open",
                              "description": "The date and time of the last open."
                            },
                            "unique_opens": {
                              "type": "integer",
                              "title": "Unique Opens",
                              "description": "The number of unique opens."
                            },
                            "clicks": {
                              "type": "integer",
                              "title": "Clicks",
                              "description": "The number of clicks."
                            },
                            "last_click": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Last Click",
                              "description": "The date and time of the last click."
                            },
                            "unique_clicks": {
                              "type": "integer",
                              "title": "Unique Clicks",
                              "description": "The number of unique clicks."
                            },
                            "bounces": {
                              "type": "integer",
                              "title": "Bounces",
                              "description": "The number of bounces."
                            }
                          }
                        }
                      },
                      "timeseries": {
                        "type": "array",
                        "title": "Timeseries",
                        "description": "An hourly breakdown of the performance of the campaign over the first 24 hours.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Timestamp",
                              "description": "The date and time for the series."
                            },
                            "emails_sent": {
                              "type": "integer",
                              "title": "Emails Sent",
                              "description": "The number of emails sent in the timeseries."
                            },
                            "unique_opens": {
                              "type": "integer",
                              "title": "Unique Opens",
                              "description": "The number of unique opens in the timeseries."
                            },
                            "recipients_clicks": {
                              "type": "integer",
                              "title": "Recipient Clicks",
                              "description": "The number of clicks in the timeseries."
                            }
                          }
                        }
                      },
                      "share_report": {
                        "type": "object",
                        "title": "Share Report",
                        "description": "The url and password for the [VIP report](http://kb.mailchimp.com/reports/email-a-report-to-a-client?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "properties": {
                          "share_url": {
                            "type": "string",
                            "title": "Report URL",
                            "description": "The URL for the VIP report.",
                            "readOnly": true
                          },
                          "share_password": {
                            "type": "string",
                            "title": "Report Password",
                            "description": "If password protected, the password for the VIP report.",
                            "readOnly": true
                          }
                        }
                      },
                      "ecommerce": {
                        "type": "object",
                        "title": "E-Commerce Report",
                        "description": "E-Commerce stats for a campaign.",
                        "properties": {
                          "total_orders": {
                            "type": "integer",
                            "title": "Total Orders",
                            "description": "The total orders for a campaign.",
                            "readOnly": true
                          },
                          "total_spent": {
                            "type": "number",
                            "title": "Total Spent",
                            "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                            "readOnly": true
                          },
                          "total_revenue": {
                            "type": "number",
                            "title": "Total Revenue",
                            "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                            "readOnly": true
                          }
                        }
                      },
                      "delivery_status": {
                        "$ref": "#/definitions/DeliveryStatus"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Lists",
                  "description": "An array of objects, each representing a report resource."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}": {
      "get": {
        "summary": "Get a specific campaign report",
        "description": "Get report details for a specific sent campaign.",
        "operationId": "getReportsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Report",
              "description": "Report details about a sent campaign.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies this campaign."
                },
                "campaign_title": {
                  "type": "string",
                  "title": "Campaign Title",
                  "description": "The title of the campaign.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "title": "Campaign Type",
                  "description": "The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto)."
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique list id.",
                  "readOnly": true
                },
                "list_name": {
                  "type": "string",
                  "title": "List Name",
                  "description": "The name of the list.",
                  "readOnly": true
                },
                "subject_line": {
                  "type": "string",
                  "title": "Campaign Subject Line",
                  "description": "The subject line for the campaign.",
                  "readOnly": true
                },
                "preview_text": {
                  "type": "string",
                  "title": "Campaign Preview Text",
                  "description": "The preview text for the campaign."
                },
                "emails_sent": {
                  "type": "integer",
                  "title": "Emails Sent",
                  "description": "The total number of emails sent for this campaign."
                },
                "abuse_reports": {
                  "type": "integer",
                  "title": "Abuse Reports",
                  "description": "The number of abuse reports generated for this campaign."
                },
                "unsubscribed": {
                  "type": "integer",
                  "title": "Unsubscribe Count",
                  "description": "The total number of unsubscribed members for this campaign.",
                  "readOnly": true
                },
                "send_time": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Send Time",
                  "description": "The date and time a campaign was sent.",
                  "readOnly": true
                },
                "rss_last_send": {
                  "type": "string",
                  "format": "date-time",
                  "title": "RSS Last Send",
                  "description": "For RSS campaigns, the date and time of the last send",
                  "readOnly": true
                },
                "bounces": {
                  "type": "object",
                  "title": "Bounces",
                  "description": "An object describing the bounce summary for the campaign.",
                  "properties": {
                    "hard_bounces": {
                      "type": "integer",
                      "title": "Hard Bounces",
                      "description": "The total number of hard bounced email addresses."
                    },
                    "soft_bounces": {
                      "type": "integer",
                      "title": "Soft Bounces",
                      "description": "The total number of soft bounced email addresses."
                    },
                    "syntax_errors": {
                      "type": "integer",
                      "title": "Syntax Errors",
                      "description": "The total number of addresses that were syntax-related bounces."
                    }
                  }
                },
                "forwards": {
                  "type": "object",
                  "title": "Forwards",
                  "description": "An object describing the forwards and forward activity for the campaign.",
                  "properties": {
                    "forwards_count": {
                      "type": "integer",
                      "title": "Total Forwards",
                      "description": "How many times the campaign has been forwarded."
                    },
                    "forwards_opens": {
                      "type": "integer",
                      "title": "Forward Opens",
                      "description": "How many times the forwarded campaign has been opened."
                    }
                  }
                },
                "opens": {
                  "type": "object",
                  "title": "Opens",
                  "description": "An object describing the open activity for the campaign.",
                  "properties": {
                    "opens_total": {
                      "type": "integer",
                      "title": "Total Opens",
                      "description": "The total number of opens for a campaign."
                    },
                    "unique_opens": {
                      "type": "integer",
                      "title": "Unique Opens",
                      "description": "The total number of unique opens."
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The number of unique opens divided by the total number of successful deliveries."
                    },
                    "last_open": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Last Open",
                      "description": "The date and time of the last recorded open."
                    }
                  }
                },
                "clicks": {
                  "type": "object",
                  "title": "Clicks",
                  "description": "An object describing the click activity for the campaign.",
                  "properties": {
                    "clicks_total": {
                      "type": "integer",
                      "title": "Total Clicks",
                      "description": "The total number of clicks for the campaign."
                    },
                    "unique_clicks": {
                      "type": "integer",
                      "title": "Unique Clicks",
                      "description": "The total number of unique clicks for links across a campaign."
                    },
                    "unique_subscriber_clicks": {
                      "type": "integer",
                      "title": "Unique Subscriber Clicks",
                      "description": "The total number of subscribers who clicked on a campaign."
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The number of unique clicks divided by the total number of successful deliveries."
                    },
                    "last_click": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Last Click",
                      "description": "The date and time of the last recorded click for the campaign."
                    }
                  }
                },
                "facebook_likes": {
                  "type": "object",
                  "title": "Facebook Likes",
                  "description": "An object describing campaign engagement on Facebook.",
                  "properties": {
                    "recipient_likes": {
                      "type": "integer",
                      "title": "Recipient Likes",
                      "description": "The number of recipients who liked the campaign on Facebook."
                    },
                    "unique_likes": {
                      "type": "integer",
                      "title": "Unique Likes",
                      "description": "The number of unique likes."
                    },
                    "facebook_likes": {
                      "type": "integer",
                      "title": "Facebook Likes",
                      "description": "The number of Facebook likes for the campaign."
                    }
                  }
                },
                "industry_stats": {
                  "type": "object",
                  "title": "Industry Stats",
                  "description": "The average campaign statistics for your industry.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "title": "Industry Type",
                      "description": "The type of business industry associated with your account. For example: retail, education, etc."
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The industry open rate."
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The industry click rate."
                    },
                    "bounce_rate": {
                      "type": "number",
                      "title": "Bounce Rate",
                      "description": "The industry bounce rate."
                    },
                    "unopen_rate": {
                      "type": "number",
                      "title": "Unopened Rate",
                      "description": "The industry unopened rate."
                    },
                    "unsub_rate": {
                      "type": "number",
                      "title": "Unsubscribe Rate",
                      "description": "The industry unsubscribe rate."
                    },
                    "abuse_rate": {
                      "type": "number",
                      "title": "Abuse Rate",
                      "description": "The industry abuse rate."
                    }
                  }
                },
                "list_stats": {
                  "type": "object",
                  "title": "Industry Stats",
                  "description": "The average campaign statistics for your industry. This won't be present if we haven't calculated it yet for this list.",
                  "properties": {
                    "sub_rate": {
                      "type": "number",
                      "title": "Average Subscription Rate",
                      "description": "The average number of subscriptions per month for the list.",
                      "readOnly": true
                    },
                    "unsub_rate": {
                      "type": "number",
                      "title": "Average Unsubscription Rate",
                      "description": "The average number of unsubscriptions per month for the list.",
                      "readOnly": true
                    },
                    "open_rate": {
                      "type": "number",
                      "title": "Open Rate",
                      "description": "The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list.",
                      "readOnly": true
                    },
                    "click_rate": {
                      "type": "number",
                      "title": "Click Rate",
                      "description": "The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list.",
                      "readOnly": true
                    }
                  }
                },
                "ab_split": {
                  "type": "object",
                  "title": "A/B Split Stats",
                  "description": "General stats about different groups of an A/B Split campaign. Does not return information about [MailChimp Pro's Multivariate Campaigns](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "a": {
                      "type": "object",
                      "title": "Campaign A",
                      "description": "Stats for Campaign A.",
                      "properties": {
                        "bounces": {
                          "type": "integer",
                          "title": "Bounces",
                          "description": "Bounces for Campaign A."
                        },
                        "abuse_reports": {
                          "type": "integer",
                          "title": "Abuse Reports",
                          "description": "Abuse reports for Campaign A."
                        },
                        "unsubs": {
                          "type": "integer",
                          "title": "Unsubscribes",
                          "description": "Unsubscribes for Campaign A."
                        },
                        "recipient_clicks": {
                          "type": "integer",
                          "title": "Recipient Clicks",
                          "description": "Recipient Clicks for Campaign A."
                        },
                        "forwards": {
                          "type": "integer",
                          "title": "Forwards",
                          "description": "Forwards for Campaign A."
                        },
                        "forwards_opens": {
                          "type": "integer",
                          "title": "Forward Opens",
                          "description": "Opens from forwards for Campaign A."
                        },
                        "opens": {
                          "type": "integer",
                          "title": "Opens",
                          "description": "Opens for Campaign A."
                        },
                        "last_open": {
                          "type": "string",
                          "title": "Last Open",
                          "description": "The last open for Campaign A."
                        },
                        "unique_opens": {
                          "type": "integer",
                          "title": "Unique Opens",
                          "description": "Unique opens for Campaign A."
                        }
                      }
                    },
                    "b": {
                      "type": "object",
                      "title": "Campaign B",
                      "description": "Stats for Campaign B.",
                      "properties": {
                        "bounces": {
                          "type": "integer",
                          "title": "Bounces",
                          "description": "Bounces for Campaign B."
                        },
                        "abuse_reports": {
                          "type": "integer",
                          "title": "Abuse Reports",
                          "description": "Abuse reports for Campaign B."
                        },
                        "unsubs": {
                          "type": "integer",
                          "title": "Unsubscribes",
                          "description": "Unsubscribes for Campaign B."
                        },
                        "recipient_clicks": {
                          "type": "integer",
                          "title": "Recipient Clicks",
                          "description": "Recipients clicks for Campaign B."
                        },
                        "forwards": {
                          "type": "integer",
                          "title": "Forwards",
                          "description": "Forwards for Campaign B."
                        },
                        "forwards_opens": {
                          "type": "integer",
                          "title": "Forward Opens",
                          "description": "Opens for forwards from Campaign B."
                        },
                        "opens": {
                          "type": "integer",
                          "title": "Opens",
                          "description": "Opens for Campaign B."
                        },
                        "last_open": {
                          "type": "string",
                          "title": "Last Open",
                          "description": "The last open for Campaign B."
                        },
                        "unique_opens": {
                          "type": "integer",
                          "title": "Unique Opens",
                          "description": "Unique opens for Campaign B."
                        }
                      }
                    }
                  }
                },
                "timewarp": {
                  "type": "array",
                  "title": "Timewarp Stats",
                  "description": "An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "gmt_offset": {
                        "type": "integer",
                        "title": "GMT Offset",
                        "description": "For campaigns sent with timewarp, the time zone group the member is apart of."
                      },
                      "opens": {
                        "type": "integer",
                        "title": "Opens",
                        "description": "The number of opens."
                      },
                      "last_open": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Open",
                        "description": "The date and time of the last open."
                      },
                      "unique_opens": {
                        "type": "integer",
                        "title": "Unique Opens",
                        "description": "The number of unique opens."
                      },
                      "clicks": {
                        "type": "integer",
                        "title": "Clicks",
                        "description": "The number of clicks."
                      },
                      "last_click": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Click",
                        "description": "The date and time of the last click."
                      },
                      "unique_clicks": {
                        "type": "integer",
                        "title": "Unique Clicks",
                        "description": "The number of unique clicks."
                      },
                      "bounces": {
                        "type": "integer",
                        "title": "Bounces",
                        "description": "The number of bounces."
                      }
                    }
                  }
                },
                "timeseries": {
                  "type": "array",
                  "title": "Timeseries",
                  "description": "An hourly breakdown of the performance of the campaign over the first 24 hours.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Timestamp",
                        "description": "The date and time for the series."
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Emails Sent",
                        "description": "The number of emails sent in the timeseries."
                      },
                      "unique_opens": {
                        "type": "integer",
                        "title": "Unique Opens",
                        "description": "The number of unique opens in the timeseries."
                      },
                      "recipients_clicks": {
                        "type": "integer",
                        "title": "Recipient Clicks",
                        "description": "The number of clicks in the timeseries."
                      }
                    }
                  }
                },
                "share_report": {
                  "type": "object",
                  "title": "Share Report",
                  "description": "The url and password for the [VIP report](http://kb.mailchimp.com/reports/email-a-report-to-a-client?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "share_url": {
                      "type": "string",
                      "title": "Report URL",
                      "description": "The URL for the VIP report.",
                      "readOnly": true
                    },
                    "share_password": {
                      "type": "string",
                      "title": "Report Password",
                      "description": "If password protected, the password for the VIP report.",
                      "readOnly": true
                    }
                  }
                },
                "ecommerce": {
                  "type": "object",
                  "title": "E-Commerce Report",
                  "description": "E-Commerce stats for a campaign.",
                  "properties": {
                    "total_orders": {
                      "type": "integer",
                      "title": "Total Orders",
                      "description": "The total orders for a campaign.",
                      "readOnly": true
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                      "readOnly": true
                    },
                    "total_revenue": {
                      "type": "number",
                      "title": "Total Revenue",
                      "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                      "readOnly": true
                    }
                  }
                },
                "delivery_status": {
                  "$ref": "#/definitions/DeliveryStatus"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/abuse-reports": {
      "get": {
        "summary": "Get abuse complaints for a campaign",
        "description": "Get a list of [abuse complaints](http://kb.mailchimp.com/accounts/compliance-tips/about-abuse-complaints?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for a specific campaign.",
        "operationId": "getReportsIdAbuseReportsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Abuse Complaints",
              "description": "A list of abuse complaints for a specific list.",
              "properties": {
                "abuse_reports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Abuse Complaint",
                    "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "Abuse Report ID",
                        "description": "The id for the abuse report",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The campaign id for the abuse report",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id for the abuse report.",
                        "readOnly": true
                      },
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "readOnly": true,
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                        "readOnly": true
                      },
                      "date": {
                        "type": "string",
                        "title": "Date",
                        "description": "Date for the abuse report",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Abuse Reports",
                  "description": "An array of objects, each representing an abuse report resource."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/abuse-reports/{report_id}": {
      "get": {
        "summary": "Get information about a specific abuse report",
        "description": "Get information about a specific abuse report for a campaign.",
        "operationId": "getReportsIdAbuseReportsIdId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/AbuseReportID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Abuse Complaint",
              "description": "Details of abuse complaints for a specific list. An abuse complaint occurs when your recipient clicks to 'report spam' in their email program.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Abuse Report ID",
                  "description": "The id for the abuse report",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id for the abuse report",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id for the abuse report.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "readOnly": true,
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                  "readOnly": true
                },
                "date": {
                  "type": "string",
                  "title": "Date",
                  "description": "Date for the abuse report",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/advice": {
      "get": {
        "summary": "Get campaign feedback",
        "description": "Get feedback based on a campaign's statistics. Advice feedback is based on campaign stats like opens, clicks, unsubscribes, bounces, and more.",
        "operationId": "getReportsIdAdvice",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Advice Report",
              "description": "A list of feedback based on a campaign's statistics.",
              "properties": {
                "advice": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Campaign Advice",
                    "description": "Campaign feedback details.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "title": "Advice Type",
                        "description": "The sentiment type for a feedback message.",
                        "enum": [
                          "negative",
                          "positive",
                          "neutral"
                        ],
                        "readOnly": true
                      },
                      "message": {
                        "type": "string",
                        "title": "Advice Message",
                        "description": "The advice message.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Campaign Advice",
                  "description": "An array of objects, each representing a point of campaign feedback."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/click-details": {
      "get": {
        "summary": "Get campaign click details",
        "description": "Get information about [clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) on specific links in your MailChimp campaigns.",
        "operationId": "getReportsIdClickDetails",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Click Detail Report",
              "description": "A list of URLs and unique IDs included in HTML and plain-text versions of a campaign.",
              "properties": {
                "urls_clicked": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Click Detail Report",
                    "description": "A report of links clicked in a specific campaign.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "URL ID",
                        "description": "The unique id for the link.",
                        "readOnly": true
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for the link in the campaign.",
                        "readOnly": true
                      },
                      "total_clicks": {
                        "type": "integer",
                        "title": "Total Clicks",
                        "description": "The number of total clicks for a link.",
                        "readOnly": true
                      },
                      "click_percentage": {
                        "type": "number",
                        "title": "Click Percentage",
                        "description": "The percentage of total clicks a link generated for a campaign.",
                        "readOnly": true
                      },
                      "unique_clicks": {
                        "type": "integer",
                        "title": "Unique Clicks",
                        "description": "Number of unique clicks for a link.",
                        "readOnly": true
                      },
                      "unique_click_percentage": {
                        "type": "number",
                        "title": "Unique Click Percentage",
                        "description": "The percentage of unique clicks a link generated for a campaign.",
                        "readOnly": true
                      },
                      "last_click": {
                        "type": "string",
                        "title": "Last Click",
                        "description": "The date and time for the last recorded click for a link.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "ab_split": {
                        "type": "object",
                        "title": "A/B Split",
                        "description": "A breakdown of clicks by different groups of an A/B Split campaign. Does not return information about [MailChimp Pro's Multivariate Campaigns](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "properties": {
                          "a": {
                            "type": "object",
                            "title": "Group A",
                            "description": "Stats for Group A.",
                            "properties": {
                              "total_clicks_a": {
                                "type": "integer",
                                "title": "Total Clicks Group A",
                                "description": "The total number of clicks for Group A.",
                                "readOnly": true
                              },
                              "click_percentage_a": {
                                "type": "number",
                                "title": "Click Percentage Group A",
                                "description": "The percentage of total clicks for Group A.",
                                "readOnly": true
                              },
                              "unique_clicks_a": {
                                "type": "integer",
                                "title": "Unique Clicks Group A",
                                "description": "The number of unique clicks for Group A.",
                                "readOnly": true
                              },
                              "unique_click_percentage_a": {
                                "type": "number",
                                "title": "Unique Click Percentage Group A",
                                "description": "The percentage of unique clicks for Group A.",
                                "readOnly": true
                              }
                            }
                          },
                          "b": {
                            "type": "object",
                            "title": "Group B",
                            "description": "Stats for Group B.",
                            "properties": {
                              "total_clicks_b": {
                                "type": "integer",
                                "title": "Total Clicks Group B",
                                "description": "The total number of clicks for Group B.",
                                "readOnly": true
                              },
                              "click_percentage_b": {
                                "type": "number",
                                "title": "Click Percentage Group B",
                                "description": "The percentage of total clicks for Group B.",
                                "readOnly": true
                              },
                              "unique_clicks_b": {
                                "type": "integer",
                                "title": "Unique Clicks Group B",
                                "description": "The number of unique clicks for Group B.",
                                "readOnly": true
                              },
                              "unique_click_percentage_b": {
                                "type": "number",
                                "title": "Unique Click Percentage Group B",
                                "description": "The percentage of unique clicks for Group B.",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The campaign id.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Abuse Reports",
                  "description": "An array of objects, each representing a specific URL contained in the campaign."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/click-details/{link_id}": {
      "get": {
        "summary": "Get click details for a specific link",
        "description": "Get click details for a specific link in a campaign.",
        "operationId": "getReportsIdClickDetailsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/LinkID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Click Detail Report",
              "description": "A report of links clicked in a specific campaign.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "URL ID",
                  "description": "The unique id for the link.",
                  "readOnly": true
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for the link in the campaign.",
                  "readOnly": true
                },
                "total_clicks": {
                  "type": "integer",
                  "title": "Total Clicks",
                  "description": "The number of total clicks for a link.",
                  "readOnly": true
                },
                "click_percentage": {
                  "type": "number",
                  "title": "Click Percentage",
                  "description": "The percentage of total clicks a link generated for a campaign.",
                  "readOnly": true
                },
                "unique_clicks": {
                  "type": "integer",
                  "title": "Unique Clicks",
                  "description": "Number of unique clicks for a link.",
                  "readOnly": true
                },
                "unique_click_percentage": {
                  "type": "number",
                  "title": "Unique Click Percentage",
                  "description": "The percentage of unique clicks a link generated for a campaign.",
                  "readOnly": true
                },
                "last_click": {
                  "type": "string",
                  "title": "Last Click",
                  "description": "The date and time for the last recorded click for a link.",
                  "format": "date-time",
                  "readOnly": true
                },
                "ab_split": {
                  "type": "object",
                  "title": "A/B Split",
                  "description": "A breakdown of clicks by different groups of an A/B Split campaign. Does not return information about [MailChimp Pro's Multivariate Campaigns](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "properties": {
                    "a": {
                      "type": "object",
                      "title": "Group A",
                      "description": "Stats for Group A.",
                      "properties": {
                        "total_clicks_a": {
                          "type": "integer",
                          "title": "Total Clicks Group A",
                          "description": "The total number of clicks for Group A.",
                          "readOnly": true
                        },
                        "click_percentage_a": {
                          "type": "number",
                          "title": "Click Percentage Group A",
                          "description": "The percentage of total clicks for Group A.",
                          "readOnly": true
                        },
                        "unique_clicks_a": {
                          "type": "integer",
                          "title": "Unique Clicks Group A",
                          "description": "The number of unique clicks for Group A.",
                          "readOnly": true
                        },
                        "unique_click_percentage_a": {
                          "type": "number",
                          "title": "Unique Click Percentage Group A",
                          "description": "The percentage of unique clicks for Group A.",
                          "readOnly": true
                        }
                      }
                    },
                    "b": {
                      "type": "object",
                      "title": "Group B",
                      "description": "Stats for Group B.",
                      "properties": {
                        "total_clicks_b": {
                          "type": "integer",
                          "title": "Total Clicks Group B",
                          "description": "The total number of clicks for Group B.",
                          "readOnly": true
                        },
                        "click_percentage_b": {
                          "type": "number",
                          "title": "Click Percentage Group B",
                          "description": "The percentage of total clicks for Group B.",
                          "readOnly": true
                        },
                        "unique_clicks_b": {
                          "type": "integer",
                          "title": "Unique Clicks Group B",
                          "description": "The number of unique clicks for Group B.",
                          "readOnly": true
                        },
                        "unique_click_percentage_b": {
                          "type": "number",
                          "title": "Unique Click Percentage Group B",
                          "description": "The percentage of unique clicks for Group B.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/click-details/{link_id}/members": {
      "get": {
        "summary": "Get information about subscribers who clicked a link",
        "description": "Get information about list members who clicked on a specific link in a campaign.",
        "operationId": "getReportsIdClickDetailsIdMembers",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/LinkID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Click Detail Members",
              "description": "A collection of members who clicked on a specific link within a campaign.",
              "properties": {
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Click Detail Member",
                    "description": "A subscriber who clicked a specific URL in a specific campaign.",
                    "properties": {
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "readOnly": true,
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                        "readOnly": true
                      },
                      "clicks": {
                        "type": "integer",
                        "title": "Total Clicks",
                        "description": "The total number of times the subscriber clicked on the link.",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The campaign id.",
                        "readOnly": true
                      },
                      "url_id": {
                        "type": "string",
                        "title": "URL ID",
                        "description": "The id for the tracked URL in the campaign.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Lists",
                  "description": "An array of objects, each representing a member who clicked a specific link within a campaign."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/click-details/{link_id}/members/{subscriber_hash}": {
      "get": {
        "summary": "Get information about a specific subscriber who clicked a link",
        "description": "Get information about a specific subscriber who clicked a link in a specific campaign.",
        "operationId": "getReportsIdClickDetailsIdMembersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/LinkID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Click Detail Member",
              "description": "A subscriber who clicked a specific URL in a specific campaign.",
              "properties": {
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "readOnly": true,
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                  "readOnly": true
                },
                "clicks": {
                  "type": "integer",
                  "title": "Total Clicks",
                  "description": "The total number of times the subscriber clicked on the link.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "url_id": {
                  "type": "string",
                  "title": "URL ID",
                  "description": "The id for the tracked URL in the campaign.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/open-details": {
      "get": {
        "summary": "Get campaign Open details",
        "description": "Get detailed information about any campaign emails that were opened by a list member.",
        "operationId": "getReportsIdOpenDetails",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/OpenDetails_Since"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Open Detail Report",
              "description": "A detailed report of any campaign emails that were opened by a list member.",
              "properties": {
                "members": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Open Activity",
                    "description": "A list of a member's opens activity in a specific campaign.",
                    "properties": {
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The unique id for the campaign.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique id for the list.",
                        "readOnly": true
                      },
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "readOnly": true,
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                        "readOnly": true
                      },
                      "opens_count": {
                        "type": "integer",
                        "title": "Opens count",
                        "description": "The total number of times the this campaign was opened by the list member.",
                        "readOnly": true
                      },
                      "opens": {
                        "type": "array",
                        "title": "Time series data of opens activity",
                        "description": "An array of timestamps for each time a list member opened the campaign. If a list member opens an email multiple times, this will return a separate timestamp for each open event.",
                        "items": {
                          "type": "object",
                          "title": "Member Activity",
                          "description": "A summary of the interaction with the campaign.",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "title": "Timestamp",
                              "description": "The date and time recorded for the action.",
                              "format": "date-time"
                            }
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Open Reports",
                  "description": "An array of objects, each representing a list member who opened a campaign email. Each members object will contain information about the number of total opens by a single member, as well as timestamps for each open event."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_opens": {
                  "type": "integer",
                  "title": "Total opens",
                  "description": "The total number of opens matching the query regardless of pagination."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/open-details/{subscriber_hash}": {
      "get": {
        "summary": "Get information about a specific subscriber who opened a campaign",
        "description": "Get information about a specific subscriber who opened a campaign.",
        "operationId": "getReportsIdOpenDetailsIdMembersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Open Activity",
              "description": "A list of a member's opens activity in a specific campaign.",
              "properties": {
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "readOnly": true,
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                  "readOnly": true
                },
                "opens_count": {
                  "type": "integer",
                  "title": "Opens count",
                  "description": "The total number of times the this campaign was opened by the list member.",
                  "readOnly": true
                },
                "opens": {
                  "type": "array",
                  "title": "Time series data of opens activity",
                  "description": "An array of timestamps for each time a list member opened the campaign. If a list member opens an email multiple times, this will return a separate timestamp for each open event.",
                  "items": {
                    "type": "object",
                    "title": "Member Activity",
                    "description": "A summary of the interaction with the campaign.",
                    "properties": {
                      "timestamp": {
                        "type": "string",
                        "title": "Timestamp",
                        "description": "The date and time recorded for the action.",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/domain-performance": {
      "get": {
        "summary": "Get domain performance stats",
        "description": "Get statistics for the top-performing email domains in a campaign.",
        "operationId": "getReportsIdDomainPerformance",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Domain Performance",
              "description": "Statistics for the top-performing email domains in a campaign.",
              "properties": {
                "domains": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Email Domain",
                    "description": "A single email domain's performance",
                    "properties": {
                      "domain": {
                        "type": "string",
                        "title": "Domain",
                        "description": "The name of the domain (gmail.com, hotmail.com, yahoo.com).",
                        "readOnly": true
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Total Sent",
                        "description": "The number of emails sent to that specific domain.",
                        "readOnly": true
                      },
                      "bounces": {
                        "type": "integer",
                        "title": "Bounces",
                        "description": "The number of bounces at a domain.",
                        "readOnly": true
                      },
                      "opens": {
                        "type": "integer",
                        "title": "Opens",
                        "description": "The number of opens for a domain.",
                        "readOnly": true
                      },
                      "clicks": {
                        "type": "integer",
                        "title": "Clicks",
                        "description": "The number of clicks for a domain.",
                        "readOnly": true
                      },
                      "unsubs": {
                        "type": "integer",
                        "title": "Unsubscribes",
                        "description": "The total number of unsubscribes for a domain.",
                        "readOnly": true
                      },
                      "delivered": {
                        "type": "integer",
                        "title": "Successful Deliveries",
                        "description": "The number of successful deliveries for a domain.",
                        "readOnly": true
                      },
                      "emails_pct": {
                        "type": "number",
                        "title": "Email Percent",
                        "description": "The percentage of total emails that went to this domain.",
                        "readOnly": true
                      },
                      "bounces_pct": {
                        "type": "number",
                        "title": "Bounces Percent",
                        "description": "The percentage of total bounces from this domain.",
                        "readOnly": true
                      },
                      "opens_pct": {
                        "type": "number",
                        "title": "Opens Percent",
                        "description": "The percentage of total opens from this domain.",
                        "readOnly": true
                      },
                      "clicks_pct": {
                        "type": "number",
                        "title": "Clicks Percent",
                        "description": "The percentage of total clicks from this domain.",
                        "readOnly": true
                      },
                      "unsubs_pct": {
                        "type": "number",
                        "title": "Unsubscribes Percent",
                        "description": "The percentage of total unsubscribes from this domain.",
                        "readOnly": true
                      }
                    }
                  },
                  "title": "Lists",
                  "description": "The top 5 email domains based on total delivered emails.",
                  "readOnly": true
                },
                "total_sent": {
                  "type": "integer",
                  "title": "Total Sent",
                  "description": "The total number of emails sent for the campaign.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/eepurl": {
      "get": {
        "summary": "Get Eepurl activity",
        "description": "Get a summary of social activity for the campaign, tracked by EepURL.",
        "operationId": "getReportsIdEepurl",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Eepurl Activity",
              "description": "A summary of social activity for the campaign, tracked by EepURL.",
              "properties": {
                "twitter": {
                  "type": "object",
                  "title": "Twitter Stats",
                  "description": "A summary of Twitter activity for a campaign.",
                  "properties": {
                    "tweets": {
                      "type": "integer",
                      "title": "Tweet Count",
                      "description": "The number of tweets including a link to the campaign.",
                      "readOnly": true
                    },
                    "first_tweet": {
                      "type": "string",
                      "title": "First Tweet Timestamp",
                      "description": "The day and time of the first recorded tweet with a link to the campaign.",
                      "readOnly": true
                    },
                    "last_tweet": {
                      "type": "string",
                      "title": "Last Tweet Timestamp",
                      "description": "The day and time of the last recorded tweet with a link to the campaign.",
                      "readOnly": true
                    },
                    "retweets": {
                      "type": "integer",
                      "title": "Retweet Count",
                      "description": "The number of retweets that include a link to the campaign.",
                      "readOnly": true
                    },
                    "statuses": {
                      "type": "array",
                      "title": "Twitter Status",
                      "description": "A summary of tweets that include a link to the campaign.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "title": "Twitter Status",
                        "description": "An individual tweet.",
                        "properties": {
                          "status": {
                            "type": "string",
                            "title": "Status Body",
                            "description": "The body of the tweet.",
                            "readOnly": true
                          },
                          "screen_name": {
                            "type": "string",
                            "title": "Screen Name",
                            "description": "The Twitter handle for the author of the tweet.",
                            "readOnly": true
                          },
                          "status_id": {
                            "type": "string",
                            "title": "Status ID",
                            "description": "The individual id for the tweet.",
                            "readOnly": true
                          },
                          "datetime": {
                            "type": "string",
                            "title": "Datetime",
                            "description": "A timestamp for the tweet.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "is_retweet": {
                            "type": "boolean",
                            "title": "Is Retweet",
                            "description": "A 'true' or 'false' status of whether the tweet is a retweet.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                },
                "clicks": {
                  "type": "object",
                  "title": "Click Summary",
                  "description": "A summary of the click-throughs on the campaign's URL.",
                  "readOnly": true,
                  "properties": {
                    "clicks": {
                      "type": "integer",
                      "title": "Clicks",
                      "description": "The total number of clicks to the campaign's URL.",
                      "readOnly": true
                    },
                    "first_click": {
                      "type": "string",
                      "title": "First Click",
                      "description": "The timestamp for the first click to the URL.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "last_click": {
                      "type": "string",
                      "title": "Last Click",
                      "description": "The timestamp for the last click to the URL.",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "locations": {
                      "type": "array",
                      "title": "Click Locations",
                      "description": "A summary of the top click locations.",
                      "readOnly": true,
                      "items": {
                        "type": "object",
                        "title": "Location",
                        "description": "An individual click location.",
                        "properties": {
                          "country": {
                            "type": "string",
                            "title": "Country",
                            "description": "The two-digit country code for a recorded click."
                          },
                          "region": {
                            "type": "string",
                            "title": "Region",
                            "description": "If available, a specific region where the click was recorded.",
                            "example": "NY"
                          }
                        }
                      }
                    }
                  }
                },
                "referrers": {
                  "type": "array",
                  "tile": "Referrers",
                  "description": "A summary of the top referrers for the campaign.",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "title": "Referrer",
                    "description": "A single instance of a campaign referral.",
                    "properties": {
                      "referrer": {
                        "type": "string",
                        "title": "Referrer",
                        "description": "A referrer (truncated to 100 bytes)."
                      },
                      "clicks": {
                        "type": "integer",
                        "title": "Clicks",
                        "description": "The number of clicks a single referrer generated."
                      },
                      "first_click": {
                        "type": "string",
                        "title": "First Click",
                        "description": "The timestamp for the first click from this referrer.",
                        "format": "date-time"
                      },
                      "last_click": {
                        "type": "string",
                        "title": "Last Click",
                        "description": "The timestamp for the last click from this referrer.",
                        "format": "date-time"
                      }
                    }
                  }
                },
                "eepurl": {
                  "type": "string",
                  "title": "Eepurl",
                  "description": "The shortened link used for tracking.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/email-activity": {
      "get": {
        "summary": "Get email activity",
        "description": "Get a list of member's subscriber activity in a specific campaign.",
        "operationId": "getReportsIdEmailActivity",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Email Activity",
              "description": "A list of member's subscriber activity in a specific campaign.",
              "properties": {
                "emails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Email Activity",
                    "description": "A list of a member's subscriber activity in a specific campaign, including opens, clicks, and bounces.",
                    "properties": {
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The unique id for the campaign.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique id for the list.",
                        "readOnly": true
                      },
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "activity": {
                        "type": "array",
                        "title": "Member Activity",
                        "description": "An array of objects, each showing an interaction with the email.",
                        "items": {
                          "type": "object",
                          "title": "Member Activity",
                          "description": "A summary of the interaction with the campaign.",
                          "properties": {
                            "action": {
                              "type": "string",
                              "title": "Action",
                              "description": "One of the following actions: 'open', 'click', or 'bounce'"
                            },
                            "type": {
                              "type": "string",
                              "title": "Type",
                              "description": "If the action is a 'bounce', the type of bounce received: 'hard', 'soft'."
                            },
                            "timestamp": {
                              "type": "string",
                              "title": "Timestamp",
                              "description": "The date and time recorded for the action.",
                              "format": "date-time"
                            },
                            "url": {
                              "type": "string",
                              "title": "URL",
                              "description": "If the action is a 'click', the URL on which the member clicked."
                            },
                            "ip": {
                              "type": "string",
                              "title": "IP",
                              "description": "The IP address recorded for the action."
                            }
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Sent To",
                  "description": "An array of objects, each representing a member who opened a campaign."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the sent campaign.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/email-activity/{subscriber_hash}": {
      "get": {
        "summary": "Get email activity for a specific subscriber",
        "description": "Get a specific list member's activity in a campaign including opens, clicks, and bounces.",
        "operationId": "getReportsIdEmailActivityId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          },
          {
            "$ref": "#/parameters/EmailActivity_Since"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Email Activity",
              "description": "A list of a member's subscriber activity in a specific campaign, including opens, clicks, and bounces.",
              "properties": {
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique id for the list.",
                  "readOnly": true
                },
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "activity": {
                  "type": "array",
                  "title": "Member Activity",
                  "description": "An array of objects, each showing an interaction with the email.",
                  "items": {
                    "type": "object",
                    "title": "Member Activity",
                    "description": "A summary of the interaction with the campaign.",
                    "properties": {
                      "action": {
                        "type": "string",
                        "title": "Action",
                        "description": "One of the following actions: 'open', 'click', or 'bounce'"
                      },
                      "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "If the action is a 'bounce', the type of bounce received: 'hard', 'soft'."
                      },
                      "timestamp": {
                        "type": "string",
                        "title": "Timestamp",
                        "description": "The date and time recorded for the action.",
                        "format": "date-time"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "If the action is a 'click', the URL on which the member clicked."
                      },
                      "ip": {
                        "type": "string",
                        "title": "IP",
                        "description": "The IP address recorded for the action."
                      }
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/google-analytics": {
      "get": {
        "summary": "Get Google Analytics reports for a campaign",
        "description": "Get information about any [Google Analytics reporting](http://kb.mailchimp.com/integrations/e-commerce/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for a specific campaign.",
        "operationId": "getReportsIdGoogleAnalytics",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Google Analytics",
              "description": "A summary of the Google Analytics data for a campaign.  Google Analytics will need to be enabled for both the MailChimp account and as an additional tracking parameter in the campaign.  Some stats may take up to 24 hours to fully populate.",
              "properties": {
                "analytics": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Google Analytics",
                    "description": "A summary of Google Analytics data for a campaign.",
                    "properties": {
                      "analytics_profileId": {
                        "type": "string",
                        "title": "Profile ID",
                        "description": "The Google Analytics View ID.",
                        "readOnly": true
                      },
                      "analytics_webPropertyId": {
                        "type": "string",
                        "title": "Property ID",
                        "description": "The Google Analytics Web Property ID.",
                        "readOnly": true
                      },
                      "analytics_accountId": {
                        "type": "string",
                        "title": "Property ID",
                        "description": "The Google Analytics Account ID.",
                        "readOnly": true
                      },
                      "analytics_profileName": {
                        "type": "string",
                        "title": "Property ID",
                        "description": "The Google Analytics Profile Name.",
                        "readOnly": true
                      },
                      "analytics_title": {
                        "type": "string",
                        "title": "Property ID",
                        "description": "The Google Analytics Title.",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The unique id for the campaign.",
                        "readonly": true,
                        "example": "839488a60b"
                      },
                      "visits": {
                        "type": "integer",
                        "title": "Visits",
                        "description": "The number of visits generated by the campaign.",
                        "readonly": true,
                        "example": 42
                      },
                      "page_views": {
                        "type": "integer",
                        "title": "Pages",
                        "description": "The number of page views generated by the campaign.",
                        "readonly": true,
                        "example": 42
                      },
                      "new_visits": {
                        "type": "integer",
                        "title": "New Visits",
                        "description": "New visitors to your site generated by the campaign.",
                        "readonly": true,
                        "example": 42
                      },
                      "bounces": {
                        "type": "integer",
                        "title": "Bounces",
                        "description": "Visitors who 'bounced' (in the Google Analytics definition) from the site.",
                        "readonly": true,
                        "example": 42
                      },
                      "time_on_site": {
                        "type": "number",
                        "title": "Time on Site",
                        "description": "The total amount of time visitors from the campaign spent on the site.",
                        "readonly": true,
                        "example": 42
                      },
                      "goal_conversions": {
                        "type": "integer",
                        "title": "Goal Conversions",
                        "description": "The number of Google Analytics goal conversions.",
                        "readonly": true,
                        "example": 42
                      },
                      "goal_value": {
                        "type": "number",
                        "title": "Goal Value",
                        "description": "The value of Google Analytics goal conversions in dollars.",
                        "readonly": true,
                        "example": 42
                      },
                      "revenue": {
                        "type": "number",
                        "title": "Revenue",
                        "description": "Revenue generated by the campaign.",
                        "readonly": true,
                        "example": 42
                      },
                      "transactions": {
                        "type": "integer",
                        "title": "Transactions",
                        "description": "The number of transactions tracked by Google.",
                        "readonly": true,
                        "example": 42
                      },
                      "ecomm_conversions": {
                        "type": "integer",
                        "title": "E-commerce Conversions",
                        "description": "The number of e-commerce conversions tracked by Google.",
                        "readonly": true,
                        "example": 42
                      },
                      "goals": {
                        "type": "array",
                        "title": "Goals",
                        "description": "A summary of Goals as defined in Google Analytics.",
                        "items": {
                          "type": "object",
                          "title": "Goal",
                          "description": "A single Google Analytics goal.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "title": "Goal Name",
                              "description": "The name of a Google Analytics goal.",
                              "readonly": true,
                              "example": "signup"
                            },
                            "conversions": {
                              "type": "integer",
                              "title": "Conversions",
                              "description": "The number of conversions for a single Google Analytics goal.",
                              "readonly": true,
                              "example": 42
                            }
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Sent To",
                  "description": "An array of objects, each representing a Google Analytics view for the campaign."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The id for the campaign.",
                  "readonly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/google-analytics/{profile_id}": {
      "get": {
        "summary": "Get a specific Google Analytics View report",
        "description": "Get information about a specific [Google Analytics report](http://kb.mailchimp.com/integrations/e-commerce/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for a campaign.",
        "operationId": "getReportsIdGoogleAnalyticsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/AnalyticsID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Google Analytics",
              "description": "A summary of Google Analytics data for a campaign.",
              "properties": {
                "analytics_profileId": {
                  "type": "string",
                  "title": "Profile ID",
                  "description": "The Google Analytics View ID.",
                  "readOnly": true
                },
                "analytics_webPropertyId": {
                  "type": "string",
                  "title": "Property ID",
                  "description": "The Google Analytics Web Property ID.",
                  "readOnly": true
                },
                "analytics_accountId": {
                  "type": "string",
                  "title": "Property ID",
                  "description": "The Google Analytics Account ID.",
                  "readOnly": true
                },
                "analytics_profileName": {
                  "type": "string",
                  "title": "Property ID",
                  "description": "The Google Analytics Profile Name.",
                  "readOnly": true
                },
                "analytics_title": {
                  "type": "string",
                  "title": "Property ID",
                  "description": "The Google Analytics Title.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The unique id for the campaign.",
                  "readonly": true,
                  "example": "839488a60b"
                },
                "visits": {
                  "type": "integer",
                  "title": "Visits",
                  "description": "The number of visits generated by the campaign.",
                  "readonly": true,
                  "example": 42
                },
                "page_views": {
                  "type": "integer",
                  "title": "Pages",
                  "description": "The number of page views generated by the campaign.",
                  "readonly": true,
                  "example": 42
                },
                "new_visits": {
                  "type": "integer",
                  "title": "New Visits",
                  "description": "New visitors to your site generated by the campaign.",
                  "readonly": true,
                  "example": 42
                },
                "bounces": {
                  "type": "integer",
                  "title": "Bounces",
                  "description": "Visitors who 'bounced' (in the Google Analytics definition) from the site.",
                  "readonly": true,
                  "example": 42
                },
                "time_on_site": {
                  "type": "number",
                  "title": "Time on Site",
                  "description": "The total amount of time visitors from the campaign spent on the site.",
                  "readonly": true,
                  "example": 42
                },
                "goal_conversions": {
                  "type": "integer",
                  "title": "Goal Conversions",
                  "description": "The number of Google Analytics goal conversions.",
                  "readonly": true,
                  "example": 42
                },
                "goal_value": {
                  "type": "number",
                  "title": "Goal Value",
                  "description": "The value of Google Analytics goal conversions in dollars.",
                  "readonly": true,
                  "example": 42
                },
                "revenue": {
                  "type": "number",
                  "title": "Revenue",
                  "description": "Revenue generated by the campaign.",
                  "readonly": true,
                  "example": 42
                },
                "transactions": {
                  "type": "integer",
                  "title": "Transactions",
                  "description": "The number of transactions tracked by Google.",
                  "readonly": true,
                  "example": 42
                },
                "ecomm_conversions": {
                  "type": "integer",
                  "title": "E-commerce Conversions",
                  "description": "The number of e-commerce conversions tracked by Google.",
                  "readonly": true,
                  "example": 42
                },
                "goals": {
                  "type": "array",
                  "title": "Goals",
                  "description": "A summary of Goals as defined in Google Analytics.",
                  "items": {
                    "type": "object",
                    "title": "Goal",
                    "description": "A single Google Analytics goal.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Goal Name",
                        "description": "The name of a Google Analytics goal.",
                        "readonly": true,
                        "example": "signup"
                      },
                      "conversions": {
                        "type": "integer",
                        "title": "Conversions",
                        "description": "The number of conversions for a single Google Analytics goal.",
                        "readonly": true,
                        "example": 42
                      }
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/locations": {
      "get": {
        "summary": "Get top open locations",
        "description": "Get top open locations for a specific campaign.",
        "operationId": "getReportsIdLocations",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Open Locations",
              "description": "Top open locations for a specific campaign.",
              "properties": {
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "country_code": {
                        "type": "string",
                        "title": "Country Code",
                        "description": "The ISO 3166 2 digit country code.",
                        "readOnly": true
                      },
                      "region": {
                        "type": "string",
                        "title": "Region",
                        "description": "An internal code for the region representing the more specific location area such as city or state. When this is blank, it indicates we know the country, but not the region.",
                        "readOnly": true
                      },
                      "region_name": {
                        "type": "string",
                        "title": "Region Name",
                        "description": "The name of the region, if we have one. For blank \"region\" values, this will be \"Rest of Country\".",
                        "readonly": true
                      },
                      "opens": {
                        "type": "integer",
                        "title": "Opens",
                        "description": "The number of unique campaign opens for a region.",
                        "readOnly": true
                      }
                    }
                  },
                  "title": "Lists",
                  "description": "An array of objects, each representing a top location for opens."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/sent-to": {
      "get": {
        "summary": "Get information about campaign recipients",
        "description": "Get information about campaign recipients.",
        "operationId": "getReportsIdSentTo",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Sent-To",
              "description": "A list of subscribers who were sent a specific campaign.",
              "properties": {
                "sent_to": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Sent To",
                    "description": "A subscriber's status for a specific campaign.",
                    "properties": {
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "readOnly": true,
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                        "readOnly": true
                      },
                      "status": {
                        "type": "string",
                        "title": "Member Status",
                        "description": "The status of the member ('sent', 'hard' for hard bounce, or 'soft' for soft bounce)."
                      },
                      "open_count": {
                        "type": "integer",
                        "title": "Open Count",
                        "description": "The number of times a campaign was opened by this member."
                      },
                      "last_open": {
                        "type": "string",
                        "title": "Last Open",
                        "description": "The date and time of the last open for this member.",
                        "format": "date-time"
                      },
                      "absplit_group": {
                        "type": "string",
                        "title": "A/B Split Group",
                        "description": "For A/B Split Campaigns, the group the member was apart of ('a', 'b', or 'winner')."
                      },
                      "gmt_offset": {
                        "type": "integer",
                        "title": "GMT Offset",
                        "description": "For campaigns sent with timewarp, the time zone group the member is apart of."
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The campaign id.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Sent To",
                  "description": "An array of objects, each representing a campaign recipient."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/sent-to/{subscriber_hash}": {
      "get": {
        "summary": "Get information about a specific campaign recipient",
        "description": "Get information about a specific campaign recipient.",
        "operationId": "getReportsIdSentToId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Sent To",
              "description": "A subscriber's status for a specific campaign.",
              "properties": {
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "readOnly": true,
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                  "readOnly": true
                },
                "status": {
                  "type": "string",
                  "title": "Member Status",
                  "description": "The status of the member ('sent', 'hard' for hard bounce, or 'soft' for soft bounce)."
                },
                "open_count": {
                  "type": "integer",
                  "title": "Open Count",
                  "description": "The number of times a campaign was opened by this member."
                },
                "last_open": {
                  "type": "string",
                  "title": "Last Open",
                  "description": "The date and time of the last open for this member.",
                  "format": "date-time"
                },
                "absplit_group": {
                  "type": "string",
                  "title": "A/B Split Group",
                  "description": "For A/B Split Campaigns, the group the member was apart of ('a', 'b', or 'winner')."
                },
                "gmt_offset": {
                  "type": "integer",
                  "title": "GMT Offset",
                  "description": "For campaigns sent with timewarp, the time zone group the member is apart of."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/sub-reports": {
      "get": {
        "summary": "Get reports for child campaigns",
        "description": "Get a list of reports with child campaigns for a specific parent campaign.",
        "operationId": "getReportsIdSubReportsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaign Sub-Reports",
              "description": "A list of reports containing child campaigns for a specific campaign.",
              "properties": {
                "reports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Campaign Report",
                    "description": "Report details about a sent campaign.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "A string that uniquely identifies this campaign."
                      },
                      "campaign_title": {
                        "type": "string",
                        "title": "Campaign Title",
                        "description": "The title of the campaign.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "title": "Campaign Type",
                        "description": "The type of campaign (regular, plain-text, ab_split, rss, automation, variate, or auto)."
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique list id.",
                        "readOnly": true
                      },
                      "list_name": {
                        "type": "string",
                        "title": "List Name",
                        "description": "The name of the list.",
                        "readOnly": true
                      },
                      "subject_line": {
                        "type": "string",
                        "title": "Campaign Subject Line",
                        "description": "The subject line for the campaign.",
                        "readOnly": true
                      },
                      "preview_text": {
                        "type": "string",
                        "title": "Campaign Preview Text",
                        "description": "The preview text for the campaign."
                      },
                      "emails_sent": {
                        "type": "integer",
                        "title": "Emails Sent",
                        "description": "The total number of emails sent for this campaign."
                      },
                      "abuse_reports": {
                        "type": "integer",
                        "title": "Abuse Reports",
                        "description": "The number of abuse reports generated for this campaign."
                      },
                      "unsubscribed": {
                        "type": "integer",
                        "title": "Unsubscribe Count",
                        "description": "The total number of unsubscribed members for this campaign.",
                        "readOnly": true
                      },
                      "send_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Send Time",
                        "description": "The date and time a campaign was sent.",
                        "readOnly": true
                      },
                      "rss_last_send": {
                        "type": "string",
                        "format": "date-time",
                        "title": "RSS Last Send",
                        "description": "For RSS campaigns, the date and time of the last send",
                        "readOnly": true
                      },
                      "bounces": {
                        "type": "object",
                        "title": "Bounces",
                        "description": "An object describing the bounce summary for the campaign.",
                        "properties": {
                          "hard_bounces": {
                            "type": "integer",
                            "title": "Hard Bounces",
                            "description": "The total number of hard bounced email addresses."
                          },
                          "soft_bounces": {
                            "type": "integer",
                            "title": "Soft Bounces",
                            "description": "The total number of soft bounced email addresses."
                          },
                          "syntax_errors": {
                            "type": "integer",
                            "title": "Syntax Errors",
                            "description": "The total number of addresses that were syntax-related bounces."
                          }
                        }
                      },
                      "forwards": {
                        "type": "object",
                        "title": "Forwards",
                        "description": "An object describing the forwards and forward activity for the campaign.",
                        "properties": {
                          "forwards_count": {
                            "type": "integer",
                            "title": "Total Forwards",
                            "description": "How many times the campaign has been forwarded."
                          },
                          "forwards_opens": {
                            "type": "integer",
                            "title": "Forward Opens",
                            "description": "How many times the forwarded campaign has been opened."
                          }
                        }
                      },
                      "opens": {
                        "type": "object",
                        "title": "Opens",
                        "description": "An object describing the open activity for the campaign.",
                        "properties": {
                          "opens_total": {
                            "type": "integer",
                            "title": "Total Opens",
                            "description": "The total number of opens for a campaign."
                          },
                          "unique_opens": {
                            "type": "integer",
                            "title": "Unique Opens",
                            "description": "The total number of unique opens."
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The number of unique opens divided by the total number of successful deliveries."
                          },
                          "last_open": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Last Open",
                            "description": "The date and time of the last recorded open."
                          }
                        }
                      },
                      "clicks": {
                        "type": "object",
                        "title": "Clicks",
                        "description": "An object describing the click activity for the campaign.",
                        "properties": {
                          "clicks_total": {
                            "type": "integer",
                            "title": "Total Clicks",
                            "description": "The total number of clicks for the campaign."
                          },
                          "unique_clicks": {
                            "type": "integer",
                            "title": "Unique Clicks",
                            "description": "The total number of unique clicks for links across a campaign."
                          },
                          "unique_subscriber_clicks": {
                            "type": "integer",
                            "title": "Unique Subscriber Clicks",
                            "description": "The total number of subscribers who clicked on a campaign."
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The number of unique clicks divided by the total number of successful deliveries."
                          },
                          "last_click": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Last Click",
                            "description": "The date and time of the last recorded click for the campaign."
                          }
                        }
                      },
                      "facebook_likes": {
                        "type": "object",
                        "title": "Facebook Likes",
                        "description": "An object describing campaign engagement on Facebook.",
                        "properties": {
                          "recipient_likes": {
                            "type": "integer",
                            "title": "Recipient Likes",
                            "description": "The number of recipients who liked the campaign on Facebook."
                          },
                          "unique_likes": {
                            "type": "integer",
                            "title": "Unique Likes",
                            "description": "The number of unique likes."
                          },
                          "facebook_likes": {
                            "type": "integer",
                            "title": "Facebook Likes",
                            "description": "The number of Facebook likes for the campaign."
                          }
                        }
                      },
                      "industry_stats": {
                        "type": "object",
                        "title": "Industry Stats",
                        "description": "The average campaign statistics for your industry.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "title": "Industry Type",
                            "description": "The type of business industry associated with your account. For example: retail, education, etc."
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The industry open rate."
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The industry click rate."
                          },
                          "bounce_rate": {
                            "type": "number",
                            "title": "Bounce Rate",
                            "description": "The industry bounce rate."
                          },
                          "unopen_rate": {
                            "type": "number",
                            "title": "Unopened Rate",
                            "description": "The industry unopened rate."
                          },
                          "unsub_rate": {
                            "type": "number",
                            "title": "Unsubscribe Rate",
                            "description": "The industry unsubscribe rate."
                          },
                          "abuse_rate": {
                            "type": "number",
                            "title": "Abuse Rate",
                            "description": "The industry abuse rate."
                          }
                        }
                      },
                      "list_stats": {
                        "type": "object",
                        "title": "Industry Stats",
                        "description": "The average campaign statistics for your industry. This won't be present if we haven't calculated it yet for this list.",
                        "properties": {
                          "sub_rate": {
                            "type": "number",
                            "title": "Average Subscription Rate",
                            "description": "The average number of subscriptions per month for the list.",
                            "readOnly": true
                          },
                          "unsub_rate": {
                            "type": "number",
                            "title": "Average Unsubscription Rate",
                            "description": "The average number of unsubscriptions per month for the list.",
                            "readOnly": true
                          },
                          "open_rate": {
                            "type": "number",
                            "title": "Open Rate",
                            "description": "The average open rate (a percentage represented as a number between 0 and 100) per campaign for the list.",
                            "readOnly": true
                          },
                          "click_rate": {
                            "type": "number",
                            "title": "Click Rate",
                            "description": "The average click rate (a percentage represented as a number between 0 and 100) per campaign for the list.",
                            "readOnly": true
                          }
                        }
                      },
                      "ab_split": {
                        "type": "object",
                        "title": "A/B Split Stats",
                        "description": "General stats about different groups of an A/B Split campaign. Does not return information about [MailChimp Pro's Multivariate Campaigns](http://kb.mailchimp.com/campaigns/multivariate/about-multivariate-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "properties": {
                          "a": {
                            "type": "object",
                            "title": "Campaign A",
                            "description": "Stats for Campaign A.",
                            "properties": {
                              "bounces": {
                                "type": "integer",
                                "title": "Bounces",
                                "description": "Bounces for Campaign A."
                              },
                              "abuse_reports": {
                                "type": "integer",
                                "title": "Abuse Reports",
                                "description": "Abuse reports for Campaign A."
                              },
                              "unsubs": {
                                "type": "integer",
                                "title": "Unsubscribes",
                                "description": "Unsubscribes for Campaign A."
                              },
                              "recipient_clicks": {
                                "type": "integer",
                                "title": "Recipient Clicks",
                                "description": "Recipient Clicks for Campaign A."
                              },
                              "forwards": {
                                "type": "integer",
                                "title": "Forwards",
                                "description": "Forwards for Campaign A."
                              },
                              "forwards_opens": {
                                "type": "integer",
                                "title": "Forward Opens",
                                "description": "Opens from forwards for Campaign A."
                              },
                              "opens": {
                                "type": "integer",
                                "title": "Opens",
                                "description": "Opens for Campaign A."
                              },
                              "last_open": {
                                "type": "string",
                                "title": "Last Open",
                                "description": "The last open for Campaign A."
                              },
                              "unique_opens": {
                                "type": "integer",
                                "title": "Unique Opens",
                                "description": "Unique opens for Campaign A."
                              }
                            }
                          },
                          "b": {
                            "type": "object",
                            "title": "Campaign B",
                            "description": "Stats for Campaign B.",
                            "properties": {
                              "bounces": {
                                "type": "integer",
                                "title": "Bounces",
                                "description": "Bounces for Campaign B."
                              },
                              "abuse_reports": {
                                "type": "integer",
                                "title": "Abuse Reports",
                                "description": "Abuse reports for Campaign B."
                              },
                              "unsubs": {
                                "type": "integer",
                                "title": "Unsubscribes",
                                "description": "Unsubscribes for Campaign B."
                              },
                              "recipient_clicks": {
                                "type": "integer",
                                "title": "Recipient Clicks",
                                "description": "Recipients clicks for Campaign B."
                              },
                              "forwards": {
                                "type": "integer",
                                "title": "Forwards",
                                "description": "Forwards for Campaign B."
                              },
                              "forwards_opens": {
                                "type": "integer",
                                "title": "Forward Opens",
                                "description": "Opens for forwards from Campaign B."
                              },
                              "opens": {
                                "type": "integer",
                                "title": "Opens",
                                "description": "Opens for Campaign B."
                              },
                              "last_open": {
                                "type": "string",
                                "title": "Last Open",
                                "description": "The last open for Campaign B."
                              },
                              "unique_opens": {
                                "type": "integer",
                                "title": "Unique Opens",
                                "description": "Unique opens for Campaign B."
                              }
                            }
                          }
                        }
                      },
                      "timewarp": {
                        "type": "array",
                        "title": "Timewarp Stats",
                        "description": "An hourly breakdown of sends, opens, and clicks if a campaign is sent using timewarp.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "gmt_offset": {
                              "type": "integer",
                              "title": "GMT Offset",
                              "description": "For campaigns sent with timewarp, the time zone group the member is apart of."
                            },
                            "opens": {
                              "type": "integer",
                              "title": "Opens",
                              "description": "The number of opens."
                            },
                            "last_open": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Last Open",
                              "description": "The date and time of the last open."
                            },
                            "unique_opens": {
                              "type": "integer",
                              "title": "Unique Opens",
                              "description": "The number of unique opens."
                            },
                            "clicks": {
                              "type": "integer",
                              "title": "Clicks",
                              "description": "The number of clicks."
                            },
                            "last_click": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Last Click",
                              "description": "The date and time of the last click."
                            },
                            "unique_clicks": {
                              "type": "integer",
                              "title": "Unique Clicks",
                              "description": "The number of unique clicks."
                            },
                            "bounces": {
                              "type": "integer",
                              "title": "Bounces",
                              "description": "The number of bounces."
                            }
                          }
                        }
                      },
                      "timeseries": {
                        "type": "array",
                        "title": "Timeseries",
                        "description": "An hourly breakdown of the performance of the campaign over the first 24 hours.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "title": "Timestamp",
                              "description": "The date and time for the series."
                            },
                            "emails_sent": {
                              "type": "integer",
                              "title": "Emails Sent",
                              "description": "The number of emails sent in the timeseries."
                            },
                            "unique_opens": {
                              "type": "integer",
                              "title": "Unique Opens",
                              "description": "The number of unique opens in the timeseries."
                            },
                            "recipients_clicks": {
                              "type": "integer",
                              "title": "Recipient Clicks",
                              "description": "The number of clicks in the timeseries."
                            }
                          }
                        }
                      },
                      "share_report": {
                        "type": "object",
                        "title": "Share Report",
                        "description": "The url and password for the [VIP report](http://kb.mailchimp.com/reports/email-a-report-to-a-client?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "properties": {
                          "share_url": {
                            "type": "string",
                            "title": "Report URL",
                            "description": "The URL for the VIP report.",
                            "readOnly": true
                          },
                          "share_password": {
                            "type": "string",
                            "title": "Report Password",
                            "description": "If password protected, the password for the VIP report.",
                            "readOnly": true
                          }
                        }
                      },
                      "ecommerce": {
                        "type": "object",
                        "title": "E-Commerce Report",
                        "description": "E-Commerce stats for a campaign.",
                        "properties": {
                          "total_orders": {
                            "type": "integer",
                            "title": "Total Orders",
                            "description": "The total orders for a campaign.",
                            "readOnly": true
                          },
                          "total_spent": {
                            "type": "number",
                            "title": "Total Spent",
                            "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                            "readOnly": true
                          },
                          "total_revenue": {
                            "type": "number",
                            "title": "Total Revenue",
                            "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                            "readOnly": true
                          }
                        }
                      },
                      "delivery_status": {
                        "$ref": "#/definitions/DeliveryStatus"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Reports",
                  "description": "An array of objects, each representing a report resource."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "Unique identifier of the parent campaign"
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/unsubscribed": {
      "get": {
        "summary": "Get unsubscribed list members",
        "description": "Get information about members who have unsubscribed from a specific campaign.",
        "operationId": "getReportsIdUnsubscribed",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/CampaignID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Unsubscribes",
              "description": "A list of members who have unsubscribed from a specific campaign.",
              "properties": {
                "unsubscribes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Unsubscribes",
                    "description": "A member who unsubscribed from a specific campaign.",
                    "properties": {
                      "email_id": {
                        "type": "string",
                        "title": "Email Hash",
                        "description": "The MD5 hash of the lowercase version of the list member's email address.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "Email address for a subscriber.",
                        "readOnly": true
                      },
                      "merge_fields": {
                        "type": "object",
                        "title": "Member Merge Var",
                        "description": "An individual merge var and value for a member.",
                        "readOnly": true,
                        "additionalProperties": {
                          "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                        }
                      },
                      "vip": {
                        "type": "boolean",
                        "title": "VIP",
                        "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                        "readOnly": true
                      },
                      "timestamp": {
                        "type": "string",
                        "title": "Timestamp",
                        "description": "The date and time the member opted-out.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "reason": {
                        "type": "string",
                        "title": "Unsubscribe Reason",
                        "description": "If available, the reason listed by the member for unsubscribing.",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "The campaign id.",
                        "readOnly": true
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The list id.",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Lists",
                  "description": "An array of objects, each representing a member who unsubscribed from a campaign."
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/reports/{campaign_id}/unsubscribed/{subscriber_hash}": {
      "get": {
        "summary": "Get information about a specific list member who unsubscribed",
        "description": "Get information about a specific list member who unsubscribed from a campaign.",
        "operationId": "getReportsIdUnsubscribedId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CampaignID"
          },
          {
            "$ref": "#/parameters/SubscriberHash"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Unsubscribes",
              "description": "A member who unsubscribed from a specific campaign.",
              "properties": {
                "email_id": {
                  "type": "string",
                  "title": "Email Hash",
                  "description": "The MD5 hash of the lowercase version of the list member's email address.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "Email address for a subscriber.",
                  "readOnly": true
                },
                "merge_fields": {
                  "type": "object",
                  "title": "Member Merge Var",
                  "description": "An individual merge var and value for a member.",
                  "readOnly": true,
                  "additionalProperties": {
                    "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                  }
                },
                "vip": {
                  "type": "boolean",
                  "title": "VIP",
                  "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber.",
                  "readOnly": true
                },
                "timestamp": {
                  "type": "string",
                  "title": "Timestamp",
                  "description": "The date and time the member opted-out.",
                  "format": "date-time",
                  "readOnly": true
                },
                "reason": {
                  "type": "string",
                  "title": "Unsubscribe Reason",
                  "description": "If available, the reason listed by the member for unsubscribing.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "The campaign id.",
                  "readOnly": true
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The list id.",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/templates": {
      "get": {
        "summary": "Get all templates",
        "description": "Get a list of an account's available templates.",
        "operationId": "getTemplates",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/TemplateCreator"
          },
          {
            "$ref": "#/parameters/TemplateCreated_Since"
          },
          {
            "$ref": "#/parameters/TemplateCreated_Before"
          },
          {
            "$ref": "#/parameters/TemplateType"
          },
          {
            "$ref": "#/parameters/TemplateCategory"
          },
          {
            "$ref": "#/parameters/Filter_FolderID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Templates",
              "description": "A list an account's available templates.",
              "properties": {
                "templates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "Template Instance",
                    "description": "Information about a specific template.",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "title": "Template ID",
                        "description": "The individual id for the template.",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "title": "Template Type",
                        "description": "The type of template (user, base, or gallery).",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "title": "Template Name",
                        "description": "The name of the template."
                      },
                      "drag_and_drop": {
                        "type": "boolean",
                        "title": "Drag and Drop",
                        "description": "Whether the template uses the drag and drop editor.",
                        "readOnly": true
                      },
                      "responsive": {
                        "type": "boolean",
                        "title": "Responsive",
                        "description": "Whether the template contains media queries to make it responsive.",
                        "readOnly": true
                      },
                      "category": {
                        "type": "string",
                        "title": "Template Category",
                        "description": "If available, the category the template is listed in.",
                        "readOnly": true
                      },
                      "date_created": {
                        "type": "string",
                        "title": "Date Created",
                        "description": "The date and time the template was created.",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "created_by": {
                        "type": "string",
                        "title": "Created By",
                        "description": "The login name for template's creator.",
                        "readOnly": true
                      },
                      "active": {
                        "type": "boolean",
                        "title": "Active",
                        "description": "User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.",
                        "readOnly": true
                      },
                      "folder_id": {
                        "type": "string",
                        "title": "Folder ID",
                        "description": "The id of the folder the template is currently in."
                      },
                      "thumbnail": {
                        "type": "string",
                        "title": "Template Thumbnail",
                        "description": "If available, the URL for a thumbnail of the template.",
                        "readOnly": true
                      },
                      "share_url": {
                        "type": "string",
                        "title": "Share URL",
                        "description": "The URL used for [template sharing](http://kb.mailchimp.com/templates/basic-and-themes/how-to-share-a-template?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                        "readOnly": true
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "User Templates",
                  "description": "All of an account's saved or custom templates."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Create a new template",
        "description": "Create a new template for the account. Only [Classic templates](http://kb.mailchimp.com/templates/basic-and-themes/types-of-templates?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) are supported.",
        "operationId": "postTemplates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Template Instance",
              "description": "Information about a specific template.",
              "required": [
                "name",
                "html"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Template Name",
                  "description": "The name of the template.",
                  "example": "Freddie's Jokes"
                },
                "folder_id": {
                  "type": "string",
                  "title": "Folder ID",
                  "description": "The id of the folder the template is currently in.",
                  "example": "a4b830b"
                },
                "html": {
                  "type": "string",
                  "title": "Template HTML",
                  "description": "The raw HTML for the template. We  support the MailChimp [Template Language](http://kb.mailchimp.com/templates/code/getting-started-with-mailchimps-template-language?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in any HTML code passed via the API."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Instance",
              "description": "Information about a specific template.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Template ID",
                  "description": "The individual id for the template.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "title": "Template Type",
                  "description": "The type of template (user, base, or gallery).",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Template Name",
                  "description": "The name of the template."
                },
                "drag_and_drop": {
                  "type": "boolean",
                  "title": "Drag and Drop",
                  "description": "Whether the template uses the drag and drop editor.",
                  "readOnly": true
                },
                "responsive": {
                  "type": "boolean",
                  "title": "Responsive",
                  "description": "Whether the template contains media queries to make it responsive.",
                  "readOnly": true
                },
                "category": {
                  "type": "string",
                  "title": "Template Category",
                  "description": "If available, the category the template is listed in.",
                  "readOnly": true
                },
                "date_created": {
                  "type": "string",
                  "title": "Date Created",
                  "description": "The date and time the template was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The login name for template's creator.",
                  "readOnly": true
                },
                "active": {
                  "type": "boolean",
                  "title": "Active",
                  "description": "User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.",
                  "readOnly": true
                },
                "folder_id": {
                  "type": "string",
                  "title": "Folder ID",
                  "description": "The id of the folder the template is currently in."
                },
                "thumbnail": {
                  "type": "string",
                  "title": "Template Thumbnail",
                  "description": "If available, the URL for a thumbnail of the template.",
                  "readOnly": true
                },
                "share_url": {
                  "type": "string",
                  "title": "Share URL",
                  "description": "The URL used for [template sharing](http://kb.mailchimp.com/templates/basic-and-themes/how-to-share-a-template?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/templates/{template_id}": {
      "get": {
        "summary": "Get information about a specific template",
        "description": "Get information about a specific template.",
        "operationId": "getTemplatesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/TemplateID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Instance",
              "description": "Information about a specific template.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Template ID",
                  "description": "The individual id for the template.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "title": "Template Type",
                  "description": "The type of template (user, base, or gallery).",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Template Name",
                  "description": "The name of the template."
                },
                "drag_and_drop": {
                  "type": "boolean",
                  "title": "Drag and Drop",
                  "description": "Whether the template uses the drag and drop editor.",
                  "readOnly": true
                },
                "responsive": {
                  "type": "boolean",
                  "title": "Responsive",
                  "description": "Whether the template contains media queries to make it responsive.",
                  "readOnly": true
                },
                "category": {
                  "type": "string",
                  "title": "Template Category",
                  "description": "If available, the category the template is listed in.",
                  "readOnly": true
                },
                "date_created": {
                  "type": "string",
                  "title": "Date Created",
                  "description": "The date and time the template was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The login name for template's creator.",
                  "readOnly": true
                },
                "active": {
                  "type": "boolean",
                  "title": "Active",
                  "description": "User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.",
                  "readOnly": true
                },
                "folder_id": {
                  "type": "string",
                  "title": "Folder ID",
                  "description": "The id of the folder the template is currently in."
                },
                "thumbnail": {
                  "type": "string",
                  "title": "Template Thumbnail",
                  "description": "If available, the URL for a thumbnail of the template.",
                  "readOnly": true
                },
                "share_url": {
                  "type": "string",
                  "title": "Share URL",
                  "description": "The URL used for [template sharing](http://kb.mailchimp.com/templates/basic-and-themes/how-to-share-a-template?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update an existing template",
        "description": "Update the name, HTML, or `folder_id` of an existing template.",
        "operationId": "patchTemplatesId",
        "parameters": [
          {
            "$ref": "#/parameters/TemplateID"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Template Instance",
              "description": "Information about a specific template.",
              "required": [
                "name",
                "html"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Template Name",
                  "description": "The name of the template.",
                  "example": "Freddie's Jokes"
                },
                "folder_id": {
                  "type": "string",
                  "title": "Folder ID",
                  "description": "The id of the folder the template is currently in.",
                  "example": "a4b830b"
                },
                "html": {
                  "type": "string",
                  "title": "Template HTML",
                  "description": "The raw HTML for the template. We  support the MailChimp [Template Language](http://kb.mailchimp.com/templates/code/getting-started-with-mailchimps-template-language?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in any HTML code passed via the API."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Instance",
              "description": "Information about a specific template.",
              "properties": {
                "id": {
                  "type": "integer",
                  "title": "Template ID",
                  "description": "The individual id for the template.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "title": "Template Type",
                  "description": "The type of template (user, base, or gallery).",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "title": "Template Name",
                  "description": "The name of the template."
                },
                "drag_and_drop": {
                  "type": "boolean",
                  "title": "Drag and Drop",
                  "description": "Whether the template uses the drag and drop editor.",
                  "readOnly": true
                },
                "responsive": {
                  "type": "boolean",
                  "title": "Responsive",
                  "description": "Whether the template contains media queries to make it responsive.",
                  "readOnly": true
                },
                "category": {
                  "type": "string",
                  "title": "Template Category",
                  "description": "If available, the category the template is listed in.",
                  "readOnly": true
                },
                "date_created": {
                  "type": "string",
                  "title": "Date Created",
                  "description": "The date and time the template was created.",
                  "format": "date-time",
                  "readOnly": true
                },
                "created_by": {
                  "type": "string",
                  "title": "Created By",
                  "description": "The login name for template's creator.",
                  "readOnly": true
                },
                "active": {
                  "type": "boolean",
                  "title": "Active",
                  "description": "User templates are not 'deleted,' but rather marked as 'inactive.' Returns whether the template is still active.",
                  "readOnly": true
                },
                "folder_id": {
                  "type": "string",
                  "title": "Folder ID",
                  "description": "The id of the folder the template is currently in."
                },
                "thumbnail": {
                  "type": "string",
                  "title": "Template Thumbnail",
                  "description": "If available, the URL for a thumbnail of the template.",
                  "readOnly": true
                },
                "share_url": {
                  "type": "string",
                  "title": "Share URL",
                  "description": "The URL used for [template sharing](http://kb.mailchimp.com/templates/basic-and-themes/how-to-share-a-template?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                  "readOnly": true
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a specific template",
        "description": "Delete a specific template.",
        "operationId": "deleteTemplatesId",
        "parameters": [
          {
            "$ref": "#/parameters/TemplateID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/templates/{template_id}/default-content": {
      "get": {
        "summary": "Get the default content for a template",
        "description": "Get the sections that you can edit in a template, including each section's default content.",
        "operationId": "getTemplatesIdDefaultContent",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/TemplateID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Template Default Content",
              "description": "Default content for a template.",
              "properties": {
                "sections": {
                  "type": "object",
                  "title": "Sections",
                  "description": "The sections that you can edit in the template, including each section's default content.",
                  "additionalProperties": {
                    "description": "The default content for the sections that you can edit in the template."
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce": {
      "get": {
        "summary": "Get information about the e-commerce endpoint's resources",
        "description": "Get information about the e-commerce endpoint's resources.",
        "operationId": "getEcommerce",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Root",
              "description": "This resource serves as a namespace for e-commerce-related resources.",
              "properties": {
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/orders": {
      "get": {
        "summary": "Get information about an account's orders",
        "description": "Get information about an account's orders.",
        "operationId": "getEcommerceOrders",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/OrderCampaign"
          },
          {
            "$ref": "#/parameters/OrderOutreach"
          },
          {
            "name": "customer_id",
            "title": "Customer ID",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders made by a specific customer.",
            "type": "string"
          },
          {
            "name": "has_outreach",
            "title": "Has Outreach",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Orders",
              "description": "A collection of orders in an account.",
              "properties": {
                "orders": {
                  "type": "array",
                  "title": "Orders",
                  "description": "An array of objects, each representing an order resource.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order",
                    "description": "Information about a specific order.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Order Foreign ID",
                        "description": "A unique identifier for the order.",
                        "readOnly": true
                      },
                      "customer": {
                        "type": "object",
                        "title": "E-commerce Customer",
                        "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Customer Foreign ID",
                            "description": "A unique identifier for the customer.",
                            "readOnly": true
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "The customer's email address.",
                            "readOnly": true
                          },
                          "opt_in_status": {
                            "type": "boolean",
                            "title": "Opt-in Status",
                            "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The customer's company."
                          },
                          "first_name": {
                            "type": "string",
                            "title": "First Name",
                            "description": "The customer's first name."
                          },
                          "last_name": {
                            "type": "string",
                            "title": "Last Name",
                            "description": "The customer's last name."
                          },
                          "orders_count": {
                            "type": "integer",
                            "title": "Orders Count",
                            "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                            "example": 4
                          },
                          "total_spent": {
                            "type": "number",
                            "title": "Total Spent",
                            "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                            "example": 100
                          },
                          "address": {
                            "type": "object",
                            "title": "Address",
                            "description": "The customer's address.",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The mailing address of the customer.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the customer's mailing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city the customer is located in.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The customer's state name or normalized province.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the customer's province or state.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The customer's postal or zip code.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The customer's country.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the customer's country.",
                                "example": "US"
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the customer was created.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the customer was last updated.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "$ref": "#/definitions/HATEOASLinks"
                          }
                        }
                      },
                      "store_id": {
                        "type": "string",
                        "title": "Store Foreign ID",
                        "description": "The unique identifier for the store.",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "A string that uniquely identifies the campaign associated with an order.",
                        "example": "839488a60b"
                      },
                      "landing_site": {
                        "type": "string",
                        "title": "Landing Site",
                        "description": "The URL for the page where the buyer landed when entering the shop.",
                        "example": "http://www.example.com?source=abc"
                      },
                      "financial_status": {
                        "type": "string",
                        "title": "Financial Status",
                        "description": "The order status. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                      },
                      "fulfillment_status": {
                        "type": "string",
                        "title": "Fulfillment Status",
                        "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                      },
                      "currency_code": {
                        "type": "string",
                        "title": "Currency Code",
                        "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                      },
                      "order_total": {
                        "type": "number",
                        "title": "Order Total",
                        "description": "The order total associated with an order."
                      },
                      "order_url": {
                        "type": "string",
                        "title": "Order URL",
                        "description": "The URL for the order."
                      },
                      "discount_total": {
                        "type": "number",
                        "title": "Discount Total",
                        "description": "The total amount of the discounts to be applied to the price of the order."
                      },
                      "tax_total": {
                        "type": "number",
                        "title": "Tax Total",
                        "description": "The tax total associated with an order."
                      },
                      "shipping_total": {
                        "type": "number",
                        "title": "Shipping Total",
                        "description": "The shipping total for the order."
                      },
                      "tracking_code": {
                        "type": "string",
                        "enum": [
                          "prec"
                        ],
                        "title": "Tracking Code",
                        "description": "The MailChimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                      },
                      "processed_at_foreign": {
                        "type": "string",
                        "title": "Foreign Processed Time",
                        "format": "date-time",
                        "description": "The date and time the order was processed.",
                        "example": "2015-07-15 19:28:00"
                      },
                      "cancelled_at_foreign": {
                        "type": "string",
                        "title": "Foreign Cancel Time",
                        "format": "date-time",
                        "description": "The date and time the order was cancelled.",
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at_foreign": {
                        "type": "string",
                        "title": "Foreign Update Time",
                        "format": "date-time",
                        "description": "The date and time the order was updated.",
                        "example": "2015-07-15 19:28:00"
                      },
                      "shipping_address": {
                        "type": "object",
                        "title": "Shipping Address",
                        "description": "The shipping address for the order.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "description": "The name associated with an order's shipping address.",
                            "example": "Freddie Chimpenheimer"
                          },
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The shipping address for the order.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the shipping address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city in the order's shipping address.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The state or normalized province in the order's shipping address.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the province or state the order's shipping address is located in.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The postal or zip code in the order's shipping address.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The country in the order's shipping address.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the country in the shipping address.",
                            "example": "US"
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The longitude for the shipping address location.",
                            "example": -75.68903
                          },
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The latitude for the shipping address location.",
                            "example": 45.427408
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone Number",
                            "description": "The phone number for the order's shipping address",
                            "example": "8675309"
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The company associated with an order's shipping address."
                          }
                        }
                      },
                      "billing_address": {
                        "type": "object",
                        "title": "Billing Address",
                        "description": "The billing address for the order.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "description": "The name associated with an order's billing address.",
                            "example": "Freddie Chimpenheimer"
                          },
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The billing address for the order.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the billing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city in the billing address.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The state or normalized province in the billing address.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the province or state in the billing address.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The postal or zip code in the billing address.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The country in the billing address.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the country in the billing address.",
                            "example": "US"
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The longitude for the billing address location.",
                            "example": -75.68903
                          },
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The latitude for the billing address location.",
                            "example": 45.427408
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone Number",
                            "description": "The phone number for the billing address.",
                            "example": "8675309"
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The company associated with the billing address."
                          }
                        }
                      },
                      "lines": {
                        "type": "array",
                        "title": "Order Line Items",
                        "description": "An array of the order's line items.",
                        "items": {
                          "type": "object",
                          "title": "E-commerce Order Line Item",
                          "description": "Information about a specific order line.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "Order Line Item Foreign ID",
                              "description": "A unique identifier for the order line item.",
                              "readOnly": true
                            },
                            "product_id": {
                              "type": "string",
                              "title": "Order Line Item Product Foreign ID",
                              "description": "A unique identifier for the product associated with the order line item."
                            },
                            "product_title": {
                              "type": "string",
                              "title": "Order Line Item Product Title",
                              "description": "The name of the product for the order line item.",
                              "readOnly": true
                            },
                            "product_variant_id": {
                              "type": "string",
                              "title": "Order Line Item Product Variant Foreign ID",
                              "description": "A unique identifier for the product variant associated with the order line item."
                            },
                            "product_variant_title": {
                              "type": "string",
                              "title": "Order Line Item Product Variant Title",
                              "description": "The name of the product variant for the order line item.",
                              "readOnly": true
                            },
                            "image_url": {
                              "type": "string",
                              "title": "Product Image URL",
                              "description": "The image URL for a product.",
                              "readonly": true
                            },
                            "quantity": {
                              "type": "integer",
                              "title": "Quantity",
                              "description": "The quantity of an order line item."
                            },
                            "price": {
                              "type": "number",
                              "title": "Price",
                              "description": "The price of an order line item."
                            },
                            "discount": {
                              "type": "number",
                              "title": "Discount",
                              "description": "The total discount amount applied to this line item."
                            },
                            "_links": {
                              "$ref": "#/definitions/HATEOASLinks"
                            }
                          }
                        }
                      },
                      "outreach": {
                        "type": "object",
                        "title": "Outreach",
                        "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Outreach ID",
                            "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                            "example": "839488a60b"
                          },
                          "name": {
                            "type": "string",
                            "title": "Outreach name",
                            "description": "The name for the outreach.",
                            "example": "Freddie's Jokes",
                            "readOnly": true
                          },
                          "published_time": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Outreach published time",
                            "description": "The date and time the Outreach was published",
                            "example": "2017-06-06T13:56:12+00:00",
                            "readOnly": true
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores": {
      "get": {
        "summary": "Get information about all stores",
        "description": "Get information about all stores in the account.",
        "operationId": "getEcommerceStores",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Stores",
              "description": "A collection of stores in the account.",
              "properties": {
                "stores": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Store",
                    "description": "An individual store in an account.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Store Foreign ID",
                        "description": "The unique identifier for the store.",
                        "readOnly": true,
                        "example": "example_store"
                      },
                      "list_id": {
                        "type": "string",
                        "title": "List ID",
                        "description": "The unique identifier for the [MailChimp List](http://developer.mailchimp.com/documentation/mailchimp/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                        "readOnly": true,
                        "example": "1a2df69511"
                      },
                      "name": {
                        "type": "string",
                        "title": "Store Name",
                        "description": "The name of the store.",
                        "example": "Freddie's Cat Hat Emporium"
                      },
                      "platform": {
                        "type": "string",
                        "title": "Platform",
                        "description": "The e-commerce platform of the store."
                      },
                      "domain": {
                        "type": "string",
                        "title": "Domain",
                        "description": "The store domain.",
                        "example": "example.com"
                      },
                      "is_syncing": {
                        "type": "boolean",
                        "title": "Is Syncing",
                        "description": "Whether the e-commerce store is currently [syncing](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#syncing-an-e-commerce-store)."
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "The email address for the store.",
                        "example": "freddie@mailchimp.com"
                      },
                      "currency_code": {
                        "type": "string",
                        "title": "Currency",
                        "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                        "example": "USD"
                      },
                      "money_format": {
                        "type": "string",
                        "title": "Money Format",
                        "description": "The currency format for the store. For example: `$`, `£`, etc.",
                        "example": "$"
                      },
                      "primary_locale": {
                        "type": "string",
                        "title": "Primary Locale",
                        "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                        "example": "fr"
                      },
                      "timezone": {
                        "type": "string",
                        "title": "Timezone",
                        "description": "The timezone for the store.",
                        "example": "Eastern"
                      },
                      "phone": {
                        "type": "string",
                        "title": "Phone",
                        "description": "The store phone number.",
                        "example": "404-444-4444"
                      },
                      "address": {
                        "type": "object",
                        "title": "Address",
                        "description": "The store address.",
                        "properties": {
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The store's mailing address.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the store's mailing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city the store is located in.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The store's state name or normalized province.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the store's province or state.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The store's postal or zip code.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The store's country.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for to the store's country.",
                            "example": "US"
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The longitude of the store location.",
                            "example": -75.68903
                          },
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The latitude of the store location.",
                            "example": 45.427408
                          }
                        }
                      },
                      "connected_site": {
                        "type": "object",
                        "title": "Connected Site",
                        "description": "The Connected Site associated with the store.",
                        "readOnly": true,
                        "properties": {
                          "site_foreign_id": {
                            "type": "string",
                            "title": "Connected Site Foreign ID",
                            "description": "The unique identifier for the connected site.",
                            "readOnly": true,
                            "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                          },
                          "site_script": {
                            "type": "object",
                            "title": "Script",
                            "description": "The script used to connect your site with MailChimp.",
                            "readOnly": true,
                            "properties": {
                              "url": {
                                "type": "string",
                                "title": "Script URL",
                                "description": "The URL used for any integrations that offer built-in support for connected sites.",
                                "readOnly": true,
                                "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                              },
                              "fragment": {
                                "type": "string",
                                "title": "Script Fragment",
                                "description": "A pre-built script that you can copy-and-paste into your site to integrate it with MailChimp.",
                                "readOnly": true,
                                "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                              }
                            }
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the store was created.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the store was last updated.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  },
                  "title": "Stores",
                  "description": "An array of objects, each representing a store."
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new store",
        "description": "Add a new store to your MailChimp account.",
        "operationId": "postEcommerceStores",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Store",
              "description": "An individual store in an account.",
              "required": [
                "id",
                "list_id",
                "name",
                "currency_code"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "example": "example_store"
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique identifier for the [MailChimp List](http://developer.mailchimp.com/documentation/mailchimp/reference/lists/) associated with the store. The `list_id` for a specific store cannot change.",
                  "example": "1a2df69511"
                },
                "name": {
                  "type": "string",
                  "title": "Store Name",
                  "description": "The name of the store.",
                  "example": "Freddie's Cat Hat Emporium"
                },
                "platform": {
                  "type": "string",
                  "title": "Platform",
                  "description": "The e-commerce platform of the store."
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The store domain.",
                  "example": "example.com"
                },
                "is_syncing": {
                  "type": "boolean",
                  "title": "Is Syncing",
                  "description": "Whether the e-commerce store is currently [syncing](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#syncing-an-e-commerce-store)."
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The email address for the store.",
                  "example": "freddie@mailchimp.com"
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                  "example": "USD"
                },
                "money_format": {
                  "type": "string",
                  "title": "Money Format",
                  "description": "The currency format for the store. For example: `$`, `£`, etc.",
                  "example": "$"
                },
                "primary_locale": {
                  "type": "string",
                  "title": "Primary Locale",
                  "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                  "example": "fr"
                },
                "timezone": {
                  "type": "string",
                  "title": "Timezone",
                  "description": "The timezone for the store.",
                  "example": "Eastern"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone",
                  "description": "The store phone number.",
                  "example": "404-444-4444"
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The store address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The store's mailing address.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the store's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the store is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The store's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the store's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The store's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The store's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for to the store's country.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude of the store location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude of the store location.",
                      "example": 45.427408
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Store",
              "description": "An individual store in an account.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "readOnly": true,
                  "example": "example_store"
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique identifier for the [MailChimp List](http://developer.mailchimp.com/documentation/mailchimp/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                  "readOnly": true,
                  "example": "1a2df69511"
                },
                "name": {
                  "type": "string",
                  "title": "Store Name",
                  "description": "The name of the store.",
                  "example": "Freddie's Cat Hat Emporium"
                },
                "platform": {
                  "type": "string",
                  "title": "Platform",
                  "description": "The e-commerce platform of the store."
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The store domain.",
                  "example": "example.com"
                },
                "is_syncing": {
                  "type": "boolean",
                  "title": "Is Syncing",
                  "description": "Whether the e-commerce store is currently [syncing](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#syncing-an-e-commerce-store)."
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The email address for the store.",
                  "example": "freddie@mailchimp.com"
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                  "example": "USD"
                },
                "money_format": {
                  "type": "string",
                  "title": "Money Format",
                  "description": "The currency format for the store. For example: `$`, `£`, etc.",
                  "example": "$"
                },
                "primary_locale": {
                  "type": "string",
                  "title": "Primary Locale",
                  "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                  "example": "fr"
                },
                "timezone": {
                  "type": "string",
                  "title": "Timezone",
                  "description": "The timezone for the store.",
                  "example": "Eastern"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone",
                  "description": "The store phone number.",
                  "example": "404-444-4444"
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The store address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The store's mailing address.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the store's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the store is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The store's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the store's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The store's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The store's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for to the store's country.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude of the store location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude of the store location.",
                      "example": 45.427408
                    }
                  }
                },
                "connected_site": {
                  "type": "object",
                  "title": "Connected Site",
                  "description": "The Connected Site associated with the store.",
                  "readOnly": true,
                  "properties": {
                    "site_foreign_id": {
                      "type": "string",
                      "title": "Connected Site Foreign ID",
                      "description": "The unique identifier for the connected site.",
                      "readOnly": true,
                      "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                    },
                    "site_script": {
                      "type": "object",
                      "title": "Script",
                      "description": "The script used to connect your site with MailChimp.",
                      "readOnly": true,
                      "properties": {
                        "url": {
                          "type": "string",
                          "title": "Script URL",
                          "description": "The URL used for any integrations that offer built-in support for connected sites.",
                          "readOnly": true,
                          "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                        },
                        "fragment": {
                          "type": "string",
                          "title": "Script Fragment",
                          "description": "A pre-built script that you can copy-and-paste into your site to integrate it with MailChimp.",
                          "readOnly": true,
                          "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                        }
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the store was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the store was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}": {
      "get": {
        "summary": "Get information about a specific store",
        "description": "Get information about a specific store.",
        "operationId": "getEcommerceStoresId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Store",
              "description": "An individual store in an account.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "readOnly": true,
                  "example": "example_store"
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique identifier for the [MailChimp List](http://developer.mailchimp.com/documentation/mailchimp/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                  "readOnly": true,
                  "example": "1a2df69511"
                },
                "name": {
                  "type": "string",
                  "title": "Store Name",
                  "description": "The name of the store.",
                  "example": "Freddie's Cat Hat Emporium"
                },
                "platform": {
                  "type": "string",
                  "title": "Platform",
                  "description": "The e-commerce platform of the store."
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The store domain.",
                  "example": "example.com"
                },
                "is_syncing": {
                  "type": "boolean",
                  "title": "Is Syncing",
                  "description": "Whether the e-commerce store is currently [syncing](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#syncing-an-e-commerce-store)."
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The email address for the store.",
                  "example": "freddie@mailchimp.com"
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                  "example": "USD"
                },
                "money_format": {
                  "type": "string",
                  "title": "Money Format",
                  "description": "The currency format for the store. For example: `$`, `£`, etc.",
                  "example": "$"
                },
                "primary_locale": {
                  "type": "string",
                  "title": "Primary Locale",
                  "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                  "example": "fr"
                },
                "timezone": {
                  "type": "string",
                  "title": "Timezone",
                  "description": "The timezone for the store.",
                  "example": "Eastern"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone",
                  "description": "The store phone number.",
                  "example": "404-444-4444"
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The store address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The store's mailing address.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the store's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the store is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The store's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the store's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The store's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The store's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for to the store's country.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude of the store location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude of the store location.",
                      "example": 45.427408
                    }
                  }
                },
                "connected_site": {
                  "type": "object",
                  "title": "Connected Site",
                  "description": "The Connected Site associated with the store.",
                  "readOnly": true,
                  "properties": {
                    "site_foreign_id": {
                      "type": "string",
                      "title": "Connected Site Foreign ID",
                      "description": "The unique identifier for the connected site.",
                      "readOnly": true,
                      "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                    },
                    "site_script": {
                      "type": "object",
                      "title": "Script",
                      "description": "The script used to connect your site with MailChimp.",
                      "readOnly": true,
                      "properties": {
                        "url": {
                          "type": "string",
                          "title": "Script URL",
                          "description": "The URL used for any integrations that offer built-in support for connected sites.",
                          "readOnly": true,
                          "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                        },
                        "fragment": {
                          "type": "string",
                          "title": "Script Fragment",
                          "description": "A pre-built script that you can copy-and-paste into your site to integrate it with MailChimp.",
                          "readOnly": true,
                          "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                        }
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the store was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the store was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a store",
        "description": "Update a store.",
        "operationId": "patchEcommerceStoresId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Store",
              "description": "An individual store in an account.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "readOnly": true,
                  "example": "example_store"
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique identifier for the [MailChimp List](http://developer.mailchimp.com/documentation/mailchimp/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                  "readOnly": true,
                  "example": "1a2df69511"
                },
                "name": {
                  "type": "string",
                  "title": "Store Name",
                  "description": "The name of the store.",
                  "example": "Freddie's Cat Hat Emporium"
                },
                "platform": {
                  "type": "string",
                  "title": "Platform",
                  "description": "The e-commerce platform of the store."
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The store domain.",
                  "example": "example.com"
                },
                "is_syncing": {
                  "type": "boolean",
                  "title": "Is Syncing",
                  "description": "Whether the e-commerce store is currently [syncing](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#syncing-an-e-commerce-store)."
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The email address for the store.",
                  "example": "freddie@mailchimp.com"
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                  "example": "USD"
                },
                "money_format": {
                  "type": "string",
                  "title": "Money Format",
                  "description": "The currency format for the store. For example: `$`, `£`, etc.",
                  "example": "$"
                },
                "primary_locale": {
                  "type": "string",
                  "title": "Primary Locale",
                  "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                  "example": "fr"
                },
                "timezone": {
                  "type": "string",
                  "title": "Timezone",
                  "description": "The timezone for the store.",
                  "example": "Eastern"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone",
                  "description": "The store phone number.",
                  "example": "404-444-4444"
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The store address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The store's mailing address.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the store's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the store is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The store's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the store's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The store's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The store's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for to the store's country.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude of the store location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude of the store location.",
                      "example": 45.427408
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Store",
              "description": "An individual store in an account.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "readOnly": true,
                  "example": "example_store"
                },
                "list_id": {
                  "type": "string",
                  "title": "List ID",
                  "description": "The unique identifier for the [MailChimp List](http://developer.mailchimp.com/documentation/mailchimp/reference/lists/) that's associated with the store. The `list_id` for a specific store can't change.",
                  "readOnly": true,
                  "example": "1a2df69511"
                },
                "name": {
                  "type": "string",
                  "title": "Store Name",
                  "description": "The name of the store.",
                  "example": "Freddie's Cat Hat Emporium"
                },
                "platform": {
                  "type": "string",
                  "title": "Platform",
                  "description": "The e-commerce platform of the store."
                },
                "domain": {
                  "type": "string",
                  "title": "Domain",
                  "description": "The store domain.",
                  "example": "example.com"
                },
                "is_syncing": {
                  "type": "boolean",
                  "title": "Is Syncing",
                  "description": "Whether the e-commerce store is currently [syncing](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#syncing-an-e-commerce-store)."
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The email address for the store.",
                  "example": "freddie@mailchimp.com"
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts.",
                  "example": "USD"
                },
                "money_format": {
                  "type": "string",
                  "title": "Money Format",
                  "description": "The currency format for the store. For example: `$`, `£`, etc.",
                  "example": "$"
                },
                "primary_locale": {
                  "type": "string",
                  "title": "Primary Locale",
                  "description": "The primary locale for the store. For example: `en`, `de`, etc.",
                  "example": "fr"
                },
                "timezone": {
                  "type": "string",
                  "title": "Timezone",
                  "description": "The timezone for the store.",
                  "example": "Eastern"
                },
                "phone": {
                  "type": "string",
                  "title": "Phone",
                  "description": "The store phone number.",
                  "example": "404-444-4444"
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The store address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The store's mailing address.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the store's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the store is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The store's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the store's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The store's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The store's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for to the store's country.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude of the store location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude of the store location.",
                      "example": 45.427408
                    }
                  }
                },
                "connected_site": {
                  "type": "object",
                  "title": "Connected Site",
                  "description": "The Connected Site associated with the store.",
                  "readOnly": true,
                  "properties": {
                    "site_foreign_id": {
                      "type": "string",
                      "title": "Connected Site Foreign ID",
                      "description": "The unique identifier for the connected site.",
                      "readOnly": true,
                      "example": "a180c384d7db88b if created in-app, MC001 if created via API"
                    },
                    "site_script": {
                      "type": "object",
                      "title": "Script",
                      "description": "The script used to connect your site with MailChimp.",
                      "readOnly": true,
                      "properties": {
                        "url": {
                          "type": "string",
                          "title": "Script URL",
                          "description": "The URL used for any integrations that offer built-in support for connected sites.",
                          "readOnly": true,
                          "example": "https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js"
                        },
                        "fragment": {
                          "type": "string",
                          "title": "Script Fragment",
                          "description": "A pre-built script that you can copy-and-paste into your site to integrate it with MailChimp.",
                          "readOnly": true,
                          "example": "<script id=\"mcjs\">!function(c,h,i,m,p){m=c.createElement(h),p=c.getElementsByTagName(h)[0],m.async=1,m.src=i,p.parentNode.insertBefore(m,p)}(document,\"script\",\"https://chimpstatic.com/mcjs-connected/js/users/{user-hash}/{site-hash}.js\");</script>"
                        }
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the store was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the store was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a store",
        "description": "Delete a store. Deleting a store will also delete any associated subresources, including Customers, Orders, Products, and Carts.",
        "operationId": "deleteEcommerceStoresId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/carts": {
      "get": {
        "summary": "Get information about a store's carts",
        "description": "Get information about a store's carts.",
        "operationId": "getEcommerceStoresIdCarts",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Carts",
              "description": "A collection of a store's carts.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "carts": {
                  "type": "array",
                  "title": "E-commerce Store Carts",
                  "description": "An array of objects, each representing a cart.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Cart",
                    "description": "Information about a specific cart.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Cart Foreign ID",
                        "description": "A unique identifier for the cart.",
                        "readOnly": true
                      },
                      "customer": {
                        "type": "object",
                        "title": "E-commerce Customer",
                        "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Customer Foreign ID",
                            "description": "A unique identifier for the customer.",
                            "readOnly": true
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "The customer's email address.",
                            "readOnly": true
                          },
                          "opt_in_status": {
                            "type": "boolean",
                            "title": "Opt-in Status",
                            "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The customer's company."
                          },
                          "first_name": {
                            "type": "string",
                            "title": "First Name",
                            "description": "The customer's first name."
                          },
                          "last_name": {
                            "type": "string",
                            "title": "Last Name",
                            "description": "The customer's last name."
                          },
                          "orders_count": {
                            "type": "integer",
                            "title": "Orders Count",
                            "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                            "example": 4
                          },
                          "total_spent": {
                            "type": "number",
                            "title": "Total Spent",
                            "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                            "example": 100
                          },
                          "address": {
                            "type": "object",
                            "title": "Address",
                            "description": "The customer's address.",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The mailing address of the customer.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the customer's mailing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city the customer is located in.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The customer's state name or normalized province.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the customer's province or state.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The customer's postal or zip code.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The customer's country.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the customer's country.",
                                "example": "US"
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the customer was created.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the customer was last updated.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "$ref": "#/definitions/HATEOASLinks"
                          }
                        }
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "A string that uniquely identifies the campaign associated with a cart.",
                        "example": "839488a60b"
                      },
                      "checkout_url": {
                        "type": "string",
                        "title": "Checkout URL",
                        "description": "The URL for the cart. This parameter is required for [Abandoned Cart](http://kb.mailchimp.com/automation/create-an-abandoned-cart-email) automations."
                      },
                      "currency_code": {
                        "type": "string",
                        "title": "Currency Code",
                        "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                      },
                      "order_total": {
                        "type": "number",
                        "title": "Order Total",
                        "description": "The order total for the cart."
                      },
                      "tax_total": {
                        "type": "number",
                        "title": "Tax Total",
                        "description": "The total tax for the cart."
                      },
                      "lines": {
                        "type": "array",
                        "title": "Cart Line Items",
                        "description": "An array of the cart's line items.",
                        "items": {
                          "type": "object",
                          "title": "E-commerce Cart Line Item",
                          "description": "Information about a specific cart line item.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "Cart Line Item Foreign ID",
                              "description": "A unique identifier for the cart line item.",
                              "readOnly": true
                            },
                            "product_id": {
                              "type": "string",
                              "title": "Cart Line Product Foreign ID",
                              "description": "A unique identifier for the product associated with the cart line item."
                            },
                            "product_title": {
                              "type": "string",
                              "title": "Cart Line Product Title",
                              "description": "The name of the product for the cart line item.",
                              "readOnly": true
                            },
                            "product_variant_id": {
                              "type": "string",
                              "title": "Cart Line Product Variant Foreign ID",
                              "description": "A unique identifier for the product variant associated with the cart line item."
                            },
                            "product_variant_title": {
                              "type": "string",
                              "title": "Cart Line Product Variant Title",
                              "description": "The name of the product variant for the cart line item.",
                              "readOnly": true
                            },
                            "quantity": {
                              "type": "integer",
                              "title": "Quantity",
                              "description": "The quantity of a cart line item."
                            },
                            "price": {
                              "type": "number",
                              "title": "Price",
                              "description": "The price of a cart line item."
                            },
                            "_links": {
                              "$ref": "#/definitions/HATEOASLinks"
                            }
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the cart was created.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the cart was last updated.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new cart to a store",
        "description": "Add a new cart to a store.",
        "operationId": "postEcommerceStoresIdCarts",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Cart",
              "description": "Information about a specific cart.",
              "required": [
                "id",
                "customer",
                "currency_code",
                "order_total",
                "lines"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Foreign ID",
                  "description": "A unique identifier for the cart."
                },
                "customer": {
                  "type": "object",
                  "title": "Cart Customer",
                  "description": "Information about a specific customer. Carts for existing customers should include only the `id` parameter in the `customer` object body.",
                  "required": [
                    "id"
                  ],
                  "allOf": [
                    {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                      "required": [
                        "id",
                        "email_address",
                        "opt_in_status"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer."
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address."
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign for a cart.",
                  "example": "839488a60b"
                },
                "checkout_url": {
                  "type": "string",
                  "title": "Checkout URL",
                  "description": "The URL for the cart. This parameter is required for [Abandoned Cart](http://kb.mailchimp.com/automation/create-an-abandoned-cart-email) automations."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total for the cart."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The total tax for the cart."
                },
                "lines": {
                  "type": "array",
                  "title": "Cart Line Items",
                  "description": "An array of the cart's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Cart Line Item",
                    "description": "Information about a specific cart line item.",
                    "required": [
                      "id",
                      "product_id",
                      "product_variant_id",
                      "quantity",
                      "price"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Cart Line Item Foreign ID",
                        "description": "A unique identifier for the cart line item."
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Cart Line Product Foreign ID",
                        "description": "A unique identifier for the product associated with the cart line item."
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Cart Line Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the cart line item."
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of a cart line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a cart line item."
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Cart",
              "description": "Information about a specific cart.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Foreign ID",
                  "description": "A unique identifier for the cart.",
                  "readOnly": true
                },
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "$ref": "#/definitions/HATEOASLinks"
                    }
                  }
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with a cart.",
                  "example": "839488a60b"
                },
                "checkout_url": {
                  "type": "string",
                  "title": "Checkout URL",
                  "description": "The URL for the cart. This parameter is required for [Abandoned Cart](http://kb.mailchimp.com/automation/create-an-abandoned-cart-email) automations."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total for the cart."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The total tax for the cart."
                },
                "lines": {
                  "type": "array",
                  "title": "Cart Line Items",
                  "description": "An array of the cart's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Cart Line Item",
                    "description": "Information about a specific cart line item.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Cart Line Item Foreign ID",
                        "description": "A unique identifier for the cart line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Cart Line Product Foreign ID",
                        "description": "A unique identifier for the product associated with the cart line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Cart Line Product Title",
                        "description": "The name of the product for the cart line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Cart Line Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the cart line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Cart Line Product Variant Title",
                        "description": "The name of the product variant for the cart line item.",
                        "readOnly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of a cart line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a cart line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the cart was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the cart was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/carts/{cart_id}": {
      "get": {
        "summary": "Get information about a specific cart",
        "description": "Get information about a specific cart.",
        "operationId": "getEcommerceStoresIdCartsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Cart",
              "description": "Information about a specific cart.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Foreign ID",
                  "description": "A unique identifier for the cart.",
                  "readOnly": true
                },
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "$ref": "#/definitions/HATEOASLinks"
                    }
                  }
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with a cart.",
                  "example": "839488a60b"
                },
                "checkout_url": {
                  "type": "string",
                  "title": "Checkout URL",
                  "description": "The URL for the cart. This parameter is required for [Abandoned Cart](http://kb.mailchimp.com/automation/create-an-abandoned-cart-email) automations."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total for the cart."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The total tax for the cart."
                },
                "lines": {
                  "type": "array",
                  "title": "Cart Line Items",
                  "description": "An array of the cart's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Cart Line Item",
                    "description": "Information about a specific cart line item.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Cart Line Item Foreign ID",
                        "description": "A unique identifier for the cart line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Cart Line Product Foreign ID",
                        "description": "A unique identifier for the product associated with the cart line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Cart Line Product Title",
                        "description": "The name of the product for the cart line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Cart Line Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the cart line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Cart Line Product Variant Title",
                        "description": "The name of the product variant for the cart line item.",
                        "readOnly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of a cart line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a cart line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the cart was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the cart was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific cart",
        "description": "Update a specific cart.",
        "operationId": "patchEcommerceStoresIdCartsId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Cart",
              "description": "Information about a specific cart.",
              "properties": {
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    }
                  }
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with a cart.",
                  "example": "839488a60b"
                },
                "checkout_url": {
                  "type": "string",
                  "title": "Checkout URL",
                  "description": "The URL for the cart. This parameter is required for [Abandoned Cart](http://kb.mailchimp.com/automation/create-an-abandoned-cart-email) automations."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total for the cart."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The total tax for the cart."
                },
                "lines": {
                  "type": "array",
                  "title": "Cart Line Items",
                  "description": "An array of the cart's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Cart Line Item",
                    "description": "Information about a specific cart line item.",
                    "properties": {
                      "product_id": {
                        "type": "string",
                        "title": "Cart Line Product Foreign ID",
                        "description": "A unique identifier for the product associated with the cart line item."
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Cart Line Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the cart line item."
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of a cart line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a cart line item."
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Cart",
              "description": "Information about a specific cart.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Foreign ID",
                  "description": "A unique identifier for the cart.",
                  "readOnly": true
                },
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "$ref": "#/definitions/HATEOASLinks"
                    }
                  }
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with a cart.",
                  "example": "839488a60b"
                },
                "checkout_url": {
                  "type": "string",
                  "title": "Checkout URL",
                  "description": "The URL for the cart. This parameter is required for [Abandoned Cart](http://kb.mailchimp.com/automation/create-an-abandoned-cart-email) automations."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the cart uses."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total for the cart."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The total tax for the cart."
                },
                "lines": {
                  "type": "array",
                  "title": "Cart Line Items",
                  "description": "An array of the cart's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Cart Line Item",
                    "description": "Information about a specific cart line item.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Cart Line Item Foreign ID",
                        "description": "A unique identifier for the cart line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Cart Line Product Foreign ID",
                        "description": "A unique identifier for the product associated with the cart line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Cart Line Product Title",
                        "description": "The name of the product for the cart line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Cart Line Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the cart line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Cart Line Product Variant Title",
                        "description": "The name of the product variant for the cart line item.",
                        "readOnly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of a cart line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a cart line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the cart was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the cart was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a cart",
        "description": "Delete a cart.",
        "operationId": "deleteEcommerceStoresIdCartsId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/carts/{cart_id}/lines": {
      "get": {
        "summary": "Get information about a cart's line items",
        "description": "Get information about a cart's line items.",
        "operationId": "getEcommerceStoresIdCartsIdLines",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Cart Lines",
              "description": "A collection of a cart's line items.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "cart_id": {
                  "type": "string",
                  "title": "Cart ID",
                  "description": "The cart id."
                },
                "lines": {
                  "type": "array",
                  "title": "Ecommerce Cart Lines",
                  "description": "An array of objects, each representing a cart's line item.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Cart Line Item",
                    "description": "Information about a specific cart line item.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Cart Line Item Foreign ID",
                        "description": "A unique identifier for the cart line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Cart Line Product Foreign ID",
                        "description": "A unique identifier for the product associated with the cart line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Cart Line Product Title",
                        "description": "The name of the product for the cart line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Cart Line Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the cart line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Cart Line Product Variant Title",
                        "description": "The name of the product variant for the cart line item.",
                        "readOnly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of a cart line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a cart line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new line item to an existing cart",
        "description": "Add a new line item to an existing cart.",
        "operationId": "postEcommerceStoresIdCartsIdLines",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Cart Line Item",
              "description": "Information about a specific cart line item.",
              "required": [
                "id",
                "product_id",
                "product_variant_id",
                "quantity",
                "price"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Line Item Foreign ID",
                  "description": "A unique identifier for the cart line item."
                },
                "product_id": {
                  "type": "string",
                  "title": "Cart Line Product Foreign ID",
                  "description": "A unique identifier for the product associated with the cart line item."
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Cart Line Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the cart line item."
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of a cart line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a cart line item."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Cart Line Item",
              "description": "Information about a specific cart line item.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Line Item Foreign ID",
                  "description": "A unique identifier for the cart line item.",
                  "readOnly": true
                },
                "product_id": {
                  "type": "string",
                  "title": "Cart Line Product Foreign ID",
                  "description": "A unique identifier for the product associated with the cart line item."
                },
                "product_title": {
                  "type": "string",
                  "title": "Cart Line Product Title",
                  "description": "The name of the product for the cart line item.",
                  "readOnly": true
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Cart Line Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the cart line item."
                },
                "product_variant_title": {
                  "type": "string",
                  "title": "Cart Line Product Variant Title",
                  "description": "The name of the product variant for the cart line item.",
                  "readOnly": true
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of a cart line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a cart line item."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/carts/{cart_id}/lines/{line_id}": {
      "get": {
        "summary": "Get information about a specific cart line item",
        "description": "Get information about a specific cart line item.",
        "operationId": "getEcommerceStoresIdCartsIdLinesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartLineID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Cart Line Item",
              "description": "Information about a specific cart line item.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Line Item Foreign ID",
                  "description": "A unique identifier for the cart line item.",
                  "readOnly": true
                },
                "product_id": {
                  "type": "string",
                  "title": "Cart Line Product Foreign ID",
                  "description": "A unique identifier for the product associated with the cart line item."
                },
                "product_title": {
                  "type": "string",
                  "title": "Cart Line Product Title",
                  "description": "The name of the product for the cart line item.",
                  "readOnly": true
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Cart Line Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the cart line item."
                },
                "product_variant_title": {
                  "type": "string",
                  "title": "Cart Line Product Variant Title",
                  "description": "The name of the product variant for the cart line item.",
                  "readOnly": true
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of a cart line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a cart line item."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific cart line item",
        "description": "Update a specific cart line item.",
        "operationId": "patchEcommerceStoresIdCartsIdLinesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartLineID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Cart Line Item",
              "description": "Information about a specific cart line item.",
              "properties": {
                "product_id": {
                  "type": "string",
                  "title": "Cart Line Product Foreign ID",
                  "description": "A unique identifier for the product associated with the cart line item."
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Cart Line Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the cart line item."
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of a cart line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a cart line item."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Cart Line Item",
              "description": "Information about a specific cart line item.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Cart Line Item Foreign ID",
                  "description": "A unique identifier for the cart line item.",
                  "readOnly": true
                },
                "product_id": {
                  "type": "string",
                  "title": "Cart Line Product Foreign ID",
                  "description": "A unique identifier for the product associated with the cart line item."
                },
                "product_title": {
                  "type": "string",
                  "title": "Cart Line Product Title",
                  "description": "The name of the product for the cart line item.",
                  "readOnly": true
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Cart Line Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the cart line item."
                },
                "product_variant_title": {
                  "type": "string",
                  "title": "Cart Line Product Variant Title",
                  "description": "The name of the product variant for the cart line item.",
                  "readOnly": true
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of a cart line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a cart line item."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a specific cart line item",
        "description": "Delete a specific cart line item.",
        "operationId": "deleteEcommerceStoresIdCartsLinesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCartLineID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/customers": {
      "get": {
        "summary": "Get information about a store's customers",
        "description": "Get information about a store's customers.",
        "operationId": "getEcommerceStoresIdCustomers",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCustomerEmailAddress"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Customers",
              "description": "A collection of the store's customers.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "customers": {
                  "type": "array",
                  "title": "Customers",
                  "description": "An array of objects, each representing a customer of a store.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Customer",
                    "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Customer Foreign ID",
                        "description": "A unique identifier for the customer.",
                        "readOnly": true
                      },
                      "email_address": {
                        "type": "string",
                        "title": "Email Address",
                        "description": "The customer's email address.",
                        "readOnly": true
                      },
                      "opt_in_status": {
                        "type": "boolean",
                        "title": "Opt-in Status",
                        "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                      },
                      "company": {
                        "type": "string",
                        "title": "Company",
                        "description": "The customer's company."
                      },
                      "first_name": {
                        "type": "string",
                        "title": "First Name",
                        "description": "The customer's first name."
                      },
                      "last_name": {
                        "type": "string",
                        "title": "Last Name",
                        "description": "The customer's last name."
                      },
                      "orders_count": {
                        "type": "integer",
                        "title": "Orders Count",
                        "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                        "example": 4
                      },
                      "total_spent": {
                        "type": "number",
                        "title": "Total Spent",
                        "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                        "example": 100
                      },
                      "address": {
                        "type": "object",
                        "title": "Address",
                        "description": "The customer's address.",
                        "properties": {
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The mailing address of the customer.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the customer's mailing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city the customer is located in.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The customer's state name or normalized province.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the customer's province or state.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The customer's postal or zip code.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The customer's country.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the customer's country.",
                            "example": "US"
                          }
                        }
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the customer was created.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the customer was last updated.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new customer to a store",
        "description": "Add a new customer to a store.",
        "operationId": "postEcommerceStoresIdCustomers",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Customer",
              "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
              "required": [
                "id",
                "email_address",
                "opt_in_status"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Customer Foreign ID",
                  "description": "A unique identifier for the customer."
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The customer's email address."
                },
                "opt_in_status": {
                  "type": "boolean",
                  "title": "Opt-in Status",
                  "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The customer's company."
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name",
                  "description": "The customer's first name."
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name",
                  "description": "The customer's last name."
                },
                "orders_count": {
                  "type": "integer",
                  "title": "Orders Count",
                  "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 4
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 100
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The customer's address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The mailing address of the customer.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the customer's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the customer is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The customer's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the customer's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The customer's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The customer's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the customer's country.",
                      "example": "US"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Customer",
              "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Customer Foreign ID",
                  "description": "A unique identifier for the customer.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The customer's email address.",
                  "readOnly": true
                },
                "opt_in_status": {
                  "type": "boolean",
                  "title": "Opt-in Status",
                  "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The customer's company."
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name",
                  "description": "The customer's first name."
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name",
                  "description": "The customer's last name."
                },
                "orders_count": {
                  "type": "integer",
                  "title": "Orders Count",
                  "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 4
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 100
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The customer's address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The mailing address of the customer.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the customer's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the customer is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The customer's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the customer's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The customer's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The customer's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the customer's country.",
                      "example": "US"
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the customer was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the customer was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/customers/{customer_id}": {
      "get": {
        "summary": "Get information about a specific customer",
        "description": "Get information about a specific customer.",
        "operationId": "getEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCustomerID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Customer",
              "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Customer Foreign ID",
                  "description": "A unique identifier for the customer.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The customer's email address.",
                  "readOnly": true
                },
                "opt_in_status": {
                  "type": "boolean",
                  "title": "Opt-in Status",
                  "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The customer's company."
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name",
                  "description": "The customer's first name."
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name",
                  "description": "The customer's last name."
                },
                "orders_count": {
                  "type": "integer",
                  "title": "Orders Count",
                  "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 4
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 100
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The customer's address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The mailing address of the customer.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the customer's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the customer is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The customer's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the customer's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The customer's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The customer's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the customer's country.",
                      "example": "US"
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the customer was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the customer was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Add or update a customer",
        "description": "Add or update a customer.",
        "operationId": "putEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCustomerID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Customer",
              "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
              "required": [
                "id",
                "email_address",
                "opt_in_status"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Customer Foreign ID",
                  "description": "A unique identifier for the customer."
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The customer's email address."
                },
                "opt_in_status": {
                  "type": "boolean",
                  "title": "Opt-in Status",
                  "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The customer's company."
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name",
                  "description": "The customer's first name."
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name",
                  "description": "The customer's last name."
                },
                "orders_count": {
                  "type": "integer",
                  "title": "Orders Count",
                  "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 4
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 100
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The customer's address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The mailing address of the customer.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the customer's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the customer is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The customer's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the customer's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The customer's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The customer's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the customer's country.",
                      "example": "US"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Customer",
              "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Customer Foreign ID",
                  "description": "A unique identifier for the customer.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The customer's email address.",
                  "readOnly": true
                },
                "opt_in_status": {
                  "type": "boolean",
                  "title": "Opt-in Status",
                  "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The customer's company."
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name",
                  "description": "The customer's first name."
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name",
                  "description": "The customer's last name."
                },
                "orders_count": {
                  "type": "integer",
                  "title": "Orders Count",
                  "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 4
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 100
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The customer's address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The mailing address of the customer.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the customer's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the customer is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The customer's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the customer's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The customer's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The customer's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the customer's country.",
                      "example": "US"
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the customer was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the customer was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a customer",
        "description": "Update a customer.",
        "operationId": "patchEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCustomerID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Customer",
              "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
              "properties": {
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The customer's email address.",
                  "readOnly": true
                },
                "opt_in_status": {
                  "type": "boolean",
                  "title": "Opt-in Status",
                  "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The customer's company."
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name",
                  "description": "The customer's first name."
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name",
                  "description": "The customer's last name."
                },
                "orders_count": {
                  "type": "integer",
                  "title": "Orders Count",
                  "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 4
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 100
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The customer's address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The mailing address of the customer.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the customer's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the customer is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The customer's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the customer's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The customer's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The customer's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the customer's country.",
                      "example": "US"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Customer",
              "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Customer Foreign ID",
                  "description": "A unique identifier for the customer.",
                  "readOnly": true
                },
                "email_address": {
                  "type": "string",
                  "title": "Email Address",
                  "description": "The customer's email address.",
                  "readOnly": true
                },
                "opt_in_status": {
                  "type": "boolean",
                  "title": "Opt-in Status",
                  "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                },
                "company": {
                  "type": "string",
                  "title": "Company",
                  "description": "The customer's company."
                },
                "first_name": {
                  "type": "string",
                  "title": "First Name",
                  "description": "The customer's first name."
                },
                "last_name": {
                  "type": "string",
                  "title": "Last Name",
                  "description": "The customer's last name."
                },
                "orders_count": {
                  "type": "integer",
                  "title": "Orders Count",
                  "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 4
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                  "example": 100
                },
                "address": {
                  "type": "object",
                  "title": "Address",
                  "description": "The customer's address.",
                  "properties": {
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The mailing address of the customer.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the customer's mailing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city the customer is located in.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The customer's state name or normalized province.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the customer's province or state.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The customer's postal or zip code.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The customer's country.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the customer's country.",
                      "example": "US"
                    }
                  }
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the customer was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the customer was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a customer",
        "description": "Delete a customer from a store.",
        "operationId": "deleteEcommerceStoresIdCustomersId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreCustomerID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/promo-rules": {
      "get": {
        "summary": "Get information about a store's promo rules",
        "description": "Get information about a store's promo rules.",
        "operationId": "getEcommerceStoresIdPromorules",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Promo Rules",
              "description": "A collection of the store's promo rules.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "promo_rules": {
                  "type": "array",
                  "title": "Promo Rules",
                  "description": "An array of objects, each representing promo rules defined for a store.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Promo Rule",
                    "description": "Information about an Ecommerce Store's specific Promo Rule",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Promo Rule Foreign ID",
                        "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                        "readonly": true
                      },
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length 100.",
                        "example": "50% off Total Order"
                      },
                      "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                        "example": "Save BIG during our summer sale!"
                      },
                      "starts_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Promo Start Time",
                        "description": "The date and time when the promotion is in effect in ISO 8601 format."
                      },
                      "ends_at": {
                        "type": "string",
                        "format": "Promo date-time",
                        "title": "End Time",
                        "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                      },
                      "amount": {
                        "type": "number",
                        "title": "Amount",
                        "format": "float",
                        "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                        "example": 0.5
                      },
                      "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "Type of discount. For free shipping set type to fixed.",
                        "enum": [
                          "fixed",
                          "percentage"
                        ]
                      },
                      "target": {
                        "type": "string",
                        "title": "Target",
                        "description": "The target that the discount applies to.",
                        "enum": [
                          "per_item",
                          "total",
                          "shipping"
                        ]
                      },
                      "enabled": {
                        "type": "boolean",
                        "title": "Enabled",
                        "description": "Whether the promo rule is currently enabled.",
                        "example": "true"
                      },
                      "created_at_foreign": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Foreign Create Time",
                        "description": "The date and time the promotion was created in ISO 8601 format."
                      },
                      "updated_at_foreign": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Foreign Update Time",
                        "description": "The date and time the promotion was updated in ISO 8601 format."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new promo rule to a store",
        "description": "Add a new promo rule to a store.",
        "operationId": "postEcommerceStoresIdPromorules",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Promo Rule",
              "description": "Information about an Ecommerce Store's specific Promo Rule.",
              "required": [
                "id",
                "description",
                "amount",
                "type",
                "target"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Promo Rule Foreign ID",
                  "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50."
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length 100.",
                  "example": "50% off Total Order"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                  "example": "Save BIG during our summer sale!"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Promo Start Time",
                  "description": "The date and time when the promotion is in effect in ISO 8601 format."
                },
                "ends_at": {
                  "type": "string",
                  "format": "Promo date-time",
                  "title": "End Time",
                  "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                },
                "amount": {
                  "type": "number",
                  "title": "Amount",
                  "format": "float",
                  "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                  "example": 0.5
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "Type of discount. For free shipping set type to fixed.",
                  "enum": [
                    "fixed",
                    "percentage"
                  ]
                },
                "target": {
                  "type": "string",
                  "title": "Target",
                  "description": "The target that the discount applies to.",
                  "enum": [
                    "per_item",
                    "total",
                    "shipping"
                  ]
                },
                "enabled": {
                  "type": "boolean",
                  "title": "Enabled",
                  "description": "Whether the promo rule is currently enabled.",
                  "example": "true"
                },
                "created_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Create Time",
                  "description": "The date and time the promotion was created in ISO 8601 format."
                },
                "updated_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Update Time",
                  "description": "The date and time the promotion was updated in ISO 8601 format."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Promo Rule",
              "description": "Information about an Ecommerce Store's specific Promo Rule",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Promo Rule Foreign ID",
                  "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                  "readonly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length 100.",
                  "example": "50% off Total Order"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                  "example": "Save BIG during our summer sale!"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Promo Start Time",
                  "description": "The date and time when the promotion is in effect in ISO 8601 format."
                },
                "ends_at": {
                  "type": "string",
                  "format": "Promo date-time",
                  "title": "End Time",
                  "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                },
                "amount": {
                  "type": "number",
                  "title": "Amount",
                  "format": "float",
                  "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                  "example": 0.5
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "Type of discount. For free shipping set type to fixed.",
                  "enum": [
                    "fixed",
                    "percentage"
                  ]
                },
                "target": {
                  "type": "string",
                  "title": "Target",
                  "description": "The target that the discount applies to.",
                  "enum": [
                    "per_item",
                    "total",
                    "shipping"
                  ]
                },
                "enabled": {
                  "type": "boolean",
                  "title": "Enabled",
                  "description": "Whether the promo rule is currently enabled.",
                  "example": "true"
                },
                "created_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Create Time",
                  "description": "The date and time the promotion was created in ISO 8601 format."
                },
                "updated_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Update Time",
                  "description": "The date and time the promotion was updated in ISO 8601 format."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/promo-rules/{promo_rule_id}": {
      "get": {
        "summary": "Get information about a specific promo rule",
        "description": "Get information about a specific promo rule.",
        "operationId": "getEcommerceStoresIdPromorulesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStorePromoruleID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Promo Rule",
              "description": "Information about an Ecommerce Store's specific Promo Rule",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Promo Rule Foreign ID",
                  "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                  "readonly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length 100.",
                  "example": "50% off Total Order"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                  "example": "Save BIG during our summer sale!"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Promo Start Time",
                  "description": "The date and time when the promotion is in effect in ISO 8601 format."
                },
                "ends_at": {
                  "type": "string",
                  "format": "Promo date-time",
                  "title": "End Time",
                  "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                },
                "amount": {
                  "type": "number",
                  "title": "Amount",
                  "format": "float",
                  "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                  "example": 0.5
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "Type of discount. For free shipping set type to fixed.",
                  "enum": [
                    "fixed",
                    "percentage"
                  ]
                },
                "target": {
                  "type": "string",
                  "title": "Target",
                  "description": "The target that the discount applies to.",
                  "enum": [
                    "per_item",
                    "total",
                    "shipping"
                  ]
                },
                "enabled": {
                  "type": "boolean",
                  "title": "Enabled",
                  "description": "Whether the promo rule is currently enabled.",
                  "example": "true"
                },
                "created_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Create Time",
                  "description": "The date and time the promotion was created in ISO 8601 format."
                },
                "updated_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Update Time",
                  "description": "The date and time the promotion was updated in ISO 8601 format."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a promo rule. Please note, when a promo rule is updated, the new property/properties will apply to all the promo codes that share this promo_rule_id.",
        "description": "Update a promo rule.",
        "operationId": "patchEcommerceStoresIdPromorulesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStorePromoruleID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Promo Rule",
              "description": "Information about an Ecommerce Store's specific Promo Rule.",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length 100.",
                  "example": "50% off Total Order"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                  "example": "Save BIG during our summer sale!"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Promo Start Time",
                  "description": "The date and time when the promotion is in effect in ISO 8601 format."
                },
                "ends_at": {
                  "type": "string",
                  "format": "Promo date-time",
                  "title": "End Time",
                  "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                },
                "amount": {
                  "type": "number",
                  "title": "Amount",
                  "format": "float",
                  "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                  "example": 0.5
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "Type of discount. For free shipping set type to fixed.",
                  "enum": [
                    "fixed",
                    "percentage"
                  ]
                },
                "target": {
                  "type": "string",
                  "title": "Target",
                  "description": "The target that the discount applies to.",
                  "enum": [
                    "per_item",
                    "total",
                    "shipping"
                  ]
                },
                "enabled": {
                  "type": "boolean",
                  "title": "Enabled",
                  "description": "Whether the promo rule is currently enabled.",
                  "example": "true"
                },
                "created_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Create Time",
                  "description": "The date and time the promotion was created in ISO 8601 format."
                },
                "updated_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Update Time",
                  "description": "The date and time the promotion was updated in ISO 8601 format."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Promo Rule",
              "description": "Information about an Ecommerce Store's specific Promo Rule",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Promo Rule Foreign ID",
                  "description": "A unique identifier for the promo rule. If Ecommerce platform does not support promo rule, use promo code id as promo rule id. Restricted to UTF-8 characters with max length 50.",
                  "readonly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title that will show up in promotion campaign. Restricted to UTF-8 characters with max length 100.",
                  "example": "50% off Total Order"
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a promotion restricted to UTF-8 characters with max length 255.",
                  "example": "Save BIG during our summer sale!"
                },
                "starts_at": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Promo Start Time",
                  "description": "The date and time when the promotion is in effect in ISO 8601 format."
                },
                "ends_at": {
                  "type": "string",
                  "format": "Promo date-time",
                  "title": "End Time",
                  "description": "The date and time when the promotion ends. Must be after starts_at and in ISO 8601 format."
                },
                "amount": {
                  "type": "number",
                  "title": "Amount",
                  "format": "float",
                  "description": "The amount of the promo code discount. If 'type' is 'fixed', the amount is treated as a monetary value. If 'type' is 'percentage', amount must be a decimal value between 0.0 and 1.0, inclusive.",
                  "example": 0.5
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "Type of discount. For free shipping set type to fixed.",
                  "enum": [
                    "fixed",
                    "percentage"
                  ]
                },
                "target": {
                  "type": "string",
                  "title": "Target",
                  "description": "The target that the discount applies to.",
                  "enum": [
                    "per_item",
                    "total",
                    "shipping"
                  ]
                },
                "enabled": {
                  "type": "boolean",
                  "title": "Enabled",
                  "description": "Whether the promo rule is currently enabled.",
                  "example": "true"
                },
                "created_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Create Time",
                  "description": "The date and time the promotion was created in ISO 8601 format."
                },
                "updated_at_foreign": {
                  "type": "string",
                  "format": "date-time",
                  "title": "Foreign Update Time",
                  "description": "The date and time the promotion was updated in ISO 8601 format."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a promo rule. Please note that when a promo rule is deleted, all the promo codes that share the deleted promo rule's id will be deleted.",
        "description": "Delete a promo rule from a store.",
        "operationId": "deleteEcommerceStoresIdPromorulesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStorePromoruleID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/orders": {
      "get": {
        "summary": "Get information about a store's orders",
        "description": "Get information about a store's orders.",
        "operationId": "getEcommerceStoresIdOrders",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "customer_id",
            "title": "Customer ID",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders made by a specific customer.",
            "type": "string"
          },
          {
            "name": "has_outreach",
            "title": "Has Outreach",
            "in": "query",
            "required": false,
            "description": "Restrict results to orders that have an outreach attached. For example, an email campaign or Facebook ad.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/OrderCampaign"
          },
          {
            "$ref": "#/parameters/OrderOutreach"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Orders",
              "description": "A collection of orders in a store.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The unique identifier for the store."
                },
                "orders": {
                  "type": "array",
                  "title": "Orders",
                  "description": "An array of objects, each representing an order in a store.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order",
                    "description": "Information about a specific order.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Order Foreign ID",
                        "description": "A unique identifier for the order.",
                        "readOnly": true
                      },
                      "customer": {
                        "type": "object",
                        "title": "E-commerce Customer",
                        "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Customer Foreign ID",
                            "description": "A unique identifier for the customer.",
                            "readOnly": true
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "The customer's email address.",
                            "readOnly": true
                          },
                          "opt_in_status": {
                            "type": "boolean",
                            "title": "Opt-in Status",
                            "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The customer's company."
                          },
                          "first_name": {
                            "type": "string",
                            "title": "First Name",
                            "description": "The customer's first name."
                          },
                          "last_name": {
                            "type": "string",
                            "title": "Last Name",
                            "description": "The customer's last name."
                          },
                          "orders_count": {
                            "type": "integer",
                            "title": "Orders Count",
                            "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                            "example": 4
                          },
                          "total_spent": {
                            "type": "number",
                            "title": "Total Spent",
                            "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                            "example": 100
                          },
                          "address": {
                            "type": "object",
                            "title": "Address",
                            "description": "The customer's address.",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "title": "Address Field 1",
                                "description": "The mailing address of the customer.",
                                "example": "675 Ponce de Leon Ave NE"
                              },
                              "address2": {
                                "type": "string",
                                "title": "Address Field 2",
                                "description": "An additional field for the customer's mailing address.",
                                "example": "Suite 5000"
                              },
                              "city": {
                                "type": "string",
                                "title": "City ",
                                "description": "The city the customer is located in.",
                                "example": "Atlanta"
                              },
                              "province": {
                                "type": "string",
                                "title": "Province",
                                "description": "The customer's state name or normalized province.",
                                "example": "Georgia"
                              },
                              "province_code": {
                                "type": "string",
                                "title": "Province Code",
                                "description": "The two-letter code for the customer's province or state.",
                                "example": "GA"
                              },
                              "postal_code": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "The customer's postal or zip code.",
                                "example": "30308"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The customer's country.",
                                "example": "United States"
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The two-letter code for the customer's country.",
                                "example": "US"
                              }
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "title": "Creation Time",
                            "format": "date-time",
                            "description": "The date and time the customer was created.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "updated_at": {
                            "type": "string",
                            "title": "Update Time",
                            "format": "date-time",
                            "description": "The date and time the customer was last updated.",
                            "readOnly": true,
                            "example": "2015-07-15 19:28:00"
                          },
                          "_links": {
                            "$ref": "#/definitions/HATEOASLinks"
                          }
                        }
                      },
                      "store_id": {
                        "type": "string",
                        "title": "Store Foreign ID",
                        "description": "The unique identifier for the store.",
                        "readOnly": true
                      },
                      "campaign_id": {
                        "type": "string",
                        "title": "Campaign ID",
                        "description": "A string that uniquely identifies the campaign associated with an order.",
                        "example": "839488a60b"
                      },
                      "landing_site": {
                        "type": "string",
                        "title": "Landing Site",
                        "description": "The URL for the page where the buyer landed when entering the shop.",
                        "example": "http://www.example.com?source=abc"
                      },
                      "financial_status": {
                        "type": "string",
                        "title": "Financial Status",
                        "description": "The order status. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                      },
                      "fulfillment_status": {
                        "type": "string",
                        "title": "Fulfillment Status",
                        "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                      },
                      "currency_code": {
                        "type": "string",
                        "title": "Currency Code",
                        "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                      },
                      "order_total": {
                        "type": "number",
                        "title": "Order Total",
                        "description": "The order total associated with an order."
                      },
                      "order_url": {
                        "type": "string",
                        "title": "Order URL",
                        "description": "The URL for the order."
                      },
                      "discount_total": {
                        "type": "number",
                        "title": "Discount Total",
                        "description": "The total amount of the discounts to be applied to the price of the order."
                      },
                      "tax_total": {
                        "type": "number",
                        "title": "Tax Total",
                        "description": "The tax total associated with an order."
                      },
                      "shipping_total": {
                        "type": "number",
                        "title": "Shipping Total",
                        "description": "The shipping total for the order."
                      },
                      "tracking_code": {
                        "type": "string",
                        "enum": [
                          "prec"
                        ],
                        "title": "Tracking Code",
                        "description": "The MailChimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                      },
                      "processed_at_foreign": {
                        "type": "string",
                        "title": "Foreign Processed Time",
                        "format": "date-time",
                        "description": "The date and time the order was processed.",
                        "example": "2015-07-15 19:28:00"
                      },
                      "cancelled_at_foreign": {
                        "type": "string",
                        "title": "Foreign Cancel Time",
                        "format": "date-time",
                        "description": "The date and time the order was cancelled.",
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at_foreign": {
                        "type": "string",
                        "title": "Foreign Update Time",
                        "format": "date-time",
                        "description": "The date and time the order was updated.",
                        "example": "2015-07-15 19:28:00"
                      },
                      "shipping_address": {
                        "type": "object",
                        "title": "Shipping Address",
                        "description": "The shipping address for the order.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "description": "The name associated with an order's shipping address.",
                            "example": "Freddie Chimpenheimer"
                          },
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The shipping address for the order.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the shipping address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city in the order's shipping address.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The state or normalized province in the order's shipping address.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the province or state the order's shipping address is located in.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The postal or zip code in the order's shipping address.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The country in the order's shipping address.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the country in the shipping address.",
                            "example": "US"
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The longitude for the shipping address location.",
                            "example": -75.68903
                          },
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The latitude for the shipping address location.",
                            "example": 45.427408
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone Number",
                            "description": "The phone number for the order's shipping address",
                            "example": "8675309"
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The company associated with an order's shipping address."
                          }
                        }
                      },
                      "billing_address": {
                        "type": "object",
                        "title": "Billing Address",
                        "description": "The billing address for the order.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "title": "Name",
                            "description": "The name associated with an order's billing address.",
                            "example": "Freddie Chimpenheimer"
                          },
                          "address1": {
                            "type": "string",
                            "title": "Address Field 1",
                            "description": "The billing address for the order.",
                            "example": "675 Ponce de Leon Ave NE"
                          },
                          "address2": {
                            "type": "string",
                            "title": "Address Field 2",
                            "description": "An additional field for the billing address.",
                            "example": "Suite 5000"
                          },
                          "city": {
                            "type": "string",
                            "title": "City ",
                            "description": "The city in the billing address.",
                            "example": "Atlanta"
                          },
                          "province": {
                            "type": "string",
                            "title": "Province",
                            "description": "The state or normalized province in the billing address.",
                            "example": "Georgia"
                          },
                          "province_code": {
                            "type": "string",
                            "title": "Province Code",
                            "description": "The two-letter code for the province or state in the billing address.",
                            "example": "GA"
                          },
                          "postal_code": {
                            "type": "string",
                            "title": "Postal Code",
                            "description": "The postal or zip code in the billing address.",
                            "example": "30308"
                          },
                          "country": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The country in the billing address.",
                            "example": "United States"
                          },
                          "country_code": {
                            "type": "string",
                            "title": "Country Code",
                            "description": "The two-letter code for the country in the billing address.",
                            "example": "US"
                          },
                          "longitude": {
                            "type": "number",
                            "title": "Longitude",
                            "description": "The longitude for the billing address location.",
                            "example": -75.68903
                          },
                          "latitude": {
                            "type": "number",
                            "title": "Latitude",
                            "description": "The latitude for the billing address location.",
                            "example": 45.427408
                          },
                          "phone": {
                            "type": "string",
                            "title": "Phone Number",
                            "description": "The phone number for the billing address.",
                            "example": "8675309"
                          },
                          "company": {
                            "type": "string",
                            "title": "Company",
                            "description": "The company associated with the billing address."
                          }
                        }
                      },
                      "lines": {
                        "type": "array",
                        "title": "Order Line Items",
                        "description": "An array of the order's line items.",
                        "items": {
                          "type": "object",
                          "title": "E-commerce Order Line Item",
                          "description": "Information about a specific order line.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "Order Line Item Foreign ID",
                              "description": "A unique identifier for the order line item.",
                              "readOnly": true
                            },
                            "product_id": {
                              "type": "string",
                              "title": "Order Line Item Product Foreign ID",
                              "description": "A unique identifier for the product associated with the order line item."
                            },
                            "product_title": {
                              "type": "string",
                              "title": "Order Line Item Product Title",
                              "description": "The name of the product for the order line item.",
                              "readOnly": true
                            },
                            "product_variant_id": {
                              "type": "string",
                              "title": "Order Line Item Product Variant Foreign ID",
                              "description": "A unique identifier for the product variant associated with the order line item."
                            },
                            "product_variant_title": {
                              "type": "string",
                              "title": "Order Line Item Product Variant Title",
                              "description": "The name of the product variant for the order line item.",
                              "readOnly": true
                            },
                            "image_url": {
                              "type": "string",
                              "title": "Product Image URL",
                              "description": "The image URL for a product.",
                              "readonly": true
                            },
                            "quantity": {
                              "type": "integer",
                              "title": "Quantity",
                              "description": "The quantity of an order line item."
                            },
                            "price": {
                              "type": "number",
                              "title": "Price",
                              "description": "The price of an order line item."
                            },
                            "discount": {
                              "type": "number",
                              "title": "Discount",
                              "description": "The total discount amount applied to this line item."
                            },
                            "_links": {
                              "$ref": "#/definitions/HATEOASLinks"
                            }
                          }
                        }
                      },
                      "outreach": {
                        "type": "object",
                        "title": "Outreach",
                        "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Outreach ID",
                            "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                            "example": "839488a60b"
                          },
                          "name": {
                            "type": "string",
                            "title": "Outreach name",
                            "description": "The name for the outreach.",
                            "example": "Freddie's Jokes",
                            "readOnly": true
                          },
                          "published_time": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Outreach published time",
                            "description": "The date and time the Outreach was published",
                            "example": "2017-06-06T13:56:12+00:00",
                            "readOnly": true
                          }
                        }
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new order to a store",
        "description": "Add a new order to a store.",
        "operationId": "postEcommerceStoresIdOrders",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Order",
              "description": "Information about a specific order.",
              "required": [
                "id",
                "customer",
                "currency_code",
                "order_total",
                "lines"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Foreign ID",
                  "description": "A unique identifier for the order."
                },
                "customer": {
                  "type": "object",
                  "title": "Customer",
                  "description": "Information about a specific customer. This information will update any existing customer. If the customer doesn't exist in the store, a new customer will be created.",
                  "required": [
                    "id"
                  ],
                  "allOf": [
                    {
                      "type": "object",
                      "title": "E-commerce Customer",
                      "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                      "required": [
                        "id",
                        "email_address",
                        "opt_in_status"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Customer Foreign ID",
                          "description": "A unique identifier for the customer."
                        },
                        "email_address": {
                          "type": "string",
                          "title": "Email Address",
                          "description": "The customer's email address."
                        },
                        "opt_in_status": {
                          "type": "boolean",
                          "title": "Opt-in Status",
                          "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                        },
                        "company": {
                          "type": "string",
                          "title": "Company",
                          "description": "The customer's company."
                        },
                        "first_name": {
                          "type": "string",
                          "title": "First Name",
                          "description": "The customer's first name."
                        },
                        "last_name": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "The customer's last name."
                        },
                        "orders_count": {
                          "type": "integer",
                          "title": "Orders Count",
                          "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                          "example": 4
                        },
                        "total_spent": {
                          "type": "number",
                          "title": "Total Spent",
                          "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                          "example": 100
                        },
                        "address": {
                          "type": "object",
                          "title": "Address",
                          "description": "The customer's address.",
                          "properties": {
                            "address1": {
                              "type": "string",
                              "title": "Address Field 1",
                              "description": "The mailing address of the customer.",
                              "example": "675 Ponce de Leon Ave NE"
                            },
                            "address2": {
                              "type": "string",
                              "title": "Address Field 2",
                              "description": "An additional field for the customer's mailing address.",
                              "example": "Suite 5000"
                            },
                            "city": {
                              "type": "string",
                              "title": "City ",
                              "description": "The city the customer is located in.",
                              "example": "Atlanta"
                            },
                            "province": {
                              "type": "string",
                              "title": "Province",
                              "description": "The customer's state name or normalized province.",
                              "example": "Georgia"
                            },
                            "province_code": {
                              "type": "string",
                              "title": "Province Code",
                              "description": "The two-letter code for the customer's province or state.",
                              "example": "GA"
                            },
                            "postal_code": {
                              "type": "string",
                              "title": "Postal Code",
                              "description": "The customer's postal or zip code.",
                              "example": "30308"
                            },
                            "country": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The customer's country.",
                              "example": "United States"
                            },
                            "country_code": {
                              "type": "string",
                              "title": "Country Code",
                              "description": "The two-letter code for the customer's country.",
                              "example": "US"
                            }
                          }
                        }
                      }
                    }
                  ]
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign for an order.",
                  "example": "839488a60b"
                },
                "landing_site": {
                  "type": "string",
                  "title": "Landing Site",
                  "description": "The URL for the page where the buyer landed when entering the shop.",
                  "example": "http://www.example.com?source=abc"
                },
                "financial_status": {
                  "type": "string",
                  "title": "Financial Status",
                  "description": "The order status. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "fulfillment_status": {
                  "type": "string",
                  "title": "Fulfillment Status",
                  "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The total for the order."
                },
                "order_url": {
                  "type": "string",
                  "title": "Order URL",
                  "description": "The URL for the order."
                },
                "discount_total": {
                  "type": "number",
                  "title": "Discount Total",
                  "description": "The total amount of the discounts to be applied to the price of the order."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The tax total for the order."
                },
                "shipping_total": {
                  "type": "number",
                  "title": "Shipping Total",
                  "description": "The shipping total for the order."
                },
                "tracking_code": {
                  "type": "string",
                  "enum": [
                    "prec"
                  ],
                  "title": "Tracking Code",
                  "description": "The MailChimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                },
                "processed_at_foreign": {
                  "type": "string",
                  "title": "Foreign Processed Time",
                  "format": "date-time",
                  "description": "The date and time the order was processed.",
                  "example": "2015-07-15 19:28:00"
                },
                "cancelled_at_foreign": {
                  "type": "string",
                  "title": "Foreign Cancel Time",
                  "format": "date-time",
                  "description": "The date and time the order was cancelled.",
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at_foreign": {
                  "type": "string",
                  "title": "Foreign Update Time",
                  "format": "date-time",
                  "description": "The date and time the order was updated.",
                  "example": "2015-07-15 19:28:00"
                },
                "shipping_address": {
                  "type": "object",
                  "title": "Shipping Address",
                  "description": "The shipping address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's shipping address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The shipping address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the shipping address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the order's shipping address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the order's shipping address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state in the shipping address.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the shipping address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the shipping address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the shipping address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the shipping address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the shipping address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the order's shipping address.",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with the shipping address."
                    }
                  }
                },
                "billing_address": {
                  "type": "object",
                  "title": "Billing Address",
                  "description": "The billing address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with the billing address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The billing address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the billing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the billing address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the billing address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province in the billing address.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the billing address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the billing address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the billing address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the billing address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the billing address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the billing address",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with the billing address."
                    }
                  }
                },
                "lines": {
                  "type": "array",
                  "title": "Order Line Items",
                  "description": "An array of the order's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order Line Item",
                    "description": "Information about a specific order line.",
                    "required": [
                      "id",
                      "product_id",
                      "product_variant_id",
                      "quantity",
                      "price"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Order Line Item Foreign ID",
                        "description": "A unique identifier for the order line item."
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Order Line Item Product Foreign ID",
                        "description": "A unique identifier for the product associated with the order line item."
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the order line item."
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of an order line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of an order line item."
                      },
                      "discount": {
                        "type": "number",
                        "title": "Discount",
                        "description": "The total discount amount applied to this line item."
                      }
                    }
                  }
                },
                "outreach": {
                  "type": "object",
                  "title": "Outreach",
                  "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Outreach ID",
                      "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                      "example": "839488a60b"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Order",
              "description": "Information about a specific order.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Foreign ID",
                  "description": "A unique identifier for the order.",
                  "readOnly": true
                },
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "$ref": "#/definitions/HATEOASLinks"
                    }
                  }
                },
                "store_id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with an order.",
                  "example": "839488a60b"
                },
                "landing_site": {
                  "type": "string",
                  "title": "Landing Site",
                  "description": "The URL for the page where the buyer landed when entering the shop.",
                  "example": "http://www.example.com?source=abc"
                },
                "financial_status": {
                  "type": "string",
                  "title": "Financial Status",
                  "description": "The order status. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "fulfillment_status": {
                  "type": "string",
                  "title": "Fulfillment Status",
                  "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total associated with an order."
                },
                "order_url": {
                  "type": "string",
                  "title": "Order URL",
                  "description": "The URL for the order."
                },
                "discount_total": {
                  "type": "number",
                  "title": "Discount Total",
                  "description": "The total amount of the discounts to be applied to the price of the order."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The tax total associated with an order."
                },
                "shipping_total": {
                  "type": "number",
                  "title": "Shipping Total",
                  "description": "The shipping total for the order."
                },
                "tracking_code": {
                  "type": "string",
                  "enum": [
                    "prec"
                  ],
                  "title": "Tracking Code",
                  "description": "The MailChimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                },
                "processed_at_foreign": {
                  "type": "string",
                  "title": "Foreign Processed Time",
                  "format": "date-time",
                  "description": "The date and time the order was processed.",
                  "example": "2015-07-15 19:28:00"
                },
                "cancelled_at_foreign": {
                  "type": "string",
                  "title": "Foreign Cancel Time",
                  "format": "date-time",
                  "description": "The date and time the order was cancelled.",
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at_foreign": {
                  "type": "string",
                  "title": "Foreign Update Time",
                  "format": "date-time",
                  "description": "The date and time the order was updated.",
                  "example": "2015-07-15 19:28:00"
                },
                "shipping_address": {
                  "type": "object",
                  "title": "Shipping Address",
                  "description": "The shipping address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's shipping address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The shipping address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the shipping address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the order's shipping address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the order's shipping address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state the order's shipping address is located in.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the order's shipping address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the order's shipping address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the shipping address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the shipping address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the shipping address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the order's shipping address",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with an order's shipping address."
                    }
                  }
                },
                "billing_address": {
                  "type": "object",
                  "title": "Billing Address",
                  "description": "The billing address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's billing address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The billing address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the billing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the billing address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the billing address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state in the billing address.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the billing address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the billing address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the billing address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the billing address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the billing address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the billing address.",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with the billing address."
                    }
                  }
                },
                "lines": {
                  "type": "array",
                  "title": "Order Line Items",
                  "description": "An array of the order's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order Line Item",
                    "description": "Information about a specific order line.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Order Line Item Foreign ID",
                        "description": "A unique identifier for the order line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Order Line Item Product Foreign ID",
                        "description": "A unique identifier for the product associated with the order line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Order Line Item Product Title",
                        "description": "The name of the product for the order line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the order line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Title",
                        "description": "The name of the product variant for the order line item.",
                        "readOnly": true
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Product Image URL",
                        "description": "The image URL for a product.",
                        "readonly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of an order line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of an order line item."
                      },
                      "discount": {
                        "type": "number",
                        "title": "Discount",
                        "description": "The total discount amount applied to this line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "outreach": {
                  "type": "object",
                  "title": "Outreach",
                  "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Outreach ID",
                      "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                      "example": "839488a60b"
                    },
                    "name": {
                      "type": "string",
                      "title": "Outreach name",
                      "description": "The name for the outreach.",
                      "example": "Freddie's Jokes",
                      "readOnly": true
                    },
                    "published_time": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Outreach published time",
                      "description": "The date and time the Outreach was published",
                      "example": "2017-06-06T13:56:12+00:00",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/orders/{order_id}": {
      "get": {
        "summary": "Get information about a specific order",
        "description": "Get information about a specific order.",
        "operationId": "getEcommerceStoresIdOrdersId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Order",
              "description": "Information about a specific order.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Foreign ID",
                  "description": "A unique identifier for the order.",
                  "readOnly": true
                },
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "$ref": "#/definitions/HATEOASLinks"
                    }
                  }
                },
                "store_id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with an order.",
                  "example": "839488a60b"
                },
                "landing_site": {
                  "type": "string",
                  "title": "Landing Site",
                  "description": "The URL for the page where the buyer landed when entering the shop.",
                  "example": "http://www.example.com?source=abc"
                },
                "financial_status": {
                  "type": "string",
                  "title": "Financial Status",
                  "description": "The order status. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "fulfillment_status": {
                  "type": "string",
                  "title": "Fulfillment Status",
                  "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total associated with an order."
                },
                "order_url": {
                  "type": "string",
                  "title": "Order URL",
                  "description": "The URL for the order."
                },
                "discount_total": {
                  "type": "number",
                  "title": "Discount Total",
                  "description": "The total amount of the discounts to be applied to the price of the order."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The tax total associated with an order."
                },
                "shipping_total": {
                  "type": "number",
                  "title": "Shipping Total",
                  "description": "The shipping total for the order."
                },
                "tracking_code": {
                  "type": "string",
                  "enum": [
                    "prec"
                  ],
                  "title": "Tracking Code",
                  "description": "The MailChimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                },
                "processed_at_foreign": {
                  "type": "string",
                  "title": "Foreign Processed Time",
                  "format": "date-time",
                  "description": "The date and time the order was processed.",
                  "example": "2015-07-15 19:28:00"
                },
                "cancelled_at_foreign": {
                  "type": "string",
                  "title": "Foreign Cancel Time",
                  "format": "date-time",
                  "description": "The date and time the order was cancelled.",
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at_foreign": {
                  "type": "string",
                  "title": "Foreign Update Time",
                  "format": "date-time",
                  "description": "The date and time the order was updated.",
                  "example": "2015-07-15 19:28:00"
                },
                "shipping_address": {
                  "type": "object",
                  "title": "Shipping Address",
                  "description": "The shipping address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's shipping address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The shipping address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the shipping address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the order's shipping address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the order's shipping address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state the order's shipping address is located in.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the order's shipping address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the order's shipping address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the shipping address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the shipping address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the shipping address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the order's shipping address",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with an order's shipping address."
                    }
                  }
                },
                "billing_address": {
                  "type": "object",
                  "title": "Billing Address",
                  "description": "The billing address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's billing address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The billing address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the billing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the billing address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the billing address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state in the billing address.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the billing address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the billing address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the billing address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the billing address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the billing address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the billing address.",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with the billing address."
                    }
                  }
                },
                "lines": {
                  "type": "array",
                  "title": "Order Line Items",
                  "description": "An array of the order's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order Line Item",
                    "description": "Information about a specific order line.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Order Line Item Foreign ID",
                        "description": "A unique identifier for the order line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Order Line Item Product Foreign ID",
                        "description": "A unique identifier for the product associated with the order line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Order Line Item Product Title",
                        "description": "The name of the product for the order line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the order line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Title",
                        "description": "The name of the product variant for the order line item.",
                        "readOnly": true
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Product Image URL",
                        "description": "The image URL for a product.",
                        "readonly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of an order line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of an order line item."
                      },
                      "discount": {
                        "type": "number",
                        "title": "Discount",
                        "description": "The total discount amount applied to this line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "outreach": {
                  "type": "object",
                  "title": "Outreach",
                  "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Outreach ID",
                      "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                      "example": "839488a60b"
                    },
                    "name": {
                      "type": "string",
                      "title": "Outreach name",
                      "description": "The name for the outreach.",
                      "example": "Freddie's Jokes",
                      "readOnly": true
                    },
                    "published_time": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Outreach published time",
                      "description": "The date and time the Outreach was published",
                      "example": "2017-06-06T13:56:12+00:00",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific order",
        "description": "Update a specific order.",
        "operationId": "patchEcommerceStoresIdOrdersId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Order",
              "description": "Information about a specific order.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Foreign ID",
                  "description": "A unique identifier for the order.",
                  "readOnly": true
                },
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    }
                  }
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with an order.",
                  "example": "839488a60b"
                },
                "landing_site": {
                  "type": "string",
                  "title": "Landing Site",
                  "description": "The URL for the page where the buyer landed when entering the shop.",
                  "example": "http://www.example.com?source=abc"
                },
                "financial_status": {
                  "type": "string",
                  "title": "Financial Status",
                  "description": "The order status. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "fulfillment_status": {
                  "type": "string",
                  "title": "Fulfillment Status",
                  "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total associated with an order."
                },
                "order_url": {
                  "type": "string",
                  "title": "Order URL",
                  "description": "The URL for the order."
                },
                "discount_total": {
                  "type": "number",
                  "title": "Discount Total",
                  "description": "The total amount of the discounts to be applied to the price of the order."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The tax total associated with an order."
                },
                "shipping_total": {
                  "type": "number",
                  "title": "Shipping Total",
                  "description": "The shipping total for the order."
                },
                "tracking_code": {
                  "type": "string",
                  "enum": [
                    "prec"
                  ],
                  "title": "Tracking Code",
                  "description": "The MailChimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                },
                "processed_at_foreign": {
                  "type": "string",
                  "title": "Foreign Processed Time",
                  "format": "date-time",
                  "description": "The date and time the order was processed.",
                  "example": "2015-07-15 19:28:00"
                },
                "cancelled_at_foreign": {
                  "type": "string",
                  "title": "Foreign Cancel Time",
                  "format": "date-time",
                  "description": "The date and time the order was cancelled.",
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at_foreign": {
                  "type": "string",
                  "title": "Foreign Update Time",
                  "format": "date-time",
                  "description": "The date and time the order was updated.",
                  "example": "2015-07-15 19:28:00"
                },
                "shipping_address": {
                  "type": "object",
                  "title": "Shipping Address",
                  "description": "The shipping address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's shipping address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The shipping address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the shipping address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the order's shipping address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the order's shipping address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state the order's shipping address is located in.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the order's shipping address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the order's shipping address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the shipping address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the shipping address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the shipping address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the order's shipping address",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with an order's shipping address."
                    }
                  }
                },
                "billing_address": {
                  "type": "object",
                  "title": "Billing Address",
                  "description": "The billing address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's billing address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The billing address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the billing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the billing address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the billing address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state in the billing address.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the billing address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the billing address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the billing address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the billing address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the billing address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the billing address.",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with the billing address."
                    }
                  }
                },
                "lines": {
                  "type": "array",
                  "title": "Order Line Items",
                  "description": "An array of the order's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order Line Item",
                    "description": "Information about a specific order line.",
                    "properties": {
                      "product_id": {
                        "type": "string",
                        "title": "Order Line Item Product Foreign ID",
                        "description": "A unique identifier for the product associated with the order line item."
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the order line item."
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of an order line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of an order line item."
                      },
                      "discount": {
                        "type": "number",
                        "title": "Discount",
                        "description": "The total discount amount applied to this line item."
                      }
                    }
                  }
                },
                "outreach": {
                  "type": "object",
                  "title": "Outreach",
                  "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Outreach ID",
                      "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                      "example": "839488a60b"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Order",
              "description": "Information about a specific order.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Foreign ID",
                  "description": "A unique identifier for the order.",
                  "readOnly": true
                },
                "customer": {
                  "type": "object",
                  "title": "E-commerce Customer",
                  "description": "Information about a specific customer. Orders for existing customers should include only the `id` parameter in the `customer` object body.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Customer Foreign ID",
                      "description": "A unique identifier for the customer.",
                      "readOnly": true
                    },
                    "email_address": {
                      "type": "string",
                      "title": "Email Address",
                      "description": "The customer's email address.",
                      "readOnly": true
                    },
                    "opt_in_status": {
                      "type": "boolean",
                      "title": "Opt-in Status",
                      "description": "The customer's opt-in status. This value will never overwrite the opt-in status of a pre-existing MailChimp list member, but will apply to list members that are added through the e-commerce API endpoints. Customers who don't opt in to your MailChimp list [will be added as `Transactional` members](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#about-subscribers-and-customers)."
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The customer's company."
                    },
                    "first_name": {
                      "type": "string",
                      "title": "First Name",
                      "description": "The customer's first name."
                    },
                    "last_name": {
                      "type": "string",
                      "title": "Last Name",
                      "description": "The customer's last name."
                    },
                    "orders_count": {
                      "type": "integer",
                      "title": "Orders Count",
                      "description": "The customer's total order count. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 4
                    },
                    "total_spent": {
                      "type": "number",
                      "title": "Total Spent",
                      "description": "The total amount the customer has spent. [Learn More](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#orders-count-and-total-spent) about using this data.",
                      "example": 100
                    },
                    "address": {
                      "type": "object",
                      "title": "Address",
                      "description": "The customer's address.",
                      "properties": {
                        "address1": {
                          "type": "string",
                          "title": "Address Field 1",
                          "description": "The mailing address of the customer.",
                          "example": "675 Ponce de Leon Ave NE"
                        },
                        "address2": {
                          "type": "string",
                          "title": "Address Field 2",
                          "description": "An additional field for the customer's mailing address.",
                          "example": "Suite 5000"
                        },
                        "city": {
                          "type": "string",
                          "title": "City ",
                          "description": "The city the customer is located in.",
                          "example": "Atlanta"
                        },
                        "province": {
                          "type": "string",
                          "title": "Province",
                          "description": "The customer's state name or normalized province.",
                          "example": "Georgia"
                        },
                        "province_code": {
                          "type": "string",
                          "title": "Province Code",
                          "description": "The two-letter code for the customer's province or state.",
                          "example": "GA"
                        },
                        "postal_code": {
                          "type": "string",
                          "title": "Postal Code",
                          "description": "The customer's postal or zip code.",
                          "example": "30308"
                        },
                        "country": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The customer's country.",
                          "example": "United States"
                        },
                        "country_code": {
                          "type": "string",
                          "title": "Country Code",
                          "description": "The two-letter code for the customer's country.",
                          "example": "US"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "title": "Creation Time",
                      "format": "date-time",
                      "description": "The date and time the customer was created.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "title": "Update Time",
                      "format": "date-time",
                      "description": "The date and time the customer was last updated.",
                      "readOnly": true,
                      "example": "2015-07-15 19:28:00"
                    },
                    "_links": {
                      "$ref": "#/definitions/HATEOASLinks"
                    }
                  }
                },
                "store_id": {
                  "type": "string",
                  "title": "Store Foreign ID",
                  "description": "The unique identifier for the store.",
                  "readOnly": true
                },
                "campaign_id": {
                  "type": "string",
                  "title": "Campaign ID",
                  "description": "A string that uniquely identifies the campaign associated with an order.",
                  "example": "839488a60b"
                },
                "landing_site": {
                  "type": "string",
                  "title": "Landing Site",
                  "description": "The URL for the page where the buyer landed when entering the shop.",
                  "example": "http://www.example.com?source=abc"
                },
                "financial_status": {
                  "type": "string",
                  "title": "Financial Status",
                  "description": "The order status. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "fulfillment_status": {
                  "type": "string",
                  "title": "Fulfillment Status",
                  "description": "The fulfillment status for the order. Use this parameter to trigger [Order Notifications](http://developer.mailchimp.com/documentation/mailchimp/guides/getting-started-with-ecommerce/#order-status-notifications)."
                },
                "currency_code": {
                  "type": "string",
                  "title": "Currency Code",
                  "description": "The three-letter [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217#Active_codes) code for the currency that the store accepts."
                },
                "order_total": {
                  "type": "number",
                  "title": "Order Total",
                  "description": "The order total associated with an order."
                },
                "order_url": {
                  "type": "string",
                  "title": "Order URL",
                  "description": "The URL for the order."
                },
                "discount_total": {
                  "type": "number",
                  "title": "Discount Total",
                  "description": "The total amount of the discounts to be applied to the price of the order."
                },
                "tax_total": {
                  "type": "number",
                  "title": "Tax Total",
                  "description": "The tax total associated with an order."
                },
                "shipping_total": {
                  "type": "number",
                  "title": "Shipping Total",
                  "description": "The shipping total for the order."
                },
                "tracking_code": {
                  "type": "string",
                  "enum": [
                    "prec"
                  ],
                  "title": "Tracking Code",
                  "description": "The MailChimp tracking code for the order. Uses the 'mc_tc' parameter in E-Commerce tracking URLs."
                },
                "processed_at_foreign": {
                  "type": "string",
                  "title": "Foreign Processed Time",
                  "format": "date-time",
                  "description": "The date and time the order was processed.",
                  "example": "2015-07-15 19:28:00"
                },
                "cancelled_at_foreign": {
                  "type": "string",
                  "title": "Foreign Cancel Time",
                  "format": "date-time",
                  "description": "The date and time the order was cancelled.",
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at_foreign": {
                  "type": "string",
                  "title": "Foreign Update Time",
                  "format": "date-time",
                  "description": "The date and time the order was updated.",
                  "example": "2015-07-15 19:28:00"
                },
                "shipping_address": {
                  "type": "object",
                  "title": "Shipping Address",
                  "description": "The shipping address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's shipping address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The shipping address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the shipping address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the order's shipping address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the order's shipping address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state the order's shipping address is located in.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the order's shipping address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the order's shipping address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the shipping address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the shipping address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the shipping address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the order's shipping address",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with an order's shipping address."
                    }
                  }
                },
                "billing_address": {
                  "type": "object",
                  "title": "Billing Address",
                  "description": "The billing address for the order.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "title": "Name",
                      "description": "The name associated with an order's billing address.",
                      "example": "Freddie Chimpenheimer"
                    },
                    "address1": {
                      "type": "string",
                      "title": "Address Field 1",
                      "description": "The billing address for the order.",
                      "example": "675 Ponce de Leon Ave NE"
                    },
                    "address2": {
                      "type": "string",
                      "title": "Address Field 2",
                      "description": "An additional field for the billing address.",
                      "example": "Suite 5000"
                    },
                    "city": {
                      "type": "string",
                      "title": "City ",
                      "description": "The city in the billing address.",
                      "example": "Atlanta"
                    },
                    "province": {
                      "type": "string",
                      "title": "Province",
                      "description": "The state or normalized province in the billing address.",
                      "example": "Georgia"
                    },
                    "province_code": {
                      "type": "string",
                      "title": "Province Code",
                      "description": "The two-letter code for the province or state in the billing address.",
                      "example": "GA"
                    },
                    "postal_code": {
                      "type": "string",
                      "title": "Postal Code",
                      "description": "The postal or zip code in the billing address.",
                      "example": "30308"
                    },
                    "country": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The country in the billing address.",
                      "example": "United States"
                    },
                    "country_code": {
                      "type": "string",
                      "title": "Country Code",
                      "description": "The two-letter code for the country in the billing address.",
                      "example": "US"
                    },
                    "longitude": {
                      "type": "number",
                      "title": "Longitude",
                      "description": "The longitude for the billing address location.",
                      "example": -75.68903
                    },
                    "latitude": {
                      "type": "number",
                      "title": "Latitude",
                      "description": "The latitude for the billing address location.",
                      "example": 45.427408
                    },
                    "phone": {
                      "type": "string",
                      "title": "Phone Number",
                      "description": "The phone number for the billing address.",
                      "example": "8675309"
                    },
                    "company": {
                      "type": "string",
                      "title": "Company",
                      "description": "The company associated with the billing address."
                    }
                  }
                },
                "lines": {
                  "type": "array",
                  "title": "Order Line Items",
                  "description": "An array of the order's line items.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order Line Item",
                    "description": "Information about a specific order line.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Order Line Item Foreign ID",
                        "description": "A unique identifier for the order line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Order Line Item Product Foreign ID",
                        "description": "A unique identifier for the product associated with the order line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Order Line Item Product Title",
                        "description": "The name of the product for the order line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the order line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Title",
                        "description": "The name of the product variant for the order line item.",
                        "readOnly": true
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Product Image URL",
                        "description": "The image URL for a product.",
                        "readonly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of an order line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of an order line item."
                      },
                      "discount": {
                        "type": "number",
                        "title": "Discount",
                        "description": "The total discount amount applied to this line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "outreach": {
                  "type": "object",
                  "title": "Outreach",
                  "description": "The outreach associated with this order. For example, an email campaign or Facebook ad.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Outreach ID",
                      "description": "A unique identifier for the outreach. Can be an email campaign ID.",
                      "example": "839488a60b"
                    },
                    "name": {
                      "type": "string",
                      "title": "Outreach name",
                      "description": "The name for the outreach.",
                      "example": "Freddie's Jokes",
                      "readOnly": true
                    },
                    "published_time": {
                      "type": "string",
                      "format": "date-time",
                      "title": "Outreach published time",
                      "description": "The date and time the Outreach was published",
                      "example": "2017-06-06T13:56:12+00:00",
                      "readOnly": true
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete an order",
        "description": "Delete an order.",
        "operationId": "deleteEcommerceStoresIdOrdersId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/orders/{order_id}/lines": {
      "get": {
        "summary": "Get information about an order's line items.",
        "description": "Get information about an order's line items.",
        "operationId": "getEcommerceStoresIdOrdersIdLines",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Order Lines",
              "description": "A collection of an order's line items.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "order_id": {
                  "type": "string",
                  "title": "Order ID",
                  "description": "The order id."
                },
                "lines": {
                  "type": "array",
                  "title": "Ecommerce Order Lines",
                  "description": "An array of objects, each representing an order's line item.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Order Line Item",
                    "description": "Information about a specific order line.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Order Line Item Foreign ID",
                        "description": "A unique identifier for the order line item.",
                        "readOnly": true
                      },
                      "product_id": {
                        "type": "string",
                        "title": "Order Line Item Product Foreign ID",
                        "description": "A unique identifier for the product associated with the order line item."
                      },
                      "product_title": {
                        "type": "string",
                        "title": "Order Line Item Product Title",
                        "description": "The name of the product for the order line item.",
                        "readOnly": true
                      },
                      "product_variant_id": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant associated with the order line item."
                      },
                      "product_variant_title": {
                        "type": "string",
                        "title": "Order Line Item Product Variant Title",
                        "description": "The name of the product variant for the order line item.",
                        "readOnly": true
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Product Image URL",
                        "description": "The image URL for a product.",
                        "readonly": true
                      },
                      "quantity": {
                        "type": "integer",
                        "title": "Quantity",
                        "description": "The quantity of an order line item."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of an order line item."
                      },
                      "discount": {
                        "type": "number",
                        "title": "Discount",
                        "description": "The total discount amount applied to this line item."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new line item to an existing order",
        "description": "Add a new line item to an existing order.",
        "operationId": "postEcommerceStoresIdOrdersIdLines",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Order Line Item",
              "description": "Information about a specific order line.",
              "required": [
                "id",
                "product_id",
                "product_variant_id",
                "quantity",
                "price"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Line Item Foreign ID",
                  "description": "A unique identifier for the order line item."
                },
                "product_id": {
                  "type": "string",
                  "title": "Order Line Item Product Foreign ID",
                  "description": "A unique identifier for the product associated with the order line item."
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the order line item."
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of an order line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of an order line item."
                },
                "discount": {
                  "type": "number",
                  "title": "Discount",
                  "description": "The total discount amount applied to this line item."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Order Line Item",
              "description": "Information about a specific order line.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Line Item Foreign ID",
                  "description": "A unique identifier for the order line item.",
                  "readOnly": true
                },
                "product_id": {
                  "type": "string",
                  "title": "Order Line Item Product Foreign ID",
                  "description": "A unique identifier for the product associated with the order line item."
                },
                "product_title": {
                  "type": "string",
                  "title": "Order Line Item Product Title",
                  "description": "The name of the product for the order line item.",
                  "readOnly": true
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the order line item."
                },
                "product_variant_title": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Title",
                  "description": "The name of the product variant for the order line item.",
                  "readOnly": true
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product.",
                  "readonly": true
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of an order line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of an order line item."
                },
                "discount": {
                  "type": "number",
                  "title": "Discount",
                  "description": "The total discount amount applied to this line item."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/orders/{order_id}/lines/{line_id}": {
      "get": {
        "summary": "Get information about a specific order line item",
        "description": "Get information about a specific order line item.",
        "operationId": "getEcommerceStoresIdOrdersIdLinesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderLineID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Order Line Item",
              "description": "Information about a specific order line.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Line Item Foreign ID",
                  "description": "A unique identifier for the order line item.",
                  "readOnly": true
                },
                "product_id": {
                  "type": "string",
                  "title": "Order Line Item Product Foreign ID",
                  "description": "A unique identifier for the product associated with the order line item."
                },
                "product_title": {
                  "type": "string",
                  "title": "Order Line Item Product Title",
                  "description": "The name of the product for the order line item.",
                  "readOnly": true
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the order line item."
                },
                "product_variant_title": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Title",
                  "description": "The name of the product variant for the order line item.",
                  "readOnly": true
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product.",
                  "readonly": true
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of an order line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of an order line item."
                },
                "discount": {
                  "type": "number",
                  "title": "Discount",
                  "description": "The total discount amount applied to this line item."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific order line item",
        "description": "Update a specific order line item.",
        "operationId": "patchEcommerceStoresIdOrdersIdLinesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderLineID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Order Line Item",
              "description": "Information about a specific order line.",
              "properties": {
                "product_id": {
                  "type": "string",
                  "title": "Order Line Item Product Foreign ID",
                  "description": "A unique identifier for the product associated with the order line item."
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the order line item."
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of an order line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of an order line item."
                },
                "discount": {
                  "type": "number",
                  "title": "Discount",
                  "description": "The total discount amount applied to this line item."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Order Line Item",
              "description": "Information about a specific order line.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Order Line Item Foreign ID",
                  "description": "A unique identifier for the order line item.",
                  "readOnly": true
                },
                "product_id": {
                  "type": "string",
                  "title": "Order Line Item Product Foreign ID",
                  "description": "A unique identifier for the product associated with the order line item."
                },
                "product_title": {
                  "type": "string",
                  "title": "Order Line Item Product Title",
                  "description": "The name of the product for the order line item.",
                  "readOnly": true
                },
                "product_variant_id": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant associated with the order line item."
                },
                "product_variant_title": {
                  "type": "string",
                  "title": "Order Line Item Product Variant Title",
                  "description": "The name of the product variant for the order line item.",
                  "readOnly": true
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product.",
                  "readonly": true
                },
                "quantity": {
                  "type": "integer",
                  "title": "Quantity",
                  "description": "The quantity of an order line item."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of an order line item."
                },
                "discount": {
                  "type": "number",
                  "title": "Discount",
                  "description": "The total discount amount applied to this line item."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a specific order line item",
        "description": "Delete a specific order line item.",
        "operationId": "deleteEcommerceStoresIdOrdersIdLinesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreOrderLineID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/products": {
      "get": {
        "summary": "Get information about a store's products.",
        "description": "Get information about a store's products.",
        "operationId": "getEcommerceStoresIdProducts",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Products",
              "description": "A collection of a store's products.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "products": {
                  "type": "array",
                  "title": "Products",
                  "description": "An array of objects, each representing a store product.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product",
                    "description": "Information about a specific product.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Product Foreign ID",
                        "description": "A unique identifier for the product.",
                        "readOnly": true
                      },
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of a product.",
                        "example": "Cat Hat"
                      },
                      "handle": {
                        "type": "string",
                        "title": "Handle",
                        "description": "The handle of a product.",
                        "example": "cat-hat"
                      },
                      "url": {
                        "type": "string",
                        "title": "Product URL",
                        "description": "The URL for a product."
                      },
                      "description": {
                        "type": "string",
                        "title": "Description",
                        "description": "The description of a product.",
                        "example": "This is a cat hat."
                      },
                      "type": {
                        "type": "string",
                        "title": "Type",
                        "description": "The type of product.",
                        "example": "Accessories"
                      },
                      "vendor": {
                        "type": "string",
                        "title": "Vendor",
                        "description": "The vendor for a product."
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Product Image URL",
                        "description": "The image URL for a product."
                      },
                      "variants": {
                        "type": "array",
                        "title": "Product Variants",
                        "description": "An array of the product's variants.",
                        "items": {
                          "type": "object",
                          "title": "E-commerce Product Variant",
                          "description": "Information about a specific product variant.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "Product Variant Foreign ID",
                              "description": "A unique identifier for the product variant.",
                              "readOnly": true
                            },
                            "title": {
                              "type": "string",
                              "title": "Title",
                              "description": "The title of a product variant.",
                              "example": "Cat Hat"
                            },
                            "url": {
                              "type": "string",
                              "title": "URL",
                              "description": "The URL for a product variant."
                            },
                            "sku": {
                              "type": "string",
                              "title": "SKU",
                              "description": "The stock keeping unit (SKU) of a product variant."
                            },
                            "price": {
                              "type": "number",
                              "title": "Price",
                              "description": "The price of a product variant."
                            },
                            "inventory_quantity": {
                              "type": "integer",
                              "title": "Inventory Quantity",
                              "description": "The inventory quantity of a product variant."
                            },
                            "image_url": {
                              "type": "string",
                              "title": "Image URL",
                              "description": "The image URL for a product variant."
                            },
                            "backorders": {
                              "type": "string",
                              "title": "Backorders",
                              "description": "The backorders of a product variant."
                            },
                            "visibility": {
                              "type": "string",
                              "title": "Visibility",
                              "description": "The visibility of a product variant."
                            },
                            "created_at": {
                              "type": "string",
                              "title": "Creation Time",
                              "format": "date-time",
                              "description": "The date and time the product was created.",
                              "readOnly": true,
                              "example": "2015-07-15 19:28:00"
                            },
                            "updated_at": {
                              "type": "string",
                              "title": "Update Time",
                              "format": "date-time",
                              "description": "The date and time the product was last updated.",
                              "readOnly": true,
                              "example": "2015-07-15 19:28:00"
                            },
                            "_links": {
                              "$ref": "#/definitions/HATEOASLinks"
                            }
                          }
                        }
                      },
                      "images": {
                        "type": "array",
                        "title": "Product Images",
                        "description": "An array of the product's images.",
                        "items": {
                          "type": "object",
                          "title": "E-commerce Product Image",
                          "description": "Information about a specific product image.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "title": "Image Foreign ID",
                              "description": "A unique identifier for the product image."
                            },
                            "url": {
                              "type": "string",
                              "title": "URL",
                              "description": "The URL for a product image."
                            },
                            "variant_ids": {
                              "type": "array",
                              "title": "Product Variants",
                              "description": "The list of product variants using the image."
                            },
                            "_links": {
                              "$ref": "#/definitions/HATEOASLinks"
                            }
                          }
                        }
                      },
                      "published_at_foreign": {
                        "type": "string",
                        "title": "Foreign Publish Time",
                        "format": "date-time",
                        "description": "The date and time the product was published.",
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new product to a store",
        "description": "Add a new product to a store.",
        "operationId": "postEcommerceStoresIdProducts",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Product",
              "description": "Information about a specific product.",
              "required": [
                "id",
                "title",
                "variants"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Foreign ID",
                  "description": "A unique identifier for the product."
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product.",
                  "example": "Cat Hat"
                },
                "handle": {
                  "type": "string",
                  "title": "Handle",
                  "description": "The handle of a product.",
                  "example": "cat-hat"
                },
                "url": {
                  "type": "string",
                  "title": "Product URL",
                  "description": "The URL for a product."
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a product.",
                  "example": "This is a cat hat."
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of product.",
                  "example": "Accessories"
                },
                "vendor": {
                  "type": "string",
                  "title": "Vendor",
                  "description": "The vendor for a product."
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product."
                },
                "variants": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "An array of the product's variants. At least one variant is required for each product. A variant can use the same `id` and `title` as the parent product.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Variant",
                    "description": "Information about a specific product variant.",
                    "required": [
                      "id",
                      "title"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant."
                      },
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of a product variant.",
                        "example": "Cat Hat"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product variant."
                      },
                      "sku": {
                        "type": "string",
                        "title": "SKU",
                        "description": "The stock keeping unit (SKU) of a product variant."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a product variant."
                      },
                      "inventory_quantity": {
                        "type": "integer",
                        "title": "Inventory Quantity",
                        "description": "The inventory quantity of a product variant."
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Image URL",
                        "description": "The image URL for a product variant."
                      },
                      "backorders": {
                        "type": "string",
                        "title": "Backorders",
                        "description": "The backorders of a product variant."
                      },
                      "visibility": {
                        "type": "string",
                        "title": "Visibility",
                        "description": "The visibility of a product variant."
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "title": "Product Images",
                  "description": "An array of the product's images.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Image",
                    "description": "Information about a specific product image.",
                    "required": [
                      "id",
                      "url"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Image Foreign ID",
                        "description": "A unique identifier for the product image."
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product image."
                      },
                      "variant_ids": {
                        "type": "array",
                        "title": "Product Variants",
                        "description": "The list of product variants using the image."
                      }
                    }
                  }
                },
                "published_at_foreign": {
                  "type": "string",
                  "title": "Foreign Publish Time",
                  "format": "date-time",
                  "description": "The date and time the product was published.",
                  "example": "2015-07-15 19:28:00"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product",
              "description": "Information about a specific product.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Foreign ID",
                  "description": "A unique identifier for the product.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product.",
                  "example": "Cat Hat"
                },
                "handle": {
                  "type": "string",
                  "title": "Handle",
                  "description": "The handle of a product.",
                  "example": "cat-hat"
                },
                "url": {
                  "type": "string",
                  "title": "Product URL",
                  "description": "The URL for a product."
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a product.",
                  "example": "This is a cat hat."
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of product.",
                  "example": "Accessories"
                },
                "vendor": {
                  "type": "string",
                  "title": "Vendor",
                  "description": "The vendor for a product."
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product."
                },
                "variants": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "An array of the product's variants.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Variant",
                    "description": "Information about a specific product variant.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant.",
                        "readOnly": true
                      },
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of a product variant.",
                        "example": "Cat Hat"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product variant."
                      },
                      "sku": {
                        "type": "string",
                        "title": "SKU",
                        "description": "The stock keeping unit (SKU) of a product variant."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a product variant."
                      },
                      "inventory_quantity": {
                        "type": "integer",
                        "title": "Inventory Quantity",
                        "description": "The inventory quantity of a product variant."
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Image URL",
                        "description": "The image URL for a product variant."
                      },
                      "backorders": {
                        "type": "string",
                        "title": "Backorders",
                        "description": "The backorders of a product variant."
                      },
                      "visibility": {
                        "type": "string",
                        "title": "Visibility",
                        "description": "The visibility of a product variant."
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the product was created.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the product was last updated.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "title": "Product Images",
                  "description": "An array of the product's images.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Image",
                    "description": "Information about a specific product image.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Image Foreign ID",
                        "description": "A unique identifier for the product image."
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product image."
                      },
                      "variant_ids": {
                        "type": "array",
                        "title": "Product Variants",
                        "description": "The list of product variants using the image."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "published_at_foreign": {
                  "type": "string",
                  "title": "Foreign Publish Time",
                  "format": "date-time",
                  "description": "The date and time the product was published.",
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/products/{product_id}": {
      "get": {
        "summary": "Get information about a specific product",
        "description": "Get information about a specific product.",
        "operationId": "getEcommerceStoresIdProductsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product",
              "description": "Information about a specific product.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Foreign ID",
                  "description": "A unique identifier for the product.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product.",
                  "example": "Cat Hat"
                },
                "handle": {
                  "type": "string",
                  "title": "Handle",
                  "description": "The handle of a product.",
                  "example": "cat-hat"
                },
                "url": {
                  "type": "string",
                  "title": "Product URL",
                  "description": "The URL for a product."
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a product.",
                  "example": "This is a cat hat."
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of product.",
                  "example": "Accessories"
                },
                "vendor": {
                  "type": "string",
                  "title": "Vendor",
                  "description": "The vendor for a product."
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product."
                },
                "variants": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "An array of the product's variants.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Variant",
                    "description": "Information about a specific product variant.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant.",
                        "readOnly": true
                      },
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of a product variant.",
                        "example": "Cat Hat"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product variant."
                      },
                      "sku": {
                        "type": "string",
                        "title": "SKU",
                        "description": "The stock keeping unit (SKU) of a product variant."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a product variant."
                      },
                      "inventory_quantity": {
                        "type": "integer",
                        "title": "Inventory Quantity",
                        "description": "The inventory quantity of a product variant."
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Image URL",
                        "description": "The image URL for a product variant."
                      },
                      "backorders": {
                        "type": "string",
                        "title": "Backorders",
                        "description": "The backorders of a product variant."
                      },
                      "visibility": {
                        "type": "string",
                        "title": "Visibility",
                        "description": "The visibility of a product variant."
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the product was created.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the product was last updated.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "title": "Product Images",
                  "description": "An array of the product's images.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Image",
                    "description": "Information about a specific product image.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Image Foreign ID",
                        "description": "A unique identifier for the product image."
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product image."
                      },
                      "variant_ids": {
                        "type": "array",
                        "title": "Product Variants",
                        "description": "The list of product variants using the image."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "published_at_foreign": {
                  "type": "string",
                  "title": "Foreign Publish Time",
                  "format": "date-time",
                  "description": "The date and time the product was published.",
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a specific product",
        "description": "Update a specific product.",
        "operationId": "patchEcommerceStoresIdProductsId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Product",
              "description": "Information about a specific product.",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product.",
                  "example": "Cat Hat"
                },
                "handle": {
                  "type": "string",
                  "title": "Handle",
                  "description": "The handle of a product.",
                  "example": "cat-hat"
                },
                "url": {
                  "type": "string",
                  "title": "Product URL",
                  "description": "The URL for a product."
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a product.",
                  "example": "This is a cat hat."
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of product.",
                  "example": "Accessories"
                },
                "vendor": {
                  "type": "string",
                  "title": "Vendor",
                  "description": "The vendor for a product."
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product."
                },
                "variants": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "An array of the product's variants. At least one variant is required for each product. A variant can use the same `id` and `title` as the parent product.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Variant",
                    "description": "Information about a specific product variant.",
                    "properties": {
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of a product variant.",
                        "example": "Cat Hat"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product variant."
                      },
                      "sku": {
                        "type": "string",
                        "title": "SKU",
                        "description": "The stock keeping unit (SKU) of a product variant."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a product variant."
                      },
                      "inventory_quantity": {
                        "type": "integer",
                        "title": "Inventory Quantity",
                        "description": "The inventory quantity of a product variant."
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Image URL",
                        "description": "The image URL for a product variant."
                      },
                      "backorders": {
                        "type": "string",
                        "title": "Backorders",
                        "description": "The backorders of a product variant."
                      },
                      "visibility": {
                        "type": "string",
                        "title": "Visibility",
                        "description": "The visibility of a product variant."
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "title": "Product Images",
                  "description": "An array of the product's images.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Image",
                    "description": "Information about a specific product image.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Image Foreign ID",
                        "description": "A unique identifier for the product image."
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product image."
                      },
                      "variant_ids": {
                        "type": "array",
                        "title": "Product Variants",
                        "description": "The list of product variants using the image."
                      }
                    }
                  }
                },
                "published_at_foreign": {
                  "type": "string",
                  "title": "Foreign Publish Time",
                  "format": "date-time",
                  "description": "The date and time the product was published.",
                  "example": "2015-07-15 19:28:00"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product",
              "description": "Information about a specific product.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Foreign ID",
                  "description": "A unique identifier for the product.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product.",
                  "example": "Cat Hat"
                },
                "handle": {
                  "type": "string",
                  "title": "Handle",
                  "description": "The handle of a product.",
                  "example": "cat-hat"
                },
                "url": {
                  "type": "string",
                  "title": "Product URL",
                  "description": "The URL for a product."
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "description": "The description of a product.",
                  "example": "This is a cat hat."
                },
                "type": {
                  "type": "string",
                  "title": "Type",
                  "description": "The type of product.",
                  "example": "Accessories"
                },
                "vendor": {
                  "type": "string",
                  "title": "Vendor",
                  "description": "The vendor for a product."
                },
                "image_url": {
                  "type": "string",
                  "title": "Product Image URL",
                  "description": "The image URL for a product."
                },
                "variants": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "An array of the product's variants.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Variant",
                    "description": "Information about a specific product variant.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant.",
                        "readOnly": true
                      },
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of a product variant.",
                        "example": "Cat Hat"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product variant."
                      },
                      "sku": {
                        "type": "string",
                        "title": "SKU",
                        "description": "The stock keeping unit (SKU) of a product variant."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a product variant."
                      },
                      "inventory_quantity": {
                        "type": "integer",
                        "title": "Inventory Quantity",
                        "description": "The inventory quantity of a product variant."
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Image URL",
                        "description": "The image URL for a product variant."
                      },
                      "backorders": {
                        "type": "string",
                        "title": "Backorders",
                        "description": "The backorders of a product variant."
                      },
                      "visibility": {
                        "type": "string",
                        "title": "Visibility",
                        "description": "The visibility of a product variant."
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the product was created.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the product was last updated.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "images": {
                  "type": "array",
                  "title": "Product Images",
                  "description": "An array of the product's images.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Image",
                    "description": "Information about a specific product image.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Image Foreign ID",
                        "description": "A unique identifier for the product image."
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product image."
                      },
                      "variant_ids": {
                        "type": "array",
                        "title": "Product Variants",
                        "description": "The list of product variants using the image."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "published_at_foreign": {
                  "type": "string",
                  "title": "Foreign Publish Time",
                  "format": "date-time",
                  "description": "The date and time the product was published.",
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a product",
        "description": "Delete a product.",
        "operationId": "deleteEcommerceStoresIdProductsId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/variants": {
      "get": {
        "summary": "Get information about a product's variants.",
        "description": "Get information about a product's variants.",
        "operationId": "getEcommerceStoresIdProductsIdVariants",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Ecommerce Product Variants",
              "description": "A collection of a product's variants.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "product_id": {
                  "type": "string",
                  "title": "Product ID",
                  "description": "The product id."
                },
                "variants": {
                  "type": "array",
                  "title": "Ecommerce Product Variants",
                  "description": "An array of objects, each representing a product's variants.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Variant",
                    "description": "Information about a specific product variant.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Product Variant Foreign ID",
                        "description": "A unique identifier for the product variant.",
                        "readOnly": true
                      },
                      "title": {
                        "type": "string",
                        "title": "Title",
                        "description": "The title of a product variant.",
                        "example": "Cat Hat"
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product variant."
                      },
                      "sku": {
                        "type": "string",
                        "title": "SKU",
                        "description": "The stock keeping unit (SKU) of a product variant."
                      },
                      "price": {
                        "type": "number",
                        "title": "Price",
                        "description": "The price of a product variant."
                      },
                      "inventory_quantity": {
                        "type": "integer",
                        "title": "Inventory Quantity",
                        "description": "The inventory quantity of a product variant."
                      },
                      "image_url": {
                        "type": "string",
                        "title": "Image URL",
                        "description": "The image URL for a product variant."
                      },
                      "backorders": {
                        "type": "string",
                        "title": "Backorders",
                        "description": "The backorders of a product variant."
                      },
                      "visibility": {
                        "type": "string",
                        "title": "Visibility",
                        "description": "The visibility of a product variant."
                      },
                      "created_at": {
                        "type": "string",
                        "title": "Creation Time",
                        "format": "date-time",
                        "description": "The date and time the product was created.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "title": "Update Time",
                        "format": "date-time",
                        "description": "The date and time the product was last updated.",
                        "readOnly": true,
                        "example": "2015-07-15 19:28:00"
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new variant to the product.",
        "description": "Add a new variant to the product.",
        "operationId": "postEcommerceStoresIdProductsIdVariants",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "required": [
                "id",
                "title"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant."
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the product was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the product was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/variants/{variant_id}": {
      "get": {
        "summary": "Get information about a specific product variant",
        "description": "Get information about a specific product variant.",
        "operationId": "getEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductVariantID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the product was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the product was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "put": {
        "summary": "Add or update a product variant",
        "description": "Add or update a product variant.",
        "operationId": "putEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductVariantID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "required": [
                "id",
                "title"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant."
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the product was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the product was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a product variant",
        "description": "Update a product variant.",
        "operationId": "patchEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductVariantID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product Variant",
              "description": "Information about a specific product variant.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Product Variant Foreign ID",
                  "description": "A unique identifier for the product variant.",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Title",
                  "description": "The title of a product variant.",
                  "example": "Cat Hat"
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product variant."
                },
                "sku": {
                  "type": "string",
                  "title": "SKU",
                  "description": "The stock keeping unit (SKU) of a product variant."
                },
                "price": {
                  "type": "number",
                  "title": "Price",
                  "description": "The price of a product variant."
                },
                "inventory_quantity": {
                  "type": "integer",
                  "title": "Inventory Quantity",
                  "description": "The inventory quantity of a product variant."
                },
                "image_url": {
                  "type": "string",
                  "title": "Image URL",
                  "description": "The image URL for a product variant."
                },
                "backorders": {
                  "type": "string",
                  "title": "Backorders",
                  "description": "The backorders of a product variant."
                },
                "visibility": {
                  "type": "string",
                  "title": "Visibility",
                  "description": "The visibility of a product variant."
                },
                "created_at": {
                  "type": "string",
                  "title": "Creation Time",
                  "format": "date-time",
                  "description": "The date and time the product was created.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "updated_at": {
                  "type": "string",
                  "title": "Update Time",
                  "format": "date-time",
                  "description": "The date and time the product was last updated.",
                  "readOnly": true,
                  "example": "2015-07-15 19:28:00"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a product variant",
        "description": "Delete a product variant.",
        "operationId": "deleteEcommerceStoresIdProductsIdVariantsId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductVariantID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/images": {
      "get": {
        "summary": "Get information about a product's images.",
        "description": "Get information about a product's images.",
        "operationId": "getEcommerceStoresIdProductsIdImages",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/CollectionCount"
          },
          {
            "$ref": "#/parameters/CollectionOffset"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Ecommerce Product Images",
              "description": "A collection of a product's images.",
              "properties": {
                "store_id": {
                  "type": "string",
                  "title": "Store ID",
                  "description": "The store id."
                },
                "product_id": {
                  "type": "string",
                  "title": "Product ID",
                  "description": "The product id."
                },
                "images": {
                  "type": "array",
                  "title": "Ecommerce Product Images",
                  "description": "An array of objects, each representing a product image resource.",
                  "items": {
                    "type": "object",
                    "title": "E-commerce Product Image",
                    "description": "Information about a specific product image.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Image Foreign ID",
                        "description": "A unique identifier for the product image."
                      },
                      "url": {
                        "type": "string",
                        "title": "URL",
                        "description": "The URL for a product image."
                      },
                      "variant_ids": {
                        "type": "array",
                        "title": "Product Variants",
                        "description": "The list of product variants using the image."
                      },
                      "_links": {
                        "$ref": "#/definitions/HATEOASLinks"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "summary": "Add a new image to the product.",
        "description": "Add a new image to the product.",
        "operationId": "postEcommerceStoresIdProductsIdImages",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Product Image",
              "description": "Information about a specific product image.",
              "required": [
                "id",
                "url"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Image Foreign ID",
                  "description": "A unique identifier for the product image."
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product image."
                },
                "variant_ids": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "The list of product variants using the image."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product Image",
              "description": "Information about a specific product image.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Image Foreign ID",
                  "description": "A unique identifier for the product image."
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product image."
                },
                "variant_ids": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "The list of product variants using the image."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ecommerce/stores/{store_id}/products/{product_id}/images/{image_id}": {
      "get": {
        "summary": "Get information about a specific product image",
        "description": "Get information about a specific product image.",
        "operationId": "getEcommerceStoresIdProductsIdImagesId",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductImageID"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product Image",
              "description": "Information about a specific product image.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Image Foreign ID",
                  "description": "A unique identifier for the product image."
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product image."
                },
                "variant_ids": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "The list of product variants using the image."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "summary": "Update a product image",
        "description": "Update a product image.",
        "operationId": "patchEcommerceStoresIdProductsIdImagesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductImageID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "title": "E-commerce Product Image",
              "description": "Information about a specific product image.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Image Foreign ID",
                  "description": "A unique identifier for the product image."
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product image."
                },
                "variant_ids": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "The list of product variants using the image."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "E-commerce Product Image",
              "description": "Information about a specific product image.",
              "properties": {
                "id": {
                  "type": "string",
                  "title": "Image Foreign ID",
                  "description": "A unique identifier for the product image."
                },
                "url": {
                  "type": "string",
                  "title": "URL",
                  "description": "The URL for a product image."
                },
                "variant_ids": {
                  "type": "array",
                  "title": "Product Variants",
                  "description": "The list of product variants using the image."
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "summary": "Delete a product image",
        "description": "Delete a product image.",
        "operationId": "deleteEcommerceStoresIdProductsIdImagesId",
        "parameters": [
          {
            "$ref": "#/parameters/EcommerceStoreID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductID"
          },
          {
            "$ref": "#/parameters/EcommerceStoreProductImageID"
          }
        ],
        "responses": {
          "204": {
            "description": "Empty Response"
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/search-members": {
      "get": {
        "summary": "Search Members",
        "description": "Search for list members. This search can be restricted to a specific list, or can be used to search across all lists in an account.",
        "operationId": "getSearchMembers",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/Filter_SearchTerm"
          },
          {
            "$ref": "#/parameters/Filter_ListID"
          },
          {
            "$ref": "#/parameters/Filter_Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Members",
              "description": "Members found for given search term",
              "properties": {
                "exact_matches": {
                  "type": "object",
                  "description": "Exact matches of the provided search query.",
                  "title": "Exact Matches",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "List Members",
                        "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Email ID",
                            "description": "The MD5 hash of the lowercase version of the list member's email address.",
                            "readOnly": true
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "Email address for a subscriber."
                          },
                          "unique_email_id": {
                            "type": "string",
                            "title": "Unique Email ID",
                            "description": "An identifier for the address across all of MailChimp.",
                            "readOnly": true
                          },
                          "email_type": {
                            "type": "string",
                            "title": "Email Type",
                            "description": "Type of email this member asked to get ('html' or 'text')."
                          },
                          "status": {
                            "type": "string",
                            "title": "Status",
                            "description": "Subscriber's current status.",
                            "enum": [
                              "subscribed",
                              "unsubscribed",
                              "cleaned",
                              "pending",
                              "transactional"
                            ]
                          },
                          "unsubscribe_reason": {
                            "type": "string",
                            "title": "Unsubscribe Reason",
                            "description": "A subscriber's reason for unsubscribing."
                          },
                          "merge_fields": {
                            "type": "object",
                            "title": "Member Merge Var",
                            "description": "An individual merge var and value for a member.",
                            "additionalProperties": {
                              "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                            }
                          },
                          "interests": {
                            "type": "object",
                            "title": "Subscriber Interests",
                            "description": "The key of this object's properties is the ID of the interest in question.",
                            "additionalProperties": {
                              "type": "boolean",
                              "title": "Interest Value",
                              "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                            }
                          },
                          "stats": {
                            "type": "object",
                            "title": "Subscriber Stats",
                            "description": "Open and click rates for this subscriber.",
                            "readOnly": true,
                            "properties": {
                              "avg_open_rate": {
                                "type": "number",
                                "title": "Average Open Rate",
                                "description": "A subscriber's average open rate.",
                                "readOnly": true
                              },
                              "avg_click_rate": {
                                "type": "number",
                                "title": "Average Click Rate",
                                "description": "A subscriber's average clickthrough rate.",
                                "readOnly": true
                              }
                            }
                          },
                          "ip_signup": {
                            "type": "string",
                            "title": "Signup IP",
                            "description": "IP address the subscriber signed up from.",
                            "readOnly": true
                          },
                          "timestamp_signup": {
                            "type": "string",
                            "title": "Signup Timestamp",
                            "description": "The date and time the subscriber signed up for the list.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "ip_opt": {
                            "type": "string",
                            "title": "Opt-in IP",
                            "description": "The IP address the subscriber used to confirm their opt-in status.",
                            "readOnly": true
                          },
                          "timestamp_opt": {
                            "type": "string",
                            "title": "Opt-in Timestamp",
                            "description": "The date and time the subscribe confirmed their opt-in status.",
                            "readOnly": true,
                            "format": "date-time"
                          },
                          "member_rating": {
                            "type": "integer",
                            "title": "Member Rating",
                            "description": "Star rating for this member, between 1 and 5.",
                            "readOnly": true
                          },
                          "last_changed": {
                            "type": "string",
                            "title": "Last Changed Date",
                            "description": "The date and time the member's info was last changed.",
                            "readOnly": true,
                            "format": "date-time"
                          },
                          "language": {
                            "type": "string",
                            "title": "Language",
                            "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                          },
                          "vip": {
                            "type": "boolean",
                            "title": "VIP",
                            "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                          },
                          "email_client": {
                            "type": "string",
                            "title": "Email Client",
                            "description": "The list member's email client.",
                            "readOnly": true
                          },
                          "location": {
                            "type": "object",
                            "title": "Location",
                            "description": "Subscriber location information.",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The location latitude."
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The location longitude."
                              },
                              "gmtoff": {
                                "type": "integer",
                                "title": "GMT Offset",
                                "description": "The time difference in hours from GMT.",
                                "readOnly": true
                              },
                              "dstoff": {
                                "type": "integer",
                                "title": "DST Offset",
                                "description": "The offset for timezones where daylight saving time is observed.",
                                "readOnly": true
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The unique code for the location country.",
                                "readOnly": true
                              },
                              "timezone": {
                                "type": "string",
                                "title": "Timezone",
                                "description": "The timezone for the location.",
                                "readOnly": true
                              }
                            }
                          },
                          "last_note": {
                            "type": "object",
                            "title": "Notes",
                            "description": "The most recent Note added about this member.",
                            "readOnly": true,
                            "properties": {
                              "note_id": {
                                "type": "integer",
                                "title": "Note ID",
                                "description": "The note id.",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Created Time",
                                "description": "The date and time the note was created.",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "created_by": {
                                "type": "string",
                                "title": "Author",
                                "description": "The author of the note.",
                                "readOnly": true
                              },
                              "note": {
                                "type": "string",
                                "title": "Note",
                                "description": "The content of the note.",
                                "readOnly": true
                              }
                            }
                          },
                          "list_id": {
                            "type": "string",
                            "title": "List ID",
                            "description": "The list id.",
                            "readOnly": true
                          },
                          "_links": {
                            "$ref": "#/definitions/HATEOASLinks"
                          }
                        }
                      },
                      "title": "Members",
                      "description": "An array of objects, each representing a specific list member."
                    },
                    "total_items": {
                      "$ref": "#/definitions/CollectionTotal"
                    }
                  }
                },
                "full_search": {
                  "type": "object",
                  "description": "Partial matches of the provided search query.",
                  "title": "Partial Matches",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "List Members",
                        "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Email ID",
                            "description": "The MD5 hash of the lowercase version of the list member's email address.",
                            "readOnly": true
                          },
                          "email_address": {
                            "type": "string",
                            "title": "Email Address",
                            "description": "Email address for a subscriber."
                          },
                          "unique_email_id": {
                            "type": "string",
                            "title": "Unique Email ID",
                            "description": "An identifier for the address across all of MailChimp.",
                            "readOnly": true
                          },
                          "email_type": {
                            "type": "string",
                            "title": "Email Type",
                            "description": "Type of email this member asked to get ('html' or 'text')."
                          },
                          "status": {
                            "type": "string",
                            "title": "Status",
                            "description": "Subscriber's current status.",
                            "enum": [
                              "subscribed",
                              "unsubscribed",
                              "cleaned",
                              "pending",
                              "transactional"
                            ]
                          },
                          "unsubscribe_reason": {
                            "type": "string",
                            "title": "Unsubscribe Reason",
                            "description": "A subscriber's reason for unsubscribing."
                          },
                          "merge_fields": {
                            "type": "object",
                            "title": "Member Merge Var",
                            "description": "An individual merge var and value for a member.",
                            "additionalProperties": {
                              "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
                            }
                          },
                          "interests": {
                            "type": "object",
                            "title": "Subscriber Interests",
                            "description": "The key of this object's properties is the ID of the interest in question.",
                            "additionalProperties": {
                              "type": "boolean",
                              "title": "Interest Value",
                              "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
                            }
                          },
                          "stats": {
                            "type": "object",
                            "title": "Subscriber Stats",
                            "description": "Open and click rates for this subscriber.",
                            "readOnly": true,
                            "properties": {
                              "avg_open_rate": {
                                "type": "number",
                                "title": "Average Open Rate",
                                "description": "A subscriber's average open rate.",
                                "readOnly": true
                              },
                              "avg_click_rate": {
                                "type": "number",
                                "title": "Average Click Rate",
                                "description": "A subscriber's average clickthrough rate.",
                                "readOnly": true
                              }
                            }
                          },
                          "ip_signup": {
                            "type": "string",
                            "title": "Signup IP",
                            "description": "IP address the subscriber signed up from.",
                            "readOnly": true
                          },
                          "timestamp_signup": {
                            "type": "string",
                            "title": "Signup Timestamp",
                            "description": "The date and time the subscriber signed up for the list.",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "ip_opt": {
                            "type": "string",
                            "title": "Opt-in IP",
                            "description": "The IP address the subscriber used to confirm their opt-in status.",
                            "readOnly": true
                          },
                          "timestamp_opt": {
                            "type": "string",
                            "title": "Opt-in Timestamp",
                            "description": "The date and time the subscribe confirmed their opt-in status.",
                            "readOnly": true,
                            "format": "date-time"
                          },
                          "member_rating": {
                            "type": "integer",
                            "title": "Member Rating",
                            "description": "Star rating for this member, between 1 and 5.",
                            "readOnly": true
                          },
                          "last_changed": {
                            "type": "string",
                            "title": "Last Changed Date",
                            "description": "The date and time the member's info was last changed.",
                            "readOnly": true,
                            "format": "date-time"
                          },
                          "language": {
                            "type": "string",
                            "title": "Language",
                            "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                          },
                          "vip": {
                            "type": "boolean",
                            "title": "VIP",
                            "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
                          },
                          "email_client": {
                            "type": "string",
                            "title": "Email Client",
                            "description": "The list member's email client.",
                            "readOnly": true
                          },
                          "location": {
                            "type": "object",
                            "title": "Location",
                            "description": "Subscriber location information.",
                            "properties": {
                              "latitude": {
                                "type": "number",
                                "title": "Latitude",
                                "description": "The location latitude."
                              },
                              "longitude": {
                                "type": "number",
                                "title": "Longitude",
                                "description": "The location longitude."
                              },
                              "gmtoff": {
                                "type": "integer",
                                "title": "GMT Offset",
                                "description": "The time difference in hours from GMT.",
                                "readOnly": true
                              },
                              "dstoff": {
                                "type": "integer",
                                "title": "DST Offset",
                                "description": "The offset for timezones where daylight saving time is observed.",
                                "readOnly": true
                              },
                              "country_code": {
                                "type": "string",
                                "title": "Country Code",
                                "description": "The unique code for the location country.",
                                "readOnly": true
                              },
                              "timezone": {
                                "type": "string",
                                "title": "Timezone",
                                "description": "The timezone for the location.",
                                "readOnly": true
                              }
                            }
                          },
                          "last_note": {
                            "type": "object",
                            "title": "Notes",
                            "description": "The most recent Note added about this member.",
                            "readOnly": true,
                            "properties": {
                              "note_id": {
                                "type": "integer",
                                "title": "Note ID",
                                "description": "The note id.",
                                "readOnly": true
                              },
                              "created_at": {
                                "type": "string",
                                "title": "Created Time",
                                "description": "The date and time the note was created.",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "created_by": {
                                "type": "string",
                                "title": "Author",
                                "description": "The author of the note.",
                                "readOnly": true
                              },
                              "note": {
                                "type": "string",
                                "title": "Note",
                                "description": "The content of the note.",
                                "readOnly": true
                              }
                            }
                          },
                          "list_id": {
                            "type": "string",
                            "title": "List ID",
                            "description": "The list id.",
                            "readOnly": true
                          },
                          "_links": {
                            "$ref": "#/definitions/HATEOASLinks"
                          }
                        }
                      },
                      "title": "Members",
                      "description": "An array of objects, each representing a specific list member."
                    },
                    "total_items": {
                      "$ref": "#/definitions/CollectionTotal"
                    }
                  }
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/search-campaigns": {
      "get": {
        "summary": "Search Campaigns",
        "description": "Search all campaigns for the specified query terms.",
        "operationId": "getSearchCampaigns",
        "parameters": [
          {
            "$ref": "#/parameters/FieldSelection"
          },
          {
            "$ref": "#/parameters/FieldExclusion"
          },
          {
            "$ref": "#/parameters/Filter_SearchTerm"
          },
          {
            "$ref": "#/parameters/Filter_SnipStart"
          },
          {
            "$ref": "#/parameters/Filter_SnipEnd"
          },
          {
            "$ref": "#/parameters/Filter_Offset"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Campaigns",
              "description": "Campaigns and Snippets found for given search term.",
              "properties": {
                "results": {
                  "type": "array",
                  "title": "Results",
                  "description": "An array of matching campaigns and snippets.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "campaign": {
                        "type": "object",
                        "title": "Campaign",
                        "description": "A summary of an individual campaign's settings and content.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "title": "Campaign ID",
                            "description": "A string that uniquely identifies this campaign.",
                            "readOnly": true
                          },
                          "web_id": {
                            "type": "integer",
                            "title": "Campaign Web ID",
                            "description": "The ID used in the MailChimp web application. View this campaign in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
                            "readOnly": true
                          },
                          "type": {
                            "$ref": "#/definitions/CampaignType"
                          },
                          "create_time": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Create Time",
                            "description": "The date and time the campaign was created.",
                            "readOnly": true
                          },
                          "archive_url": {
                            "type": "string",
                            "title": "Archive URL",
                            "description": "The link to the campaign's archive version.",
                            "readOnly": true
                          },
                          "long_archive_url": {
                            "type": "string",
                            "title": "Long Archive URL",
                            "description": "The original link to the campaign's archive version.",
                            "readOnly": true
                          },
                          "status": {
                            "$ref": "#/definitions/CampaignStatus"
                          },
                          "emails_sent": {
                            "type": "integer",
                            "title": "Emails Sent",
                            "description": "The total number of emails sent for this campaign.",
                            "readOnly": true
                          },
                          "send_time": {
                            "type": "string",
                            "format": "date-time",
                            "title": "Send Time",
                            "description": "The date and time a campaign was sent.",
                            "readOnly": true
                          },
                          "content_type": {
                            "type": "string",
                            "title": "Content Type",
                            "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
                            "readOnly": true
                          },
                          "needs_block_refresh": {
                            "type": "boolean",
                            "title": "Needs Block Refresh",
                            "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor.",
                            "readonly": true
                          },
                          "recipients": {
                            "type": "object",
                            "title": "List",
                            "description": "List settings for the campaign.",
                            "properties": {
                              "list_id": {
                                "type": "string",
                                "title": "List ID",
                                "description": "The unique list id."
                              },
                              "list_name": {
                                "type": "string",
                                "title": "List Name",
                                "description": "The name of the list.",
                                "readOnly": true
                              },
                              "segment_text": {
                                "type": "string",
                                "title": "Segment Text",
                                "description": "A description of the [segment](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) used for the campaign. Formatted as a string marked up with HTML.",
                                "readOnly": true
                              },
                              "recipient_count": {
                                "type": "integer",
                                "title": "Recipient Count",
                                "description": "Count of the recipients on the associated list. Formatted as an integer.",
                                "readOnly": true
                              },
                              "segment_opts": {
                                "$ref": "#/definitions/SegmentationOptions"
                              }
                            }
                          },
                          "settings": {
                            "type": "object",
                            "title": "Campaign Settings",
                            "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
                            "properties": {
                              "subject_line": {
                                "type": "string",
                                "title": "Campaign Subject Line",
                                "description": "The subject line for the campaign."
                              },
                              "preview_text": {
                                "type": "string",
                                "title": "Campaign Preview Text",
                                "description": "The preview text for the campaign."
                              },
                              "title": {
                                "type": "string",
                                "title": "Campaign Title",
                                "description": "The title of the campaign."
                              },
                              "from_name": {
                                "type": "string",
                                "title": "From Name",
                                "description": "The 'from' name on the campaign (not an email address)."
                              },
                              "reply_to": {
                                "type": "string",
                                "title": "Reply To Address",
                                "description": "The reply-to email address for the campaign."
                              },
                              "use_conversation": {
                                "type": "boolean",
                                "title": "Conversation",
                                "description": "Use MailChimp Conversation feature to manage out-of-office replies."
                              },
                              "to_name": {
                                "type": "string",
                                "title": "To Name",
                                "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                              },
                              "folder_id": {
                                "type": "string",
                                "title": "Folder ID",
                                "description": "If the campaign is listed in a folder, the id for that folder."
                              },
                              "authenticate": {
                                "type": "boolean",
                                "title": "Authentication",
                                "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
                              },
                              "auto_footer": {
                                "type": "boolean",
                                "title": "Auto-Footer",
                                "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
                              },
                              "inline_css": {
                                "type": "boolean",
                                "title": "Inline CSS",
                                "description": "Automatically inline the CSS included with the campaign content."
                              },
                              "auto_tweet": {
                                "type": "boolean",
                                "title": "Auto-Tweet",
                                "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
                              },
                              "auto_fb_post": {
                                "type": "array",
                                "title": "Auto Post to Facebook",
                                "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "fb_comments": {
                                "type": "boolean",
                                "title": "Facebook Comments",
                                "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
                              },
                              "timewarp": {
                                "type": "boolean",
                                "title": "Timewarp Send",
                                "description": "Send this campaign using [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                                "readOnly": true
                              },
                              "template_id": {
                                "type": "integer",
                                "title": "Template ID",
                                "description": "The id for the template used in this campaign.",
                                "readOnly": false
                              },
                              "drag_and_drop": {
                                "type": "boolean",
                                "title": "Drag And Drop Campaign",
                                "description": "Whether the campaign uses the drag-and-drop editor.",
                                "readOnly": true
                              }
                            }
                          },
                          "variate_settings": {
                            "type": "object",
                            "title": "A/B Test Options",
                            "description": "The settings specific to A/B test campaigns.",
                            "properties": {
                              "winning_combination_id": {
                                "type": "string",
                                "title": "Winning Combination ID",
                                "description": "ID for the winning combination.",
                                "readOnly": true
                              },
                              "winning_campaign_id": {
                                "type": "string",
                                "title": "Winning Campaign ID",
                                "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
                                "readOnly": true
                              },
                              "winner_criteria": {
                                "type": "string",
                                "title": "Winning Criteria",
                                "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
                                "enum": [
                                  "opens",
                                  "clicks",
                                  "manual",
                                  "total_revenue"
                                ]
                              },
                              "wait_time": {
                                "type": "integer",
                                "title": "Wait Time",
                                "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
                              },
                              "test_size": {
                                "type": "integer",
                                "title": "Test Size",
                                "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
                              },
                              "subject_lines": {
                                "type": "array",
                                "title": "Subject Lines",
                                "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "send_times": {
                                "type": "array",
                                "title": "Send Times",
                                "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
                                "items": {
                                  "type": "string",
                                  "format": "date-time"
                                }
                              },
                              "from_names": {
                                "type": "array",
                                "title": "From Names",
                                "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "reply_to_addresses": {
                                "type": "array",
                                "title": "Reply To Addresses",
                                "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "contents": {
                                "type": "array",
                                "title": "Content Descriptions",
                                "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "combinations": {
                                "type": "array",
                                "title": "Combinations",
                                "description": "Combinations of possible variables used to build emails.",
                                "readOnly": true,
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "title": "ID",
                                      "description": "Unique ID for the combination."
                                    },
                                    "subject_line": {
                                      "type": "integer",
                                      "title": "Subject Line",
                                      "description": "The index of `variate_settings.subject_lines` used."
                                    },
                                    "send_time": {
                                      "type": "integer",
                                      "title": "Send Time",
                                      "description": "The index of `variate_settings.send_times` used."
                                    },
                                    "from_name": {
                                      "type": "integer",
                                      "title": "From Name",
                                      "description": "The index of `variate_settings.from_names` used."
                                    },
                                    "reply_to": {
                                      "type": "integer",
                                      "title": "Reply To",
                                      "description": "The index of `variate_settings.reply_to_addresses` used."
                                    },
                                    "content_description": {
                                      "type": "integer",
                                      "title": "Content Description",
                                      "description": "The index of `variate_settings.contents` used."
                                    },
                                    "recipients": {
                                      "type": "integer",
                                      "title": "Recipients",
                                      "description": "The number of recipients for this combination."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "tracking": {
                            "type": "object",
                            "title": "Campaign Tracking Options",
                            "description": "The tracking options for a campaign.",
                            "properties": {
                              "opens": {
                                "type": "boolean",
                                "title": "Opens",
                                "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "html_clicks": {
                                "type": "boolean",
                                "title": "HTML Click Tracking",
                                "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "text_clicks": {
                                "type": "boolean",
                                "title": "Plain-Text Click Tracking",
                                "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
                              },
                              "goal_tracking": {
                                "type": "boolean",
                                "title": "MailChimp Goal Tracking",
                                "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                              },
                              "ecomm360": {
                                "type": "boolean",
                                "title": "E-commerce Tracking",
                                "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
                              },
                              "google_analytics": {
                                "type": "string",
                                "title": "Google Analytics Tracking",
                                "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
                              },
                              "clicktale": {
                                "type": "string",
                                "title": "ClickTale Analytics Tracking",
                                "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
                              },
                              "salesforce": {
                                "type": "object",
                                "title": "Salesforce CRM Tracking",
                                "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                                "properties": {
                                  "campaign": {
                                    "type": "boolean",
                                    "title": "Salesforce Campaign",
                                    "description": "Create a campaign in a connected Salesforce account."
                                  },
                                  "notes": {
                                    "type": "boolean",
                                    "title": "Salesforce Note",
                                    "description": "Update contact notes for a campaign based on subscriber email addresses."
                                  }
                                }
                              },
                              "capsule": {
                                "type": "object",
                                "title": "Capsule CRM Tracking",
                                "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
                                "properties": {
                                  "notes": {
                                    "type": "boolean",
                                    "title": "Capsule Note",
                                    "description": "Update contact notes for a campaign based on subscriber email addresses."
                                  }
                                }
                              }
                            }
                          },
                          "rss_opts": {
                            "type": "object",
                            "title": "RSS Options",
                            "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                            "properties": {
                              "feed_url": {
                                "type": "string",
                                "title": "Feed URL",
                                "format": "uri",
                                "description": "The URL for the RSS feed."
                              },
                              "frequency": {
                                "type": "string",
                                "title": "Frequency",
                                "description": "The frequency of the RSS Campaign.",
                                "enum": [
                                  "daily",
                                  "weekly",
                                  "monthly"
                                ]
                              },
                              "schedule": {
                                "type": "object",
                                "title": "Sending Schedule",
                                "description": "The schedule for sending the RSS Campaign.",
                                "properties": {
                                  "hour": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 23,
                                    "title": "Sending Hour",
                                    "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                                  },
                                  "daily_send": {
                                    "type": "object",
                                    "title": "Daily Sending Days",
                                    "description": "The days of the week to send a daily RSS Campaign.",
                                    "properties": {
                                      "sunday": {
                                        "type": "boolean",
                                        "title": "Sunday",
                                        "description": "Sends the daily RSS Campaign on Sundays."
                                      },
                                      "monday": {
                                        "type": "boolean",
                                        "title": "Monday",
                                        "description": "Sends the daily RSS Campaign on Mondays."
                                      },
                                      "tuesday": {
                                        "type": "boolean",
                                        "title": "tuesday",
                                        "description": "Sends the daily RSS Campaign on Tuesdays."
                                      },
                                      "wednesday": {
                                        "type": "boolean",
                                        "title": "Monday",
                                        "description": "Sends the daily RSS Campaign on Wednesdays."
                                      },
                                      "thursday": {
                                        "type": "boolean",
                                        "title": "Thursday",
                                        "description": "Sends the daily RSS Campaign on Thursdays."
                                      },
                                      "friday": {
                                        "type": "boolean",
                                        "title": "Friday",
                                        "description": "Sends the daily RSS Campaign on Fridays."
                                      },
                                      "saturday": {
                                        "type": "boolean",
                                        "title": "Saturday",
                                        "description": "Sends the daily RSS Campaign on Saturdays."
                                      }
                                    }
                                  },
                                  "weekly_send_day": {
                                    "type": "string",
                                    "enum": [
                                      "sunday",
                                      "monday",
                                      "tuesday",
                                      "wednesday",
                                      "thursday",
                                      "friday",
                                      "saturday"
                                    ],
                                    "title": "Weekly Sending Day",
                                    "description": "The day of the week to send a weekly RSS Campaign."
                                  },
                                  "monthly_send_date": {
                                    "type": "number",
                                    "minimum": 0,
                                    "maximum": 31,
                                    "title": "Monthly Sending Day",
                                    "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                                  }
                                }
                              },
                              "last_sent": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Last Sent",
                                "description": "The date the campaign was last sent.",
                                "readOnly": true
                              },
                              "constrain_rss_img": {
                                "type": "boolean",
                                "title": "Constrain RSS Images",
                                "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
                              }
                            }
                          },
                          "ab_split_opts": {
                            "type": "object",
                            "title": "A/B Testing Options",
                            "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
                            "readOnly": true,
                            "properties": {
                              "split_test": {
                                "type": "string",
                                "title": "Split Test",
                                "description": "The type of AB split to run.",
                                "enum": [
                                  "subject",
                                  "from_name",
                                  "schedule"
                                ]
                              },
                              "pick_winner": {
                                "type": "string",
                                "title": "Pick Winner",
                                "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
                                "enum": [
                                  "opens",
                                  "clicks",
                                  "manual"
                                ]
                              },
                              "wait_units": {
                                "type": "string",
                                "title": "Wait Time",
                                "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
                                "enum": [
                                  "hours",
                                  "days"
                                ]
                              },
                              "wait_time": {
                                "type": "integer",
                                "title": "Wait Time",
                                "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
                              },
                              "split_size": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 50,
                                "title": "Split Size",
                                "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
                              },
                              "from_name_a": {
                                "type": "string",
                                "title": "From Name Group A",
                                "description": "For campaigns split on 'From Name', the name for Group A."
                              },
                              "from_name_b": {
                                "type": "string",
                                "title": "From Name Group B",
                                "description": "For campaigns split on 'From Name', the name for Group B."
                              },
                              "reply_email_a": {
                                "type": "string",
                                "title": "Reply Email Group A",
                                "description": "For campaigns split on 'From Name', the reply-to address for Group A."
                              },
                              "reply_email_b": {
                                "type": "string",
                                "title": "Reply Email Group B",
                                "description": "For campaigns split on 'From Name', the reply-to address for Group B."
                              },
                              "subject_a": {
                                "type": "string",
                                "title": "Subject Line Group A",
                                "description": "For campaigns split on 'Subject Line', the subject line for Group A."
                              },
                              "subject_b": {
                                "type": "string",
                                "title": "Subject Line Group B",
                                "description": "For campaigns split on 'Subject Line', the subject line for Group B."
                              },
                              "send_time_a": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Send Time Group A",
                                "description": "The send time for Group A."
                              },
                              "send_time_b": {
                                "type": "string",
                                "format": "date-time",
                                "title": "Send Time Group B",
                                "description": "The send time for Group B."
                              },
                              "send_time_winner": {
                                "type": "string",
                                "title": "Send Time Winner",
                                "description": "The send time for the winning version."
                              }
                            }
                          },
                          "social_card": {
                            "type": "object",
                            "title": "Campaign Social Card",
                            "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
                            "properties": {
                              "image_url": {
                                "type": "string",
                                "title": "Image URL",
                                "description": "The url for the header image for the card."
                              },
                              "description": {
                                "type": "string",
                                "title": "Campaign Description",
                                "description": "A short summary of the campaign to display."
                              },
                              "title": {
                                "type": "string",
                                "title": "Title",
                                "description": "The title for the card. Typically the subject line of the campaign."
                              }
                            }
                          },
                          "report_summary": {
                            "type": "object",
                            "title": "Campaign Report Summary",
                            "description": "For sent campaigns, a summary of opens, clicks, and e-commerce data.",
                            "properties": {
                              "opens": {
                                "type": "integer",
                                "title": "Automation Opens",
                                "description": "The total number of opens for a campaign.",
                                "readOnly": true
                              },
                              "unique_opens": {
                                "type": "integer",
                                "title": "Unique Opens",
                                "description": "The number of unique opens.",
                                "readOnly": true
                              },
                              "open_rate": {
                                "type": "number",
                                "title": "Open Rate",
                                "description": "The number of unique opens divided by the total number of successful deliveries.",
                                "readOnly": true
                              },
                              "clicks": {
                                "type": "integer",
                                "title": "Total Clicks",
                                "description": "The total number of clicks for an campaign.",
                                "readOnly": true
                              },
                              "subscriber_clicks": {
                                "type": "integer",
                                "title": "Unique Subscriber Clicks",
                                "description": "The number of unique clicks.",
                                "readOnly": true
                              },
                              "click_rate": {
                                "type": "number",
                                "title": "Click Rate",
                                "description": "The number of unique clicks divided by the total number of successful deliveries.",
                                "readOnly": true
                              },
                              "ecommerce": {
                                "type": "object",
                                "title": "E-Commerce Report",
                                "description": "E-Commerce stats for a campaign.",
                                "properties": {
                                  "total_orders": {
                                    "type": "integer",
                                    "title": "Total Orders",
                                    "description": "The total orders for a campaign.",
                                    "readOnly": true
                                  },
                                  "total_spent": {
                                    "type": "number",
                                    "title": "Total Spent",
                                    "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                                    "readOnly": true
                                  },
                                  "total_revenue": {
                                    "type": "number",
                                    "title": "Total Revenue",
                                    "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "delivery_status": {
                            "$ref": "#/definitions/DeliveryStatus"
                          },
                          "_links": {
                            "$ref": "#/definitions/HATEOASLinks"
                          }
                        }
                      },
                      "snippet": {
                        "type": "string",
                        "title": "Matching snippet"
                      }
                    }
                  }
                },
                "total_items": {
                  "$ref": "#/definitions/CollectionTotal"
                },
                "_links": {
                  "$ref": "#/definitions/HATEOASLinks"
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    },
    "/ping": {
      "get": {
        "summary": "Ping the API",
        "description": "A health check for the API that won't return any account-specific information.",
        "operationId": "getPing",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "API health status",
              "description": "API health status.",
              "properties": {
                "health_status": {
                  "type": "string",
                  "title": "API health status",
                  "description": "This will return a constant string value if the request is successful. Ex. \"Everything's Chimpy!\"",
                  "readOnly": true,
                  "example": "\"Everything's Chimpy!\""
                }
              }
            }
          },
          "default": {
            "description": "Error descriptions for the MailChimp API.",
            "schema": {
              "type": "object",
              "title": "Problem Detail Document",
              "description": "An error generated by the MailChimp API. Conforms to IETF draft 'draft-nottingham-http-problem-06'.",
              "required": [
                "type",
                "title",
                "status",
                "detail",
                "instance"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "title": "Problem Type",
                  "description": "An absolute URI that identifies the problem type. When dereferenced, it should provide human-readable documentation for the problem type.",
                  "example": "http://kb.mailchimp.com/api/error-docs/404-resource-not-found"
                },
                "title": {
                  "type": "string",
                  "title": "Error Title",
                  "description": "A short, human-readable summary of the problem type. It shouldn't change based on the occurrence of the problem, except for purposes of localization.",
                  "example": "Resource Not Found"
                },
                "status": {
                  "type": "integer",
                  "title": "HTTP Status Code",
                  "description": "The HTTP status code (RFC2616, Section 6) generated by the origin server for this occurrence of the problem.",
                  "example": 404
                },
                "detail": {
                  "type": "string",
                  "title": "Error Message",
                  "description": "A human-readable explanation specific to this occurrence of the problem. [Learn more about errors](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#errors).",
                  "example": "The requested resource could not be found."
                },
                "instance": {
                  "type": "string",
                  "title": "Instance ID",
                  "description": "A string that identifies this specific occurrence of the problem. Please provide this ID when contacting support.",
                  "example": "995c5cb0-3280-4a6e-808b-3b096d0bb219"
                }
              }
            },
            "examples": {
              "type": "http://kb.mailchimp.com/api/error-docs/401-api-key-missing",
              "title": "Internal Server Error",
              "status": 500,
              "detail": "A deep, internal error has occurred during the processing of your request. Please contact support."
            }
          }
        },
        "deprecated": false
      },
      "parameters": [
        {
          "$ref": "#/parameters/datacenter"
        }
      ]
    }
  },
  "definitions": {
    "SegmentCondition": {
      "type": "object",
      "title": "Segment Condition",
      "description": "A summary of segmenting conditions.",
      "discriminator": "condition_type",
      "required": [
        "field",
        "condition_type",
        "op"
      ],
      "properties": {
        "condition_type": {
          "type": "string",
          "title": "Segment Type",
          "description": "The type of segment, for example: date, language, Mandrill, static, and more.",
          "enum": [
            "Aim",
            "Automation",
            "CampaignPoll",
            "Conversation",
            "Date",
            "EmailClient",
            "Language",
            "Mandrill",
            "MemberRating",
            "SignupSource",
            "SurveyMonkey",
            "VIP",
            "Interests",
            "EcommCategory",
            "EcommNumber",
            "EcommPurchased",
            "EcommSpent",
            "EcommStore",
            "GoalActivity",
            "GoalTimestamp",
            "FuzzySegment",
            "StaticSegment",
            "IPGeoCountryState",
            "IPGeoIn",
            "IPGeoInZip",
            "IPGeoUnknown",
            "IPGeoZip",
            "SocialAge",
            "SocialGender",
            "SocialInfluence",
            "SocialNetworkMember",
            "SocialNetworkFollow",
            "AddressMerge",
            "ZipMerge",
            "BirthdayMerge",
            "DateMerge",
            "TextMerge",
            "SelectMerge",
            "EmailAddress"
          ],
          "x-possible-values": "A list of all possible [segmentation options](http://kb.mailchimp.com/segments/all-the-segmenting-options?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
        },
        "field": {
          "type": "string",
          "title": "Segment Field",
          "description": "The field to segment on."
        },
        "op": {
          "type": "string",
          "title": "Segment Operator",
          "description": "The segment operator."
        }
      }
    },
    "AddressMergeSegment": {
      "type": "object",
      "title": "Address/Zip Merge Field Segment",
      "description": "An individual segment condition.",
      "class": "AddressMerge",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Address Merge",
              "description": "The address merge segment field."
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "description": "Whether the segment value contains, doesn't contain, is blank, or isn't blank.",
              "enum": [
                "contains",
                "notcontain",
                "blank",
                "blank_not"
              ]
            },
            "value": {
              "type": "string",
              "title": "Address Merge Compare Value",
              "description": "The value to compare."
            }
          }
        }
      ]
    },
    "AimSegment": {
      "type": "object",
      "title": "Automation Segment",
      "description": "An individual segment condition.",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Aim",
              "description": "The segment field, 'aim'.",
              "enum": [
                "aim"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "open",
                "click",
                "sent",
                "noopen",
                "noclick",
                "nosent"
              ],
              "description": "The member's status, based on their campaign interaction."
            },
            "value": {
              "type": "string",
              "title": "Campaign Web ID",
              "description": "Either the web id value for a specific campaign or 'any' to account for subscribers who have or have not interacted with any campaigns."
            }
          }
        }
      ],
      "class": "Aim"
    },
    "AutomationSegment": {
      "type": "object",
      "title": "Automation Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Automation",
              "description": "The field to segment on.",
              "enum": [
                "automation"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "started",
                "completed",
                "not_started",
                "not_completed"
              ],
              "description": "The member's status, based on where they are in an Automation workflow."
            },
            "value": {
              "type": "string",
              "title": "Automation Web ID",
              "description": "The web id for the Automation workflow to segment on."
            }
          }
        }
      ],
      "class": "Automation"
    },
    "BirthdayMergeSegment": {
      "type": "object",
      "title": "Birthday Merge Field Segment",
      "description": "An individual segment condition.",
      "class": "BirthdayMerge",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Birthday Merge",
              "description": "The birthday merge segment field."
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "description": "Whether the segment value matches exactly, doesn't match, is blank, or isn't blank.",
              "enum": [
                "is",
                "not",
                "blank",
                "blank_not"
              ]
            },
            "value": {
              "type": "string",
              "title": "Birthday Merge Compare Value",
              "description": "The value to compare."
            }
          }
        }
      ]
    },
    "CampaignPollSegment": {
      "type": "object",
      "title": "Poll Activity Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Campaign Poll",
              "description": "The field to segment on.",
              "enum": [
                "poll"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "member",
                "notmember"
              ],
              "description": "Members who have or have not interacted with a specific poll in a MailChimp email."
            },
            "value": {
              "type": "number",
              "title": "Poll ID",
              "description": "The id for the poll."
            }
          }
        }
      ],
      "class": "CampaignPoll"
    },
    "ConversationSegment": {
      "type": "object",
      "title": "Automation Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Conversations",
              "description": "The field to segment on.",
              "enum": [
                "conversation"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "member",
                "notmember"
              ],
              "description": "The status of a member's interaction with a conversation."
            },
            "value": {
              "type": "string",
              "title": "Campaign Web ID",
              "description": "The web id value for a specific campaign, or 'any' to account for subscribers who have or have not interacted with any campaigns."
            }
          }
        }
      ],
      "class": "Conversation"
    },
    "CountryStateSegment": {
      "type": "object",
      "title": "Location-Based Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Country State",
              "description": "The field to segment on.",
              "enum": [
                "ipgeo"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "ipgeocountry",
                "ipgeonotcountry",
                "ipgeostate",
                "ipgeonotstate"
              ],
              "description": "Segment members who are in a specific country or US state."
            },
            "value": {
              "type": "string",
              "title": "Country Code or US State",
              "description": "The two-letter country code or US state abbreviation."
            }
          }
        }
      ],
      "class": "IPGeoCountryState"
    },
    "DateMergeSegment": {
      "type": "object",
      "title": "Date Merge Field Segment",
      "description": "An individual segment condition.",
      "class": "DateMerge",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Date Merge",
              "description": "The date merge segment field."
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "description": "Whether the segment value matches exactly, doesn't match, is blank, or isn't blank.",
              "enum": [
                "is",
                "not",
                "less",
                "blank",
                "blank_not"
              ]
            },
            "value": {
              "type": "string",
              "title": "Date Merge Compare Value",
              "description": "The value to compare."
            }
          }
        }
      ]
    },
    "DateSegment": {
      "type": "object",
      "title": "Date Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Date",
              "description": "The date segment field.",
              "enum": [
                "timestamp_opt",
                "info_changed",
                "ecomm_date"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "greater",
                "less",
                "is",
                "not",
                "blank",
                "blank_not"
              ],
              "description": "When the event took place."
            },
            "value": {
              "type": "string",
              "enum": [
                "date",
                "campaign",
                "last"
              ],
              "title": "Event Type",
              "description": "What type of data to segment on: a specific date, a specific campaign, or the last campaign sent."
            },
            "extra": {
              "type": "string",
              "title": "Date",
              "description": "When segmenting on 'date' or 'campaign', the date for the segment formatted as YYYY-MM-DD or the web id for the campaign."
            }
          }
        }
      ],
      "class": "Date"
    },
    "EcommCategorySegment": {
      "type": "object",
      "title": "Ecomm Category Segment",
      "description": "An individual segment condition.",
      "class": "EcommCategory",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not",
                "contains",
                "notcontain",
                "starts",
                "ends"
              ],
              "description": "A member who has purchased from a category or purchased a specific item."
            },
            "field": {
              "type": "string",
              "title": "Ecomm Category or Product",
              "description": "The e-commerce category or product segment field.",
              "enum": [
                "ecomm_cat",
                "ecomm_prod"
              ]
            },
            "value": {
              "type": "string",
              "title": "Ecomm Category or Item",
              "description": "The e-commerce category or item information."
            }
          }
        }
      ]
    },
    "EcommNumberSegment": {
      "type": "object",
      "title": "Ecomm Purchased Segment",
      "description": "An individual segment condition.",
      "class": "EcommNumber",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Ecomm Number",
              "description": "The e-commerce number field to segment on.",
              "enum": [
                "ecomm_spent_avg",
                "ecomm_orders",
                "ecomm_prod_all",
                "ecomm_avg_ord"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not",
                "greater",
                "less"
              ],
              "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than the segment value."
            },
            "value": {
              "type": "number",
              "title": "Amount Spent",
              "description": "Members who have spent exactly, have not spent exactly, spent more, or spent less than this amount."
            }
          }
        }
      ]
    },
    "EcommPurchasedSegment": {
      "type": "object",
      "title": "Ecomm Purchased Segment",
      "description": "An individual segment condition.",
      "class": "EcommPurchased",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Ecomm Purchased",
              "description": "The e-commerce purchased field to segment on.",
              "enum": [
                "ecomm_purchased"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "member",
                "notmember"
              ],
              "description": "Members who have have ('member') or have not ('notmember') purchased."
            }
          }
        }
      ]
    },
    "EcommSpentSegment": {
      "type": "object",
      "title": "Ecomm Purchase Segment",
      "description": "An individual segment condition.",
      "class": "EcommSpent",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Ecomm Spent",
              "description": "The e-commerce spent field to segment on.",
              "enum": [
                "ecomm_spent_one",
                "ecomm_spent_all"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "greater",
                "less"
              ],
              "description": "Members who have spent more or less than the set value."
            },
            "value": {
              "type": "integer",
              "title": "Total Spent",
              "description": "The total amount a member spent."
            }
          }
        }
      ]
    },
    "EcommStoreSegment": {
      "type": "object",
      "title": "Ecomm Purchased Store Segment",
      "description": "An individual segment condition.",
      "class": "EcommStore",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Ecomm Store",
              "description": "The e-commerce store field to segment on.",
              "enum": [
                "ecomm_store"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not"
              ],
              "description": "Members who have or have not purchased from a specific store."
            },
            "value": {
              "type": "string",
              "title": "Store ID",
              "description": "The store id to segment on."
            }
          }
        }
      ]
    },
    "EmailClientSegment": {
      "type": "object",
      "title": "Automation Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Email Client",
              "description": "The field to segment on.",
              "enum": [
                "email_client"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "client_is",
                "client_not"
              ],
              "description": "A member's status, based on their campaign interactions."
            },
            "value": {
              "type": "string",
              "title": "Email Client",
              "description": "The name of the email client."
            }
          }
        }
      ],
      "class": "EmailClient"
    },
    "EmailSegment": {
      "type": "object",
      "title": "Email Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Email",
              "description": "The segment field, one of 'merge0' or 'EMAIL'.",
              "enum": [
                "merge0",
                "EMAIL"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not",
                "contains",
                "notcontain",
                "starts",
                "ends",
                "greater",
                "less"
              ],
              "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
            },
            "value": {
              "type": "string",
              "title": "Email Compare Value",
              "description": "The value to compare the email against."
            }
          }
        }
      ],
      "class": "EmailAddress"
    },
    "FuzzySegment": {
      "type": "object",
      "title": "Similar Subscribers Segment Member Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Fuzzy Segment",
              "description": "The fuzzy segment field.",
              "enum": [
                "fuzzy_segment"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "fuzzy_is",
                "fuzzy_not"
              ],
              "description": "Members who are/are not apart of a 'similar subscribers' segment."
            },
            "value": {
              "type": "number",
              "title": "Similar Subscribers Segment ID",
              "description": "The id for the 'similar subscribers' segment."
            }
          }
        }
      ],
      "class": "FuzzySegment"
    },
    "GeoInSegment": {
      "type": "object",
      "title": "Geolocation Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value",
        "addr",
        "lat",
        "lng"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Location",
              "description": "The field to segment on.",
              "enum": [
                "ipgeo"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "ipgeoin",
                "ipgeonotin"
              ],
              "description": "Segment members who are in a specific geographic region."
            },
            "value": {
              "type": "integer",
              "title": "Target Location Radius",
              "description": "The radius of the target location."
            },
            "addr": {
              "type": "string",
              "title": "Segment Location Address",
              "description": "The address of the target location."
            },
            "lat": {
              "type": "string",
              "title": "Segment Location Latitude",
              "description": "The latitude of the target location."
            },
            "lng": {
              "type": "string",
              "title": "Segment Location Longitude",
              "description": "The longitude of the target location."
            }
          }
        }
      ],
      "class": "IPGeoIn"
    },
    "GoalActivitySegment": {
      "type": "object",
      "title": "Goal Activity Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "class": "GoalActivity",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Goal Activity",
              "description": "The goal activity field to segment on.",
              "enum": [
                "goal"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "goal_not",
                "contains",
                "goal_notcontain",
                "starts",
                "ends"
              ],
              "description": "Whether the website URL is/not exactly, contains/doesn't contain, starts with/ends with a string."
            },
            "value": {
              "type": "string",
              "title": "Goal URL",
              "description": "The URL to check Goal activity against."
            }
          }
        }
      ]
    },
    "GoalTimeStampSegment": {
      "type": "object",
      "title": "Goal Timestamp Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Goal Time",
              "description": "The goal time field to segment on.",
              "enum": [
                "goal_last_visited"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "greater",
                "less",
                "is"
              ],
              "description": "Whether the website activity happened at, after, or before a specific date."
            },
            "value": {
              "type": "string",
              "title": "Event Type",
              "enum": [
                "date"
              ],
              "description": "What type of data to segment on."
            },
            "extra": {
              "type": "string",
              "title": "Date",
              "description": "The date for the segment, formatted as YYYY-MM-DD."
            }
          }
        }
      ],
      "class": "GoalTimestamp"
    },
    "InterestsSegment": {
      "type": "object",
      "title": "Interests Segment",
      "description": "An individual segment condition.",
      "class": "Interests",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Interest Group",
              "description": "The interest group, like \"interests-123\""
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "interestcontains",
                "interestcontainsall",
                "interestnotcontains"
              ],
              "description": "Whether the member is a part of one, all, or none of the groups."
            },
            "value": {
              "type": "array",
              "title": "Segment Value",
              "description": "An array containing integers, each representing a group id.",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "IpGeoInZipSegment": {
      "type": "object",
      "title": "US Zip Code Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value",
        "extra"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Location in Zip",
              "description": "The field to segment on.",
              "enum": [
                "ipgeo"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "ipgeoinzip"
              ],
              "description": "Segment members who are in a specific US zip code."
            },
            "value": {
              "type": "integer",
              "title": "Target Location Radius",
              "description": "The radius of the target location."
            },
            "extra": {
              "type": "integer",
              "title": "Zip Code",
              "description": "The zip code to segment on."
            }
          }
        }
      ],
      "class": "IPGeoInZip"
    },
    "IpGeoUnknownSegment": {
      "type": "object",
      "title": "Location-Based Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Unknown Location",
              "description": "The field to segment on.",
              "enum": [
                "ipgeo"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "ipgeounknown"
              ],
              "description": "Segment members with unknown location information."
            }
          }
        }
      ],
      "class": "IPGeoUnknown"
    },
    "LanguageSegment": {
      "type": "object",
      "title": "Automation Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Language",
              "description": "The field to segment on.",
              "enum": [
                "language"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not"
              ],
              "description": "Whether the member's language is or isn't set to a specific language."
            },
            "value": {
              "type": "string",
              "title": "Language ID",
              "description": "A two-letter language identifier."
            }
          }
        }
      ],
      "class": "Language"
    },
    "MemberRatingSegment": {
      "type": "object",
      "title": "Member Rating Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Member Rating",
              "description": "The field to segment on.",
              "enum": [
                "rating"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not",
                "greater",
                "less"
              ],
              "description": "Members who have have a rating that is/not exactly a specific number or members who have a rating greater/less than a specific number."
            },
            "value": {
              "type": "number",
              "title": "Start Rating",
              "description": "The star rating number to segment on."
            }
          }
        }
      ],
      "class": "MemberRating"
    },
    "SelectMergeSegment": {
      "type": "object",
      "title": "Dropdown/Radio Merge Field Segment",
      "description": "An individual segment condition.",
      "class": "SelectMerge",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Select",
              "description": "The select merge segment field."
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "description": "Whether the segment value matches exactly, doesn't match, is blank, or isn't blank.",
              "enum": [
                "is",
                "not",
                "blank",
                "blank_not"
              ]
            },
            "value": {
              "type": "string",
              "title": "Select Merge Compare Value",
              "description": "The value to compare."
            }
          }
        }
      ]
    },
    "SignupSourceSegment": {
      "type": "object",
      "title": "Signup Source Segment",
      "description": "An individual segment condition.",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Signup Source",
              "description": "The field to segment on.",
              "enum": [
                "source"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "source_is",
                "source_not"
              ],
              "description": "Whether the member's signup source was/was not a particular value."
            },
            "value": {
              "type": "string",
              "title": "Signup Source",
              "description": "The signup source."
            }
          }
        }
      ],
      "class": "SignupSource"
    },
    "SocialAgeSegment": {
      "type": "object",
      "title": "Social Profiles Age Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Social Age",
              "description": "The social age field to segment on.",
              "enum": [
                "social_age"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not"
              ],
              "description": "Members who do or don't match the exact criteria listed."
            },
            "value": {
              "type": "string",
              "title": "Age Range",
              "enum": [
                "18-24",
                "25-34",
                "35-54",
                "55+"
              ],
              "description": "The age range to segment."
            }
          }
        }
      ],
      "class": "SocialAge"
    },
    "SocialGenderSegment": {
      "type": "object",
      "title": "Social Profiles Gender Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Social Gender",
              "description": "The social gender field to segment on.",
              "enum": [
                "social_gender"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not"
              ],
              "description": "Members who do or don't match the exact criteria listed."
            },
            "value": {
              "type": "string",
              "title": "Social Gender",
              "enum": [
                "male",
                "female"
              ],
              "description": "The Social Profiles gender to segment."
            }
          }
        }
      ],
      "class": "SocialGender"
    },
    "SocialInfluenceSegment": {
      "type": "object",
      "title": "Social Profiles Influence Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Social Influence",
              "description": "The social influence field to segment on.",
              "enum": [
                "social_influence"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not",
                "greater",
                "less"
              ],
              "description": "Members who have a rating that is/not or greater/less than the rating provided."
            },
            "value": {
              "type": "number",
              "title": "Influence Rating",
              "description": "The Social Profiles influence rating to segment on."
            }
          }
        }
      ],
      "class": "SocialInfluence"
    },
    "SocialNetworkFollowSegment": {
      "type": "object",
      "title": "Social Profiles Social Network Follow Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Social Network Follow",
              "description": "The field to segment on.",
              "enum": [
                "social_network"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "follow",
                "notfollow"
              ],
              "description": "Members who are or are not following a linked account on a specific social network."
            },
            "value": {
              "type": "string",
              "title": "Social Network",
              "enum": [
                "twitter_follow"
              ],
              "description": "The social network to segment on."
            }
          }
        }
      ],
      "class": "SocialNetworkFollow"
    },
    "SocialNetworkSegment": {
      "type": "object",
      "title": "Social Profiles Social Network Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Social Network",
              "description": "The social_network segment field.",
              "enum": [
                "social_network"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "member",
                "notmember"
              ],
              "description": "Members who are or are not on a specific social network."
            },
            "value": {
              "type": "string",
              "title": "Social Network",
              "enum": [
                "twitter",
                "facebook",
                "linkedin",
                "flickr",
                "foursquare",
                "lastfm",
                "myspace",
                "quora",
                "vimeo",
                "yelp",
                "youtube"
              ],
              "description": "The social network to segment on."
            }
          }
        }
      ],
      "class": "SocialNetworkMember"
    },
    "StaticSegment": {
      "type": "object",
      "title": "Static Segment Member Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Static Segment",
              "description": "The static segment field.",
              "enum": [
                "static_segment"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "static_is",
                "static_not"
              ],
              "description": "Members who are/are not apart of a static segment."
            },
            "value": {
              "type": "number",
              "title": "Static Segment ID",
              "description": "The id for the static segment."
            }
          }
        }
      ],
      "class": "StaticSegment"
    },
    "SurveyMonkeySegment": {
      "type": "object",
      "title": "Survey Monkey Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Survey Monkey",
              "description": "The field to segment on.",
              "enum": [
                "survey_monkey"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "started",
                "completed",
                "not_started",
                "not_completed"
              ],
              "description": "A member's status based on whether they have started, completed, not started, or not completed a specific survey."
            },
            "value": {
              "type": "string",
              "title": "Survey ID",
              "description": "The unique ID of the [SurveyMonkey](http://kb.mailchimp.com/integrations/other-integrations/integrate-surveymonkey-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) survey."
            }
          }
        }
      ],
      "class": "SurveyMonkey"
    },
    "TextMergeSegment": {
      "type": "object",
      "title": "Text or Number Merge Field Segment",
      "description": "An individual segment condition.",
      "class": "TextMerge",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Text Merge",
              "description": "The segment field, one of 'merge0' or 'EMAIL'."
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "is",
                "not",
                "contains",
                "notcontain",
                "starts",
                "ends",
                "greater",
                "less",
                "blank",
                "blank_not"
              ],
              "description": "Whether the email address is/not exactly, contains/doesn't contain, starts/ends with a string."
            },
            "value": {
              "type": "string",
              "title": "Text Merge Compare Value",
              "description": "The value to compare."
            }
          }
        }
      ]
    },
    "VIPSegment": {
      "type": "object",
      "title": "VIP Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "VIP",
              "description": "The field to segment on.",
              "enum": [
                "gmonkey"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "member",
                "notmember"
              ],
              "description": "Whether the member is or isn't a [VIP](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
            }
          }
        }
      ],
      "class": "VIP"
    },
    "ZipMergeSegment": {
      "type": "object",
      "title": "Address/Zip Merge Field Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value",
        "extra"
      ],
      "class": "ZipMerge",
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Zip Merge",
              "description": "The zip merge segment field."
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "description": "Whether the zip value is in a specific location.",
              "enum": [
                "geoin"
              ]
            },
            "value": {
              "type": "string",
              "title": "Zip Merge Compare Value",
              "description": "The value to compare."
            },
            "extra": {
              "type": "string",
              "title": "City or Zip",
              "description": "The city or the zip being used to segment on."
            }
          }
        }
      ]
    },
    "ZipSegment": {
      "type": "object",
      "title": "Location-Based Segment",
      "description": "An individual segment condition.",
      "required": [
        "field",
        "op",
        "value"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/SegmentCondition"
        },
        {
          "properties": {
            "field": {
              "type": "string",
              "title": "Zip",
              "description": "The field to segment on.",
              "enum": [
                "ipgeo"
              ]
            },
            "op": {
              "type": "string",
              "title": "Operator",
              "enum": [
                "ipgeoiszip",
                "ipgeonotzip"
              ],
              "description": "Segment members who are or are not in a specific US zip code."
            },
            "value": {
              "type": "integer",
              "title": "Zip Code",
              "description": "The 5-digit zip code."
            }
          }
        }
      ],
      "class": "IPGeoZip"
    },
    "AutomationTrigger": {
      "type": "object",
      "title": "Automation Trigger",
      "description": "Available triggers for Automation workflows.",
      "discriminator": "workflow_type",
      "required": [
        "workflow_type"
      ],
      "properties": {
        "workflow_type": {
          "type": "string",
          "title": "Workflow Type",
          "description": "The type of Automation workflow.",
          "enum": [
            "recurringEvent",
            "specialEvent",
            "dateAdded",
            "emailFollowup",
            "emailSeries",
            "welcomeSeries",
            "mandrill",
            "visitUrl",
            "bestCustomers",
            "productFollowup",
            "categoryFollowup",
            "purchaseFollowup",
            "api",
            "groupAdd",
            "groupRemove"
          ],
          "x-possible-values": "All possible [workflow types](http://kb.mailchimp.com/automation/about-automation-workflow-types?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
        },
        "workflow_title": {
          "type": "string",
          "title": "Workflow Title",
          "description": "The title of the workflow type.",
          "readOnly": true
        },
        "runtime": {
          "$ref": "#/definitions/AutomationRuntime"
        },
        "workflow_emails_count": {
          "type": "integer",
          "title": "Workflow Emails Count",
          "description": "The number of emails in the Automation workflow.",
          "readOnly": true
        }
      }
    },
    "Event_BestCustomers": {
      "title": "Best Customers Workflow Trigger Settings",
      "type": "object",
      "description": "Settings for a Best Customers workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "purchase_orders",
        "lifetime_purchase_value",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "purchase_orders": {
              "type": "integer",
              "title": "Purchase Orders",
              "description": "The number of purchase orders needed to trigger a workflow. The workflow will trigger when purchases exceed this amount."
            },
            "lifetime_purchase_value": {
              "type": "number",
              "title": "Total Purchase Value",
              "description": "The lifetime total purchase value needed to trigger a workflow. The workflow will trigger when a lifetime purchase value exceeds this amount."
            }
          }
        }
      ],
      "class": "bestCustomers"
    },
    "Event_CategoryFollowup": {
      "title": "Purchase Product From Category Workflow Trigger Settings",
      "type": "object",
      "description": "Settings for a Purchase Product From Category workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "category_name",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "category_name": {
              "type": "string",
              "title": "Category Name",
              "description": "The name of the product category a workflow is triggered on."
            }
          }
        }
      ],
      "class": "categoryFollowup"
    },
    "Event_EmailFollowup": {
      "title": "Event-Based Trigger Settings",
      "type": "object",
      "description": "Settings for an event-based workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "trigger_on_import",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "trigger_on_import": {
              "type": "boolean",
              "title": "Trigger Workflow on Import",
              "description": "Trigger workflow when subscribers are imported."
            }
          }
        }
      ],
      "class": "emailFollowup"
    },
    "Event_EmailSeries": {
      "title": "Event-Based Trigger Settings",
      "type": "object",
      "description": "Settings for an event-based workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "trigger_on_import": {
              "type": "boolean",
              "title": "Trigger Workflow on Import",
              "description": "Trigger workflow when subscribers are imported."
            }
          }
        }
      ],
      "class": "emailSeries"
    },
    "Event_GroupAdd": {
      "title": "Event-Based Trigger Settings",
      "type": "object",
      "description": "Settings for an event-based workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "group_id",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "group_id": {
              "type": "integer",
              "title": "Group ID",
              "description": "Group ID used by the workflow."
            }
          }
        }
      ],
      "class": "groupAdd"
    },
    "Event_GroupRemove": {
      "title": "Event-Based Trigger Settings",
      "type": "object",
      "description": "Settings for an event-based workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "group_id",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "group_id": {
              "type": "integer",
              "title": "Group ID",
              "description": "Group ID used by the workflow."
            }
          }
        }
      ],
      "class": "groupRemove"
    },
    "Event_Mandrill": {
      "title": "Mandrill-Based Trigger Settings",
      "type": "object",
      "description": "Settings for a Mandrill-based workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "mandrill_tags",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "mandrill_tags": {
              "type": "array",
              "title": "Mandrill Tags",
              "description": "The Mandrill tags that a workflow will be triggered on."
            }
          }
        }
      ],
      "class": "mandrill"
    },
    "Event_ProductFollowup": {
      "title": "Specific Product Purchased Workflow Trigger Settings",
      "type": "object",
      "description": "Settings for a Specific Product Purchased workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "product_name",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "product_name": {
              "type": "string",
              "title": "Product Name",
              "description": "The name of the product a workflow is triggered on."
            }
          }
        }
      ],
      "class": "productFollowup"
    },
    "Event_PurchaseFollowup": {
      "title": "Any Product Purchased Workflow Trigger Settings",
      "type": "object",
      "description": "Settings for an Any Product Purchased workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            }
          }
        }
      ],
      "class": "purchaseFollowup"
    },
    "Event_VisitUrl": {
      "title": "Goal-Based Trigger Settings",
      "type": "object",
      "description": "Settings for an Goal-based workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "goal_url",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "goal_url": {
              "type": "string",
              "title": "Goal Trigger",
              "description": "The URL subscribers navigate to in order to trigger the workflow."
            }
          }
        }
      ],
      "class": "visitUrl"
    },
    "Event_WelcomeSeries": {
      "title": "Event-Based Trigger Settings",
      "type": "object",
      "description": "Settings for an event-based workflow.",
      "required": [
        "workflow_type",
        "send_immediately",
        "trigger_on_import",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "send_immediately": {
              "type": "boolean",
              "title": "Send First Email Immediately",
              "description": "Send first email immediately to existing subscribers who meet conditions."
            },
            "trigger_on_import": {
              "type": "boolean",
              "title": "Trigger Workflow on Import",
              "description": "Trigger workflow when subscribers are imported."
            }
          }
        }
      ],
      "class": "welcomeSeries"
    },
    "Merge_RecurringEvent": {
      "title": "Date Merge Field-Based Trigger Settings",
      "type": "object",
      "description": "Settings for a date merge field-based workflow.",
      "required": [
        "workflow_type",
        "merge_field_trigger",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "merge_field_trigger": {
              "type": "string",
              "title": "Merge Field Trigger",
              "description": "The data used to trigger the Automation workflow. For 'specialEvent' type workflows, a date merge field is required. For 'recurringEvent', a birthday or date merge field are required."
            }
          }
        }
      ],
      "class": "recurringEvent"
    },
    "Merge_SpecialEvent": {
      "title": "Date Merge Field-Based Trigger Settings",
      "type": "object",
      "description": "Settings for a date merge field-based workflow.",
      "required": [
        "workflow_type",
        "merge_field_trigger",
        "runtime"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/AutomationTrigger"
        },
        {
          "properties": {
            "merge_field_trigger": {
              "type": "string",
              "title": "Merge Field Trigger",
              "description": "The data used to trigger the Automation workflow. For 'specialEvent' type workflows, a date merge field is required. For 'recurringEvent', a birthday or date merge field are required."
            }
          }
        }
      ],
      "class": "specialEvent"
    },
    "AutomationRuntimeHours": {
      "type": "object",
      "title": "Hours",
      "description": "The hours an Automation workflow can send.",
      "discriminator": "type",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "title": "Email Send Time Settings",
          "description": "When to send the Automation email.",
          "enum": [
            "send_asap",
            "send_between",
            "send_at"
          ]
        }
      }
    },
    "RuntimeASAP": {
      "title": "Send Hours",
      "type": "object",
      "description": "Send hours for Automation Workflows.",
      "required": [
        "send_asap"
      ],
      "class": "send_asap",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuntimeHours"
        },
        {
          "properties": {
            "send_asap": {
              "type": "boolean",
              "title": "Send Immediately",
              "description": "Send the workflow emails as soon as a subscriber meets the appropriate criteria.",
              "example": true
            }
          }
        }
      ]
    },
    "RuntimeAt": {
      "title": "Send Hours",
      "type": "object",
      "description": "Send hours for Automation Workflows.",
      "required": [
        "send_at"
      ],
      "class": "send_at",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuntimeHours"
        },
        {
          "properties": {
            "send_at": {
              "type": "string",
              "title": "Send Time",
              "description": "The exact time to send the emails.",
              "allOf": [
                {
                  "$ref": "#/definitions/QuarterHourTimes"
                }
              ],
              "example": "11:15pm"
            }
          }
        }
      ]
    },
    "RuntimeBetween": {
      "title": "Send Hours",
      "type": "object",
      "description": "Send hours for Automation Workflows.",
      "required": [
        "start",
        "end"
      ],
      "class": "send_between",
      "allOf": [
        {
          "$ref": "#/definitions/AutomationRuntimeHours"
        },
        {
          "properties": {
            "start": {
              "type": "string",
              "title": "Start Time",
              "description": "The start of the sending window.",
              "allOf": [
                {
                  "$ref": "#/definitions/QuarterHourTimes"
                }
              ],
              "example": "12:15am"
            },
            "end": {
              "type": "string",
              "title": "End Time",
              "description": "The end of the sending window.",
              "allOf": [
                {
                  "$ref": "#/definitions/QuarterHourTimes"
                }
              ],
              "example": "11:15pm"
            }
          }
        }
      ]
    },
    "HATEOASLinks": {
      "title": "Links",
      "description": "A list of link types and descriptions for the API schema documents.",
      "type": "array",
      "items": {
        "type": "object",
        "title": "Resource Link",
        "description": "This object represents a link from the resource where it is found to another resource or action that may be performed.",
        "properties": {
          "rel": {
            "type": "string",
            "title": "Rel",
            "description": "As with an HTML 'rel' attribute, this describes the type of link.",
            "readOnly": true
          },
          "href": {
            "type": "string",
            "title": "Href",
            "description": "This property contains a fully-qualified URL that can be called to retrieve the linked resource or perform the linked action.",
            "readOnly": true
          },
          "method": {
            "type": "string",
            "title": "Method",
            "description": "The HTTP method that should be used when accessing the URL defined in 'href'.",
            "enum": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE",
              "OPTIONS",
              "HEAD"
            ],
            "readOnly": true
          },
          "targetSchema": {
            "type": "string",
            "title": "Target Schema",
            "description": "For GETs, this is a URL representing the schema that the response should conform to.",
            "readOnly": true
          },
          "schema": {
            "type": "string",
            "title": "Schema",
            "description": "For HTTP methods that can receive bodies (POST and PUT), this is a URL representing the schema that the body should conform to.",
            "readOnly": true
          }
        }
      },
      "readOnly": true
    },
    "AccountDetails": {
      "type": "object",
      "title": "API Root",
      "description": "The API root resource links to all other resources available in the API.",
      "properties": {
        "account_id": {
          "type": "string",
          "title": "Account ID",
          "description": "The MailChimp account ID, used for features like list [subscribe forms](http://kb.mailchimp.com/lists/signup-forms/create-signup-forms-and-response-emails?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
          "readOnly": true
        },
        "login_id": {
          "type": "string",
          "title": "Login ID",
          "description": "The ID associated with the user who owns this API key. If you can login to multiple accounts, this ID will be the same for each account.",
          "readonly": true
        },
        "account_name": {
          "type": "string",
          "title": "Account Name",
          "description": "The name of the account.",
          "readOnly": true
        },
        "email": {
          "type": "string",
          "title": "Account Email",
          "description": "The account email address.",
          "readOnly": true
        },
        "first_name": {
          "type": "string",
          "title": "First Name",
          "description": "The first name tied to the account.",
          "readOnly": true
        },
        "last_name": {
          "type": "string",
          "title": "Last Name",
          "description": "The last name tied to the account.",
          "readOnly": true
        },
        "username": {
          "type": "string",
          "title": "User Name",
          "description": "The username tied to the account.",
          "readOnly": true,
          "example": "freddie2000"
        },
        "avatar_url": {
          "type": "string",
          "title": "Avatar URL",
          "description": "URL of the avatar for the user.",
          "readOnly": true
        },
        "role": {
          "type": "string",
          "title": "Role",
          "description": "The [user role](http://kb.mailchimp.com/accounts/multi-user/manage-user-levels-in-your-account?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for the account.",
          "readOnly": true
        },
        "member_since": {
          "type": "string",
          "title": "Account Creation Date",
          "format": "date-time",
          "description": "The date and time that the account was created.",
          "readonly": true,
          "example": "2010-01-01T23:59:59+00:00"
        },
        "pricing_plan_type": {
          "type": "string",
          "title": "Account Pricing Plan",
          "description": "The type of pricing plan the account is on.",
          "enum": [
            "monthly",
            "pay_as_you_go",
            "forever_free"
          ],
          "readonly": true
        },
        "first_payment": {
          "type": "string",
          "title": "First Payment",
          "format": "date-time",
          "description": "Date of first payment for monthly plans.",
          "readonly": true,
          "example": "2010-01-01T23:59:59+00:00"
        },
        "account_timezone": {
          "type": "string",
          "title": "Account Timezone",
          "description": "The timezone currently set for the account.",
          "readonly": true
        },
        "account_industry": {
          "type": "string",
          "title": "Account Industry",
          "description": "The user-specified industry associated with the account.",
          "readonly": true
        },
        "contact": {
          "type": "object",
          "title": "Account Contact",
          "description": "Information about the account contact.",
          "readOnly": true,
          "properties": {
            "company": {
              "type": "string",
              "title": "Company",
              "description": "The company name for the account.",
              "readOnly": true
            },
            "addr1": {
              "type": "string",
              "title": "Address Line 1",
              "description": "The street address for the account contact.",
              "readOnly": true
            },
            "addr2": {
              "type": "string",
              "title": "Address Line 2",
              "description": "The street address for the account contact.",
              "readOnly": true
            },
            "city": {
              "type": "string",
              "title": "City",
              "description": "The city for the account contact.",
              "readOnly": true
            },
            "state": {
              "type": "string",
              "title": "State",
              "description": "The state for the account contact.",
              "readOnly": true
            },
            "zip": {
              "type": "string",
              "title": "Zip Code",
              "description": "The zip code for the account contact.",
              "readOnly": true
            },
            "country": {
              "type": "string",
              "title": "Country",
              "description": "The country for the account contact.",
              "readOnly": true
            }
          }
        },
        "pro_enabled": {
          "type": "boolean",
          "title": "MailChimp Pro",
          "description": "Whether the account includes [MailChimp Pro](http://mailchimp.com/pro?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
          "readOnly": true
        },
        "last_login": {
          "type": "string",
          "title": "Last Login Date",
          "description": "The date and time of the last login for this account.",
          "readOnly": true,
          "format": "date-time"
        },
        "total_subscribers": {
          "type": "integer",
          "title": "Total Subscribers",
          "description": "The total number of subscribers across all lists in the account.",
          "readOnly": true
        },
        "industry_stats": {
          "type": "object",
          "title": "Industry Stats",
          "description": "The [average campaign statistics](http://mailchimp.com/resources/research/email-marketing-benchmarks/?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for all campaigns in the account's specified industry.",
          "readOnly": true,
          "properties": {
            "open_rate": {
              "type": "number",
              "title": "Open Rate",
              "description": "The average unique open rate for all campaigns in the account's specified industry.",
              "readOnly": true
            },
            "bounce_rate": {
              "type": "number",
              "title": "Bounce Rate",
              "description": "The average bounce rate for all campaigns in the account's specified industry.",
              "readOnly": true
            },
            "click_rate": {
              "type": "number",
              "title": "Click Rate",
              "description": "The average unique click rate for all campaigns in the account's specified industry.",
              "readOnly": true
            }
          }
        },
        "_links": {
          "$ref": "#/definitions/HATEOASLinks"
        }
      }
    },
    "CollectionTotal": {
      "type": "integer",
      "title": "Item Count",
      "description": "The total number of items matching the query regardless of pagination."
    },
    "AutomationRuntime": {
      "type": "object",
      "title": "Automation Workflow Runtime Settings",
      "description": "A workflow's runtime settings for an Automation.",
      "properties": {
        "days": {
          "type": "array",
          "title": "Days",
          "description": "The days an Automation workflow can send.",
          "items": {
            "type": "string",
            "enum": [
              "sunday",
              "monday",
              "tuesday",
              "wednesday",
              "thursday",
              "friday",
              "saturday"
            ]
          }
        },
        "hours": {
          "$ref": "#/definitions/AutomationRuntimeHours"
        }
      }
    },
    "SegmentationOptions": {
      "type": "object",
      "title": "Segment Options",
      "description": "An object representing all segmentation options. This object should contain a `saved_segment_id` to use an existing segment, or you can create a new segment by including both `match` and `conditions` options.",
      "properties": {
        "saved_segment_id": {
          "type": "integer",
          "title": "Saved Segment ID",
          "description": "The id for an existing saved segment."
        },
        "match": {
          "type": "string",
          "title": "Match Type",
          "description": "Segment match type.",
          "enum": [
            "any",
            "all"
          ]
        },
        "conditions": {
          "type": "array",
          "title": "Conditions",
          "description": "Segment match conditions.",
          "items": {
            "$ref": "#/definitions/SegmentCondition"
          }
        }
      }
    },
    "AutomationWorkflowQueuedSubscriber": {
      "type": "object",
      "title": "Subscriber in Automation Queue",
      "description": "Information about subscribers in an Automation email queue.",
      "required": [
        "email_address"
      ],
      "properties": {
        "id": {
          "type": "string",
          "title": "Email Hash",
          "description": "The MD5 hash of the lowercase version of the list member's email address.",
          "readOnly": true
        },
        "workflow_id": {
          "type": "string",
          "title": "Workflow ID",
          "description": "A string that uniquely identifies an Automation workflow.",
          "readOnly": true
        },
        "email_id": {
          "type": "string",
          "title": "Automation Email ID",
          "description": "A string that uniquely identifies an email in an Automation workflow.",
          "readOnly": true
        },
        "list_id": {
          "type": "string",
          "title": "List ID",
          "description": "A string that uniquely identifies a list.",
          "readOnly": true
        },
        "email_address": {
          "type": "string",
          "title": "Email Address",
          "description": "The list member's email address."
        },
        "next_send": {
          "type": "string",
          "title": "Next Send",
          "format": "date-time",
          "description": "The date and time of the next send for the workflow email.",
          "readOnly": true
        },
        "_links": {
          "$ref": "#/definitions/HATEOASLinks"
        }
      }
    },
    "CampaignType": {
      "type": "string",
      "title": "Campaign Type",
      "description": "There are four types of [campaigns](http://kb.mailchimp.com/campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) you can create in MailChimp. A/B Split campaigns have been deprecated and variate campaigns should be used instead.",
      "enum": [
        "regular",
        "plaintext",
        "absplit",
        "rss",
        "variate"
      ]
    },
    "CampaignStatus": {
      "type": "string",
      "title": "Campaign Status",
      "description": "The current status of the campaign.",
      "readOnly": true
    },
    "DeliveryStatus": {
      "type": "object",
      "title": "Campaign Delivery Status",
      "description": "Updates on campaigns in the process of sending.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Delivery Status Enabled",
          "description": "Whether Campaign Delivery Status is enabled for this account and campaign.",
          "readOnly": true
        },
        "can_cancel": {
          "type": "boolean",
          "title": "Campaign Cancelable",
          "description": "Whether a campaign send can be canceled.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "title": "Campaign Delivery Status",
          "description": "The current state of a campaign delivery.",
          "enum:": [
            "delivering",
            "delivered",
            "canceling",
            "canceled"
          ],
          "readOnly": true
        },
        "emails_sent": {
          "type": "integer",
          "title": "Emails Sent",
          "description": "The total number of emails confirmed sent for this campaign so far.",
          "readOnly": true
        },
        "emails_canceled": {
          "type": "integer",
          "title": "Emails Canceled",
          "description": "The total number of emails canceled for this campaign.",
          "readOnly": true
        }
      }
    },
    "Campaign": {
      "type": "object",
      "title": "Campaign",
      "description": "A summary of an individual campaign's settings and content.",
      "required": [
        "type"
      ],
      "properties": {
        "id": {
          "type": "string",
          "title": "Campaign ID",
          "description": "A string that uniquely identifies this campaign.",
          "readOnly": true
        },
        "web_id": {
          "type": "integer",
          "title": "Campaign Web ID",
          "description": "The ID used in the MailChimp web application. View this campaign in your MailChimp account at `https://{dc}.admin.mailchimp.com/campaigns/show/?id={web_id}`.",
          "readOnly": true
        },
        "type": {
          "$ref": "#/definitions/CampaignType"
        },
        "create_time": {
          "type": "string",
          "format": "date-time",
          "title": "Create Time",
          "description": "The date and time the campaign was created.",
          "readOnly": true
        },
        "archive_url": {
          "type": "string",
          "title": "Archive URL",
          "description": "The link to the campaign's archive version.",
          "readOnly": true
        },
        "long_archive_url": {
          "type": "string",
          "title": "Long Archive URL",
          "description": "The original link to the campaign's archive version.",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/CampaignStatus"
        },
        "emails_sent": {
          "type": "integer",
          "title": "Emails Sent",
          "description": "The total number of emails sent for this campaign.",
          "readOnly": true
        },
        "send_time": {
          "type": "string",
          "format": "date-time",
          "title": "Send Time",
          "description": "The date and time a campaign was sent.",
          "readOnly": true
        },
        "content_type": {
          "type": "string",
          "title": "Content Type",
          "description": "How the campaign's content is put together ('template', 'drag_and_drop', 'html', 'url').",
          "readOnly": true
        },
        "needs_block_refresh": {
          "type": "boolean",
          "title": "Needs Block Refresh",
          "description": "Determines if the campaign needs its blocks refreshed by opening the web-based campaign editor.",
          "readonly": true
        },
        "recipients": {
          "type": "object",
          "title": "List",
          "description": "List settings for the campaign.",
          "required": [
            "list_id"
          ],
          "properties": {
            "list_id": {
              "type": "string",
              "title": "List ID",
              "description": "The unique list id."
            },
            "list_name": {
              "type": "string",
              "title": "List Name",
              "description": "The name of the list.",
              "readOnly": true
            },
            "segment_text": {
              "type": "string",
              "title": "Segment Text",
              "description": "A description of the [segment](http://kb.mailchimp.com/segments/how-to-use-groups-and-segments?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) used for the campaign. Formatted as a string marked up with HTML.",
              "readOnly": true
            },
            "recipient_count": {
              "type": "integer",
              "title": "Recipient Count",
              "description": "Count of the recipients on the associated list. Formatted as an integer.",
              "readOnly": true
            },
            "segment_opts": {
              "$ref": "#/definitions/SegmentationOptions"
            }
          }
        },
        "settings": {
          "type": "object",
          "title": "Campaign Settings",
          "description": "The settings for your campaign, including subject, from name, reply-to address, and more.",
          "properties": {
            "subject_line": {
              "type": "string",
              "title": "Campaign Subject Line",
              "description": "The subject line for the campaign."
            },
            "preview_text": {
              "type": "string",
              "title": "Campaign Preview Text",
              "description": "The preview text for the campaign."
            },
            "title": {
              "type": "string",
              "title": "Campaign Title",
              "description": "The title of the campaign."
            },
            "from_name": {
              "type": "string",
              "title": "From Name",
              "description": "The 'from' name on the campaign (not an email address)."
            },
            "reply_to": {
              "type": "string",
              "title": "Reply To Address",
              "description": "The reply-to email address for the campaign."
            },
            "use_conversation": {
              "type": "boolean",
              "title": "Conversation",
              "description": "Use MailChimp Conversation feature to manage out-of-office replies."
            },
            "to_name": {
              "type": "string",
              "title": "To Name",
              "description": "The campaign's custom 'To' name. Typically the first name [merge field](http://kb.mailchimp.com/merge-tags/using/getting-started-with-merge-tags?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
            },
            "folder_id": {
              "type": "string",
              "title": "Folder ID",
              "description": "If the campaign is listed in a folder, the id for that folder."
            },
            "authenticate": {
              "type": "boolean",
              "title": "Authentication",
              "description": "Whether MailChimp [authenticated](http://kb.mailchimp.com/delivery/deliverability-research/set-up-mailchimp-authentication?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) the campaign. Defaults to `true`."
            },
            "auto_footer": {
              "type": "boolean",
              "title": "Auto-Footer",
              "description": "Automatically append MailChimp's [default footer](http://kb.mailchimp.com/campaigns/design/theres-a-gray-footer-added-to-my-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) to the campaign."
            },
            "inline_css": {
              "type": "boolean",
              "title": "Inline CSS",
              "description": "Automatically inline the CSS included with the campaign content."
            },
            "auto_tweet": {
              "type": "boolean",
              "title": "Auto-Tweet",
              "description": "Automatically tweet a link to the [campaign archive](http://kb.mailchimp.com/campaigns/archives/set-up-your-campaign-archive?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page when the campaign is sent."
            },
            "auto_fb_post": {
              "type": "array",
              "title": "Auto Post to Facebook",
              "description": "An array of [Facebook](http://kb.mailchimp.com/integrations/facebook/integrate-facebook-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) page ids to auto-post to.",
              "items": {
                "type": "string"
              }
            },
            "fb_comments": {
              "type": "boolean",
              "title": "Facebook Comments",
              "description": "Allows Facebook comments on the campaign (also force-enables the Campaign Archive toolbar). Defaults to `true`."
            },
            "timewarp": {
              "type": "boolean",
              "title": "Timewarp Send",
              "description": "Send this campaign using [Timewarp](http://kb.mailchimp.com/campaigns/confirmation-and-sending/use-timewarp-to-optimize-sending-by-time-zone?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
              "readOnly": true
            },
            "template_id": {
              "type": "integer",
              "title": "Template ID",
              "description": "The id for the template used in this campaign.",
              "readOnly": true
            },
            "drag_and_drop": {
              "type": "boolean",
              "title": "Drag And Drop Campaign",
              "description": "Whether the campaign uses the drag-and-drop editor.",
              "readOnly": true
            }
          }
        },
        "variate_settings": {
          "type": "object",
          "title": "A/B Test Options",
          "description": "The settings specific to A/B test campaigns.",
          "required": [
            "winner_criteria"
          ],
          "properties": {
            "winning_combination_id": {
              "type": "string",
              "title": "Winning Combination ID",
              "description": "ID for the winning combination.",
              "readOnly": true
            },
            "winning_campaign_id": {
              "type": "string",
              "title": "Winning Campaign ID",
              "description": "ID of the campaign that was sent to the remaining recipients based on the winning combination.",
              "readOnly": true
            },
            "winner_criteria": {
              "type": "string",
              "title": "Winning Criteria",
              "description": "The combination that performs the best. This may be determined automatically by click rate, open rate, or total revenue—or you may choose manually based on the reporting data you find the most valuable. For Multivariate Campaigns testing send_time, winner_criteria is ignored. For Multivariate Campaigns with 'manual' as the winner_criteria, the winner must be chosen in the MailChimp web application.",
              "enum": [
                "opens",
                "clicks",
                "manual",
                "total_revenue"
              ]
            },
            "wait_time": {
              "type": "integer",
              "title": "Wait Time",
              "description": "The number of minutes to wait before choosing the winning campaign. The value of wait_time must be greater than 0 and in whole hours, specified in minutes."
            },
            "test_size": {
              "type": "integer",
              "title": "Test Size",
              "description": "The percentage of recipients to send the test combinations to, must be a value between 10 and 100."
            },
            "subject_lines": {
              "type": "array",
              "title": "Subject Lines",
              "description": "The possible subject lines to test. If no subject lines are provided, settings.subject_line will be used.",
              "items": {
                "type": "string"
              }
            },
            "send_times": {
              "type": "array",
              "title": "Send Times",
              "description": "The possible send times to test. The times provided should be in the format YYYY-MM-DD HH:MM:SS. If send_times are provided to test, the test_size will be set to 100% and winner_criteria will be ignored.",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            },
            "from_names": {
              "type": "array",
              "title": "From Names",
              "description": "The possible from names. The number of from_names provided must match the number of reply_to_addresses. If no from_names are provided, settings.from_name will be used.",
              "items": {
                "type": "string"
              }
            },
            "reply_to_addresses": {
              "type": "array",
              "title": "Reply To Addresses",
              "description": "The possible reply-to addresses. The number of reply_to_addresses provided must match the number of from_names. If no reply_to_addresses are provided, settings.reply_to will be used.",
              "items": {
                "type": "string"
              }
            },
            "contents": {
              "type": "array",
              "title": "Content Descriptions",
              "description": "Descriptions of possible email contents. To set campaign contents, make a PUT request to /campaigns/{campaign_id}/content with the field 'variate_contents'.",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "combinations": {
              "type": "array",
              "title": "Combinations",
              "description": "Combinations of possible variables used to build emails.",
              "readOnly": true,
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "title": "ID",
                    "description": "Unique ID for the combination."
                  },
                  "subject_line": {
                    "type": "integer",
                    "title": "Subject Line",
                    "description": "The index of `variate_settings.subject_lines` used."
                  },
                  "send_time": {
                    "type": "integer",
                    "title": "Send Time",
                    "description": "The index of `variate_settings.send_times` used."
                  },
                  "from_name": {
                    "type": "integer",
                    "title": "From Name",
                    "description": "The index of `variate_settings.from_names` used."
                  },
                  "reply_to": {
                    "type": "integer",
                    "title": "Reply To",
                    "description": "The index of `variate_settings.reply_to_addresses` used."
                  },
                  "content_description": {
                    "type": "integer",
                    "title": "Content Description",
                    "description": "The index of `variate_settings.contents` used."
                  },
                  "recipients": {
                    "type": "integer",
                    "title": "Recipients",
                    "description": "The number of recipients for this combination."
                  }
                }
              }
            }
          }
        },
        "tracking": {
          "type": "object",
          "title": "Campaign Tracking Options",
          "description": "The tracking options for a campaign.",
          "properties": {
            "opens": {
              "type": "boolean",
              "title": "Opens",
              "description": "Whether to [track opens](http://kb.mailchimp.com/reports/about-open-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs). Defaults to `true`. Cannot be set to false for variate campaigns."
            },
            "html_clicks": {
              "type": "boolean",
              "title": "HTML Click Tracking",
              "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the HTML version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
            },
            "text_clicks": {
              "type": "boolean",
              "title": "Plain-Text Click Tracking",
              "description": "Whether to [track clicks](http://kb.mailchimp.com/reports/about-click-tracking?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) in the plain-text version of the campaign. Defaults to `true`. Cannot be set to false for variate campaigns."
            },
            "goal_tracking": {
              "type": "boolean",
              "title": "MailChimp Goal Tracking",
              "description": "Whether to enable [Goal](http://kb.mailchimp.com/integrations/other-integrations/integrate-goal-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
            },
            "ecomm360": {
              "type": "boolean",
              "title": "E-commerce Tracking",
              "description": "Whether to enable [eCommerce360](http://kb.mailchimp.com/integrations/other-integrations/about-ecommerce360?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking."
            },
            "google_analytics": {
              "type": "string",
              "title": "Google Analytics Tracking",
              "description": "The custom slug for [Google Analytics](http://kb.mailchimp.com/integrations/other-integrations/integrate-google-analytics-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) tracking (max of 50 bytes)."
            },
            "clicktale": {
              "type": "string",
              "title": "ClickTale Analytics Tracking",
              "description": "The custom slug for [ClickTale](http://kb.mailchimp.com/integrations/other-integrations/additional-tracking-options-for-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs#Click-Tale) tracking (max of 50 bytes)."
            },
            "salesforce": {
              "type": "object",
              "title": "Salesforce CRM Tracking",
              "description": "Salesforce tracking options for a campaign. Must be using MailChimp's built-in [Salesforce integration](http://kb.mailchimp.com/integrations/other-integrations/integrate-salesforce-with-mailchimp?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
              "properties": {
                "campaign": {
                  "type": "boolean",
                  "title": "Salesforce Campaign",
                  "description": "Create a campaign in a connected Salesforce account."
                },
                "notes": {
                  "type": "boolean",
                  "title": "Salesforce Note",
                  "description": "Update contact notes for a campaign based on subscriber email addresses."
                }
              }
            },
            "capsule": {
              "type": "object",
              "title": "Capsule CRM Tracking",
              "description": "Capsule tracking options for a campaign. Must be using MailChimp's built-in Capsule integration.",
              "properties": {
                "notes": {
                  "type": "boolean",
                  "title": "Capsule Note",
                  "description": "Update contact notes for a campaign based on subscriber email addresses."
                }
              }
            }
          }
        },
        "rss_opts": {
          "type": "object",
          "title": "RSS Options",
          "description": "[RSS](http://kb.mailchimp.com/campaigns/rss-in-campaigns/create-an-rss-campaign?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
          "required": [
            "feed_url",
            "frequency"
          ],
          "properties": {
            "feed_url": {
              "type": "string",
              "title": "Feed URL",
              "format": "uri",
              "description": "The URL for the RSS feed."
            },
            "frequency": {
              "type": "string",
              "title": "Frequency",
              "description": "The frequency of the RSS Campaign.",
              "enum": [
                "daily",
                "weekly",
                "monthly"
              ]
            },
            "schedule": {
              "type": "object",
              "title": "Sending Schedule",
              "description": "The schedule for sending the RSS Campaign.",
              "properties": {
                "hour": {
                  "type": "integer",
                  "minimum": 0,
                  "maximum": 23,
                  "title": "Sending Hour",
                  "description": "The hour to send the campaign in local time. Acceptable hours are 0-23. For example, '4' would be 4am in [your account's default time zone](http://kb.mailchimp.com/accounts/account-setup/how-to-set-account-defaults?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
                },
                "daily_send": {
                  "type": "object",
                  "title": "Daily Sending Days",
                  "description": "The days of the week to send a daily RSS Campaign.",
                  "properties": {
                    "sunday": {
                      "type": "boolean",
                      "title": "Sunday",
                      "description": "Sends the daily RSS Campaign on Sundays."
                    },
                    "monday": {
                      "type": "boolean",
                      "title": "Monday",
                      "description": "Sends the daily RSS Campaign on Mondays."
                    },
                    "tuesday": {
                      "type": "boolean",
                      "title": "tuesday",
                      "description": "Sends the daily RSS Campaign on Tuesdays."
                    },
                    "wednesday": {
                      "type": "boolean",
                      "title": "Monday",
                      "description": "Sends the daily RSS Campaign on Wednesdays."
                    },
                    "thursday": {
                      "type": "boolean",
                      "title": "Thursday",
                      "description": "Sends the daily RSS Campaign on Thursdays."
                    },
                    "friday": {
                      "type": "boolean",
                      "title": "Friday",
                      "description": "Sends the daily RSS Campaign on Fridays."
                    },
                    "saturday": {
                      "type": "boolean",
                      "title": "Saturday",
                      "description": "Sends the daily RSS Campaign on Saturdays."
                    }
                  }
                },
                "weekly_send_day": {
                  "type": "string",
                  "enum": [
                    "sunday",
                    "monday",
                    "tuesday",
                    "wednesday",
                    "thursday",
                    "friday",
                    "saturday"
                  ],
                  "title": "Weekly Sending Day",
                  "description": "The day of the week to send a weekly RSS Campaign."
                },
                "monthly_send_date": {
                  "type": "number",
                  "minimum": 0,
                  "maximum": 31,
                  "title": "Monthly Sending Day",
                  "description": "The day of the month to send a monthly RSS Campaign. Acceptable days are 0-31, where '0' is always the last day of a month. Months with fewer than the selected number of days will not have an RSS campaign sent out that day. For example, RSS Campaigns set to send on the 30th will not go out in February."
                }
              }
            },
            "last_sent": {
              "type": "string",
              "format": "date-time",
              "title": "Last Sent",
              "description": "The date the campaign was last sent.",
              "readOnly": true
            },
            "constrain_rss_img": {
              "type": "boolean",
              "title": "Constrain RSS Images",
              "description": "Whether to add CSS to images in the RSS feed to constrain their width in campaigns."
            }
          }
        },
        "ab_split_opts": {
          "type": "object",
          "title": "A/B Testing Options",
          "description": "[A/B Testing](http://kb.mailchimp.com/campaigns/ab/about-ab-testing-campaigns?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) options for a campaign.",
          "readOnly": true,
          "properties": {
            "split_test": {
              "type": "string",
              "title": "Split Test",
              "description": "The type of AB split to run.",
              "enum": [
                "subject",
                "from_name",
                "schedule"
              ]
            },
            "pick_winner": {
              "type": "string",
              "title": "Pick Winner",
              "description": "How we should evaluate a winner. Based on 'opens', 'clicks', or 'manual'.",
              "enum": [
                "opens",
                "clicks",
                "manual"
              ]
            },
            "wait_units": {
              "type": "string",
              "title": "Wait Time",
              "description": "How unit of time for measuring the winner ('hours' or 'days'). This cannot be changed after a campaign is sent.",
              "enum": [
                "hours",
                "days"
              ]
            },
            "wait_time": {
              "type": "integer",
              "title": "Wait Time",
              "description": "The amount of time to wait before picking a winner. This cannot be changed after a campaign is sent."
            },
            "split_size": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "title": "Split Size",
              "description": "The size of the split groups. Campaigns split based on 'schedule' are forced to have a 50/50 split. Valid split integers are between 1-50."
            },
            "from_name_a": {
              "type": "string",
              "title": "From Name Group A",
              "description": "For campaigns split on 'From Name', the name for Group A."
            },
            "from_name_b": {
              "type": "string",
              "title": "From Name Group B",
              "description": "For campaigns split on 'From Name', the name for Group B."
            },
            "reply_email_a": {
              "type": "string",
              "title": "Reply Email Group A",
              "description": "For campaigns split on 'From Name', the reply-to address for Group A."
            },
            "reply_email_b": {
              "type": "string",
              "title": "Reply Email Group B",
              "description": "For campaigns split on 'From Name', the reply-to address for Group B."
            },
            "subject_a": {
              "type": "string",
              "title": "Subject Line Group A",
              "description": "For campaigns split on 'Subject Line', the subject line for Group A."
            },
            "subject_b": {
              "type": "string",
              "title": "Subject Line Group B",
              "description": "For campaigns split on 'Subject Line', the subject line for Group B."
            },
            "send_time_a": {
              "type": "string",
              "format": "date-time",
              "title": "Send Time Group A",
              "description": "The send time for Group A."
            },
            "send_time_b": {
              "type": "string",
              "format": "date-time",
              "title": "Send Time Group B",
              "description": "The send time for Group B."
            },
            "send_time_winner": {
              "type": "string",
              "title": "Send Time Winner",
              "description": "The send time for the winning version."
            }
          }
        },
        "social_card": {
          "type": "object",
          "title": "Campaign Social Card",
          "description": "The preview for the campaign, rendered by social networks like Facebook and Twitter. [Learn more](http://kb.mailchimp.com/campaigns/previews-and-tests/set-up-social-cards?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs).",
          "properties": {
            "image_url": {
              "type": "string",
              "title": "Image URL",
              "description": "The url for the header image for the card."
            },
            "description": {
              "type": "string",
              "title": "Campaign Description",
              "description": "A short summary of the campaign to display."
            },
            "title": {
              "type": "string",
              "title": "Title",
              "description": "The title for the card. Typically the subject line of the campaign."
            }
          }
        },
        "report_summary": {
          "type": "object",
          "title": "Campaign Report Summary",
          "description": "For sent campaigns, a summary of opens, clicks, and unsubscribes.",
          "properties": {
            "opens": {
              "type": "integer",
              "title": "Automation Opens",
              "description": "The total number of opens for a campaign.",
              "readOnly": true
            },
            "unique_opens": {
              "type": "integer",
              "title": "Unique Opens",
              "description": "The number of unique opens.",
              "readOnly": true
            },
            "open_rate": {
              "type": "number",
              "title": "Open Rate",
              "description": "The number of unique opens divided by the total number of successful deliveries.",
              "readOnly": true
            },
            "clicks": {
              "type": "integer",
              "title": "Total Clicks",
              "description": "The total number of clicks for an campaign.",
              "readOnly": true
            },
            "subscriber_clicks": {
              "type": "integer",
              "title": "Unique Subscriber Clicks",
              "description": "The number of unique clicks.",
              "readOnly": true
            },
            "click_rate": {
              "type": "number",
              "title": "Click Rate",
              "description": "The number of unique clicks divided by the total number of successful deliveries.",
              "readOnly": true
            },
            "ecommerce": {
              "type": "object",
              "title": "E-Commerce Report",
              "description": "E-Commerce stats for a campaign.",
              "properties": {
                "total_orders": {
                  "type": "integer",
                  "title": "Total Orders",
                  "description": "The total orders for a campaign.",
                  "readOnly": true
                },
                "total_spent": {
                  "type": "number",
                  "title": "Total Spent",
                  "description": "The total spent for a campaign. Calculated as the sum of all order totals with no deductions.",
                  "readOnly": true
                },
                "total_revenue": {
                  "type": "number",
                  "title": "Total Revenue",
                  "description": "The total revenue for a campaign. Calculated as the sum of all order totals minus shipping and tax totals.",
                  "readOnly": true
                }
              }
            }
          }
        },
        "delivery_status": {
          "$ref": "#/definitions/DeliveryStatus"
        },
        "_links": {
          "$ref": "#/definitions/HATEOASLinks"
        }
      }
    },
    "CampaignFeedback": {
      "type": "object",
      "title": "Campaign Feedback",
      "description": "A specific feedback message from a specific campaign.",
      "required": [
        "message"
      ],
      "properties": {
        "feedback_id": {
          "type": "integer",
          "title": "Feedback ID",
          "description": "The individual id for the feedback item.",
          "readOnly": true
        },
        "parent_id": {
          "type": "integer",
          "title": "Parent ID",
          "description": "If a reply, the id of the parent feedback item.",
          "readOnly": true
        },
        "block_id": {
          "type": "integer",
          "title": "Block ID",
          "description": "The block id for the editable block that the feedback addresses."
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description": "The content of the feedback."
        },
        "is_complete": {
          "type": "boolean",
          "title": "Complete",
          "description": "The status of feedback."
        },
        "created_by": {
          "type": "string",
          "title": "Created By",
          "description": "The login name of the user who created the feedback.",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "title": "Created At",
          "description": "The date and time the feedback item was created.",
          "format": "date-time",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "title": "Updated At",
          "description": "The date and time the feedback was last updated.",
          "format": "date-time",
          "readOnly": true
        },
        "source": {
          "type": "string",
          "title": "Source",
          "description": "The source of the feedback.",
          "enum": [
            "api",
            "email",
            "sms",
            "web",
            "ios",
            "android"
          ],
          "readOnly": true
        },
        "campaign_id": {
          "type": "string",
          "title": "Campaign ID",
          "description": "The unique id for the campaign.",
          "readOnly": true
        },
        "_links": {
          "$ref": "#/definitions/HATEOASLinks"
        }
      }
    },
    "ListMember": {
      "type": "object",
      "title": "List Members",
      "description": "Individuals who are currently or have been previously subscribed to this list, including members who have bounced or unsubscribed.",
      "properties": {
        "id": {
          "type": "string",
          "title": "Email ID",
          "description": "The MD5 hash of the lowercase version of the list member's email address.",
          "readOnly": true
        },
        "email_address": {
          "type": "string",
          "title": "Email Address",
          "description": "Email address for a subscriber."
        },
        "unique_email_id": {
          "type": "string",
          "title": "Unique Email ID",
          "description": "An identifier for the address across all of MailChimp.",
          "readOnly": true
        },
        "email_type": {
          "type": "string",
          "title": "Email Type",
          "description": "Type of email this member asked to get ('html' or 'text')."
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Subscriber's current status.",
          "enum": [
            "subscribed",
            "unsubscribed",
            "cleaned",
            "pending",
            "transactional"
          ]
        },
        "merge_fields": {
          "type": "object",
          "title": "Member Merge Var",
          "description": "An individual merge var and value for a member.",
          "additionalProperties": {
            "description": "This object's keys are merge tags (like FNAME). It's values are the values to be added to the merge field."
          }
        },
        "interests": {
          "type": "object",
          "title": "Subscriber Interests",
          "description": "The key of this object's properties is the ID of the interest in question.",
          "additionalProperties": {
            "type": "boolean",
            "title": "Interest Value",
            "description": "Keys are interest IDs, values are booleans that describe whether the list member is in that group or not."
          }
        },
        "stats": {
          "type": "object",
          "title": "Subscriber Stats",
          "description": "Open and click rates for this subscriber.",
          "readOnly": true,
          "properties": {
            "avg_open_rate": {
              "type": "number",
              "title": "Average Open Rate",
              "description": "A subscriber's average open rate.",
              "readOnly": true
            },
            "avg_click_rate": {
              "type": "number",
              "title": "Average Click Rate",
              "description": "A subscriber's average clickthrough rate.",
              "readOnly": true
            }
          }
        },
        "ip_signup": {
          "type": "string",
          "title": "Signup IP",
          "description": "IP address the subscriber signed up from.",
          "readOnly": true
        },
        "timestamp_signup": {
          "type": "string",
          "title": "Signup Timestamp",
          "description": "The date and time the subscriber signed up for the list.",
          "format": "date-time",
          "readOnly": true
        },
        "ip_opt": {
          "type": "string",
          "title": "Opt-in IP",
          "description": "The IP address the subscriber used to confirm their opt-in status.",
          "readOnly": true
        },
        "timestamp_opt": {
          "type": "string",
          "title": "Opt-in Timestamp",
          "description": "The date and time the subscribe confirmed their opt-in status.",
          "readOnly": true,
          "format": "date-time"
        },
        "member_rating": {
          "type": "integer",
          "title": "Member Rating",
          "description": "Star rating for this member, between 1 and 5.",
          "readOnly": true
        },
        "last_changed": {
          "type": "string",
          "title": "Last Changed Date",
          "description": "The date and time the member's info was last changed.",
          "readOnly": true,
          "format": "date-time"
        },
        "language": {
          "type": "string",
          "title": "Language",
          "description": "If set/detected, the [subscriber's language](http://kb.mailchimp.com/lists/managing-subscribers/view-and-edit-subscriber-languages?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs)."
        },
        "vip": {
          "type": "boolean",
          "title": "VIP",
          "description": "[VIP status](http://kb.mailchimp.com/lists/managing-subscribers/designate-and-send-to-vip-subscribers?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) for subscriber."
        },
        "email_client": {
          "type": "string",
          "title": "Email Client",
          "description": "The list member's email client.",
          "readOnly": true
        },
        "location": {
          "type": "object",
          "title": "Location",
          "description": "Subscriber location information.",
          "properties": {
            "latitude": {
              "type": "number",
              "title": "Latitude",
              "description": "The location latitude."
            },
            "longitude": {
              "type": "number",
              "title": "Longitude",
              "description": "The location longitude."
            },
            "gmtoff": {
              "type": "integer",
              "title": "GMT Offset",
              "description": "The time difference in hours from GMT.",
              "readOnly": true
            },
            "dstoff": {
              "type": "integer",
              "title": "DST Offset",
              "description": "The offset for timezones where daylight saving time is observed.",
              "readOnly": true
            },
            "country_code": {
              "type": "string",
              "title": "Country Code",
              "description": "The unique code for the location country.",
              "readOnly": true
            },
            "timezone": {
              "type": "string",
              "title": "Timezone",
              "description": "The timezone for the location.",
              "readOnly": true
            }
          }
        },
        "last_note": {
          "type": "object",
          "title": "Notes",
          "description": "The most recent Note added about this member.",
          "readOnly": true,
          "properties": {
            "note_id": {
              "type": "integer",
              "title": "Note ID",
              "description": "The note id.",
              "readOnly": true
            },
            "created_at": {
              "type": "string",
              "title": "Created Time",
              "description": "The date and time the note was created.",
              "format": "date-time",
              "readOnly": true
            },
            "created_by": {
              "type": "string",
              "title": "Author",
              "description": "The author of the note.",
              "readOnly": true
            },
            "note": {
              "type": "string",
              "title": "Note",
              "description": "The content of the note.",
              "readOnly": true
            }
          }
        },
        "list_id": {
          "type": "string",
          "title": "List ID",
          "description": "The list id.",
          "readOnly": true
        },
        "_links": {
          "$ref": "#/definitions/HATEOASLinks"
        }
      }
    },
    "SignupFormContent": {
      "type": "object",
      "title": "Collection of Content for List Signup Forms",
      "description": "Collection of Content for List Signup Forms.",
      "properties": {
        "section": {
          "type": "string",
          "title": "Content Section Name",
          "description": "The content section name.",
          "enum": [
            "signup_message",
            "unsub_message",
            "signup_thank_you_title"
          ],
          "example": "signup_message"
        },
        "value": {
          "type": "string",
          "title": "Content Section Value",
          "description": "The content section text.",
          "example": "Signup message goes here"
        }
      }
    },
    "SignupFormStyleOption": {
      "type": "object",
      "title": "An option for Signup Form Styles",
      "description": "An option for Signup Form Styles.",
      "properties": {
        "property": {
          "type": "string",
          "title": "Property",
          "description": "A string that identifies the property.",
          "example": "background-color"
        },
        "value": {
          "type": "string",
          "title": "Value",
          "description": "A string that identifies value of the property.",
          "example": "#111111"
        }
      }
    },
    "SignupFormStyleOptions": {
      "type": "object",
      "title": "Collection of Element style for List Signup Forms",
      "description": "Collection of Element style for List Signup Forms.",
      "properties": {
        "selector": {
          "type": "string",
          "title": "Selector",
          "description": "A string that identifies the element selector.",
          "enum": [
            "page_background",
            "page_header",
            "page_outer_wrapper",
            "body_background",
            "body_link_style",
            "forms_buttons",
            "forms_buttons_hovered",
            "forms_field_label",
            "forms_field_text",
            "forms_required",
            "forms_required_legend",
            "forms_help_text",
            "forms_errors",
            "monkey_rewards_badge"
          ],
          "example": "page_background"
        },
        "options": {
          "type": "array",
          "title": "Options",
          "description": "A collection of options for a selector.",
          "items": {
            "$ref": "#/definitions/SignupFormStyleOption"
          }
        }
      }
    },
    "QuarterHourTimes": {
      "type": "string",
      "enum": [
        "12:00am",
        "12:15am",
        "12:30am",
        "12:45am",
        "1:00am",
        "1:15am",
        "1:30am",
        "1:45am",
        "2:00am",
        "2:15am",
        "2:30am",
        "2:45am",
        "3:00am",
        "3:15am",
        "3:30am",
        "3:45am",
        "4:00am",
        "4:15am",
        "4:30am",
        "4:45am",
        "5:00am",
        "5:15am",
        "5:30am",
        "5:45am",
        "6:00am",
        "6:15am",
        "6:30am",
        "6:45am",
        "7:00am",
        "7:15am",
        "7:30am",
        "7:45am",
        "8:00am",
        "8:15am",
        "8:30am",
        "8:45am",
        "9:00am",
        "9:15am",
        "9:30am",
        "9:45am",
        "10:00am",
        "10:15am",
        "10:30am",
        "10:45am",
        "11:00am",
        "11:15am",
        "11:30am",
        "11:45am",
        "12:00pm",
        "12:15pm",
        "12:30pm",
        "12:45pm",
        "1:00pm",
        "1:15pm",
        "1:30pm",
        "1:45pm",
        "2:00pm",
        "2:15pm",
        "2:30pm",
        "2:45pm",
        "3:00pm",
        "3:15pm",
        "3:30pm",
        "3:45pm",
        "4:00pm",
        "4:15pm",
        "4:30pm",
        "4:45pm",
        "5:00pm",
        "5:15pm",
        "5:30pm",
        "5:45pm",
        "6:00pm",
        "6:15pm",
        "6:30pm",
        "6:45pm",
        "7:00pm",
        "7:15pm",
        "7:30pm",
        "7:45pm",
        "8:00pm",
        "8:15pm",
        "8:30pm",
        "8:45pm",
        "9:00pm",
        "9:15pm",
        "9:30pm",
        "9:45pm",
        "10:00pm",
        "10:15pm",
        "10:30pm",
        "10:45pm",
        "11:00pm",
        "11:15pm",
        "11:30pm",
        "11:45pm"
      ],
      "x-possible-values": "Any time, rounded to the nearest quarter hour, in 12-hour format. Ex: 12:30am."
    }
  },
  "externalDocs": {
    "description": "Learn more with the full MailChimp API documentation.",
    "url": "http://developer.mailchimp.com/documentation/mailchimp/"
  },
  "parameters": {
    "FieldSelection": {
      "name": "fields",
      "title": "Fields",
      "in": "query",
      "description": "A comma-separated list of fields to return. Reference parameters of sub-objects with dot notation.",
      "required": false,
      "type": "array",
      "collectionFormat": "csv",
      "items": {
        "type": "string"
      }
    },
    "FieldExclusion": {
      "name": "exclude_fields",
      "title": "Exclude Fields",
      "in": "query",
      "description": "A comma-separated list of fields to exclude. Reference parameters of sub-objects with dot notation.",
      "required": false,
      "type": "array",
      "collectionFormat": "csv",
      "items": {
        "type": "string"
      }
    },
    "CollectionCount": {
      "name": "count",
      "title": "Count",
      "in": "query",
      "description": "The number of records to return. [Default value](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#pagination) is **10**.",
      "required": false,
      "default": 10,
      "maximum": 1000,
      "readOnly": true,
      "type": "integer"
    },
    "CollectionOffset": {
      "name": "offset",
      "title": "Offset",
      "in": "query",
      "description": "The number of records from a collection to skip. Iterating over large collections with this parameter can be slow.  [Default value](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#pagination) is **0**.",
      "required": false,
      "default": 0,
      "type": "integer"
    },
    "AuthorizedAppID": {
      "in": "path",
      "name": "app_id",
      "title": "App ID",
      "type": "string",
      "required": true,
      "description": "The unique id for the connected authorized application."
    },
    "AutomationCreateTime_Before": {
      "name": "before_create_time",
      "title": "Before Create Time",
      "in": "query",
      "description": "Restrict the response to automations created before the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "AutomationCreateTime_Since": {
      "name": "since_create_time",
      "title": "Since Create Time",
      "in": "query",
      "description": "Restrict the response to automations created after the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "AutomationSendTime_Before": {
      "name": "before_send_time",
      "title": "Before Send Time",
      "in": "query",
      "description": "Restrict the response to automations sent before the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "AutomationSendTime_Since": {
      "name": "since_send_time",
      "title": "Since Send Time",
      "in": "query",
      "description": "Restrict the response to automations sent after the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "AutomationStatus": {
      "name": "status",
      "title": "Status",
      "in": "query",
      "description": "Restrict the results to automations with the specified status.",
      "required": false,
      "type": "string",
      "enum": [
        "save",
        "paused",
        "sending"
      ]
    },
    "SubscriberHash": {
      "in": "path",
      "name": "subscriber_hash",
      "title": "Subscriber Hash",
      "type": "string",
      "required": true,
      "description": "The MD5 hash of the lowercase version of the list member's email address."
    },
    "CampaignType": {
      "name": "type",
      "title": "Campaign Type",
      "in": "query",
      "description": "The campaign type.",
      "required": false,
      "type": "string",
      "enum": [
        "regular",
        "plaintext",
        "absplit",
        "rss",
        "variate"
      ]
    },
    "CampaignStatus": {
      "name": "status",
      "title": "Status",
      "in": "query",
      "description": "The status of the campaign.",
      "required": false,
      "type": "string"
    },
    "CampaignSendTime_Before": {
      "name": "before_send_time",
      "title": "Before Send Time",
      "in": "query",
      "description": "Restrict the response to campaigns sent before the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "CampaignSendTime_Since": {
      "name": "since_send_time",
      "title": "Since Send Time",
      "in": "query",
      "description": "Restrict the response to campaigns sent after the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "CampaignCreateTime_Before": {
      "name": "before_create_time",
      "title": "Before Create Time",
      "in": "query",
      "description": "Restrict the response to campaigns created before the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "CampaignCreateTime_Since": {
      "name": "since_create_time",
      "title": "Since Create Time",
      "in": "query",
      "description": "Restrict the response to campaigns created after the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "Filter_ListID": {
      "name": "list_id",
      "title": "List ID",
      "in": "query",
      "description": "The unique id for the list.",
      "required": false,
      "type": "string"
    },
    "Filter_FolderID": {
      "name": "folder_id",
      "title": "Folder ID",
      "in": "query",
      "description": "The unique folder id.",
      "required": false,
      "type": "string"
    },
    "SortFieldBySend": {
      "name": "sort_field",
      "title": "Sort By Field",
      "description": "Returns files sorted by the specified field.",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "create_time",
        "send_time"
      ]
    },
    "SortDir": {
      "name": "sort_dir",
      "title": "Sort Direction",
      "description": "Determines the order direction for sorted results.",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "ASC",
        "DESC"
      ]
    },
    "CampaignID": {
      "in": "path",
      "name": "campaign_id",
      "title": "Campaign ID",
      "type": "string",
      "required": true,
      "description": "The unique id for the campaign."
    },
    "CampaignFeedbackID": {
      "in": "path",
      "name": "feedback_id",
      "title": "Feedback ID",
      "type": "string",
      "required": true,
      "description": "The unique id for the feedback message."
    },
    "ConnectedSiteID": {
      "in": "path",
      "name": "connected_site_id",
      "title": "Connected Site Foreign ID",
      "type": "string",
      "required": true,
      "description": "The unique identifier for the site."
    },
    "ConversationHasUndreadMessages": {
      "name": "has_unread_messages",
      "title": "Has Unread Messages",
      "in": "query",
      "description": "Whether the conversation has any unread messages.",
      "required": false,
      "type": "string",
      "enum": [
        "true",
        "false"
      ]
    },
    "Filter_CampaignID": {
      "name": "campaign_id",
      "title": "Campaign ID",
      "in": "query",
      "description": "The unique id for the campaign.",
      "required": false,
      "type": "string"
    },
    "ConversationID": {
      "in": "path",
      "name": "conversation_id",
      "title": "Conversation ID",
      "type": "string",
      "required": true,
      "description": "The unique id for the conversation."
    },
    "MessageIsRead": {
      "name": "is_read",
      "title": "Is Read",
      "in": "query",
      "description": "Whether a conversation message has been marked as read.",
      "required": false,
      "type": "string",
      "enum": [
        "true",
        "false"
      ]
    },
    "MessageTimestamp_Before": {
      "name": "before_timestamp",
      "title": "Before Timestamp",
      "in": "query",
      "description": "Restrict the response to messages created before the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "MessageTimestamp_Since": {
      "name": "since_timestamp",
      "title": "Since Timestamp",
      "in": "query",
      "description": "Restrict the response to messages created after the set time. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "type": "string",
      "format": "date-time",
      "required": false
    },
    "ConversationMessageID": {
      "in": "path",
      "name": "message_id",
      "title": "Message ID",
      "type": "string",
      "required": true,
      "description": "The unique id for the conversation message."
    },
    "OnboardingAd_Platform": {
      "name": "platform",
      "title": "Platform",
      "in": "query",
      "required": false,
      "description": "Restrict results to ads compatible with the given platform. Default is ios",
      "type": "string"
    },
    "OnboardingAd_Num": {
      "name": "num",
      "title": "Number",
      "in": "query",
      "required": false,
      "description": "Restrict results to this number of ads (if we have that many. Default is 3.",
      "type": "integer"
    },
    "FileManagerFileType": {
      "name": "type",
      "title": "File Type",
      "in": "query",
      "description": "The file type for the File Manager file.",
      "required": false,
      "type": "string"
    },
    "FileManagerCreator": {
      "name": "created_by",
      "title": "Created By",
      "in": "query",
      "description": "The MailChimp account user who created the File Manager file.",
      "required": false,
      "type": "string"
    },
    "FileManagerCreated_Before": {
      "name": "before_created_at",
      "title": "Before Created At",
      "in": "query",
      "description": "Restrict the response to files created before the set date.",
      "required": false,
      "type": "string"
    },
    "FileManagerCreated_Since": {
      "name": "since_created_at",
      "title": "Since Created At",
      "in": "query",
      "description": "Restrict the response to files created after the set date.",
      "required": false,
      "type": "string"
    },
    "SortField": {
      "name": "sort_field",
      "title": "Sort By Field",
      "description": "Returns files sorted by the specified field.",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "added_date"
      ]
    },
    "FileManagerFileID": {
      "in": "path",
      "name": "file_id",
      "title": "File ID",
      "type": "string",
      "required": true,
      "description": "The unique id for the File Manager file."
    },
    "FileManagerFolderID": {
      "in": "path",
      "name": "folder_id",
      "title": "Folder ID",
      "type": "string",
      "required": true,
      "description": "The unique id for the File Manager folder."
    },
    "ListCreated_Before": {
      "name": "before_date_created",
      "title": "Before Date Created",
      "in": "query",
      "required": false,
      "description": "Restrict response to lists created before the set date.",
      "type": "string"
    },
    "ListCreated_Since": {
      "name": "since_date_created",
      "title": "Since Date Created",
      "in": "query",
      "required": false,
      "description": "Restrict results to lists created after the set date.",
      "type": "string"
    },
    "ListCampaignSent_Before": {
      "name": "before_campaign_last_sent",
      "title": "Before Campaign Last Sent",
      "in": "query",
      "required": false,
      "description": "Restrict results to lists created before the last campaign send date.",
      "type": "string"
    },
    "ListCampaignSent_Since": {
      "name": "since_campaign_last_sent",
      "title": "Since Campaign Last Sent",
      "in": "query",
      "required": false,
      "description": "Restrict results to lists created after the last campaign send date.",
      "type": "string"
    },
    "SubscriberEmail": {
      "name": "email",
      "title": "Subscriber Email",
      "description": "Restrict results to lists that include a specific subscriber's email address.",
      "in": "query",
      "required": false,
      "type": "string"
    },
    "SortFieldByDateCreated": {
      "name": "sort_field",
      "title": "Sort By Field",
      "description": "Returns files sorted by the specified field.",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "date_created"
      ]
    },
    "ListID": {
      "name": "list_id",
      "title": "List ID",
      "in": "path",
      "description": "The unique id for the list.",
      "required": true,
      "type": "string"
    },
    "AbuseReportID": {
      "name": "report_id",
      "in": "path",
      "required": true,
      "description": "The id for the abuse report."
    },
    "InterestGroupType": {
      "name": "type",
      "title": "Interest Group Type",
      "in": "query",
      "required": false,
      "description": "Restrict results a type of interest group",
      "type": "string"
    },
    "InterestCategoryID": {
      "name": "interest_category_id",
      "title": "Interest Category ID",
      "in": "path",
      "description": "The unique id for the interest category.",
      "required": true,
      "type": "string"
    },
    "InterestID": {
      "name": "interest_id",
      "title": "Interest ID",
      "in": "path",
      "description": "The specific interest or 'group name'.",
      "required": true,
      "type": "string"
    },
    "SegmentType": {
      "name": "type",
      "title": "Segment Type",
      "in": "query",
      "required": false,
      "description": "Limit results based on segment type.",
      "type": "string"
    },
    "SegmentCreated_Since": {
      "name": "since_created_at",
      "title": "Since Created At",
      "in": "query",
      "description": "Restrict results to segments created after the set time.",
      "required": false,
      "type": "string"
    },
    "SegmentCreated_Before": {
      "name": "before_created_at",
      "title": "Before Created At",
      "in": "query",
      "description": "Restrict results to segments created before the set time.",
      "required": false,
      "type": "string"
    },
    "SegmentUpdated_Since": {
      "name": "since_updated_at",
      "title": "Since Updated At",
      "in": "query",
      "description": "Restrict results to segments update after the set time.",
      "required": false,
      "type": "string"
    },
    "SegmentUpdated_Before": {
      "name": "before_updated_at",
      "title": "Before Updated At",
      "in": "query",
      "description": "Restrict results to segments update before the set time.",
      "required": false,
      "type": "string"
    },
    "SegmentID": {
      "name": "segment_id",
      "title": "Segment ID",
      "in": "path",
      "description": "The unique id for the segment.",
      "required": true,
      "type": "string"
    },
    "EmailType": {
      "name": "email_type",
      "title": "Email Type",
      "in": "query",
      "required": false,
      "description": "The email type.",
      "type": "string"
    },
    "SubscriberStatus": {
      "name": "status",
      "title": "Subscriber Status",
      "in": "query",
      "required": false,
      "description": "The subscriber's status.",
      "type": "string"
    },
    "TimestampOpt_Since": {
      "name": "since_timestamp_opt",
      "title": "Since Timestamp Opt",
      "in": "query",
      "description": "Restrict results to subscribers who opted-in after the set timeframe. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "required": false,
      "type": "string"
    },
    "TimestampOpt_Before": {
      "name": "before_timestamp_opt",
      "title": "Before Timestamp Opt",
      "in": "query",
      "description": "Restrict results to subscribers who opted-in before the set timeframe. We recommend [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) time format: 2015-10-21T15:41:36+00:00.",
      "required": false,
      "type": "string"
    },
    "ListMemberChanged_Since": {
      "name": "since_last_changed",
      "title": "Since Last Changed",
      "in": "query",
      "description": "Restrict results to subscribers whose information changed after the set timeframe.",
      "required": false,
      "type": "string"
    },
    "ListMemberChanged_Before": {
      "name": "before_last_changed",
      "title": "Before Last Changed",
      "in": "query",
      "description": "Restrict results to subscribers whose information changed before the set timeframe.",
      "required": false,
      "type": "string"
    },
    "UniqueEmailID": {
      "name": "unique_email_id",
      "title": "Unique Email ID",
      "in": "query",
      "description": "A unique identifier for the email address across all MailChimp lists. This parameter can be found in any links with [Ecommerce Tracking](http://kb.mailchimp.com/integrations/e-commerce/how-to-use-mailchimp-for-e-commerce?utm_source=mc-api&utm_medium=docs&utm_campaign=apidocs) enabled.",
      "required": false,
      "type": "string"
    },
    "VipOnly": {
      "name": "vip_only",
      "title": "VIP Only",
      "in": "query",
      "description": "A filter to return only the list's VIP members. Passing `true` will restrict results to VIP list members, passing `false` will return all list members.",
      "required": false,
      "type": "boolean"
    },
    "InterestCategoryQueryID": {
      "name": "interest_category_id",
      "title": "Interest Category ID",
      "in": "query",
      "description": "The unique id for the interest category.",
      "required": false,
      "type": "string"
    },
    "InterestIds": {
      "name": "interest_ids",
      "title": "Interest Ids",
      "in": "query",
      "required": false,
      "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_match. The value must be a comma separated list of interest ids present for the given interest category.",
      "type": "string"
    },
    "InterestMatch": {
      "name": "interest_match",
      "title": "Interest Match",
      "in": "query",
      "required": false,
      "enum": [
        "any",
        "all",
        "none"
      ],
      "description": "Used to filter list members by interests. Must be accompanied by interest_category_id and interest_ids. \"any\" will match a member with any of the interest supplied, \"all\" will only match members with every interest supplied, and \"none\" will match members without any of the interest supplied.",
      "type": "string"
    },
    "ListMemberNoteID": {
      "name": "note_id",
      "title": "Note ID",
      "in": "path",
      "description": "The id for the note.",
      "required": true,
      "type": "string"
    },
    "MergeType": {
      "name": "type",
      "title": "Merge Type",
      "in": "query",
      "required": false,
      "description": "The merge field type.",
      "type": "string"
    },
    "MergeRequired": {
      "name": "required",
      "title": "Required",
      "in": "query",
      "required": false,
      "description": "The boolean value if the merge field is required.",
      "type": "boolean"
    },
    "MergeID": {
      "name": "merge_id",
      "title": "Merge ID",
      "description": "The id for the merge field.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "DeviceHash": {
      "in": "path",
      "name": "device_hash",
      "title": "Device Hash",
      "type": "string",
      "required": true,
      "description": "The MD5 hash of the lowercase version of the device ID."
    },
    "EcommerceStoreID": {
      "name": "store_id",
      "title": "Store ID",
      "description": "The store id.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "LinkID": {
      "name": "link_id",
      "title": "Link ID",
      "description": "The id for the link.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "OpenDetails_Since": {
      "name": "since",
      "title": "Campaign opens since",
      "in": "query",
      "required": false,
      "description": "Restrict results to campaign open events that occur after a specific time.",
      "type": "string",
      "example": "2016-04-12 12:00:00"
    },
    "EmailActivity_Since": {
      "name": "since",
      "title": "Email Activity since",
      "in": "query",
      "required": false,
      "description": "Restrict results to email activity events that occur after a specific time.",
      "type": "string",
      "example": "2016-04-12 12:00:00"
    },
    "AnalyticsID": {
      "name": "profile_id",
      "title": "Analytics Profile ID",
      "in": "path",
      "required": true,
      "description": "The Google Analytics View ID."
    },
    "TemplateCreator": {
      "name": "created_by",
      "title": "Created By",
      "in": "query",
      "description": "The MailChimp account user who created the template.",
      "required": false,
      "type": "string"
    },
    "TemplateCreated_Since": {
      "name": "since_created_at",
      "title": "Since Created At",
      "in": "query",
      "description": "Restrict the response to templates created after the set date.",
      "required": false,
      "type": "string"
    },
    "TemplateCreated_Before": {
      "name": "before_created_at",
      "title": "Before Created At",
      "in": "query",
      "description": "Restrict the response to templates created before the set date.",
      "required": false,
      "type": "string"
    },
    "TemplateType": {
      "name": "type",
      "title": "Template Type",
      "in": "query",
      "required": false,
      "description": "Limit results based on template type.",
      "type": "string"
    },
    "TemplateCategory": {
      "name": "category",
      "title": "Category",
      "in": "query",
      "description": "Limit results based on category.",
      "required": false,
      "type": "string"
    },
    "TemplateID": {
      "name": "template_id",
      "title": "Template ID",
      "in": "path",
      "description": "The unique id for the template.",
      "required": true,
      "type": "string"
    },
    "OrderCampaign": {
      "name": "campaign_id",
      "title": "Campaign ID",
      "in": "query",
      "description": "Restrict results to orders with a specific `campaign_id` value.",
      "required": false,
      "type": "string"
    },
    "OrderOutreach": {
      "name": "outreach_id",
      "title": "Outreach ID",
      "in": "query",
      "description": "Restrict results to orders with a specific `outreach_id` value.",
      "required": false,
      "type": "string"
    },
    "EcommerceStoreCartID": {
      "name": "cart_id",
      "title": "Cart ID",
      "description": "The id for the cart.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStoreCartLineID": {
      "name": "line_id",
      "title": "Cart Line ID",
      "description": "The id for the line item of a cart.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStoreCustomerEmailAddress": {
      "name": "email_address",
      "title": "Customer Email Address",
      "in": "query",
      "description": "Restrict the response to customers with the email address.",
      "type": "string",
      "required": false
    },
    "EcommerceStoreCustomerID": {
      "name": "customer_id",
      "title": "Customer ID",
      "description": "The id for the customer of a store.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStorePromoruleID": {
      "name": "promo_rule_id",
      "title": "Promo Rule ID",
      "description": "The id for the promo rule of a store.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStoreOrderID": {
      "name": "order_id",
      "title": "Order ID",
      "description": "The id for the order in a store.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStoreOrderLineID": {
      "name": "line_id",
      "title": "Order Line ID",
      "description": "The id for the line item of an order.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStoreProductID": {
      "name": "product_id",
      "title": "Product ID",
      "description": "The id for the product of a store.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStoreProductVariantID": {
      "name": "variant_id",
      "title": "Product Variant ID",
      "description": "The id for the product variant.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "EcommerceStoreProductImageID": {
      "name": "image_id",
      "title": "Product Image ID",
      "description": "The id for the product image.",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "Filter_SearchTerm": {
      "name": "query",
      "title": "Query",
      "in": "query",
      "description": "The search query used to filter results.",
      "required": true,
      "type": "string"
    },
    "Filter_Offset": {
      "name": "offset",
      "title": "Collection Offset",
      "in": "query",
      "description": "The number of instances to skip from the beginning of the collection. [Default value](http://developer.mailchimp.com/documentation/mailchimp/guides/get-started-with-mailchimp-api-3/#pagination) is **0**.",
      "type": "integer",
      "example": 0
    },
    "Filter_SnipStart": {
      "name": "snip_start",
      "title": "Snip Start",
      "in": "query",
      "description": "To have the match highlighted with something (like a strong HTML tag), both this and `snip_end` must be passed. This parameter has a 25-character limit.",
      "type": "string"
    },
    "Filter_SnipEnd": {
      "name": "snip_end",
      "title": "Snip End",
      "in": "query",
      "description": "To have the match highlighted with something (like a strong HTML tag), both this and `snip_start` must be passed. This parameter has a 25-character limit.",
      "type": "string"
    },
    "datacenter": {
      "name": "dc",
      "in": "path",
      "type": "string",
      "description": "`dc` corresponds to the data center for your account. For example, if the last part of your MailChimp API key is us6, set `dc` to `\"us6\"`"
    }
  },
  "host": "{dc}.api.mailchimp.com",
  "securityDefinitions": {
    "apiKey": {
      "in": "query",
      "name": "apikey",
      "type": "apiKey"
    }
  }
}